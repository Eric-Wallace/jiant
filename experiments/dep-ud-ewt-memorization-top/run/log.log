09/16 09:18:53 AM: Git branch: master
09/16 09:18:53 AM: Git SHA: e62dc9f3b01eb77fa9261a5ff029cc2e417b8272
09/16 09:18:53 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/dep-ud-ewt-memorization-top/",
  "exp_name": "experiments/dep-ud-ewt-memorization-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/dep-ud-ewt-memorization-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/memorization",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/dep-ud-ewt-memorization-top__run",
  "run_dir": "./experiments/dep-ud-ewt-memorization-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-dep-ud-ewt",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 09:18:53 AM: Saved config to ./experiments/dep-ud-ewt-memorization-top/run/params.conf
09/16 09:18:53 AM: Using random seed 1234
09/16 09:18:55 AM: Using GPU 0
09/16 09:18:55 AM: Loading tasks...
09/16 09:18:55 AM: Writing pre-preprocessed tasks to ./experiments/dep-ud-ewt-memorization-top/
09/16 09:18:55 AM: 	Creating task edges-dep-ud-ewt from scratch.
09/16 09:18:57 AM: Read=12522, Skip=0, Total=12522 from ./probing_data/edges/dep_ewt/en_ewt-ud-train.json.retokenized.bert-base-uncased
09/16 09:18:57 AM: Read=2000, Skip=0, Total=2000 from ./probing_data/edges/dep_ewt/en_ewt-ud-dev.json.retokenized.bert-base-uncased
09/16 09:18:57 AM: Read=2075, Skip=0, Total=2075 from ./probing_data/edges/dep_ewt/en_ewt-ud-test.json.retokenized.bert-base-uncased
09/16 09:18:57 AM: 	Task 'edges-dep-ud-ewt': |train|=12522 |val|=2000 |test|=2075
09/16 09:18:57 AM: 	Finished loading tasks: edges-dep-ud-ewt.
09/16 09:18:57 AM: 	Building vocab from scratch.
09/16 09:18:57 AM: 	Counting units for task edges-dep-ud-ewt.
09/16 09:18:58 AM: 	Task 'edges-dep-ud-ewt': adding vocab namespace 'edges-dep-ud-ewt_labels'
09/16 09:18:59 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:18:59 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 09:18:59 AM: 	Saved vocab to ./experiments/dep-ud-ewt-memorization-top/vocab
09/16 09:18:59 AM: Loading token dictionary from ./experiments/dep-ud-ewt-memorization-top/vocab.
09/16 09:18:59 AM: 	Loaded vocab from ./experiments/dep-ud-ewt-memorization-top/vocab
09/16 09:18:59 AM: 	Vocab namespace tokens: size 14333
09/16 09:18:59 AM: 	Vocab namespace bert_uncased: size 30524
09/16 09:18:59 AM: 	Vocab namespace edges-dep-ud-ewt_labels: size 49
09/16 09:18:59 AM: 	Vocab namespace chars: size 81
09/16 09:18:59 AM: 	Finished building vocab.
09/16 09:18:59 AM: 	Task edges-dep-ud-ewt (train): Indexing from scratch.
09/16 09:19:05 AM: 	Task edges-dep-ud-ewt (train): Saved 12522 instances to ./experiments/dep-ud-ewt-memorization-top/preproc/edges-dep-ud-ewt__train_data
09/16 09:19:05 AM: 	Task edges-dep-ud-ewt (val): Indexing from scratch.
09/16 09:19:06 AM: 	Task edges-dep-ud-ewt (val): Saved 2000 instances to ./experiments/dep-ud-ewt-memorization-top/preproc/edges-dep-ud-ewt__val_data
09/16 09:19:06 AM: 	Task edges-dep-ud-ewt (test): Indexing from scratch.
09/16 09:19:06 AM: 	Task edges-dep-ud-ewt (test): Saved 2075 instances to ./experiments/dep-ud-ewt-memorization-top/preproc/edges-dep-ud-ewt__test_data
09/16 09:19:06 AM: 	Finished indexing tasks
09/16 09:19:06 AM: 	Creating trimmed target-only version of edges-dep-ud-ewt train.
09/16 09:19:06 AM: 	  Training on 
09/16 09:19:06 AM: 	  Evaluating on edges-dep-ud-ewt
09/16 09:19:06 AM: 	Finished loading tasks in 11.247s
09/16 09:19:06 AM: 	 Tasks: ['edges-dep-ud-ewt']
09/16 09:19:06 AM: Building model...
09/16 09:19:06 AM: Using BERT model (bert-base-uncased).
09/16 09:19:06 AM: LOADING A FUNETUNED MODEL from: 
09/16 09:19:06 AM: models/memorization
09/16 09:19:06 AM: loading configuration file models/memorization/config.json
09/16 09:19:06 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "random-memorization",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 09:19:06 AM: loading weights file models/memorization/pytorch_model.bin
09/16 09:19:11 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpaqi5w26y
09/16 09:19:15 AM: copying /tmp/tmpaqi5w26y to cache at ./experiments/dep-ud-ewt-memorization-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:19:15 AM: creating metadata file for ./experiments/dep-ud-ewt-memorization-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:19:15 AM: removing temp file /tmp/tmpaqi5w26y
09/16 09:19:15 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/dep-ud-ewt-memorization-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:19:15 AM: Initializing parameters
09/16 09:19:15 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 09:19:15 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 09:19:15 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 09:19:15 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 09:19:15 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 09:19:15 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 09:19:15 AM: 	Task 'edges-dep-ud-ewt' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-dep-ud-ewt"
}
09/16 09:19:20 AM: Model specification:
09/16 09:19:20 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-dep-ud-ewt_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=49, bias=True)
      )
    )
  )
)
09/16 09:19:20 AM: Model parameters:
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:20 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:20 AM: 	edges-dep-ud-ewt_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 09:19:20 AM: 	edges-dep-ud-ewt_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:20 AM: 	edges-dep-ud-ewt_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 09:19:20 AM: 	edges-dep-ud-ewt_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:20 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 09:19:20 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:20 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:20 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:20 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.4.weight: Trainable parameter, count 12544 with torch.Size([49, 256])
09/16 09:19:20 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.4.bias: Trainable parameter, count 49 with torch.Size([49])
09/16 09:19:20 AM: Total number of parameters: 110151473 (1.10151e+08)
09/16 09:19:20 AM: Number of trainable parameters: 669233 (669233)
09/16 09:19:20 AM: Finished building model in 13.907s
09/16 09:19:20 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-dep-ud-ewt 

09/16 09:19:25 AM: patience = 9
09/16 09:19:25 AM: val_interval = 1000
09/16 09:19:25 AM: max_vals = 250
09/16 09:19:25 AM: cuda_device = 0
09/16 09:19:25 AM: grad_norm = 5.0
09/16 09:19:25 AM: grad_clipping = None
09/16 09:19:25 AM: lr_decay = 0.99
09/16 09:19:25 AM: min_lr = 1e-06
09/16 09:19:25 AM: keep_all_checkpoints = 0
09/16 09:19:25 AM: val_data_limit = 5000
09/16 09:19:25 AM: max_epochs = -1
09/16 09:19:25 AM: dec_val_scale = 250
09/16 09:19:25 AM: training_data_fraction = 1
09/16 09:19:25 AM: type = adam
09/16 09:19:25 AM: parameter_groups = None
09/16 09:19:25 AM: Number of trainable parameters: 669233
09/16 09:19:25 AM: infer_type_and_cast = True
09/16 09:19:25 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:25 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:25 AM: lr = 0.0001
09/16 09:19:25 AM: amsgrad = True
09/16 09:19:25 AM: type = reduce_on_plateau
09/16 09:19:25 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:25 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:25 AM: mode = max
09/16 09:19:25 AM: factor = 0.5
09/16 09:19:25 AM: patience = 3
09/16 09:19:25 AM: threshold = 0.0001
09/16 09:19:25 AM: threshold_mode = abs
09/16 09:19:25 AM: verbose = True
09/16 09:19:25 AM: type = adam
09/16 09:19:25 AM: parameter_groups = None
09/16 09:19:25 AM: Number of trainable parameters: 669233
09/16 09:19:25 AM: infer_type_and_cast = True
09/16 09:19:25 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:25 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:25 AM: lr = 0.0001
09/16 09:19:25 AM: amsgrad = True
09/16 09:19:25 AM: type = reduce_on_plateau
09/16 09:19:25 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:25 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:25 AM: mode = max
09/16 09:19:25 AM: factor = 0.5
09/16 09:19:25 AM: patience = 3
09/16 09:19:25 AM: threshold = 0.0001
09/16 09:19:25 AM: threshold_mode = abs
09/16 09:19:25 AM: verbose = True
09/16 09:19:25 AM: Starting training without restoring from a checkpoint.
09/16 09:19:25 AM: Training examples per task, before any subsampling: {'edges-dep-ud-ewt': 12522}
09/16 09:19:25 AM: Beginning training with stopping criteria based on metric: edges-dep-ud-ewt_f1
09/16 09:19:35 AM: Update 25: task edges-dep-ud-ewt, batch 25 (25): mcc: 0.0070, acc: 0.0055, precision: 0.0229, recall: 0.1533, f1: 0.0398, edges-dep-ud-ewt_loss: 0.3757
09/16 09:19:46 AM: Update 88: task edges-dep-ud-ewt, batch 88 (88): mcc: 0.0048, acc: 0.0031, precision: 0.0233, recall: 0.0601, f1: 0.0335, edges-dep-ud-ewt_loss: 0.2230
09/16 09:19:56 AM: Update 143: task edges-dep-ud-ewt, batch 143 (143): mcc: 0.0047, acc: 0.0032, precision: 0.0240, recall: 0.0381, f1: 0.0295, edges-dep-ud-ewt_loss: 0.1786
09/16 09:20:06 AM: Update 193: task edges-dep-ud-ewt, batch 193 (193): mcc: 0.0073, acc: 0.0059, precision: 0.0271, recall: 0.0309, f1: 0.0289, edges-dep-ud-ewt_loss: 0.1564
09/16 09:20:16 AM: Update 243: task edges-dep-ud-ewt, batch 243 (243): mcc: 0.0153, acc: 0.0130, precision: 0.0363, recall: 0.0326, f1: 0.0343, edges-dep-ud-ewt_loss: 0.1420
09/16 09:20:26 AM: Update 294: task edges-dep-ud-ewt, batch 294 (294): mcc: 0.0252, acc: 0.0206, precision: 0.0491, recall: 0.0366, f1: 0.0419, edges-dep-ud-ewt_loss: 0.1313
09/16 09:20:36 AM: Update 335: task edges-dep-ud-ewt, batch 335 (335): mcc: 0.0335, acc: 0.0262, precision: 0.0609, recall: 0.0403, f1: 0.0485, edges-dep-ud-ewt_loss: 0.1246
09/16 09:20:46 AM: Update 386: task edges-dep-ud-ewt, batch 386 (386): mcc: 0.0479, acc: 0.0358, precision: 0.0820, recall: 0.0480, f1: 0.0606, edges-dep-ud-ewt_loss: 0.1178
09/16 09:20:56 AM: Update 417: task edges-dep-ud-ewt, batch 417 (417): mcc: 0.0595, acc: 0.0433, precision: 0.0996, recall: 0.0545, f1: 0.0705, edges-dep-ud-ewt_loss: 0.1142
09/16 09:21:07 AM: Update 468: task edges-dep-ud-ewt, batch 468 (468): mcc: 0.0797, acc: 0.0560, precision: 0.1308, recall: 0.0661, f1: 0.0878, edges-dep-ud-ewt_loss: 0.1090
09/16 09:21:17 AM: Update 518: task edges-dep-ud-ewt, batch 518 (518): mcc: 0.1026, acc: 0.0702, precision: 0.1668, recall: 0.0794, f1: 0.1076, edges-dep-ud-ewt_loss: 0.1044
09/16 09:21:27 AM: Update 570: task edges-dep-ud-ewt, batch 570 (570): mcc: 0.1258, acc: 0.0844, precision: 0.2040, recall: 0.0929, f1: 0.1277, edges-dep-ud-ewt_loss: 0.1004
09/16 09:21:37 AM: Update 630: task edges-dep-ud-ewt, batch 630 (630): mcc: 0.1508, acc: 0.0997, precision: 0.2437, recall: 0.1078, f1: 0.1495, edges-dep-ud-ewt_loss: 0.0958
09/16 09:21:47 AM: Update 680: task edges-dep-ud-ewt, batch 680 (680): mcc: 0.1738, acc: 0.1139, precision: 0.2807, recall: 0.1216, f1: 0.1697, edges-dep-ud-ewt_loss: 0.0926
09/16 09:21:57 AM: Update 722: task edges-dep-ud-ewt, batch 722 (722): mcc: 0.1922, acc: 0.1252, precision: 0.3099, recall: 0.1327, f1: 0.1858, edges-dep-ud-ewt_loss: 0.0902
09/16 09:22:07 AM: Update 775: task edges-dep-ud-ewt, batch 775 (775): mcc: 0.2157, acc: 0.1400, precision: 0.3464, recall: 0.1473, f1: 0.2067, edges-dep-ud-ewt_loss: 0.0874
09/16 09:22:17 AM: Update 807: task edges-dep-ud-ewt, batch 807 (807): mcc: 0.2299, acc: 0.1490, precision: 0.3683, recall: 0.1562, f1: 0.2194, edges-dep-ud-ewt_loss: 0.0858
09/16 09:22:28 AM: Update 857: task edges-dep-ud-ewt, batch 857 (857): mcc: 0.2483, acc: 0.1606, precision: 0.3963, recall: 0.1679, f1: 0.2359, edges-dep-ud-ewt_loss: 0.0835
09/16 09:22:38 AM: Update 909: task edges-dep-ud-ewt, batch 909 (909): mcc: 0.2670, acc: 0.1727, precision: 0.4242, recall: 0.1801, f1: 0.2528, edges-dep-ud-ewt_loss: 0.0813
09/16 09:22:48 AM: Update 961: task edges-dep-ud-ewt, batch 961 (961): mcc: 0.2849, acc: 0.1845, precision: 0.4504, recall: 0.1920, f1: 0.2692, edges-dep-ud-ewt_loss: 0.0792
09/16 09:22:55 AM: ***** Step 1000 / Validation 1 *****
09/16 09:22:55 AM: edges-dep-ud-ewt: trained on 1000 batches, 2.551 epochs
09/16 09:22:55 AM: Validating...
09/16 09:22:58 AM: Evaluate: task edges-dep-ud-ewt, batch 10 (63): mcc: 0.6571, acc: 0.4606, precision: 0.9376, recall: 0.4666, f1: 0.6231, edges-dep-ud-ewt_loss: 0.0390
09/16 09:23:09 AM: Evaluate: task edges-dep-ud-ewt, batch 56 (63): mcc: 0.6499, acc: 0.4518, precision: 0.9394, recall: 0.4557, f1: 0.6137, edges-dep-ud-ewt_loss: 0.0389
09/16 09:23:10 AM: Best result seen so far for edges-dep-ud-ewt.
09/16 09:23:10 AM: Best result seen so far for micro.
09/16 09:23:10 AM: Best result seen so far for macro.
09/16 09:23:10 AM: Updating LR scheduler:
09/16 09:23:10 AM: 	Best result seen so far for macro_avg: 0.617
09/16 09:23:10 AM: 	# validation passes without improvement: 0
09/16 09:23:10 AM: edges-dep-ud-ewt_loss: training: 0.077743 validation: 0.038669
09/16 09:23:10 AM: macro_avg: validation: 0.616989
09/16 09:23:10 AM: micro_avg: validation: 0.000000
09/16 09:23:10 AM: edges-dep-ud-ewt_mcc: training: 0.297535 validation: 0.652543
09/16 09:23:10 AM: edges-dep-ud-ewt_acc: training: 0.192919 validation: 0.455516
09/16 09:23:10 AM: edges-dep-ud-ewt_precision: training: 0.468492 validation: 0.939404
09/16 09:23:10 AM: edges-dep-ud-ewt_recall: training: 0.200583 validation: 0.459339
09/16 09:23:10 AM: edges-dep-ud-ewt_f1: training: 0.280900 validation: 0.616989
09/16 09:23:10 AM: Global learning rate: 0.0001
09/16 09:23:10 AM: Saving checkpoints to: ./experiments/dep-ud-ewt-memorization-top/run
09/16 09:23:19 AM: Update 1044: task edges-dep-ud-ewt, batch 44 (1044): mcc: 0.6124, acc: 0.4192, precision: 0.8856, recall: 0.4303, f1: 0.5792, edges-dep-ud-ewt_loss: 0.0424
09/16 09:23:29 AM: Update 1094: task edges-dep-ud-ewt, batch 94 (1094): mcc: 0.6182, acc: 0.4263, precision: 0.8865, recall: 0.4380, f1: 0.5863, edges-dep-ud-ewt_loss: 0.0416
09/16 09:23:39 AM: Update 1140: task edges-dep-ud-ewt, batch 140 (1140): mcc: 0.6275, acc: 0.4385, precision: 0.8879, recall: 0.4503, f1: 0.5976, edges-dep-ud-ewt_loss: 0.0409
09/16 09:23:50 AM: Update 1177: task edges-dep-ud-ewt, batch 177 (1177): mcc: 0.6333, acc: 0.4460, precision: 0.8883, recall: 0.4585, f1: 0.6048, edges-dep-ud-ewt_loss: 0.0405
09/16 09:24:00 AM: Update 1230: task edges-dep-ud-ewt, batch 230 (1230): mcc: 0.6354, acc: 0.4495, precision: 0.8857, recall: 0.4628, f1: 0.6080, edges-dep-ud-ewt_loss: 0.0403
09/16 09:24:10 AM: Update 1286: task edges-dep-ud-ewt, batch 286 (1286): mcc: 0.6380, acc: 0.4539, precision: 0.8835, recall: 0.4677, f1: 0.6117, edges-dep-ud-ewt_loss: 0.0398
09/16 09:24:20 AM: Update 1343: task edges-dep-ud-ewt, batch 343 (1343): mcc: 0.6409, acc: 0.4582, precision: 0.8820, recall: 0.4729, f1: 0.6157, edges-dep-ud-ewt_loss: 0.0392
09/16 09:24:31 AM: Update 1389: task edges-dep-ud-ewt, batch 389 (1389): mcc: 0.6433, acc: 0.4618, precision: 0.8809, recall: 0.4770, f1: 0.6189, edges-dep-ud-ewt_loss: 0.0390
09/16 09:24:41 AM: Update 1439: task edges-dep-ud-ewt, batch 439 (1439): mcc: 0.6461, acc: 0.4656, precision: 0.8803, recall: 0.4814, f1: 0.6224, edges-dep-ud-ewt_loss: 0.0387
09/16 09:24:51 AM: Update 1489: task edges-dep-ud-ewt, batch 489 (1489): mcc: 0.6489, acc: 0.4697, precision: 0.8796, recall: 0.4859, f1: 0.6260, edges-dep-ud-ewt_loss: 0.0382
09/16 09:25:01 AM: Update 1531: task edges-dep-ud-ewt, batch 531 (1531): mcc: 0.6525, acc: 0.4746, precision: 0.8798, recall: 0.4912, f1: 0.6304, edges-dep-ud-ewt_loss: 0.0379
09/16 09:25:13 AM: Update 1569: task edges-dep-ud-ewt, batch 569 (1569): mcc: 0.6558, acc: 0.4792, precision: 0.8800, recall: 0.4960, f1: 0.6344, edges-dep-ud-ewt_loss: 0.0377
09/16 09:25:23 AM: Update 1616: task edges-dep-ud-ewt, batch 616 (1616): mcc: 0.6579, acc: 0.4825, precision: 0.8790, recall: 0.4997, f1: 0.6372, edges-dep-ud-ewt_loss: 0.0375
09/16 09:25:33 AM: Update 1666: task edges-dep-ud-ewt, batch 666 (1666): mcc: 0.6599, acc: 0.4854, precision: 0.8784, recall: 0.5030, f1: 0.6397, edges-dep-ud-ewt_loss: 0.0373
09/16 09:25:43 AM: Update 1714: task edges-dep-ud-ewt, batch 714 (1714): mcc: 0.6618, acc: 0.4882, precision: 0.8779, recall: 0.5062, f1: 0.6422, edges-dep-ud-ewt_loss: 0.0370
09/16 09:25:53 AM: Update 1769: task edges-dep-ud-ewt, batch 769 (1769): mcc: 0.6639, acc: 0.4914, precision: 0.8771, recall: 0.5099, f1: 0.6449, edges-dep-ud-ewt_loss: 0.0367
09/16 09:26:03 AM: Update 1823: task edges-dep-ud-ewt, batch 823 (1823): mcc: 0.6657, acc: 0.4940, precision: 0.8765, recall: 0.5129, f1: 0.6471, edges-dep-ud-ewt_loss: 0.0364
09/16 09:26:13 AM: Update 1880: task edges-dep-ud-ewt, batch 880 (1880): mcc: 0.6678, acc: 0.4972, precision: 0.8760, recall: 0.5165, f1: 0.6498, edges-dep-ud-ewt_loss: 0.0361
09/16 09:26:23 AM: Update 1921: task edges-dep-ud-ewt, batch 921 (1921): mcc: 0.6701, acc: 0.5003, precision: 0.8760, recall: 0.5199, f1: 0.6526, edges-dep-ud-ewt_loss: 0.0359
09/16 09:26:35 AM: Update 1961: task edges-dep-ud-ewt, batch 961 (1961): mcc: 0.6722, acc: 0.5033, precision: 0.8761, recall: 0.5231, f1: 0.6551, edges-dep-ud-ewt_loss: 0.0357
09/16 09:26:42 AM: ***** Step 2000 / Validation 2 *****
09/16 09:26:42 AM: edges-dep-ud-ewt: trained on 1000 batches, 2.551 epochs
09/16 09:26:42 AM: Validating...
09/16 09:26:45 AM: Evaluate: task edges-dep-ud-ewt, batch 12 (63): mcc: 0.7625, acc: 0.6328, precision: 0.9039, recall: 0.6499, f1: 0.7561, edges-dep-ud-ewt_loss: 0.0275
09/16 09:26:55 AM: Evaluate: task edges-dep-ud-ewt, batch 62 (63): mcc: 0.7684, acc: 0.6436, precision: 0.9051, recall: 0.6589, f1: 0.7626, edges-dep-ud-ewt_loss: 0.0269
09/16 09:26:55 AM: Best result seen so far for edges-dep-ud-ewt.
09/16 09:26:55 AM: Best result seen so far for macro.
09/16 09:26:55 AM: Updating LR scheduler:
09/16 09:26:55 AM: 	Best result seen so far for macro_avg: 0.763
09/16 09:26:55 AM: 	# validation passes without improvement: 0
09/16 09:26:55 AM: edges-dep-ud-ewt_loss: training: 0.035528 validation: 0.026874
09/16 09:26:55 AM: macro_avg: validation: 0.762572
09/16 09:26:55 AM: micro_avg: validation: 0.000000
09/16 09:26:55 AM: edges-dep-ud-ewt_mcc: training: 0.673263 validation: 0.768337
09/16 09:26:55 AM: edges-dep-ud-ewt_acc: training: 0.504939 validation: 0.643648
09/16 09:26:55 AM: edges-dep-ud-ewt_precision: training: 0.875633 validation: 0.905033
09/16 09:26:55 AM: edges-dep-ud-ewt_recall: training: 0.525084 validation: 0.658861
09/16 09:26:55 AM: edges-dep-ud-ewt_f1: training: 0.656493 validation: 0.762572
09/16 09:26:55 AM: Global learning rate: 0.0001
09/16 09:26:55 AM: Saving checkpoints to: ./experiments/dep-ud-ewt-memorization-top/run
09/16 09:27:05 AM: Update 2050: task edges-dep-ud-ewt, batch 50 (2050): mcc: 0.7026, acc: 0.5535, precision: 0.8612, recall: 0.5810, f1: 0.6938, edges-dep-ud-ewt_loss: 0.0321
09/16 09:27:15 AM: Update 2101: task edges-dep-ud-ewt, batch 101 (2101): mcc: 0.7018, acc: 0.5523, precision: 0.8600, recall: 0.5805, f1: 0.6931, edges-dep-ud-ewt_loss: 0.0322
09/16 09:27:26 AM: Update 2147: task edges-dep-ud-ewt, batch 147 (2147): mcc: 0.7020, acc: 0.5525, precision: 0.8592, recall: 0.5815, f1: 0.6936, edges-dep-ud-ewt_loss: 0.0318
09/16 09:27:36 AM: Update 2193: task edges-dep-ud-ewt, batch 193 (2193): mcc: 0.7052, acc: 0.5560, precision: 0.8615, recall: 0.5850, f1: 0.6968, edges-dep-ud-ewt_loss: 0.0313
09/16 09:27:46 AM: Update 2248: task edges-dep-ud-ewt, batch 248 (2248): mcc: 0.7061, acc: 0.5571, precision: 0.8611, recall: 0.5867, f1: 0.6979, edges-dep-ud-ewt_loss: 0.0312
09/16 09:27:56 AM: Update 2296: task edges-dep-ud-ewt, batch 296 (2296): mcc: 0.7087, acc: 0.5604, precision: 0.8623, recall: 0.5903, f1: 0.7008, edges-dep-ud-ewt_loss: 0.0310
09/16 09:28:06 AM: Update 2350: task edges-dep-ud-ewt, batch 350 (2350): mcc: 0.7125, acc: 0.5654, precision: 0.8635, recall: 0.5956, f1: 0.7050, edges-dep-ud-ewt_loss: 0.0308
09/16 09:28:16 AM: Update 2379: task edges-dep-ud-ewt, batch 379 (2379): mcc: 0.7130, acc: 0.5662, precision: 0.8637, recall: 0.5962, f1: 0.7055, edges-dep-ud-ewt_loss: 0.0308
09/16 09:28:26 AM: Update 2428: task edges-dep-ud-ewt, batch 428 (2428): mcc: 0.7135, acc: 0.5670, precision: 0.8635, recall: 0.5973, f1: 0.7061, edges-dep-ud-ewt_loss: 0.0308
09/16 09:28:37 AM: Update 2481: task edges-dep-ud-ewt, batch 481 (2481): mcc: 0.7142, acc: 0.5678, precision: 0.8634, recall: 0.5985, f1: 0.7069, edges-dep-ud-ewt_loss: 0.0307
09/16 09:28:47 AM: Update 2534: task edges-dep-ud-ewt, batch 534 (2534): mcc: 0.7147, acc: 0.5687, precision: 0.8630, recall: 0.5996, f1: 0.7076, edges-dep-ud-ewt_loss: 0.0305
09/16 09:28:57 AM: Update 2591: task edges-dep-ud-ewt, batch 591 (2591): mcc: 0.7157, acc: 0.5699, precision: 0.8629, recall: 0.6013, f1: 0.7088, edges-dep-ud-ewt_loss: 0.0304
09/16 09:29:07 AM: Update 2644: task edges-dep-ud-ewt, batch 644 (2644): mcc: 0.7161, acc: 0.5706, precision: 0.8626, recall: 0.6023, f1: 0.7093, edges-dep-ud-ewt_loss: 0.0302
09/16 09:29:18 AM: Update 2683: task edges-dep-ud-ewt, batch 683 (2683): mcc: 0.7170, acc: 0.5718, precision: 0.8626, recall: 0.6037, f1: 0.7103, edges-dep-ud-ewt_loss: 0.0301
09/16 09:29:28 AM: Update 2733: task edges-dep-ud-ewt, batch 733 (2733): mcc: 0.7187, acc: 0.5741, precision: 0.8632, recall: 0.6061, f1: 0.7122, edges-dep-ud-ewt_loss: 0.0300
09/16 09:29:38 AM: Update 2769: task edges-dep-ud-ewt, batch 769 (2769): mcc: 0.7191, acc: 0.5747, precision: 0.8629, recall: 0.6070, f1: 0.7127, edges-dep-ud-ewt_loss: 0.0299
09/16 09:29:48 AM: Update 2818: task edges-dep-ud-ewt, batch 818 (2818): mcc: 0.7196, acc: 0.5755, precision: 0.8625, recall: 0.6081, f1: 0.7133, edges-dep-ud-ewt_loss: 0.0299
09/16 09:29:58 AM: Update 2865: task edges-dep-ud-ewt, batch 865 (2865): mcc: 0.7201, acc: 0.5761, precision: 0.8623, recall: 0.6091, f1: 0.7139, edges-dep-ud-ewt_loss: 0.0298
09/16 09:30:08 AM: Update 2920: task edges-dep-ud-ewt, batch 920 (2920): mcc: 0.7206, acc: 0.5768, precision: 0.8623, recall: 0.6100, f1: 0.7145, edges-dep-ud-ewt_loss: 0.0297
09/16 09:30:19 AM: Update 2966: task edges-dep-ud-ewt, batch 966 (2966): mcc: 0.7213, acc: 0.5778, precision: 0.8622, recall: 0.6112, f1: 0.7153, edges-dep-ud-ewt_loss: 0.0297
09/16 09:30:25 AM: ***** Step 3000 / Validation 3 *****
09/16 09:30:25 AM: edges-dep-ud-ewt: trained on 1000 batches, 2.551 epochs
09/16 09:30:25 AM: Validating...
09/16 09:30:29 AM: Evaluate: task edges-dep-ud-ewt, batch 17 (63): mcc: 0.7980, acc: 0.6817, precision: 0.9192, recall: 0.6988, f1: 0.7940, edges-dep-ud-ewt_loss: 0.0231
09/16 09:30:38 AM: Best result seen so far for edges-dep-ud-ewt.
09/16 09:30:38 AM: Best result seen so far for macro.
09/16 09:30:38 AM: Updating LR scheduler:
09/16 09:30:38 AM: 	Best result seen so far for macro_avg: 0.792
09/16 09:30:38 AM: 	# validation passes without improvement: 0
09/16 09:30:38 AM: edges-dep-ud-ewt_loss: training: 0.029637 validation: 0.023098
09/16 09:30:38 AM: macro_avg: validation: 0.792057
09/16 09:30:38 AM: micro_avg: validation: 0.000000
09/16 09:30:38 AM: edges-dep-ud-ewt_mcc: training: 0.721483 validation: 0.796117
09/16 09:30:38 AM: edges-dep-ud-ewt_acc: training: 0.578125 validation: 0.680327
09/16 09:30:38 AM: edges-dep-ud-ewt_precision: training: 0.861898 validation: 0.917874
09/16 09:30:38 AM: edges-dep-ud-ewt_recall: training: 0.611673 validation: 0.696575
09/16 09:30:38 AM: edges-dep-ud-ewt_f1: training: 0.715540 validation: 0.792057
09/16 09:30:38 AM: Global learning rate: 0.0001
09/16 09:30:38 AM: Saving checkpoints to: ./experiments/dep-ud-ewt-memorization-top/run
09/16 09:30:39 AM: Update 3005: task edges-dep-ud-ewt, batch 5 (3005): mcc: 0.7353, acc: 0.6102, precision: 0.8430, recall: 0.6495, f1: 0.7337, edges-dep-ud-ewt_loss: 0.0232
09/16 09:30:49 AM: Update 3056: task edges-dep-ud-ewt, batch 56 (3056): mcc: 0.7298, acc: 0.5937, precision: 0.8547, recall: 0.6310, f1: 0.7260, edges-dep-ud-ewt_loss: 0.0267
09/16 09:30:59 AM: Update 3097: task edges-dep-ud-ewt, batch 97 (3097): mcc: 0.7361, acc: 0.6010, precision: 0.8606, recall: 0.6373, f1: 0.7323, edges-dep-ud-ewt_loss: 0.0273
