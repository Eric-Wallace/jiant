09/16 08:35:00 AM: Git branch: master
09/16 08:35:00 AM: Git SHA: a6b97574b819abe0c17f2f3300d1097e5c87dbde
09/16 08:35:00 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-coref-only/",
  "exp_name": "experiments/rel-semeval-coref-only",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-coref-only/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/coref",
  "pytorch_transformers_output_mode": "only",
  "remote_log_name": "experiments/rel-semeval-coref-only__run",
  "run_dir": "./experiments/rel-semeval-coref-only/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:35:00 AM: Saved config to ./experiments/rel-semeval-coref-only/run/params.conf
09/16 08:35:00 AM: Using random seed 1234
09/16 08:35:00 AM: Using GPU 0
09/16 08:35:00 AM: Loading tasks...
09/16 08:35:00 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-coref-only/
09/16 08:35:00 AM: 	Creating task edges-rel-semeval from scratch.
09/16 08:35:01 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 08:35:01 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 08:35:01 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 08:35:01 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 08:35:01 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 08:35:01 AM: 	Building vocab from scratch.
09/16 08:35:01 AM: 	Counting units for task edges-rel-semeval.
09/16 08:35:01 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 08:35:02 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:02 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:35:02 AM: 	Saved vocab to ./experiments/rel-semeval-coref-only/vocab
09/16 08:35:02 AM: Loading token dictionary from ./experiments/rel-semeval-coref-only/vocab.
09/16 08:35:02 AM: 	Loaded vocab from ./experiments/rel-semeval-coref-only/vocab
09/16 08:35:02 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:35:02 AM: 	Vocab namespace tokens: size 16020
09/16 08:35:02 AM: 	Vocab namespace chars: size 59
09/16 08:35:02 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 08:35:02 AM: 	Finished building vocab.
09/16 08:35:02 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 08:35:03 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-coref-only/preproc/edges-rel-semeval__train_data
09/16 08:35:03 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 08:35:03 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-coref-only/preproc/edges-rel-semeval__val_data
09/16 08:35:03 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 08:35:03 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-coref-only/preproc/edges-rel-semeval__test_data
09/16 08:35:03 AM: 	Finished indexing tasks
09/16 08:35:03 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 08:35:03 AM: 	  Training on 
09/16 08:35:03 AM: 	  Evaluating on edges-rel-semeval
09/16 08:35:03 AM: 	Finished loading tasks in 2.976s
09/16 08:35:03 AM: 	 Tasks: ['edges-rel-semeval']
09/16 08:35:03 AM: Building model...
09/16 08:35:03 AM: Using BERT model (bert-base-uncased).
09/16 08:35:03 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:35:03 AM: models/coref
09/16 08:35:03 AM: loading configuration file models/coref/config.json
09/16 08:35:03 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:35:03 AM: loading weights file models/coref/pytorch_model.bin
09/16 08:35:07 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmp3vltkm7m
09/16 08:35:09 AM: copying /tmp/tmp3vltkm7m to cache at ./experiments/rel-semeval-coref-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:09 AM: creating metadata file for ./experiments/rel-semeval-coref-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:09 AM: removing temp file /tmp/tmp3vltkm7m
09/16 08:35:09 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-coref-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:09 AM: Initializing parameters
09/16 08:35:09 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:35:09 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:35:09 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:35:09 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:35:09 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 08:35:14 AM: Model specification:
09/16 08:35:14 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 08:35:14 AM: Model parameters:
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 08:35:14 AM: Total number of parameters: 110143763 (1.10144e+08)
09/16 08:35:14 AM: Number of trainable parameters: 661523 (661523)
09/16 08:35:14 AM: Finished building model in 10.556s
09/16 08:35:14 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 08:35:15 AM: patience = 9
09/16 08:35:15 AM: val_interval = 100
09/16 08:35:15 AM: max_vals = 100
09/16 08:35:15 AM: cuda_device = 0
09/16 08:35:15 AM: grad_norm = 5.0
09/16 08:35:15 AM: grad_clipping = None
09/16 08:35:15 AM: lr_decay = 0.99
09/16 08:35:15 AM: min_lr = 1e-06
09/16 08:35:15 AM: keep_all_checkpoints = 0
09/16 08:35:15 AM: val_data_limit = 5000
09/16 08:35:15 AM: max_epochs = -1
09/16 08:35:15 AM: dec_val_scale = 250
09/16 08:35:15 AM: training_data_fraction = 1
09/16 08:35:15 AM: type = adam
09/16 08:35:15 AM: parameter_groups = None
09/16 08:35:15 AM: Number of trainable parameters: 661523
09/16 08:35:15 AM: infer_type_and_cast = True
09/16 08:35:15 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:15 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:15 AM: lr = 0.0001
09/16 08:35:15 AM: amsgrad = True
09/16 08:35:15 AM: type = reduce_on_plateau
09/16 08:35:15 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:15 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:15 AM: mode = max
09/16 08:35:15 AM: factor = 0.5
09/16 08:35:15 AM: patience = 3
09/16 08:35:15 AM: threshold = 0.0001
09/16 08:35:15 AM: threshold_mode = abs
09/16 08:35:15 AM: verbose = True
09/16 08:35:15 AM: type = adam
09/16 08:35:15 AM: parameter_groups = None
09/16 08:35:15 AM: Number of trainable parameters: 661523
09/16 08:35:15 AM: infer_type_and_cast = True
09/16 08:35:15 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:15 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:15 AM: lr = 0.0001
09/16 08:35:15 AM: amsgrad = True
09/16 08:35:15 AM: type = reduce_on_plateau
09/16 08:35:15 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:15 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:15 AM: mode = max
09/16 08:35:15 AM: factor = 0.5
09/16 08:35:15 AM: patience = 3
09/16 08:35:15 AM: threshold = 0.0001
09/16 08:35:15 AM: threshold_mode = abs
09/16 08:35:15 AM: verbose = True
09/16 08:35:15 AM: Starting training without restoring from a checkpoint.
09/16 08:35:15 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 08:35:15 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 08:35:17 AM: ***** Step 100 / Validation 1 *****
09/16 08:35:17 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:17 AM: Validating...
09/16 08:35:17 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:17 AM: Best result seen so far for micro.
09/16 08:35:17 AM: Best result seen so far for macro.
09/16 08:35:17 AM: Updating LR scheduler:
09/16 08:35:17 AM: 	Best result seen so far for macro_avg: 0.000
09/16 08:35:17 AM: 	# validation passes without improvement: 0
09/16 08:35:17 AM: edges-rel-semeval_loss: training: 0.283242 validation: 0.187450
09/16 08:35:17 AM: macro_avg: validation: 0.000000
09/16 08:35:17 AM: micro_avg: validation: 0.000000
09/16 08:35:17 AM: edges-rel-semeval_mcc: training: 0.010026 validation: 0.000000
09/16 08:35:17 AM: edges-rel-semeval_acc: training: 0.005992 validation: 0.000000
09/16 08:35:17 AM: edges-rel-semeval_precision: training: 0.063372 validation: 0.000000
09/16 08:35:17 AM: edges-rel-semeval_recall: training: 0.050142 validation: 0.000000
09/16 08:35:17 AM: edges-rel-semeval_f1: training: 0.055986 validation: 0.000000
09/16 08:35:17 AM: Global learning rate: 0.0001
09/16 08:35:17 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:19 AM: ***** Step 200 / Validation 2 *****
09/16 08:35:19 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:19 AM: Validating...
09/16 08:35:20 AM: Updating LR scheduler:
09/16 08:35:20 AM: 	Best result seen so far for macro_avg: 0.000
09/16 08:35:20 AM: 	# validation passes without improvement: 1
09/16 08:35:20 AM: edges-rel-semeval_loss: training: 0.186169 validation: 0.174180
09/16 08:35:20 AM: macro_avg: validation: 0.000000
09/16 08:35:20 AM: micro_avg: validation: 0.000000
09/16 08:35:20 AM: edges-rel-semeval_mcc: training: 0.011201 validation: 0.000000
09/16 08:35:20 AM: edges-rel-semeval_acc: training: 0.000625 validation: 0.000000
09/16 08:35:20 AM: edges-rel-semeval_precision: training: 0.285714 validation: 0.000000
09/16 08:35:20 AM: edges-rel-semeval_recall: training: 0.000625 validation: 0.000000
09/16 08:35:20 AM: edges-rel-semeval_f1: training: 0.001247 validation: 0.000000
09/16 08:35:20 AM: Global learning rate: 0.0001
09/16 08:35:20 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:22 AM: ***** Step 300 / Validation 3 *****
09/16 08:35:22 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:22 AM: Validating...
09/16 08:35:22 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:22 AM: Best result seen so far for macro.
09/16 08:35:22 AM: Updating LR scheduler:
09/16 08:35:22 AM: 	Best result seen so far for macro_avg: 0.047
09/16 08:35:22 AM: 	# validation passes without improvement: 0
09/16 08:35:22 AM: edges-rel-semeval_loss: training: 0.170704 validation: 0.158733
09/16 08:35:22 AM: macro_avg: validation: 0.047458
09/16 08:35:22 AM: micro_avg: validation: 0.000000
09/16 08:35:22 AM: edges-rel-semeval_mcc: training: 0.083942 validation: 0.143646
09/16 08:35:22 AM: edges-rel-semeval_acc: training: 0.011353 validation: 0.024369
09/16 08:35:22 AM: edges-rel-semeval_precision: training: 0.672727 validation: 0.903226
09/16 08:35:22 AM: edges-rel-semeval_recall: training: 0.011668 validation: 0.024369
09/16 08:35:22 AM: edges-rel-semeval_f1: training: 0.022939 validation: 0.047458
09/16 08:35:22 AM: Global learning rate: 0.0001
09/16 08:35:22 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:24 AM: ***** Step 400 / Validation 4 *****
09/16 08:35:24 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:24 AM: Validating...
09/16 08:35:24 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:24 AM: Best result seen so far for macro.
09/16 08:35:24 AM: Updating LR scheduler:
09/16 08:35:24 AM: 	Best result seen so far for macro_avg: 0.130
09/16 08:35:24 AM: 	# validation passes without improvement: 0
09/16 08:35:24 AM: edges-rel-semeval_loss: training: 0.154150 validation: 0.145611
09/16 08:35:24 AM: macro_avg: validation: 0.130016
09/16 08:35:24 AM: micro_avg: validation: 0.000000
09/16 08:35:24 AM: edges-rel-semeval_mcc: training: 0.233814 validation: 0.234085
09/16 08:35:24 AM: edges-rel-semeval_acc: training: 0.076250 validation: 0.070496
09/16 08:35:24 AM: edges-rel-semeval_precision: training: 0.758308 validation: 0.835052
09/16 08:35:24 AM: edges-rel-semeval_recall: training: 0.078437 validation: 0.070496
09/16 08:35:24 AM: edges-rel-semeval_f1: training: 0.142169 validation: 0.130016
09/16 08:35:24 AM: Global learning rate: 0.0001
09/16 08:35:24 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:25 AM: Update 431: task edges-rel-semeval, batch 31 (431): mcc: 0.2489, acc: 0.0862, precision: 0.7395, recall: 0.0914, f1: 0.1627, edges-rel-semeval_loss: 0.1507
09/16 08:35:27 AM: ***** Step 500 / Validation 5 *****
09/16 08:35:27 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:27 AM: Validating...
09/16 08:35:27 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:27 AM: Best result seen so far for macro.
09/16 08:35:27 AM: Updating LR scheduler:
09/16 08:35:27 AM: 	Best result seen so far for macro_avg: 0.201
09/16 08:35:27 AM: 	# validation passes without improvement: 0
09/16 08:35:27 AM: edges-rel-semeval_loss: training: 0.143656 validation: 0.137000
09/16 08:35:27 AM: macro_avg: validation: 0.201373
09/16 08:35:27 AM: micro_avg: validation: 0.000000
09/16 08:35:27 AM: edges-rel-semeval_mcc: training: 0.301732 validation: 0.295131
09/16 08:35:27 AM: edges-rel-semeval_acc: training: 0.125197 validation: 0.114012
09/16 08:35:27 AM: edges-rel-semeval_precision: training: 0.761111 validation: 0.814815
09/16 08:35:27 AM: edges-rel-semeval_recall: training: 0.129612 validation: 0.114883
09/16 08:35:27 AM: edges-rel-semeval_f1: training: 0.221504 validation: 0.201373
09/16 08:35:27 AM: Global learning rate: 0.0001
09/16 08:35:27 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:29 AM: ***** Step 600 / Validation 6 *****
09/16 08:35:29 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:29 AM: Validating...
09/16 08:35:29 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:29 AM: Best result seen so far for macro.
09/16 08:35:29 AM: Updating LR scheduler:
09/16 08:35:29 AM: 	Best result seen so far for macro_avg: 0.273
09/16 08:35:29 AM: 	# validation passes without improvement: 0
09/16 08:35:29 AM: edges-rel-semeval_loss: training: 0.134344 validation: 0.130528
09/16 08:35:29 AM: macro_avg: validation: 0.273057
09/16 08:35:29 AM: micro_avg: validation: 0.000000
09/16 08:35:29 AM: edges-rel-semeval_mcc: training: 0.365791 validation: 0.355145
09/16 08:35:29 AM: edges-rel-semeval_acc: training: 0.185625 validation: 0.157528
09/16 08:35:29 AM: edges-rel-semeval_precision: training: 0.753374 validation: 0.824561
09/16 08:35:29 AM: edges-rel-semeval_recall: training: 0.191875 validation: 0.163621
09/16 08:35:29 AM: edges-rel-semeval_f1: training: 0.305853 validation: 0.273057
09/16 08:35:29 AM: Global learning rate: 0.0001
09/16 08:35:29 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:31 AM: ***** Step 700 / Validation 7 *****
09/16 08:35:31 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:31 AM: Validating...
09/16 08:35:32 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:32 AM: Best result seen so far for macro.
09/16 08:35:32 AM: Updating LR scheduler:
09/16 08:35:32 AM: 	Best result seen so far for macro_avg: 0.328
09/16 08:35:32 AM: 	# validation passes without improvement: 0
09/16 08:35:32 AM: edges-rel-semeval_loss: training: 0.125128 validation: 0.126278
09/16 08:35:32 AM: macro_avg: validation: 0.328462
09/16 08:35:32 AM: micro_avg: validation: 0.000000
09/16 08:35:32 AM: edges-rel-semeval_mcc: training: 0.414734 validation: 0.397054
09/16 08:35:32 AM: edges-rel-semeval_acc: training: 0.228950 validation: 0.202785
09/16 08:35:32 AM: edges-rel-semeval_precision: training: 0.771341 validation: 0.819444
09/16 08:35:32 AM: edges-rel-semeval_recall: training: 0.239357 validation: 0.205396
09/16 08:35:32 AM: edges-rel-semeval_f1: training: 0.365343 validation: 0.328462
09/16 08:35:32 AM: Global learning rate: 0.0001
09/16 08:35:32 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:33 AM: ***** Step 800 / Validation 8 *****
09/16 08:35:33 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:33 AM: Validating...
09/16 08:35:34 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:34 AM: Best result seen so far for macro.
09/16 08:35:34 AM: Updating LR scheduler:
09/16 08:35:34 AM: 	Best result seen so far for macro_avg: 0.380
09/16 08:35:34 AM: 	# validation passes without improvement: 0
09/16 08:35:34 AM: edges-rel-semeval_loss: training: 0.121053 validation: 0.122054
09/16 08:35:34 AM: macro_avg: validation: 0.380442
09/16 08:35:34 AM: micro_avg: validation: 0.000000
09/16 08:35:34 AM: edges-rel-semeval_mcc: training: 0.457348 validation: 0.437986
09/16 08:35:34 AM: edges-rel-semeval_acc: training: 0.270937 validation: 0.244560
09/16 08:35:34 AM: edges-rel-semeval_precision: training: 0.781383 validation: 0.825581
09/16 08:35:34 AM: edges-rel-semeval_recall: training: 0.285937 validation: 0.247171
09/16 08:35:34 AM: edges-rel-semeval_f1: training: 0.418668 validation: 0.380442
09/16 08:35:34 AM: Global learning rate: 0.0001
09/16 08:35:34 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:35 AM: Update 861: task edges-rel-semeval, batch 61 (861): mcc: 0.4551, acc: 0.2772, precision: 0.7644, recall: 0.2902, f1: 0.4207, edges-rel-semeval_loss: 0.1169
09/16 08:35:36 AM: ***** Step 900 / Validation 9 *****
09/16 08:35:36 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:36 AM: Validating...
09/16 08:35:36 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:36 AM: Best result seen so far for macro.
09/16 08:35:36 AM: Updating LR scheduler:
09/16 08:35:36 AM: 	Best result seen so far for macro_avg: 0.389
09/16 08:35:36 AM: 	# validation passes without improvement: 0
09/16 08:35:36 AM: edges-rel-semeval_loss: training: 0.115134 validation: 0.120322
09/16 08:35:36 AM: macro_avg: validation: 0.388669
09/16 08:35:36 AM: micro_avg: validation: 0.000000
09/16 08:35:36 AM: edges-rel-semeval_mcc: training: 0.465794 validation: 0.438546
09/16 08:35:36 AM: edges-rel-semeval_acc: training: 0.286976 validation: 0.253264
09/16 08:35:36 AM: edges-rel-semeval_precision: training: 0.767200 validation: 0.799458
09/16 08:35:36 AM: edges-rel-semeval_recall: training: 0.302428 validation: 0.256745
09/16 08:35:36 AM: edges-rel-semeval_f1: training: 0.433838 validation: 0.388669
09/16 08:35:36 AM: Global learning rate: 0.0001
09/16 08:35:36 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:38 AM: ***** Step 1000 / Validation 10 *****
09/16 08:35:38 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:38 AM: Validating...
09/16 08:35:38 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:38 AM: Best result seen so far for macro.
09/16 08:35:38 AM: Updating LR scheduler:
09/16 08:35:38 AM: 	Best result seen so far for macro_avg: 0.408
09/16 08:35:38 AM: 	# validation passes without improvement: 0
09/16 08:35:38 AM: edges-rel-semeval_loss: training: 0.109010 validation: 0.118680
09/16 08:35:38 AM: macro_avg: validation: 0.407767
09/16 08:35:38 AM: micro_avg: validation: 0.000000
09/16 08:35:38 AM: edges-rel-semeval_mcc: training: 0.520300 validation: 0.452156
09/16 08:35:38 AM: edges-rel-semeval_acc: training: 0.335625 validation: 0.268059
09/16 08:35:38 AM: edges-rel-semeval_precision: training: 0.803659 validation: 0.795455
09/16 08:35:38 AM: edges-rel-semeval_recall: training: 0.356875 validation: 0.274151
09/16 08:35:38 AM: edges-rel-semeval_f1: training: 0.494265 validation: 0.407767
09/16 08:35:38 AM: Global learning rate: 0.0001
09/16 08:35:38 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:41 AM: ***** Step 1100 / Validation 11 *****
09/16 08:35:41 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:41 AM: Validating...
09/16 08:35:41 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:41 AM: Best result seen so far for macro.
09/16 08:35:41 AM: Updating LR scheduler:
09/16 08:35:41 AM: 	Best result seen so far for macro_avg: 0.454
09/16 08:35:41 AM: 	# validation passes without improvement: 0
09/16 08:35:41 AM: edges-rel-semeval_loss: training: 0.107113 validation: 0.116623
09/16 08:35:41 AM: macro_avg: validation: 0.453875
09/16 08:35:41 AM: micro_avg: validation: 0.000000
09/16 08:35:41 AM: edges-rel-semeval_mcc: training: 0.522516 validation: 0.482552
09/16 08:35:41 AM: edges-rel-semeval_acc: training: 0.352255 validation: 0.310705
09/16 08:35:41 AM: edges-rel-semeval_precision: training: 0.776903 validation: 0.773585
09/16 08:35:41 AM: edges-rel-semeval_recall: training: 0.373384 validation: 0.321149
09/16 08:35:41 AM: edges-rel-semeval_f1: training: 0.504366 validation: 0.453875
09/16 08:35:41 AM: Global learning rate: 0.0001
09/16 08:35:41 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:43 AM: ***** Step 1200 / Validation 12 *****
09/16 08:35:43 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:43 AM: Validating...
09/16 08:35:43 AM: Updating LR scheduler:
09/16 08:35:43 AM: 	Best result seen so far for macro_avg: 0.454
09/16 08:35:43 AM: 	# validation passes without improvement: 1
09/16 08:35:43 AM: edges-rel-semeval_loss: training: 0.102395 validation: 0.116096
09/16 08:35:43 AM: macro_avg: validation: 0.442758
09/16 08:35:43 AM: micro_avg: validation: 0.000000
09/16 08:35:43 AM: edges-rel-semeval_mcc: training: 0.556619 validation: 0.482032
09/16 08:35:43 AM: edges-rel-semeval_acc: training: 0.381250 validation: 0.297650
09/16 08:35:43 AM: edges-rel-semeval_precision: training: 0.798903 validation: 0.810185
09/16 08:35:43 AM: edges-rel-semeval_recall: training: 0.409687 validation: 0.304613
09/16 08:35:43 AM: edges-rel-semeval_f1: training: 0.541624 validation: 0.442758
09/16 08:35:43 AM: Global learning rate: 0.0001
09/16 08:35:43 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:45 AM: Update 1300: task edges-rel-semeval, batch 100 (1300): mcc: 0.5564, acc: 0.3854, precision: 0.7890, recall: 0.4150, f1: 0.5439, edges-rel-semeval_loss: 0.0997
09/16 08:35:45 AM: ***** Step 1300 / Validation 13 *****
09/16 08:35:45 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:45 AM: Validating...
09/16 08:35:46 AM: Updating LR scheduler:
09/16 08:35:46 AM: 	Best result seen so far for macro_avg: 0.454
09/16 08:35:46 AM: 	# validation passes without improvement: 2
09/16 08:35:46 AM: edges-rel-semeval_loss: training: 0.099720 validation: 0.114987
09/16 08:35:46 AM: macro_avg: validation: 0.443604
09/16 08:35:46 AM: micro_avg: validation: 0.000000
09/16 08:35:46 AM: edges-rel-semeval_mcc: training: 0.556434 validation: 0.481250
09/16 08:35:46 AM: edges-rel-semeval_acc: training: 0.385367 validation: 0.295909
09/16 08:35:46 AM: edges-rel-semeval_precision: training: 0.788969 validation: 0.803653
09/16 08:35:46 AM: edges-rel-semeval_recall: training: 0.415011 validation: 0.306353
09/16 08:35:46 AM: edges-rel-semeval_f1: training: 0.543914 validation: 0.443604
09/16 08:35:46 AM: Global learning rate: 0.0001
09/16 08:35:46 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:48 AM: ***** Step 1400 / Validation 14 *****
09/16 08:35:48 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:48 AM: Validating...
09/16 08:35:48 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:48 AM: Best result seen so far for macro.
09/16 08:35:48 AM: Updating LR scheduler:
09/16 08:35:48 AM: 	Best result seen so far for macro_avg: 0.466
09/16 08:35:48 AM: 	# validation passes without improvement: 0
09/16 08:35:48 AM: edges-rel-semeval_loss: training: 0.095374 validation: 0.114136
09/16 08:35:48 AM: macro_avg: validation: 0.466384
09/16 08:35:48 AM: micro_avg: validation: 0.000000
09/16 08:35:48 AM: edges-rel-semeval_mcc: training: 0.587255 validation: 0.490755
09/16 08:35:48 AM: edges-rel-semeval_acc: training: 0.415938 validation: 0.326371
09/16 08:35:48 AM: edges-rel-semeval_precision: training: 0.807067 validation: 0.766932
09/16 08:35:48 AM: edges-rel-semeval_recall: training: 0.449688 validation: 0.335074
09/16 08:35:48 AM: edges-rel-semeval_f1: training: 0.577564 validation: 0.466384
09/16 08:35:48 AM: Global learning rate: 0.0001
09/16 08:35:48 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:49 AM: ***** Step 1500 / Validation 15 *****
09/16 08:35:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:49 AM: Validating...
09/16 08:35:50 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:50 AM: Best result seen so far for macro.
09/16 08:35:50 AM: Updating LR scheduler:
09/16 08:35:50 AM: 	Best result seen so far for macro_avg: 0.467
09/16 08:35:50 AM: 	# validation passes without improvement: 0
09/16 08:35:50 AM: edges-rel-semeval_loss: training: 0.097320 validation: 0.113281
09/16 08:35:50 AM: macro_avg: validation: 0.466626
09/16 08:35:50 AM: micro_avg: validation: 0.000000
09/16 08:35:50 AM: edges-rel-semeval_mcc: training: 0.577932 validation: 0.495334
09/16 08:35:50 AM: edges-rel-semeval_acc: training: 0.414687 validation: 0.322019
09/16 08:35:50 AM: edges-rel-semeval_precision: training: 0.792316 validation: 0.787190
09/16 08:35:50 AM: edges-rel-semeval_recall: training: 0.444687 validation: 0.331593
09/16 08:35:50 AM: edges-rel-semeval_f1: training: 0.569656 validation: 0.466626
09/16 08:35:50 AM: Global learning rate: 0.0001
09/16 08:35:50 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:52 AM: ***** Step 1600 / Validation 16 *****
09/16 08:35:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:52 AM: Validating...
09/16 08:35:52 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:52 AM: Best result seen so far for macro.
09/16 08:35:52 AM: Updating LR scheduler:
09/16 08:35:52 AM: 	Best result seen so far for macro_avg: 0.488
09/16 08:35:52 AM: 	# validation passes without improvement: 0
09/16 08:35:52 AM: edges-rel-semeval_loss: training: 0.089235 validation: 0.113210
09/16 08:35:52 AM: macro_avg: validation: 0.487920
09/16 08:35:52 AM: micro_avg: validation: 0.000000
09/16 08:35:52 AM: edges-rel-semeval_mcc: training: 0.610542 validation: 0.505068
09/16 08:35:52 AM: edges-rel-semeval_acc: training: 0.441186 validation: 0.348999
09/16 08:35:52 AM: edges-rel-semeval_precision: training: 0.818821 validation: 0.755474
09/16 08:35:52 AM: edges-rel-semeval_recall: training: 0.477452 validation: 0.360313
09/16 08:35:52 AM: edges-rel-semeval_f1: training: 0.603187 validation: 0.487920
09/16 08:35:52 AM: Global learning rate: 0.0001
09/16 08:35:52 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:54 AM: ***** Step 1700 / Validation 17 *****
09/16 08:35:54 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:54 AM: Validating...
09/16 08:35:54 AM: Updating LR scheduler:
09/16 08:35:54 AM: 	Best result seen so far for macro_avg: 0.488
09/16 08:35:54 AM: 	# validation passes without improvement: 1
09/16 08:35:54 AM: edges-rel-semeval_loss: training: 0.091775 validation: 0.114138
09/16 08:35:54 AM: macro_avg: validation: 0.470517
09/16 08:35:54 AM: micro_avg: validation: 0.000000
09/16 08:35:54 AM: edges-rel-semeval_mcc: training: 0.611199 validation: 0.496833
09/16 08:35:54 AM: edges-rel-semeval_acc: training: 0.459062 validation: 0.328111
09/16 08:35:54 AM: edges-rel-semeval_precision: training: 0.803186 validation: 0.780242
09/16 08:35:54 AM: edges-rel-semeval_recall: training: 0.488438 validation: 0.336815
09/16 08:35:54 AM: edges-rel-semeval_f1: training: 0.607462 validation: 0.470517
09/16 08:35:54 AM: Global learning rate: 0.0001
09/16 08:35:54 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:56 AM: Update 1724: task edges-rel-semeval, batch 24 (1724): mcc: 0.6214, acc: 0.4614, precision: 0.8170, recall: 0.4953, f1: 0.6167, edges-rel-semeval_loss: 0.0873
09/16 08:35:57 AM: ***** Step 1800 / Validation 18 *****
09/16 08:35:57 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:57 AM: Validating...
09/16 08:35:57 AM: Updating LR scheduler:
09/16 08:35:57 AM: 	Best result seen so far for macro_avg: 0.488
09/16 08:35:57 AM: 	# validation passes without improvement: 2
09/16 08:35:57 AM: edges-rel-semeval_loss: training: 0.086192 validation: 0.113537
09/16 08:35:57 AM: macro_avg: validation: 0.487776
09/16 08:35:57 AM: micro_avg: validation: 0.000000
09/16 08:35:57 AM: edges-rel-semeval_mcc: training: 0.639927 validation: 0.500919
09/16 08:35:57 AM: edges-rel-semeval_acc: training: 0.484074 validation: 0.351610
09/16 08:35:57 AM: edges-rel-semeval_precision: training: 0.823588 validation: 0.736380
09/16 08:35:57 AM: edges-rel-semeval_recall: training: 0.519710 validation: 0.364665
09/16 08:35:57 AM: edges-rel-semeval_f1: training: 0.637278 validation: 0.487776
09/16 08:35:57 AM: Global learning rate: 0.0001
09/16 08:35:57 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:35:59 AM: ***** Step 1900 / Validation 19 *****
09/16 08:35:59 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:59 AM: Validating...
09/16 08:35:59 AM: Updating LR scheduler:
09/16 08:35:59 AM: 	Best result seen so far for macro_avg: 0.488
09/16 08:35:59 AM: 	# validation passes without improvement: 3
09/16 08:35:59 AM: edges-rel-semeval_loss: training: 0.087796 validation: 0.113480
09/16 08:35:59 AM: macro_avg: validation: 0.484236
09/16 08:35:59 AM: micro_avg: validation: 0.000000
09/16 08:35:59 AM: edges-rel-semeval_mcc: training: 0.623362 validation: 0.504221
09/16 08:35:59 AM: edges-rel-semeval_acc: training: 0.466875 validation: 0.342907
09/16 08:35:59 AM: edges-rel-semeval_precision: training: 0.798924 validation: 0.765038
09/16 08:35:59 AM: edges-rel-semeval_recall: training: 0.510312 validation: 0.354221
09/16 08:35:59 AM: edges-rel-semeval_f1: training: 0.622807 validation: 0.484236
09/16 08:35:59 AM: Global learning rate: 0.0001
09/16 08:35:59 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:02 AM: ***** Step 2000 / Validation 20 *****
09/16 08:36:02 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:02 AM: Validating...
09/16 08:36:03 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:03 AM: Best result seen so far for macro.
09/16 08:36:03 AM: Updating LR scheduler:
09/16 08:36:03 AM: 	Best result seen so far for macro_avg: 0.494
09/16 08:36:03 AM: 	# validation passes without improvement: 0
09/16 08:36:03 AM: edges-rel-semeval_loss: training: 0.082102 validation: 0.114081
09/16 08:36:03 AM: macro_avg: validation: 0.493899
09/16 08:36:03 AM: micro_avg: validation: 0.000000
09/16 08:36:03 AM: edges-rel-semeval_mcc: training: 0.662492 validation: 0.507142
09/16 08:36:03 AM: edges-rel-semeval_acc: training: 0.508988 validation: 0.355091
09/16 08:36:03 AM: edges-rel-semeval_precision: training: 0.841642 validation: 0.743007
09/16 08:36:03 AM: edges-rel-semeval_recall: training: 0.543046 validation: 0.369887
09/16 08:36:03 AM: edges-rel-semeval_f1: training: 0.660150 validation: 0.493899
09/16 08:36:03 AM: Global learning rate: 0.0001
09/16 08:36:03 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:04 AM: ***** Step 2100 / Validation 21 *****
09/16 08:36:04 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:04 AM: Validating...
09/16 08:36:05 AM: Updating LR scheduler:
09/16 08:36:05 AM: 	Best result seen so far for macro_avg: 0.494
09/16 08:36:05 AM: 	# validation passes without improvement: 1
09/16 08:36:05 AM: edges-rel-semeval_loss: training: 0.082889 validation: 0.114311
09/16 08:36:05 AM: macro_avg: validation: 0.490476
09/16 08:36:05 AM: micro_avg: validation: 0.000000
09/16 08:36:05 AM: edges-rel-semeval_mcc: training: 0.649561 validation: 0.511412
09/16 08:36:05 AM: edges-rel-semeval_acc: training: 0.501563 validation: 0.350740
09/16 08:36:05 AM: edges-rel-semeval_precision: training: 0.809281 validation: 0.775895
09/16 08:36:05 AM: edges-rel-semeval_recall: training: 0.545000 validation: 0.358573
09/16 08:36:05 AM: edges-rel-semeval_f1: training: 0.651354 validation: 0.490476
09/16 08:36:05 AM: Global learning rate: 0.0001
09/16 08:36:05 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:06 AM: Update 2140: task edges-rel-semeval, batch 40 (2140): mcc: 0.6183, acc: 0.4695, precision: 0.7786, recall: 0.5164, f1: 0.6209, edges-rel-semeval_loss: 0.0856
09/16 08:36:07 AM: ***** Step 2200 / Validation 22 *****
09/16 08:36:07 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:07 AM: Validating...
09/16 08:36:07 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:07 AM: Best result seen so far for macro.
09/16 08:36:07 AM: Updating LR scheduler:
09/16 08:36:07 AM: 	Best result seen so far for macro_avg: 0.497
09/16 08:36:07 AM: 	# validation passes without improvement: 0
09/16 08:36:07 AM: edges-rel-semeval_loss: training: 0.080362 validation: 0.114444
09/16 08:36:07 AM: macro_avg: validation: 0.496793
09/16 08:36:07 AM: micro_avg: validation: 0.000000
09/16 08:36:07 AM: edges-rel-semeval_mcc: training: 0.653901 validation: 0.511449
09/16 08:36:07 AM: edges-rel-semeval_acc: training: 0.506465 validation: 0.359443
09/16 08:36:07 AM: edges-rel-semeval_precision: training: 0.810385 validation: 0.752650
09/16 08:36:07 AM: edges-rel-semeval_recall: training: 0.551246 validation: 0.370757
09/16 08:36:07 AM: edges-rel-semeval_f1: training: 0.656156 validation: 0.496793
09/16 08:36:07 AM: Global learning rate: 0.0001
09/16 08:36:07 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:09 AM: ***** Step 2300 / Validation 23 *****
09/16 08:36:09 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:09 AM: Validating...
09/16 08:36:09 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:09 AM: Best result seen so far for macro.
09/16 08:36:09 AM: Updating LR scheduler:
09/16 08:36:09 AM: 	Best result seen so far for macro_avg: 0.497
09/16 08:36:09 AM: 	# validation passes without improvement: 0
09/16 08:36:09 AM: edges-rel-semeval_loss: training: 0.079860 validation: 0.115659
09/16 08:36:09 AM: macro_avg: validation: 0.497385
09/16 08:36:09 AM: micro_avg: validation: 0.000000
09/16 08:36:09 AM: edges-rel-semeval_mcc: training: 0.660165 validation: 0.510994
09/16 08:36:09 AM: edges-rel-semeval_acc: training: 0.509062 validation: 0.358573
09/16 08:36:09 AM: edges-rel-semeval_precision: training: 0.820157 validation: 0.748252
09/16 08:36:09 AM: edges-rel-semeval_recall: training: 0.554375 validation: 0.372498
09/16 08:36:09 AM: edges-rel-semeval_f1: training: 0.661570 validation: 0.497385
09/16 08:36:09 AM: Global learning rate: 0.0001
09/16 08:36:09 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:12 AM: ***** Step 2400 / Validation 24 *****
09/16 08:36:12 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:12 AM: Validating...
09/16 08:36:12 AM: Updating LR scheduler:
09/16 08:36:12 AM: 	Best result seen so far for macro_avg: 0.497
09/16 08:36:12 AM: 	# validation passes without improvement: 1
09/16 08:36:12 AM: edges-rel-semeval_loss: training: 0.076362 validation: 0.114884
09/16 08:36:12 AM: macro_avg: validation: 0.493842
09/16 08:36:12 AM: micro_avg: validation: 0.000000
09/16 08:36:12 AM: edges-rel-semeval_mcc: training: 0.676968 validation: 0.510082
09/16 08:36:12 AM: edges-rel-semeval_acc: training: 0.529171 validation: 0.355091
09/16 08:36:12 AM: edges-rel-semeval_precision: training: 0.825304 validation: 0.757194
09/16 08:36:12 AM: edges-rel-semeval_recall: training: 0.578051 validation: 0.366406
09/16 08:36:12 AM: edges-rel-semeval_f1: training: 0.679896 validation: 0.493842
09/16 08:36:12 AM: Global learning rate: 0.0001
09/16 08:36:12 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:14 AM: ***** Step 2500 / Validation 25 *****
09/16 08:36:14 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:14 AM: Validating...
09/16 08:36:14 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:14 AM: Best result seen so far for macro.
09/16 08:36:14 AM: Updating LR scheduler:
09/16 08:36:14 AM: 	Best result seen so far for macro_avg: 0.498
09/16 08:36:14 AM: 	# validation passes without improvement: 0
09/16 08:36:14 AM: edges-rel-semeval_loss: training: 0.076501 validation: 0.114363
09/16 08:36:14 AM: macro_avg: validation: 0.497969
09/16 08:36:14 AM: micro_avg: validation: 0.000000
09/16 08:36:14 AM: edges-rel-semeval_mcc: training: 0.681037 validation: 0.511274
09/16 08:36:14 AM: edges-rel-semeval_acc: training: 0.539375 validation: 0.361184
09/16 08:36:14 AM: edges-rel-semeval_precision: training: 0.827494 validation: 0.747387
09/16 08:36:14 AM: edges-rel-semeval_recall: training: 0.583125 validation: 0.373368
09/16 08:36:14 AM: edges-rel-semeval_f1: training: 0.684143 validation: 0.497969
09/16 08:36:14 AM: Global learning rate: 0.0001
09/16 08:36:14 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:16 AM: Update 2581: task edges-rel-semeval, batch 81 (2581): mcc: 0.6630, acc: 0.5139, precision: 0.8061, recall: 0.5693, f1: 0.6673, edges-rel-semeval_loss: 0.0791
09/16 08:36:16 AM: ***** Step 2600 / Validation 26 *****
09/16 08:36:16 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:16 AM: Validating...
09/16 08:36:17 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:17 AM: Best result seen so far for macro.
09/16 08:36:17 AM: Updating LR scheduler:
09/16 08:36:17 AM: 	Best result seen so far for macro_avg: 0.499
09/16 08:36:17 AM: 	# validation passes without improvement: 0
09/16 08:36:17 AM: edges-rel-semeval_loss: training: 0.077682 validation: 0.116434
09/16 08:36:17 AM: macro_avg: validation: 0.499131
09/16 08:36:17 AM: micro_avg: validation: 0.000000
09/16 08:36:17 AM: edges-rel-semeval_mcc: training: 0.670950 validation: 0.511837
09/16 08:36:17 AM: edges-rel-semeval_acc: training: 0.524125 validation: 0.356832
09/16 08:36:17 AM: edges-rel-semeval_precision: training: 0.812417 validation: 0.745675
09/16 08:36:17 AM: edges-rel-semeval_recall: training: 0.577736 validation: 0.375109
09/16 08:36:17 AM: edges-rel-semeval_f1: training: 0.675267 validation: 0.499131
09/16 08:36:17 AM: Global learning rate: 0.0001
09/16 08:36:17 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:18 AM: ***** Step 2700 / Validation 27 *****
09/16 08:36:18 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:18 AM: Validating...
09/16 08:36:19 AM: Updating LR scheduler:
09/16 08:36:19 AM: 	Best result seen so far for macro_avg: 0.499
09/16 08:36:19 AM: 	# validation passes without improvement: 1
09/16 08:36:19 AM: edges-rel-semeval_loss: training: 0.073666 validation: 0.116248
09/16 08:36:19 AM: macro_avg: validation: 0.491842
09/16 08:36:19 AM: micro_avg: validation: 0.000000
09/16 08:36:19 AM: edges-rel-semeval_mcc: training: 0.694535 validation: 0.505783
09/16 08:36:19 AM: edges-rel-semeval_acc: training: 0.550000 validation: 0.356832
09/16 08:36:19 AM: edges-rel-semeval_precision: training: 0.836023 validation: 0.744268
09/16 08:36:19 AM: edges-rel-semeval_recall: training: 0.599063 validation: 0.367276
09/16 08:36:19 AM: edges-rel-semeval_f1: training: 0.697979 validation: 0.491842
09/16 08:36:19 AM: Global learning rate: 0.0001
09/16 08:36:19 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:21 AM: ***** Step 2800 / Validation 28 *****
09/16 08:36:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:21 AM: Validating...
09/16 08:36:21 AM: Updating LR scheduler:
09/16 08:36:21 AM: 	Best result seen so far for macro_avg: 0.499
09/16 08:36:21 AM: 	# validation passes without improvement: 2
09/16 08:36:21 AM: edges-rel-semeval_loss: training: 0.076580 validation: 0.117818
09/16 08:36:21 AM: macro_avg: validation: 0.480370
09/16 08:36:21 AM: micro_avg: validation: 0.000000
09/16 08:36:21 AM: edges-rel-semeval_mcc: training: 0.668830 validation: 0.490276
09/16 08:36:21 AM: edges-rel-semeval_acc: training: 0.526648 validation: 0.348129
09/16 08:36:21 AM: edges-rel-semeval_precision: training: 0.811943 validation: 0.713551
09/16 08:36:21 AM: edges-rel-semeval_recall: training: 0.574582 validation: 0.362054
09/16 08:36:21 AM: edges-rel-semeval_f1: training: 0.672945 validation: 0.480370
09/16 08:36:21 AM: Global learning rate: 0.0001
09/16 08:36:21 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:23 AM: ***** Step 2900 / Validation 29 *****
09/16 08:36:23 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:23 AM: Validating...
09/16 08:36:23 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:23 AM: Best result seen so far for macro.
09/16 08:36:23 AM: Updating LR scheduler:
09/16 08:36:23 AM: 	Best result seen so far for macro_avg: 0.501
09/16 08:36:23 AM: 	# validation passes without improvement: 0
09/16 08:36:23 AM: edges-rel-semeval_loss: training: 0.070520 validation: 0.118262
09/16 08:36:23 AM: macro_avg: validation: 0.501149
09/16 08:36:23 AM: micro_avg: validation: 0.000000
09/16 08:36:23 AM: edges-rel-semeval_mcc: training: 0.707185 validation: 0.511786
09/16 08:36:23 AM: edges-rel-semeval_acc: training: 0.571250 validation: 0.362054
09/16 08:36:23 AM: edges-rel-semeval_precision: training: 0.837918 validation: 0.737733
09/16 08:36:23 AM: edges-rel-semeval_recall: training: 0.618750 validation: 0.379460
09/16 08:36:23 AM: edges-rel-semeval_f1: training: 0.711846 validation: 0.501149
09/16 08:36:23 AM: Global learning rate: 0.0001
09/16 08:36:23 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:25 AM: ***** Step 3000 / Validation 30 *****
09/16 08:36:25 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:25 AM: Validating...
09/16 08:36:25 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:25 AM: Best result seen so far for macro.
09/16 08:36:25 AM: Updating LR scheduler:
09/16 08:36:25 AM: 	Best result seen so far for macro_avg: 0.525
09/16 08:36:25 AM: 	# validation passes without improvement: 0
09/16 08:36:25 AM: edges-rel-semeval_loss: training: 0.073315 validation: 0.115801
09/16 08:36:25 AM: macro_avg: validation: 0.524626
09/16 08:36:25 AM: micro_avg: validation: 0.000000
09/16 08:36:25 AM: edges-rel-semeval_mcc: training: 0.703319 validation: 0.527160
09/16 08:36:25 AM: edges-rel-semeval_acc: training: 0.560625 validation: 0.384682
09/16 08:36:25 AM: edges-rel-semeval_precision: training: 0.833969 validation: 0.720365
09/16 08:36:25 AM: edges-rel-semeval_recall: training: 0.615313 validation: 0.412533
09/16 08:36:25 AM: edges-rel-semeval_f1: training: 0.708146 validation: 0.524626
09/16 08:36:25 AM: Global learning rate: 0.0001
09/16 08:36:25 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:26 AM: Update 3011: task edges-rel-semeval, batch 11 (3011): mcc: 0.6699, acc: 0.5263, precision: 0.7925, recall: 0.5913, f1: 0.6773, edges-rel-semeval_loss: 0.0750
09/16 08:36:28 AM: ***** Step 3100 / Validation 31 *****
09/16 08:36:28 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:28 AM: Validating...
09/16 08:36:28 AM: Updating LR scheduler:
09/16 08:36:28 AM: 	Best result seen so far for macro_avg: 0.525
09/16 08:36:28 AM: 	# validation passes without improvement: 1
09/16 08:36:28 AM: edges-rel-semeval_loss: training: 0.068448 validation: 0.118554
09/16 08:36:28 AM: macro_avg: validation: 0.510376
09/16 08:36:28 AM: micro_avg: validation: 0.000000
09/16 08:36:28 AM: edges-rel-semeval_mcc: training: 0.719645 validation: 0.515073
09/16 08:36:28 AM: edges-rel-semeval_acc: training: 0.581205 validation: 0.372498
09/16 08:36:28 AM: edges-rel-semeval_precision: training: 0.844668 validation: 0.717666
09/16 08:36:28 AM: edges-rel-semeval_recall: training: 0.634500 validation: 0.395997
09/16 08:36:28 AM: edges-rel-semeval_f1: training: 0.724653 validation: 0.510376
09/16 08:36:28 AM: Global learning rate: 0.0001
09/16 08:36:28 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:30 AM: ***** Step 3200 / Validation 32 *****
09/16 08:36:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:30 AM: Validating...
09/16 08:36:30 AM: Updating LR scheduler:
09/16 08:36:30 AM: 	Best result seen so far for macro_avg: 0.525
09/16 08:36:30 AM: 	# validation passes without improvement: 2
09/16 08:36:30 AM: edges-rel-semeval_loss: training: 0.070207 validation: 0.117423
09/16 08:36:30 AM: macro_avg: validation: 0.518187
09/16 08:36:30 AM: micro_avg: validation: 0.000000
09/16 08:36:30 AM: edges-rel-semeval_mcc: training: 0.705209 validation: 0.522991
09/16 08:36:30 AM: edges-rel-semeval_acc: training: 0.568125 validation: 0.379460
09/16 08:36:30 AM: edges-rel-semeval_precision: training: 0.828073 validation: 0.725705
09/16 08:36:30 AM: edges-rel-semeval_recall: training: 0.623125 validation: 0.402959
09/16 08:36:30 AM: edges-rel-semeval_f1: training: 0.711127 validation: 0.518187
09/16 08:36:30 AM: Global learning rate: 0.0001
09/16 08:36:30 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:32 AM: ***** Step 3300 / Validation 33 *****
09/16 08:36:32 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:32 AM: Validating...
09/16 08:36:33 AM: Updating LR scheduler:
09/16 08:36:33 AM: 	Best result seen so far for macro_avg: 0.525
09/16 08:36:33 AM: 	# validation passes without improvement: 3
09/16 08:36:33 AM: edges-rel-semeval_loss: training: 0.067261 validation: 0.119096
09/16 08:36:33 AM: macro_avg: validation: 0.517699
09/16 08:36:33 AM: micro_avg: validation: 0.000000
09/16 08:36:33 AM: edges-rel-semeval_mcc: training: 0.726622 validation: 0.519515
09/16 08:36:33 AM: edges-rel-semeval_acc: training: 0.595080 validation: 0.378590
09/16 08:36:33 AM: edges-rel-semeval_precision: training: 0.842558 validation: 0.710167
09/16 08:36:33 AM: edges-rel-semeval_recall: training: 0.648061 validation: 0.407311
09/16 08:36:33 AM: edges-rel-semeval_f1: training: 0.732620 validation: 0.517699
09/16 08:36:33 AM: Global learning rate: 0.0001
09/16 08:36:33 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:34 AM: ***** Step 3400 / Validation 34 *****
09/16 08:36:34 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:34 AM: Validating...
09/16 08:36:35 AM: Updating LR scheduler:
09/16 08:36:35 AM: 	Best result seen so far for macro_avg: 0.525
09/16 08:36:35 AM: 	# validation passes without improvement: 0
09/16 08:36:35 AM: edges-rel-semeval_loss: training: 0.067333 validation: 0.119891
09/16 08:36:35 AM: macro_avg: validation: 0.503670
09/16 08:36:35 AM: micro_avg: validation: 0.000000
09/16 08:36:35 AM: edges-rel-semeval_mcc: training: 0.720456 validation: 0.509552
09/16 08:36:35 AM: edges-rel-semeval_acc: training: 0.589688 validation: 0.368146
09/16 08:36:35 AM: edges-rel-semeval_precision: training: 0.841433 validation: 0.717042
09/16 08:36:35 AM: edges-rel-semeval_recall: training: 0.638438 validation: 0.388164
09/16 08:36:35 AM: edges-rel-semeval_f1: training: 0.726013 validation: 0.503670
09/16 08:36:35 AM: Global learning rate: 5e-05
09/16 08:36:35 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:36 AM: Update 3447: task edges-rel-semeval, batch 47 (3447): mcc: 0.7132, acc: 0.5797, precision: 0.8232, recall: 0.6407, f1: 0.7205, edges-rel-semeval_loss: 0.0693
09/16 08:36:37 AM: ***** Step 3500 / Validation 35 *****
09/16 08:36:37 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:37 AM: Validating...
09/16 08:36:38 AM: Updating LR scheduler:
09/16 08:36:38 AM: 	Best result seen so far for macro_avg: 0.525
09/16 08:36:38 AM: 	# validation passes without improvement: 1
09/16 08:36:38 AM: edges-rel-semeval_loss: training: 0.066050 validation: 0.118242
09/16 08:36:38 AM: macro_avg: validation: 0.519423
09/16 08:36:38 AM: micro_avg: validation: 0.000000
09/16 08:36:38 AM: edges-rel-semeval_mcc: training: 0.733302 validation: 0.522203
09/16 08:36:38 AM: edges-rel-semeval_acc: training: 0.603595 validation: 0.385553
09/16 08:36:38 AM: edges-rel-semeval_precision: training: 0.844256 validation: 0.716692
09/16 08:36:38 AM: edges-rel-semeval_recall: training: 0.658152 validation: 0.407311
09/16 08:36:38 AM: edges-rel-semeval_f1: training: 0.739677 validation: 0.519423
09/16 08:36:38 AM: Global learning rate: 5e-05
09/16 08:36:38 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:40 AM: ***** Step 3600 / Validation 36 *****
09/16 08:36:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:40 AM: Validating...
09/16 08:36:41 AM: Updating LR scheduler:
09/16 08:36:41 AM: 	Best result seen so far for macro_avg: 0.525
09/16 08:36:41 AM: 	# validation passes without improvement: 2
09/16 08:36:41 AM: edges-rel-semeval_loss: training: 0.064096 validation: 0.119854
09/16 08:36:41 AM: macro_avg: validation: 0.505096
09/16 08:36:41 AM: micro_avg: validation: 0.000000
09/16 08:36:41 AM: edges-rel-semeval_mcc: training: 0.735214 validation: 0.511878
09/16 08:36:41 AM: edges-rel-semeval_acc: training: 0.603125 validation: 0.369017
09/16 08:36:41 AM: edges-rel-semeval_precision: training: 0.850263 validation: 0.722853
09/16 08:36:41 AM: edges-rel-semeval_recall: training: 0.656563 validation: 0.388164
09/16 08:36:41 AM: edges-rel-semeval_f1: training: 0.740963 validation: 0.505096
09/16 08:36:41 AM: Global learning rate: 5e-05
09/16 08:36:41 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:44 AM: ***** Step 3700 / Validation 37 *****
09/16 08:36:44 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:44 AM: Validating...
09/16 08:36:44 AM: Updating LR scheduler:
09/16 08:36:44 AM: 	Best result seen so far for macro_avg: 0.525
09/16 08:36:44 AM: 	# validation passes without improvement: 3
09/16 08:36:44 AM: edges-rel-semeval_loss: training: 0.063259 validation: 0.119321
09/16 08:36:44 AM: macro_avg: validation: 0.505073
09/16 08:36:44 AM: micro_avg: validation: 0.000000
09/16 08:36:44 AM: edges-rel-semeval_mcc: training: 0.749104 validation: 0.510630
09/16 08:36:44 AM: edges-rel-semeval_acc: training: 0.618102 validation: 0.367276
09/16 08:36:44 AM: edges-rel-semeval_precision: training: 0.859444 validation: 0.716800
09/16 08:36:44 AM: edges-rel-semeval_recall: training: 0.672974 validation: 0.389904
09/16 08:36:44 AM: edges-rel-semeval_f1: training: 0.754864 validation: 0.505073
09/16 08:36:44 AM: Global learning rate: 5e-05
09/16 08:36:44 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:46 AM: Update 3797: task edges-rel-semeval, batch 97 (3797): mcc: 0.7458, acc: 0.6198, precision: 0.8490, recall: 0.6759, f1: 0.7526, edges-rel-semeval_loss: 0.0624
09/16 08:36:46 AM: ***** Step 3800 / Validation 38 *****
09/16 08:36:46 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:46 AM: Validating...
09/16 08:36:47 AM: Updating LR scheduler:
09/16 08:36:47 AM: 	Best result seen so far for macro_avg: 0.525
09/16 08:36:47 AM: 	# validation passes without improvement: 0
09/16 08:36:47 AM: edges-rel-semeval_loss: training: 0.062675 validation: 0.119305
09/16 08:36:47 AM: macro_avg: validation: 0.514863
09/16 08:36:47 AM: micro_avg: validation: 0.000000
09/16 08:36:47 AM: edges-rel-semeval_mcc: training: 0.744269 validation: 0.519959
09/16 08:36:47 AM: edges-rel-semeval_acc: training: 0.617812 validation: 0.378590
09/16 08:36:47 AM: edges-rel-semeval_precision: training: 0.846455 validation: 0.723975
09/16 08:36:47 AM: edges-rel-semeval_recall: training: 0.675313 validation: 0.399478
09/16 08:36:47 AM: edges-rel-semeval_f1: training: 0.751260 validation: 0.514863
09/16 08:36:47 AM: Global learning rate: 2.5e-05
09/16 08:36:47 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:49 AM: ***** Step 3900 / Validation 39 *****
09/16 08:36:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:49 AM: Validating...
09/16 08:36:49 AM: Updating LR scheduler:
09/16 08:36:49 AM: 	Best result seen so far for macro_avg: 0.525
09/16 08:36:49 AM: 	# validation passes without improvement: 1
09/16 08:36:49 AM: edges-rel-semeval_loss: training: 0.061627 validation: 0.118765
09/16 08:36:49 AM: macro_avg: validation: 0.521306
09/16 08:36:49 AM: micro_avg: validation: 0.000000
09/16 08:36:49 AM: edges-rel-semeval_mcc: training: 0.750088 validation: 0.523560
09/16 08:36:49 AM: edges-rel-semeval_acc: training: 0.623147 validation: 0.385553
09/16 08:36:49 AM: edges-rel-semeval_precision: training: 0.853465 validation: 0.715805
09/16 08:36:49 AM: edges-rel-semeval_recall: training: 0.679596 validation: 0.409922
09/16 08:36:49 AM: edges-rel-semeval_f1: training: 0.756671 validation: 0.521306
09/16 08:36:49 AM: Global learning rate: 2.5e-05
09/16 08:36:49 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:51 AM: ***** Step 4000 / Validation 40 *****
09/16 08:36:51 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:51 AM: Validating...
09/16 08:36:51 AM: Updating LR scheduler:
09/16 08:36:51 AM: 	Best result seen so far for macro_avg: 0.525
09/16 08:36:51 AM: 	# validation passes without improvement: 2
09/16 08:36:51 AM: Ran out of early stopping patience. Stopping training.
09/16 08:36:51 AM: edges-rel-semeval_loss: training: 0.059666 validation: 0.119941
09/16 08:36:51 AM: macro_avg: validation: 0.513514
09/16 08:36:51 AM: micro_avg: validation: 0.000000
09/16 08:36:51 AM: edges-rel-semeval_mcc: training: 0.760817 validation: 0.519535
09/16 08:36:51 AM: edges-rel-semeval_acc: training: 0.634375 validation: 0.375979
09/16 08:36:51 AM: edges-rel-semeval_precision: training: 0.866772 validation: 0.727273
09/16 08:36:51 AM: edges-rel-semeval_recall: training: 0.687187 validation: 0.396867
09/16 08:36:51 AM: edges-rel-semeval_f1: training: 0.766603 validation: 0.513514
09/16 08:36:51 AM: Global learning rate: 2.5e-05
09/16 08:36:51 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-only/run
09/16 08:36:51 AM: Stopped training after 40 validation checks
09/16 08:36:51 AM: Trained edges-rel-semeval for 4000 batches or 18.605 epochs
09/16 08:36:51 AM: ***** VALIDATION RESULTS *****
09/16 08:36:51 AM: edges-rel-semeval_f1 (for best val pass 30): edges-rel-semeval_loss: 0.11580, macro_avg: 0.52463, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.52716, edges-rel-semeval_acc: 0.38468, edges-rel-semeval_precision: 0.72036, edges-rel-semeval_recall: 0.41253, edges-rel-semeval_f1: 0.52463
09/16 08:36:51 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.18745, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 08:36:51 AM: macro_avg (for best val pass 30): edges-rel-semeval_loss: 0.11580, macro_avg: 0.52463, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.52716, edges-rel-semeval_acc: 0.38468, edges-rel-semeval_precision: 0.72036, edges-rel-semeval_recall: 0.41253, edges-rel-semeval_f1: 0.52463
09/16 08:36:51 AM: Evaluating...
09/16 08:36:51 AM: Loaded model state from ./experiments/rel-semeval-coref-only/run/edges-rel-semeval/model_state_target_train_val_30.best.th
09/16 08:36:51 AM: Evaluating on: edges-rel-semeval, split: val
09/16 08:36:52 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:36:52 AM: Finished evaluating on: edges-rel-semeval
09/16 08:36:52 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 08:36:52 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-coref-only/run
09/16 08:36:52 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-coref-only/run
09/16 08:36:52 AM: Evaluating on: edges-rel-semeval, split: test
09/16 08:36:53 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:36:53 AM: Finished evaluating on: edges-rel-semeval
09/16 08:36:53 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 08:36:53 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-coref-only/run
09/16 08:36:53 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-coref-only/run
09/16 08:36:53 AM: Writing results for split 'val' to ./experiments/rel-semeval-coref-only/results.tsv
09/16 08:36:53 AM: micro_avg: 0.000, macro_avg: 0.525, edges-rel-semeval_mcc: 0.527, edges-rel-semeval_acc: 0.385, edges-rel-semeval_precision: 0.720, edges-rel-semeval_recall: 0.413, edges-rel-semeval_f1: 0.525
09/16 08:36:53 AM: Done!
09/16 08:36:53 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
