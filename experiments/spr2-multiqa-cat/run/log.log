09/16 08:42:05 AM: Git branch: master
09/16 08:42:05 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:42:05 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-multiqa-cat/",
  "exp_name": "experiments/spr2-multiqa-cat",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-multiqa-cat/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/multiqa",
  "pytorch_transformers_output_mode": "cat",
  "remote_log_name": "experiments/spr2-multiqa-cat__run",
  "run_dir": "./experiments/spr2-multiqa-cat/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:42:05 AM: Saved config to ./experiments/spr2-multiqa-cat/run/params.conf
09/16 08:42:05 AM: Using random seed 1234
09/16 08:42:07 AM: Using GPU 0
09/16 08:42:07 AM: Loading tasks...
09/16 08:42:07 AM: Writing pre-preprocessed tasks to ./experiments/spr2-multiqa-cat/
09/16 08:42:07 AM: 	Creating task edges-spr2 from scratch.
09/16 08:42:07 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:42:07 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:42:07 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:42:07 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:42:07 AM: 	Finished loading tasks: edges-spr2.
09/16 08:42:07 AM: 	Building vocab from scratch.
09/16 08:42:07 AM: 	Counting units for task edges-spr2.
09/16 08:42:07 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:42:08 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:08 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:42:09 AM: 	Saved vocab to ./experiments/spr2-multiqa-cat/vocab
09/16 08:42:09 AM: Loading token dictionary from ./experiments/spr2-multiqa-cat/vocab.
09/16 08:42:09 AM: 	Loaded vocab from ./experiments/spr2-multiqa-cat/vocab
09/16 08:42:09 AM: 	Vocab namespace tokens: size 7943
09/16 08:42:09 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:42:09 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:42:09 AM: 	Vocab namespace chars: size 65
09/16 08:42:09 AM: 	Finished building vocab.
09/16 08:42:09 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:42:09 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-multiqa-cat/preproc/edges-spr2__train_data
09/16 08:42:09 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:42:09 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-multiqa-cat/preproc/edges-spr2__val_data
09/16 08:42:09 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:42:09 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-multiqa-cat/preproc/edges-spr2__test_data
09/16 08:42:09 AM: 	Finished indexing tasks
09/16 08:42:09 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:42:09 AM: 	  Training on 
09/16 08:42:09 AM: 	  Evaluating on edges-spr2
09/16 08:42:09 AM: 	Finished loading tasks in 2.411s
09/16 08:42:09 AM: 	 Tasks: ['edges-spr2']
09/16 08:42:09 AM: Building model...
09/16 08:42:09 AM: Using BERT model (bert-base-uncased).
09/16 08:42:09 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:42:09 AM: models/multiqa
09/16 08:42:09 AM: loading configuration file models/multiqa/config.json
09/16 08:42:09 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:42:09 AM: loading weights file models/multiqa/pytorch_model.bin
09/16 08:42:21 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmphxwg99jo
09/16 08:42:23 AM: copying /tmp/tmphxwg99jo to cache at ./experiments/spr2-multiqa-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:23 AM: creating metadata file for ./experiments/spr2-multiqa-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:23 AM: removing temp file /tmp/tmphxwg99jo
09/16 08:42:23 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-multiqa-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:23 AM: Initializing parameters
09/16 08:42:23 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:42:23 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:42:23 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:42:23 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:42:23 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:42:28 AM: Model specification:
09/16 08:42:28 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:42:28 AM: Model parameters:
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 08:42:28 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:28 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 08:42:28 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:28 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:42:28 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:28 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:28 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:28 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:42:28 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:42:28 AM: Total number of parameters: 110537236 (1.10537e+08)
09/16 08:42:28 AM: Number of trainable parameters: 1054996 (1.055e+06)
09/16 08:42:28 AM: Finished building model in 18.991s
09/16 08:42:28 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:42:29 AM: patience = 9
09/16 08:42:29 AM: val_interval = 100
09/16 08:42:29 AM: max_vals = 100
09/16 08:42:29 AM: cuda_device = 0
09/16 08:42:29 AM: grad_norm = 5.0
09/16 08:42:29 AM: grad_clipping = None
09/16 08:42:29 AM: lr_decay = 0.99
09/16 08:42:29 AM: min_lr = 1e-06
09/16 08:42:29 AM: keep_all_checkpoints = 0
09/16 08:42:29 AM: val_data_limit = 5000
09/16 08:42:29 AM: max_epochs = -1
09/16 08:42:29 AM: dec_val_scale = 250
09/16 08:42:29 AM: training_data_fraction = 1
09/16 08:42:29 AM: type = adam
09/16 08:42:29 AM: parameter_groups = None
09/16 08:42:29 AM: Number of trainable parameters: 1054996
09/16 08:42:29 AM: infer_type_and_cast = True
09/16 08:42:29 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:29 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:29 AM: lr = 0.0001
09/16 08:42:29 AM: amsgrad = True
09/16 08:42:29 AM: type = reduce_on_plateau
09/16 08:42:29 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:29 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:29 AM: mode = max
09/16 08:42:29 AM: factor = 0.5
09/16 08:42:29 AM: patience = 3
09/16 08:42:29 AM: threshold = 0.0001
09/16 08:42:29 AM: threshold_mode = abs
09/16 08:42:29 AM: verbose = True
09/16 08:42:29 AM: type = adam
09/16 08:42:29 AM: parameter_groups = None
09/16 08:42:29 AM: Number of trainable parameters: 1054996
09/16 08:42:29 AM: infer_type_and_cast = True
09/16 08:42:29 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:29 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:29 AM: lr = 0.0001
09/16 08:42:29 AM: amsgrad = True
09/16 08:42:29 AM: type = reduce_on_plateau
09/16 08:42:29 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:29 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:29 AM: mode = max
09/16 08:42:29 AM: factor = 0.5
09/16 08:42:29 AM: patience = 3
09/16 08:42:29 AM: threshold = 0.0001
09/16 08:42:29 AM: threshold_mode = abs
09/16 08:42:29 AM: verbose = True
09/16 08:42:29 AM: Starting training without restoring from a checkpoint.
09/16 08:42:29 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:42:29 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:42:38 AM: ***** Step 100 / Validation 1 *****
09/16 08:42:38 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:42:38 AM: Validating...
09/16 08:42:39 AM: Best result seen so far for edges-spr2.
09/16 08:42:39 AM: Best result seen so far for micro.
09/16 08:42:39 AM: Best result seen so far for macro.
09/16 08:42:39 AM: Updating LR scheduler:
09/16 08:42:39 AM: 	Best result seen so far for macro_avg: 0.794
09/16 08:42:39 AM: 	# validation passes without improvement: 0
09/16 08:42:39 AM: edges-spr2_loss: training: 0.369751 validation: 0.341416
09/16 08:42:39 AM: macro_avg: validation: 0.793847
09/16 08:42:39 AM: micro_avg: validation: 0.000000
09/16 08:42:39 AM: edges-spr2_mcc: training: 0.625705 validation: 0.684291
09/16 08:42:39 AM: edges-spr2_acc: training: 0.046666 validation: 0.071429
09/16 08:42:39 AM: edges-spr2_precision: training: 0.783092 validation: 0.841066
09/16 08:42:39 AM: edges-spr2_recall: training: 0.734050 validation: 0.751648
09/16 08:42:39 AM: edges-spr2_f1: training: 0.757778 validation: 0.793847
09/16 08:42:39 AM: Global learning rate: 0.0001
09/16 08:42:39 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:42:39 AM: Update 109: task edges-spr2, batch 9 (109): mcc: 0.6781, acc: 0.0502, precision: 0.8243, recall: 0.7598, f1: 0.7907, edges-spr2_loss: 0.3239
09/16 08:42:46 AM: ***** Step 200 / Validation 2 *****
09/16 08:42:46 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:42:46 AM: Validating...
09/16 08:42:47 AM: Best result seen so far for edges-spr2.
09/16 08:42:47 AM: Best result seen so far for macro.
09/16 08:42:47 AM: Updating LR scheduler:
09/16 08:42:47 AM: 	Best result seen so far for macro_avg: 0.809
09/16 08:42:47 AM: 	# validation passes without improvement: 0
09/16 08:42:47 AM: edges-spr2_loss: training: 0.312690 validation: 0.328637
09/16 08:42:47 AM: macro_avg: validation: 0.809237
09/16 08:42:47 AM: micro_avg: validation: 0.000000
09/16 08:42:47 AM: edges-spr2_mcc: training: 0.691054 validation: 0.706379
09/16 08:42:47 AM: edges-spr2_acc: training: 0.062044 validation: 0.080952
09/16 08:42:47 AM: edges-spr2_precision: training: 0.828944 validation: 0.851209
09/16 08:42:47 AM: edges-spr2_recall: training: 0.771375 validation: 0.771210
09/16 08:42:47 AM: edges-spr2_f1: training: 0.799124 validation: 0.809237
09/16 08:42:47 AM: Global learning rate: 0.0001
09/16 08:42:47 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:42:49 AM: Update 218: task edges-spr2, batch 18 (218): mcc: 0.6944, acc: 0.0673, precision: 0.8317, recall: 0.7697, f1: 0.7995, edges-spr2_loss: 0.3000
09/16 08:42:56 AM: ***** Step 300 / Validation 3 *****
09/16 08:42:56 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:42:56 AM: Validating...
09/16 08:42:57 AM: Best result seen so far for edges-spr2.
09/16 08:42:57 AM: Best result seen so far for macro.
09/16 08:42:57 AM: Updating LR scheduler:
09/16 08:42:57 AM: 	Best result seen so far for macro_avg: 0.818
09/16 08:42:57 AM: 	# validation passes without improvement: 0
09/16 08:42:57 AM: edges-spr2_loss: training: 0.292846 validation: 0.324995
09/16 08:42:57 AM: macro_avg: validation: 0.817916
09/16 08:42:57 AM: micro_avg: validation: 0.000000
09/16 08:42:57 AM: edges-spr2_mcc: training: 0.709579 validation: 0.713264
09/16 08:42:57 AM: edges-spr2_acc: training: 0.076455 validation: 0.073016
09/16 08:42:57 AM: edges-spr2_precision: training: 0.837982 validation: 0.834661
09/16 08:42:57 AM: edges-spr2_recall: training: 0.787376 validation: 0.801829
09/16 08:42:57 AM: edges-spr2_f1: training: 0.811891 validation: 0.817916
09/16 08:42:57 AM: Global learning rate: 0.0001
09/16 08:42:57 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:42:59 AM: Update 336: task edges-spr2, batch 36 (336): mcc: 0.7254, acc: 0.0867, precision: 0.8419, recall: 0.8047, f1: 0.8229, edges-spr2_loss: 0.2816
09/16 08:43:05 AM: ***** Step 400 / Validation 4 *****
09/16 08:43:05 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:05 AM: Validating...
09/16 08:43:06 AM: Best result seen so far for edges-spr2.
09/16 08:43:06 AM: Best result seen so far for macro.
09/16 08:43:06 AM: Updating LR scheduler:
09/16 08:43:06 AM: 	Best result seen so far for macro_avg: 0.818
09/16 08:43:06 AM: 	# validation passes without improvement: 0
09/16 08:43:06 AM: edges-spr2_loss: training: 0.280550 validation: 0.325072
09/16 08:43:06 AM: macro_avg: validation: 0.818252
09/16 08:43:06 AM: micro_avg: validation: 0.000000
09/16 08:43:06 AM: edges-spr2_mcc: training: 0.724599 validation: 0.717976
09/16 08:43:06 AM: edges-spr2_acc: training: 0.083757 validation: 0.079365
09/16 08:43:06 AM: edges-spr2_precision: training: 0.841659 validation: 0.851656
09/16 08:43:06 AM: edges-spr2_recall: training: 0.804344 validation: 0.787370
09/16 08:43:06 AM: edges-spr2_f1: training: 0.822579 validation: 0.818252
09/16 08:43:06 AM: Global learning rate: 0.0001
09/16 08:43:06 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:43:10 AM: Update 442: task edges-spr2, batch 42 (442): mcc: 0.7269, acc: 0.0839, precision: 0.8431, recall: 0.8065, f1: 0.8244, edges-spr2_loss: 0.2751
09/16 08:43:14 AM: ***** Step 500 / Validation 5 *****
09/16 08:43:14 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:14 AM: Validating...
09/16 08:43:15 AM: Updating LR scheduler:
09/16 08:43:15 AM: 	Best result seen so far for macro_avg: 0.818
09/16 08:43:15 AM: 	# validation passes without improvement: 1
09/16 08:43:15 AM: edges-spr2_loss: training: 0.269158 validation: 0.325092
09/16 08:43:15 AM: macro_avg: validation: 0.817403
09/16 08:43:15 AM: micro_avg: validation: 0.000000
09/16 08:43:15 AM: edges-spr2_mcc: training: 0.733941 validation: 0.715317
09/16 08:43:15 AM: edges-spr2_acc: training: 0.091012 validation: 0.074603
09/16 08:43:15 AM: edges-spr2_precision: training: 0.848338 validation: 0.845647
09/16 08:43:15 AM: edges-spr2_recall: training: 0.810119 validation: 0.790984
09/16 08:43:15 AM: edges-spr2_f1: training: 0.828788 validation: 0.817403
09/16 08:43:15 AM: Global learning rate: 0.0001
09/16 08:43:15 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:43:20 AM: Update 561: task edges-spr2, batch 61 (561): mcc: 0.7405, acc: 0.0977, precision: 0.8514, recall: 0.8156, f1: 0.8331, edges-spr2_loss: 0.2635
09/16 08:43:23 AM: ***** Step 600 / Validation 6 *****
09/16 08:43:23 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:23 AM: Validating...
09/16 08:43:24 AM: Updating LR scheduler:
09/16 08:43:24 AM: 	Best result seen so far for macro_avg: 0.818
09/16 08:43:24 AM: 	# validation passes without improvement: 2
09/16 08:43:24 AM: edges-spr2_loss: training: 0.261152 validation: 0.329960
09/16 08:43:24 AM: macro_avg: validation: 0.810713
09/16 08:43:24 AM: micro_avg: validation: 0.000000
09/16 08:43:24 AM: edges-spr2_mcc: training: 0.743450 validation: 0.712242
09/16 08:43:24 AM: edges-spr2_acc: training: 0.103550 validation: 0.084127
09/16 08:43:24 AM: edges-spr2_precision: training: 0.851591 validation: 0.865171
09/16 08:43:24 AM: edges-spr2_recall: training: 0.819304 validation: 0.762705
09/16 08:43:24 AM: edges-spr2_f1: training: 0.835135 validation: 0.810713
09/16 08:43:24 AM: Global learning rate: 0.0001
09/16 08:43:24 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:43:30 AM: Update 680: task edges-spr2, batch 80 (680): mcc: 0.7482, acc: 0.1008, precision: 0.8559, recall: 0.8214, f1: 0.8383, edges-spr2_loss: 0.2550
09/16 08:43:31 AM: ***** Step 700 / Validation 7 *****
09/16 08:43:31 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:31 AM: Validating...
09/16 08:43:32 AM: Best result seen so far for edges-spr2.
09/16 08:43:32 AM: Best result seen so far for macro.
09/16 08:43:32 AM: Updating LR scheduler:
09/16 08:43:32 AM: 	Best result seen so far for macro_avg: 0.819
09/16 08:43:32 AM: 	# validation passes without improvement: 0
09/16 08:43:32 AM: edges-spr2_loss: training: 0.254057 validation: 0.325589
09/16 08:43:32 AM: macro_avg: validation: 0.819457
09/16 08:43:32 AM: micro_avg: validation: 0.000000
09/16 08:43:32 AM: edges-spr2_mcc: training: 0.748488 validation: 0.717885
09/16 08:43:32 AM: edges-spr2_acc: training: 0.101047 validation: 0.095238
09/16 08:43:32 AM: edges-spr2_precision: training: 0.856483 validation: 0.845198
09/16 08:43:32 AM: edges-spr2_recall: training: 0.820887 validation: 0.795237
09/16 08:43:32 AM: edges-spr2_f1: training: 0.838307 validation: 0.819457
09/16 08:43:32 AM: Global learning rate: 0.0001
09/16 08:43:32 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:43:40 AM: Update 786: task edges-spr2, batch 86 (786): mcc: 0.7532, acc: 0.1099, precision: 0.8567, recall: 0.8269, f1: 0.8416, edges-spr2_loss: 0.2497
09/16 08:43:41 AM: ***** Step 800 / Validation 8 *****
09/16 08:43:41 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:41 AM: Validating...
09/16 08:43:42 AM: Best result seen so far for edges-spr2.
09/16 08:43:42 AM: Best result seen so far for macro.
09/16 08:43:42 AM: Updating LR scheduler:
09/16 08:43:42 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:43:42 AM: 	# validation passes without improvement: 0
09/16 08:43:42 AM: edges-spr2_loss: training: 0.248293 validation: 0.327044
09/16 08:43:42 AM: macro_avg: validation: 0.822024
09/16 08:43:42 AM: micro_avg: validation: 0.000000
09/16 08:43:42 AM: edges-spr2_mcc: training: 0.754487 validation: 0.718084
09/16 08:43:42 AM: edges-spr2_acc: training: 0.110794 validation: 0.087302
09/16 08:43:42 AM: edges-spr2_precision: training: 0.857486 validation: 0.831593
09/16 08:43:42 AM: edges-spr2_recall: training: 0.827982 validation: 0.812673
09/16 08:43:42 AM: edges-spr2_f1: training: 0.842476 validation: 0.822024
09/16 08:43:42 AM: Global learning rate: 0.0001
09/16 08:43:42 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:43:50 AM: ***** Step 900 / Validation 9 *****
09/16 08:43:50 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:50 AM: Validating...
09/16 08:43:50 AM: Evaluate: task edges-spr2, batch 1 (10): mcc: 0.7114, acc: 0.0811, precision: 0.8430, recall: 0.8061, f1: 0.8241, edges-spr2_loss: 0.3022
09/16 08:43:51 AM: Updating LR scheduler:
09/16 08:43:51 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:43:51 AM: 	# validation passes without improvement: 1
09/16 08:43:51 AM: edges-spr2_loss: training: 0.243907 validation: 0.333444
09/16 08:43:51 AM: macro_avg: validation: 0.817628
09/16 08:43:51 AM: micro_avg: validation: 0.000000
09/16 08:43:51 AM: edges-spr2_mcc: training: 0.761931 validation: 0.713522
09/16 08:43:51 AM: edges-spr2_acc: training: 0.119377 validation: 0.071429
09/16 08:43:51 AM: edges-spr2_precision: training: 0.861831 validation: 0.837308
09/16 08:43:51 AM: edges-spr2_recall: training: 0.832782 validation: 0.798852
09/16 08:43:51 AM: edges-spr2_f1: training: 0.847057 validation: 0.817628
09/16 08:43:51 AM: Global learning rate: 0.0001
09/16 08:43:51 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:43:59 AM: ***** Step 1000 / Validation 10 *****
09/16 08:43:59 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:59 AM: Validating...
09/16 08:44:00 AM: Evaluate: task edges-spr2, batch 6 (10): mcc: 0.7206, acc: 0.0814, precision: 0.8336, recall: 0.8226, f1: 0.8281, edges-spr2_loss: 0.2967
09/16 08:44:00 AM: Updating LR scheduler:
09/16 08:44:00 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:44:00 AM: 	# validation passes without improvement: 2
09/16 08:44:00 AM: edges-spr2_loss: training: 0.240106 validation: 0.333752
09/16 08:44:00 AM: macro_avg: validation: 0.818515
09/16 08:44:00 AM: micro_avg: validation: 0.000000
09/16 08:44:00 AM: edges-spr2_mcc: training: 0.765017 validation: 0.712709
09/16 08:44:00 AM: edges-spr2_acc: training: 0.123231 validation: 0.077778
09/16 08:44:00 AM: edges-spr2_precision: training: 0.864786 validation: 0.828864
09/16 08:44:00 AM: edges-spr2_recall: training: 0.835083 validation: 0.808420
09/16 08:44:00 AM: edges-spr2_f1: training: 0.849675 validation: 0.818515
09/16 08:44:00 AM: Global learning rate: 0.0001
09/16 08:44:00 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:44:08 AM: ***** Step 1100 / Validation 11 *****
09/16 08:44:08 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:08 AM: Validating...
09/16 08:44:09 AM: Updating LR scheduler:
09/16 08:44:09 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:44:09 AM: 	# validation passes without improvement: 3
09/16 08:44:09 AM: edges-spr2_loss: training: 0.233235 validation: 0.330963
09/16 08:44:09 AM: macro_avg: validation: 0.814339
09/16 08:44:09 AM: micro_avg: validation: 0.000000
09/16 08:44:09 AM: edges-spr2_mcc: training: 0.772962 validation: 0.712218
09/16 08:44:09 AM: edges-spr2_acc: training: 0.128015 validation: 0.084127
09/16 08:44:09 AM: edges-spr2_precision: training: 0.867259 validation: 0.848904
09/16 08:44:09 AM: edges-spr2_recall: training: 0.841932 validation: 0.782479
09/16 08:44:09 AM: edges-spr2_f1: training: 0.854408 validation: 0.814339
09/16 08:44:09 AM: Global learning rate: 0.0001
09/16 08:44:09 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:44:10 AM: Update 1114: task edges-spr2, batch 14 (1114): mcc: 0.7730, acc: 0.1240, precision: 0.8701, recall: 0.8406, f1: 0.8551, edges-spr2_loss: 0.2370
09/16 08:44:18 AM: ***** Step 1200 / Validation 12 *****
09/16 08:44:18 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:18 AM: Validating...
09/16 08:44:18 AM: Updating LR scheduler:
09/16 08:44:18 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:44:18 AM: 	# validation passes without improvement: 0
09/16 08:44:18 AM: edges-spr2_loss: training: 0.232928 validation: 0.331083
09/16 08:44:18 AM: macro_avg: validation: 0.814685
09/16 08:44:18 AM: micro_avg: validation: 0.000000
09/16 08:44:18 AM: edges-spr2_mcc: training: 0.771016 validation: 0.710474
09/16 08:44:18 AM: edges-spr2_acc: training: 0.130113 validation: 0.068254
09/16 08:44:18 AM: edges-spr2_precision: training: 0.867176 validation: 0.840570
09/16 08:44:18 AM: edges-spr2_recall: training: 0.839803 validation: 0.790347
09/16 08:44:18 AM: edges-spr2_f1: training: 0.853270 validation: 0.814685
09/16 08:44:18 AM: Global learning rate: 5e-05
09/16 08:44:18 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:44:20 AM: Update 1222: task edges-spr2, batch 22 (1222): mcc: 0.7855, acc: 0.1548, precision: 0.8770, recall: 0.8488, f1: 0.8627, edges-spr2_loss: 0.2241
09/16 08:44:26 AM: ***** Step 1300 / Validation 13 *****
09/16 08:44:26 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:26 AM: Validating...
09/16 08:44:27 AM: Updating LR scheduler:
09/16 08:44:27 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:44:27 AM: 	# validation passes without improvement: 1
09/16 08:44:27 AM: edges-spr2_loss: training: 0.224496 validation: 0.336251
09/16 08:44:27 AM: macro_avg: validation: 0.813727
09/16 08:44:27 AM: micro_avg: validation: 0.000000
09/16 08:44:27 AM: edges-spr2_mcc: training: 0.783143 validation: 0.709072
09/16 08:44:27 AM: edges-spr2_acc: training: 0.139337 validation: 0.077778
09/16 08:44:27 AM: edges-spr2_precision: training: 0.874018 validation: 0.839973
09/16 08:44:27 AM: edges-spr2_recall: training: 0.848189 validation: 0.789071
09/16 08:44:27 AM: edges-spr2_f1: training: 0.860909 validation: 0.813727
09/16 08:44:27 AM: Global learning rate: 5e-05
09/16 08:44:27 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:44:30 AM: Update 1331: task edges-spr2, batch 31 (1331): mcc: 0.7834, acc: 0.1448, precision: 0.8765, recall: 0.8471, f1: 0.8616, edges-spr2_loss: 0.2248
09/16 08:44:35 AM: ***** Step 1400 / Validation 14 *****
09/16 08:44:35 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:35 AM: Validating...
09/16 08:44:36 AM: Updating LR scheduler:
09/16 08:44:36 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:44:36 AM: 	# validation passes without improvement: 2
09/16 08:44:36 AM: edges-spr2_loss: training: 0.222084 validation: 0.337635
09/16 08:44:36 AM: macro_avg: validation: 0.813589
09/16 08:44:36 AM: micro_avg: validation: 0.000000
09/16 08:44:36 AM: edges-spr2_mcc: training: 0.786736 validation: 0.708755
09/16 08:44:36 AM: edges-spr2_acc: training: 0.150078 validation: 0.080952
09/16 08:44:36 AM: edges-spr2_precision: training: 0.876247 validation: 0.839439
09/16 08:44:36 AM: edges-spr2_recall: training: 0.851298 validation: 0.789283
09/16 08:44:36 AM: edges-spr2_f1: training: 0.863592 validation: 0.813589
09/16 08:44:36 AM: Global learning rate: 5e-05
09/16 08:44:36 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:44:40 AM: Update 1446: task edges-spr2, batch 46 (1446): mcc: 0.7836, acc: 0.1426, precision: 0.8737, recall: 0.8495, f1: 0.8615, edges-spr2_loss: 0.2211
09/16 08:44:45 AM: ***** Step 1500 / Validation 15 *****
09/16 08:44:45 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:45 AM: Validating...
09/16 08:44:46 AM: Updating LR scheduler:
09/16 08:44:46 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:44:46 AM: 	# validation passes without improvement: 3
09/16 08:44:46 AM: edges-spr2_loss: training: 0.221736 validation: 0.338057
09/16 08:44:46 AM: macro_avg: validation: 0.819117
09/16 08:44:46 AM: micro_avg: validation: 0.000000
09/16 08:44:46 AM: edges-spr2_mcc: training: 0.784210 validation: 0.712807
09/16 08:44:46 AM: edges-spr2_acc: training: 0.145173 validation: 0.076190
09/16 08:44:46 AM: edges-spr2_precision: training: 0.873593 validation: 0.825664
09/16 08:44:46 AM: edges-spr2_recall: training: 0.850993 validation: 0.812673
09/16 08:44:46 AM: edges-spr2_f1: training: 0.862145 validation: 0.819117
09/16 08:44:46 AM: Global learning rate: 5e-05
09/16 08:44:46 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:44:50 AM: Update 1554: task edges-spr2, batch 54 (1554): mcc: 0.7833, acc: 0.1562, precision: 0.8724, recall: 0.8502, f1: 0.8611, edges-spr2_loss: 0.2227
09/16 08:44:53 AM: ***** Step 1600 / Validation 16 *****
09/16 08:44:53 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:53 AM: Validating...
09/16 08:44:54 AM: Updating LR scheduler:
09/16 08:44:54 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:44:54 AM: 	# validation passes without improvement: 0
09/16 08:44:54 AM: edges-spr2_loss: training: 0.220489 validation: 0.343185
09/16 08:44:54 AM: macro_avg: validation: 0.814887
09/16 08:44:54 AM: micro_avg: validation: 0.000000
09/16 08:44:54 AM: edges-spr2_mcc: training: 0.787578 validation: 0.706813
09/16 08:44:54 AM: edges-spr2_acc: training: 0.153569 validation: 0.073016
09/16 08:44:54 AM: edges-spr2_precision: training: 0.876337 validation: 0.824554
09/16 08:44:54 AM: edges-spr2_recall: training: 0.851704 validation: 0.805443
09/16 08:44:54 AM: edges-spr2_f1: training: 0.863845 validation: 0.814887
09/16 08:44:54 AM: Global learning rate: 2.5e-05
09/16 08:44:54 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:45:00 AM: Update 1679: task edges-spr2, batch 79 (1679): mcc: 0.7898, acc: 0.1571, precision: 0.8774, recall: 0.8539, f1: 0.8655, edges-spr2_loss: 0.2171
09/16 08:45:02 AM: ***** Step 1700 / Validation 17 *****
09/16 08:45:02 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:45:02 AM: Validating...
09/16 08:45:03 AM: Updating LR scheduler:
09/16 08:45:03 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:45:03 AM: 	# validation passes without improvement: 1
09/16 08:45:03 AM: edges-spr2_loss: training: 0.216881 validation: 0.340334
09/16 08:45:03 AM: macro_avg: validation: 0.815809
09/16 08:45:03 AM: micro_avg: validation: 0.000000
09/16 08:45:03 AM: edges-spr2_mcc: training: 0.789092 validation: 0.709625
09/16 08:45:03 AM: edges-spr2_acc: training: 0.156277 validation: 0.066667
09/16 08:45:03 AM: edges-spr2_precision: training: 0.877218 validation: 0.831200
09/16 08:45:03 AM: edges-spr2_recall: training: 0.852893 validation: 0.800978
09/16 08:45:03 AM: edges-spr2_f1: training: 0.864885 validation: 0.815809
09/16 08:45:03 AM: Global learning rate: 2.5e-05
09/16 08:45:03 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:45:10 AM: Update 1789: task edges-spr2, batch 89 (1789): mcc: 0.7918, acc: 0.1522, precision: 0.8792, recall: 0.8544, f1: 0.8666, edges-spr2_loss: 0.2153
09/16 08:45:11 AM: ***** Step 1800 / Validation 18 *****
09/16 08:45:11 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:45:11 AM: Validating...
09/16 08:45:12 AM: Updating LR scheduler:
09/16 08:45:12 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:45:12 AM: 	# validation passes without improvement: 2
09/16 08:45:12 AM: Ran out of early stopping patience. Stopping training.
09/16 08:45:12 AM: edges-spr2_loss: training: 0.214243 validation: 0.341966
09/16 08:45:12 AM: macro_avg: validation: 0.816269
09/16 08:45:12 AM: micro_avg: validation: 0.000000
09/16 08:45:12 AM: edges-spr2_mcc: training: 0.793094 validation: 0.710689
09/16 08:45:12 AM: edges-spr2_acc: training: 0.155242 validation: 0.068254
09/16 08:45:12 AM: edges-spr2_precision: training: 0.879377 validation: 0.833075
09/16 08:45:12 AM: edges-spr2_recall: training: 0.856008 validation: 0.800128
09/16 08:45:12 AM: edges-spr2_f1: training: 0.867535 validation: 0.816269
09/16 08:45:12 AM: Global learning rate: 2.5e-05
09/16 08:45:12 AM: Saving checkpoints to: ./experiments/spr2-multiqa-cat/run
09/16 08:45:12 AM: Stopped training after 18 validation checks
09/16 08:45:12 AM: Trained edges-spr2 for 1800 batches or 25.714 epochs
09/16 08:45:12 AM: ***** VALIDATION RESULTS *****
09/16 08:45:12 AM: edges-spr2_f1 (for best val pass 8): edges-spr2_loss: 0.32704, macro_avg: 0.82202, micro_avg: 0.00000, edges-spr2_mcc: 0.71808, edges-spr2_acc: 0.08730, edges-spr2_precision: 0.83159, edges-spr2_recall: 0.81267, edges-spr2_f1: 0.82202
09/16 08:45:12 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.34142, macro_avg: 0.79385, micro_avg: 0.00000, edges-spr2_mcc: 0.68429, edges-spr2_acc: 0.07143, edges-spr2_precision: 0.84107, edges-spr2_recall: 0.75165, edges-spr2_f1: 0.79385
09/16 08:45:12 AM: macro_avg (for best val pass 8): edges-spr2_loss: 0.32704, macro_avg: 0.82202, micro_avg: 0.00000, edges-spr2_mcc: 0.71808, edges-spr2_acc: 0.08730, edges-spr2_precision: 0.83159, edges-spr2_recall: 0.81267, edges-spr2_f1: 0.82202
09/16 08:45:12 AM: Evaluating...
09/16 08:45:12 AM: Loaded model state from ./experiments/spr2-multiqa-cat/run/edges-spr2/model_state_target_train_val_8.best.th
09/16 08:45:12 AM: Evaluating on: edges-spr2, split: val
09/16 08:45:13 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:45:13 AM: Finished evaluating on: edges-spr2
09/16 08:45:13 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:45:13 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-multiqa-cat/run
09/16 08:45:13 AM: Wrote all preds for split 'val' to ./experiments/spr2-multiqa-cat/run
09/16 08:45:13 AM: Evaluating on: edges-spr2, split: test
09/16 08:45:14 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:45:14 AM: Finished evaluating on: edges-spr2
09/16 08:45:14 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:45:14 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-multiqa-cat/run
09/16 08:45:14 AM: Wrote all preds for split 'test' to ./experiments/spr2-multiqa-cat/run
09/16 08:45:14 AM: Writing results for split 'val' to ./experiments/spr2-multiqa-cat/results.tsv
09/16 08:45:14 AM: micro_avg: 0.000, macro_avg: 0.822, edges-spr2_mcc: 0.718, edges-spr2_acc: 0.087, edges-spr2_precision: 0.832, edges-spr2_recall: 0.813, edges-spr2_f1: 0.822
09/16 08:45:14 AM: Done!
09/16 08:45:14 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
