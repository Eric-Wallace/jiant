09/16 08:09:30 AM: Git branch: master
09/16 08:09:30 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:09:31 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-None-mix/",
  "exp_name": "experiments/spr2-None-mix",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-None-mix/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/None",
  "pytorch_transformers_output_mode": "mix",
  "remote_log_name": "experiments/spr2-None-mix__run",
  "run_dir": "./experiments/spr2-None-mix/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:09:31 AM: Saved config to ./experiments/spr2-None-mix/run/params.conf
09/16 08:09:31 AM: Using random seed 1234
09/16 08:09:32 AM: Using GPU 0
09/16 08:09:32 AM: Loading tasks...
09/16 08:09:32 AM: Writing pre-preprocessed tasks to ./experiments/spr2-None-mix/
09/16 08:09:32 AM: 	Creating task edges-spr2 from scratch.
09/16 08:09:32 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:09:32 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:09:33 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:09:33 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:09:33 AM: 	Finished loading tasks: edges-spr2.
09/16 08:09:33 AM: 	Building vocab from scratch.
09/16 08:09:33 AM: 	Counting units for task edges-spr2.
09/16 08:09:33 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:09:34 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:09:34 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:09:34 AM: 	Saved vocab to ./experiments/spr2-None-mix/vocab
09/16 08:09:34 AM: Loading token dictionary from ./experiments/spr2-None-mix/vocab.
09/16 08:09:34 AM: 	Loaded vocab from ./experiments/spr2-None-mix/vocab
09/16 08:09:34 AM: 	Vocab namespace tokens: size 7943
09/16 08:09:34 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:09:34 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:09:34 AM: 	Vocab namespace chars: size 65
09/16 08:09:34 AM: 	Finished building vocab.
09/16 08:09:34 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:09:35 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-None-mix/preproc/edges-spr2__train_data
09/16 08:09:35 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:09:35 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-None-mix/preproc/edges-spr2__val_data
09/16 08:09:35 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:09:35 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-None-mix/preproc/edges-spr2__test_data
09/16 08:09:35 AM: 	Finished indexing tasks
09/16 08:09:35 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:09:35 AM: 	  Training on 
09/16 08:09:35 AM: 	  Evaluating on edges-spr2
09/16 08:09:35 AM: 	Finished loading tasks in 2.924s
09/16 08:09:35 AM: 	 Tasks: ['edges-spr2']
09/16 08:09:35 AM: Building model...
09/16 08:09:35 AM: Using BERT model (bert-base-uncased).
09/16 08:09:35 AM: LOADING A PRETRAINED MODEL
09/16 08:09:36 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json not found in cache or force_download set to True, downloading to /tmp/tmptmfb_8we
09/16 08:09:37 AM: copying /tmp/tmptmfb_8we to cache at ./experiments/spr2-None-mix/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 08:09:37 AM: creating metadata file for ./experiments/spr2-None-mix/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 08:09:37 AM: removing temp file /tmp/tmptmfb_8we
09/16 08:09:37 AM: loading configuration file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json from cache at ./experiments/spr2-None-mix/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 08:09:37 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:09:38 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin not found in cache or force_download set to True, downloading to /tmp/tmpt_ovvkjo
09/16 08:20:24 AM: copying /tmp/tmpt_ovvkjo to cache at ./experiments/spr2-None-mix/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 08:20:25 AM: creating metadata file for ./experiments/spr2-None-mix/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 08:20:25 AM: removing temp file /tmp/tmpt_ovvkjo
09/16 08:20:25 AM: loading weights file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin from cache at ./experiments/spr2-None-mix/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 08:20:30 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmp7gd6p2hf
09/16 08:20:32 AM: copying /tmp/tmp7gd6p2hf to cache at ./experiments/spr2-None-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:20:32 AM: creating metadata file for ./experiments/spr2-None-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:20:32 AM: removing temp file /tmp/tmp7gd6p2hf
09/16 08:20:32 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-None-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:20:32 AM: NOTE: pytorch_transformers_output_mode='mix', so scalar mixing weights will be fine-tuned even if BERT model is frozen.
09/16 08:20:32 AM: Initializing parameters
09/16 08:20:32 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:20:32 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:20:32 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:20:32 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:20:32 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:20:32 AM:    _text_field_embedder.scalar_mix.gamma
09/16 08:20:32 AM:    _text_field_embedder.scalar_mix.scalar_parameters.0
09/16 08:20:32 AM:    _text_field_embedder.scalar_mix.scalar_parameters.1
09/16 08:20:32 AM:    _text_field_embedder.scalar_mix.scalar_parameters.10
09/16 08:20:32 AM:    _text_field_embedder.scalar_mix.scalar_parameters.11
09/16 08:20:32 AM:    _text_field_embedder.scalar_mix.scalar_parameters.12
09/16 08:20:32 AM:    _text_field_embedder.scalar_mix.scalar_parameters.2
09/16 08:20:32 AM:    _text_field_embedder.scalar_mix.scalar_parameters.3
09/16 08:20:32 AM:    _text_field_embedder.scalar_mix.scalar_parameters.4
09/16 08:20:32 AM:    _text_field_embedder.scalar_mix.scalar_parameters.5
09/16 08:20:32 AM:    _text_field_embedder.scalar_mix.scalar_parameters.6
09/16 08:20:32 AM:    _text_field_embedder.scalar_mix.scalar_parameters.7
09/16 08:20:32 AM:    _text_field_embedder.scalar_mix.scalar_parameters.8
09/16 08:20:32 AM:    _text_field_embedder.scalar_mix.scalar_parameters.9
09/16 08:20:32 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:20:38 AM: Model specification:
09/16 08:20:38 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
      (scalar_mix): ScalarMix(
        (scalar_parameters): ParameterList(
            (0): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (1): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (2): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (3): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (4): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (5): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (6): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (7): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (8): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (9): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (10): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (11): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (12): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:20:38 AM: Model parameters:
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.scalar_mix.gamma: Trainable parameter, count 1 with torch.Size([1])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.0: Trainable parameter, count 1 with torch.Size([1])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.1: Trainable parameter, count 1 with torch.Size([1])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.2: Trainable parameter, count 1 with torch.Size([1])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.3: Trainable parameter, count 1 with torch.Size([1])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.4: Trainable parameter, count 1 with torch.Size([1])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.5: Trainable parameter, count 1 with torch.Size([1])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.6: Trainable parameter, count 1 with torch.Size([1])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.7: Trainable parameter, count 1 with torch.Size([1])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.8: Trainable parameter, count 1 with torch.Size([1])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.9: Trainable parameter, count 1 with torch.Size([1])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.10: Trainable parameter, count 1 with torch.Size([1])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.11: Trainable parameter, count 1 with torch.Size([1])
09/16 08:20:38 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.12: Trainable parameter, count 1 with torch.Size([1])
09/16 08:20:38 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:20:38 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:20:38 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:20:38 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:20:38 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:20:38 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:20:38 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:20:38 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:20:38 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:20:38 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:20:38 AM: Total number of parameters: 110144034 (1.10144e+08)
09/16 08:20:38 AM: Number of trainable parameters: 661794 (661794)
09/16 08:20:38 AM: Finished building model in 663.147s
09/16 08:20:38 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:20:39 AM: patience = 9
09/16 08:20:39 AM: val_interval = 100
09/16 08:20:39 AM: max_vals = 100
09/16 08:20:39 AM: cuda_device = 0
09/16 08:20:39 AM: grad_norm = 5.0
09/16 08:20:39 AM: grad_clipping = None
09/16 08:20:39 AM: lr_decay = 0.99
09/16 08:20:39 AM: min_lr = 1e-06
09/16 08:20:39 AM: keep_all_checkpoints = 0
09/16 08:20:39 AM: val_data_limit = 5000
09/16 08:20:39 AM: max_epochs = -1
09/16 08:20:39 AM: dec_val_scale = 250
09/16 08:20:39 AM: training_data_fraction = 1
09/16 08:20:39 AM: type = adam
09/16 08:20:39 AM: parameter_groups = None
09/16 08:20:39 AM: Number of trainable parameters: 661794
09/16 08:20:39 AM: infer_type_and_cast = True
09/16 08:20:39 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:20:39 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:20:39 AM: lr = 0.0001
09/16 08:20:39 AM: amsgrad = True
09/16 08:20:39 AM: type = reduce_on_plateau
09/16 08:20:39 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:20:39 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:20:39 AM: mode = max
09/16 08:20:39 AM: factor = 0.5
09/16 08:20:39 AM: patience = 3
09/16 08:20:39 AM: threshold = 0.0001
09/16 08:20:39 AM: threshold_mode = abs
09/16 08:20:39 AM: verbose = True
09/16 08:20:39 AM: type = adam
09/16 08:20:39 AM: parameter_groups = None
09/16 08:20:39 AM: Number of trainable parameters: 661794
09/16 08:20:39 AM: infer_type_and_cast = True
09/16 08:20:39 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:20:39 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:20:39 AM: lr = 0.0001
09/16 08:20:39 AM: amsgrad = True
09/16 08:20:39 AM: type = reduce_on_plateau
09/16 08:20:39 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:20:39 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:20:39 AM: mode = max
09/16 08:20:39 AM: factor = 0.5
09/16 08:20:39 AM: patience = 3
09/16 08:20:39 AM: threshold = 0.0001
09/16 08:20:39 AM: threshold_mode = abs
09/16 08:20:39 AM: verbose = True
09/16 08:20:39 AM: Starting training without restoring from a checkpoint.
09/16 08:20:39 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:20:39 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:20:49 AM: ***** Step 100 / Validation 1 *****
09/16 08:20:49 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:49 AM: Validating...
09/16 08:20:50 AM: Evaluate: task edges-spr2, batch 7 (10): mcc: 0.7141, acc: 0.0889, precision: 0.8606, recall: 0.7776, f1: 0.8170, edges-spr2_loss: 0.3064
09/16 08:20:50 AM: Best result seen so far for edges-spr2.
09/16 08:20:50 AM: Best result seen so far for micro.
09/16 08:20:50 AM: Best result seen so far for macro.
09/16 08:20:50 AM: Updating LR scheduler:
09/16 08:20:50 AM: 	Best result seen so far for macro_avg: 0.803
09/16 08:20:50 AM: 	# validation passes without improvement: 0
09/16 08:20:50 AM: edges-spr2_loss: training: 0.376803 validation: 0.340000
09/16 08:20:50 AM: macro_avg: validation: 0.802700
09/16 08:20:50 AM: micro_avg: validation: 0.000000
09/16 08:20:50 AM: edges-spr2_mcc: training: 0.624614 validation: 0.698521
09/16 08:20:50 AM: edges-spr2_acc: training: 0.043987 validation: 0.088889
09/16 08:20:50 AM: edges-spr2_precision: training: 0.778488 validation: 0.852161
09/16 08:20:50 AM: edges-spr2_recall: training: 0.738729 validation: 0.758665
09/16 08:20:50 AM: edges-spr2_f1: training: 0.758088 validation: 0.802700
09/16 08:20:50 AM: Global learning rate: 0.0001
09/16 08:20:50 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:20:59 AM: ***** Step 200 / Validation 2 *****
09/16 08:20:59 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:59 AM: Validating...
09/16 08:21:00 AM: Evaluate: task edges-spr2, batch 9 (10): mcc: 0.7202, acc: 0.0973, precision: 0.8464, recall: 0.7973, f1: 0.8211, edges-spr2_loss: 0.2948
09/16 08:21:00 AM: Best result seen so far for edges-spr2.
09/16 08:21:00 AM: Best result seen so far for macro.
09/16 08:21:00 AM: Updating LR scheduler:
09/16 08:21:00 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:21:00 AM: 	# validation passes without improvement: 0
09/16 08:21:00 AM: edges-spr2_loss: training: 0.306628 validation: 0.322710
09/16 08:21:00 AM: macro_avg: validation: 0.820064
09/16 08:21:00 AM: micro_avg: validation: 0.000000
09/16 08:21:00 AM: edges-spr2_mcc: training: 0.702780 validation: 0.718764
09/16 08:21:00 AM: edges-spr2_acc: training: 0.075197 validation: 0.096825
09/16 08:21:00 AM: edges-spr2_precision: training: 0.831764 validation: 0.845528
09/16 08:21:00 AM: edges-spr2_recall: training: 0.785038 validation: 0.796088
09/16 08:21:00 AM: edges-spr2_f1: training: 0.807726 validation: 0.820064
09/16 08:21:00 AM: Global learning rate: 0.0001
09/16 08:21:00 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:21:10 AM: ***** Step 300 / Validation 3 *****
09/16 08:21:10 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:10 AM: Validating...
09/16 08:21:10 AM: Evaluate: task edges-spr2, batch 1 (10): mcc: 0.7291, acc: 0.0811, precision: 0.8451, recall: 0.8280, f1: 0.8365, edges-spr2_loss: 0.2806
09/16 08:21:11 AM: Best result seen so far for edges-spr2.
09/16 08:21:11 AM: Best result seen so far for macro.
09/16 08:21:11 AM: Updating LR scheduler:
09/16 08:21:11 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:21:11 AM: 	# validation passes without improvement: 0
09/16 08:21:11 AM: edges-spr2_loss: training: 0.286643 validation: 0.317993
09/16 08:21:11 AM: macro_avg: validation: 0.824508
09/16 08:21:11 AM: micro_avg: validation: 0.000000
09/16 08:21:11 AM: edges-spr2_mcc: training: 0.722217 validation: 0.725521
09/16 08:21:11 AM: edges-spr2_acc: training: 0.080702 validation: 0.088889
09/16 08:21:11 AM: edges-spr2_precision: training: 0.841486 validation: 0.849222
09/16 08:21:11 AM: edges-spr2_recall: training: 0.801360 validation: 0.801191
09/16 08:21:11 AM: edges-spr2_f1: training: 0.820933 validation: 0.824508
09/16 08:21:11 AM: Global learning rate: 0.0001
09/16 08:21:11 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:21:20 AM: ***** Step 400 / Validation 4 *****
09/16 08:21:20 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:20 AM: Validating...
09/16 08:21:20 AM: Evaluate: task edges-spr2, batch 2 (10): mcc: 0.7391, acc: 0.0797, precision: 0.8608, recall: 0.8219, f1: 0.8409, edges-spr2_loss: 0.2722
09/16 08:21:21 AM: Updating LR scheduler:
09/16 08:21:21 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:21:21 AM: 	# validation passes without improvement: 1
09/16 08:21:21 AM: edges-spr2_loss: training: 0.275574 validation: 0.318079
09/16 08:21:21 AM: macro_avg: validation: 0.821151
09/16 08:21:21 AM: micro_avg: validation: 0.000000
09/16 08:21:21 AM: edges-spr2_mcc: training: 0.733740 validation: 0.723829
09/16 08:21:21 AM: edges-spr2_acc: training: 0.087994 validation: 0.095238
09/16 08:21:21 AM: edges-spr2_precision: training: 0.845615 validation: 0.859735
09/16 08:21:21 AM: edges-spr2_recall: training: 0.812623 validation: 0.785881
09/16 08:21:21 AM: edges-spr2_f1: training: 0.828791 validation: 0.821151
09/16 08:21:21 AM: Global learning rate: 0.0001
09/16 08:21:21 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:21:30 AM: ***** Step 500 / Validation 5 *****
09/16 08:21:30 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:30 AM: Validating...
09/16 08:21:30 AM: Evaluate: task edges-spr2, batch 2 (10): mcc: 0.7446, acc: 0.0797, precision: 0.8610, recall: 0.8291, f1: 0.8448, edges-spr2_loss: 0.2692
09/16 08:21:31 AM: Updating LR scheduler:
09/16 08:21:31 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:21:31 AM: 	# validation passes without improvement: 2
09/16 08:21:31 AM: edges-spr2_loss: training: 0.267498 validation: 0.313269
09/16 08:21:31 AM: macro_avg: validation: 0.824344
09/16 08:21:31 AM: micro_avg: validation: 0.000000
09/16 08:21:31 AM: edges-spr2_mcc: training: 0.740162 validation: 0.726166
09/16 08:21:31 AM: edges-spr2_acc: training: 0.097544 validation: 0.095238
09/16 08:21:31 AM: edges-spr2_precision: training: 0.851462 validation: 0.852727
09/16 08:21:31 AM: edges-spr2_recall: training: 0.815201 validation: 0.797789
09/16 08:21:31 AM: edges-spr2_f1: training: 0.832937 validation: 0.824344
09/16 08:21:31 AM: Global learning rate: 0.0001
09/16 08:21:31 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:21:39 AM: ***** Step 600 / Validation 6 *****
09/16 08:21:39 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:39 AM: Validating...
09/16 08:21:40 AM: Evaluate: task edges-spr2, batch 5 (10): mcc: 0.7323, acc: 0.0950, precision: 0.8498, recall: 0.8193, f1: 0.8342, edges-spr2_loss: 0.2778
09/16 08:21:40 AM: Best result seen so far for edges-spr2.
09/16 08:21:40 AM: Best result seen so far for macro.
09/16 08:21:40 AM: Updating LR scheduler:
09/16 08:21:40 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:21:40 AM: 	# validation passes without improvement: 3
09/16 08:21:40 AM: edges-spr2_loss: training: 0.261208 validation: 0.313691
09/16 08:21:40 AM: macro_avg: validation: 0.824527
09/16 08:21:40 AM: micro_avg: validation: 0.000000
09/16 08:21:40 AM: edges-spr2_mcc: training: 0.743205 validation: 0.724205
09/16 08:21:40 AM: edges-spr2_acc: training: 0.094534 validation: 0.088889
09/16 08:21:40 AM: edges-spr2_precision: training: 0.851272 validation: 0.843604
09/16 08:21:40 AM: edges-spr2_recall: training: 0.819342 validation: 0.806294
09/16 08:21:40 AM: edges-spr2_f1: training: 0.835002 validation: 0.824527
09/16 08:21:40 AM: Global learning rate: 0.0001
09/16 08:21:40 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:21:49 AM: ***** Step 700 / Validation 7 *****
09/16 08:21:49 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:49 AM: Validating...
09/16 08:21:50 AM: Updating LR scheduler:
09/16 08:21:50 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:21:50 AM: 	# validation passes without improvement: 0
09/16 08:21:50 AM: edges-spr2_loss: training: 0.254465 validation: 0.314412
09/16 08:21:50 AM: macro_avg: validation: 0.823670
09/16 08:21:50 AM: micro_avg: validation: 0.000000
09/16 08:21:50 AM: edges-spr2_mcc: training: 0.752270 validation: 0.722968
09/16 08:21:50 AM: edges-spr2_acc: training: 0.103518 validation: 0.082540
09/16 08:21:50 AM: edges-spr2_precision: training: 0.857627 validation: 0.843207
09/16 08:21:50 AM: edges-spr2_recall: training: 0.824880 validation: 0.805018
09/16 08:21:50 AM: edges-spr2_f1: training: 0.840935 validation: 0.823670
09/16 08:21:50 AM: Global learning rate: 5e-05
09/16 08:21:50 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:21:50 AM: Update 701: task edges-spr2, batch 1 (701): mcc: 0.7270, acc: 0.0680, precision: 0.8336, recall: 0.8238, f1: 0.8287, edges-spr2_loss: 0.2815
09/16 08:21:59 AM: ***** Step 800 / Validation 8 *****
09/16 08:21:59 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:59 AM: Validating...
09/16 08:21:59 AM: Updating LR scheduler:
09/16 08:21:59 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:21:59 AM: 	# validation passes without improvement: 1
09/16 08:21:59 AM: edges-spr2_loss: training: 0.249040 validation: 0.315507
09/16 08:21:59 AM: macro_avg: validation: 0.822897
09/16 08:21:59 AM: micro_avg: validation: 0.000000
09/16 08:21:59 AM: edges-spr2_mcc: training: 0.759067 validation: 0.723503
09/16 08:21:59 AM: edges-spr2_acc: training: 0.115357 validation: 0.085714
09/16 08:21:59 AM: edges-spr2_precision: training: 0.860179 validation: 0.849638
09/16 08:21:59 AM: edges-spr2_recall: training: 0.831220 validation: 0.797789
09/16 08:21:59 AM: edges-spr2_f1: training: 0.845452 validation: 0.822897
09/16 08:21:59 AM: Global learning rate: 5e-05
09/16 08:21:59 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:22:00 AM: Update 809: task edges-spr2, batch 9 (809): mcc: 0.7597, acc: 0.1033, precision: 0.8698, recall: 0.8235, f1: 0.8460, edges-spr2_loss: 0.2479
09/16 08:22:08 AM: ***** Step 900 / Validation 9 *****
09/16 08:22:08 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:22:08 AM: Validating...
09/16 08:22:09 AM: Updating LR scheduler:
09/16 08:22:09 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:22:09 AM: 	# validation passes without improvement: 2
09/16 08:22:09 AM: edges-spr2_loss: training: 0.246395 validation: 0.317498
09/16 08:22:09 AM: macro_avg: validation: 0.824208
09/16 08:22:09 AM: micro_avg: validation: 0.000000
09/16 08:22:09 AM: edges-spr2_mcc: training: 0.760645 validation: 0.723952
09/16 08:22:09 AM: edges-spr2_acc: training: 0.107954 validation: 0.079365
09/16 08:22:09 AM: edges-spr2_precision: training: 0.861847 validation: 0.844335
09/16 08:22:09 AM: edges-spr2_recall: training: 0.830941 validation: 0.805018
09/16 08:22:09 AM: edges-spr2_f1: training: 0.846112 validation: 0.824208
09/16 08:22:09 AM: Global learning rate: 5e-05
09/16 08:22:09 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:22:10 AM: Update 912: task edges-spr2, batch 12 (912): mcc: 0.7457, acc: 0.0997, precision: 0.8553, recall: 0.8222, f1: 0.8384, edges-spr2_loss: 0.2613
09/16 08:22:17 AM: ***** Step 1000 / Validation 10 *****
09/16 08:22:17 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:22:17 AM: Validating...
09/16 08:22:18 AM: Updating LR scheduler:
09/16 08:22:18 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:22:18 AM: 	# validation passes without improvement: 3
09/16 08:22:18 AM: edges-spr2_loss: training: 0.245349 validation: 0.316558
09/16 08:22:18 AM: macro_avg: validation: 0.822759
09/16 08:22:18 AM: micro_avg: validation: 0.000000
09/16 08:22:18 AM: edges-spr2_mcc: training: 0.761684 validation: 0.722369
09/16 08:22:18 AM: edges-spr2_acc: training: 0.114904 validation: 0.077778
09/16 08:22:18 AM: edges-spr2_precision: training: 0.862731 validation: 0.845757
09/16 08:22:18 AM: edges-spr2_recall: training: 0.832855 validation: 0.800978
09/16 08:22:18 AM: edges-spr2_f1: training: 0.847530 validation: 0.822759
09/16 08:22:18 AM: Global learning rate: 5e-05
09/16 08:22:18 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:22:20 AM: Update 1027: task edges-spr2, batch 27 (1027): mcc: 0.7597, acc: 0.1050, precision: 0.8601, recall: 0.8322, f1: 0.8459, edges-spr2_loss: 0.2471
09/16 08:22:26 AM: ***** Step 1100 / Validation 11 *****
09/16 08:22:26 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:22:26 AM: Validating...
09/16 08:22:27 AM: Updating LR scheduler:
09/16 08:22:27 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:22:27 AM: 	# validation passes without improvement: 0
09/16 08:22:27 AM: edges-spr2_loss: training: 0.242674 validation: 0.316383
09/16 08:22:27 AM: macro_avg: validation: 0.823644
09/16 08:22:27 AM: micro_avg: validation: 0.000000
09/16 08:22:27 AM: edges-spr2_mcc: training: 0.763835 validation: 0.722323
09/16 08:22:27 AM: edges-spr2_acc: training: 0.110288 validation: 0.071429
09/16 08:22:27 AM: edges-spr2_precision: training: 0.863526 validation: 0.840602
09/16 08:22:27 AM: edges-spr2_recall: training: 0.833526 validation: 0.807357
09/16 08:22:27 AM: edges-spr2_f1: training: 0.848261 validation: 0.823644
09/16 08:22:27 AM: Global learning rate: 2.5e-05
09/16 08:22:27 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:22:30 AM: Update 1136: task edges-spr2, batch 36 (1136): mcc: 0.7611, acc: 0.1188, precision: 0.8624, recall: 0.8308, f1: 0.8463, edges-spr2_loss: 0.2443
09/16 08:22:35 AM: ***** Step 1200 / Validation 12 *****
09/16 08:22:35 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:22:35 AM: Validating...
09/16 08:22:36 AM: Updating LR scheduler:
09/16 08:22:36 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:22:36 AM: 	# validation passes without improvement: 1
09/16 08:22:36 AM: edges-spr2_loss: training: 0.240921 validation: 0.317456
09/16 08:22:36 AM: macro_avg: validation: 0.822186
09/16 08:22:36 AM: micro_avg: validation: 0.000000
09/16 08:22:36 AM: edges-spr2_mcc: training: 0.764757 validation: 0.720585
09/16 08:22:36 AM: edges-spr2_acc: training: 0.122295 validation: 0.066667
09/16 08:22:36 AM: edges-spr2_precision: training: 0.864192 validation: 0.841496
09/16 08:22:36 AM: edges-spr2_recall: training: 0.834555 validation: 0.803742
09/16 08:22:36 AM: edges-spr2_f1: training: 0.849115 validation: 0.822186
09/16 08:22:36 AM: Global learning rate: 2.5e-05
09/16 08:22:36 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:22:40 AM: Update 1253: task edges-spr2, batch 53 (1253): mcc: 0.7716, acc: 0.1221, precision: 0.8682, recall: 0.8396, f1: 0.8537, edges-spr2_loss: 0.2368
09/16 08:22:44 AM: ***** Step 1300 / Validation 13 *****
09/16 08:22:44 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:22:44 AM: Validating...
09/16 08:22:45 AM: Updating LR scheduler:
09/16 08:22:45 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:22:45 AM: 	# validation passes without improvement: 2
09/16 08:22:45 AM: edges-spr2_loss: training: 0.237450 validation: 0.318179
09/16 08:22:45 AM: macro_avg: validation: 0.822412
09/16 08:22:45 AM: micro_avg: validation: 0.000000
09/16 08:22:45 AM: edges-spr2_mcc: training: 0.769658 validation: 0.719446
09/16 08:22:45 AM: edges-spr2_acc: training: 0.120029 validation: 0.073016
09/16 08:22:45 AM: edges-spr2_precision: training: 0.867218 validation: 0.835307
09/16 08:22:45 AM: edges-spr2_recall: training: 0.837324 validation: 0.809909
09/16 08:22:45 AM: edges-spr2_f1: training: 0.852009 validation: 0.822412
09/16 08:22:45 AM: Global learning rate: 2.5e-05
09/16 08:22:45 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:22:50 AM: Update 1358: task edges-spr2, batch 58 (1358): mcc: 0.7692, acc: 0.1210, precision: 0.8661, recall: 0.8385, f1: 0.8520, edges-spr2_loss: 0.2381
09/16 08:22:54 AM: ***** Step 1400 / Validation 14 *****
09/16 08:22:54 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:22:54 AM: Validating...
09/16 08:22:55 AM: Updating LR scheduler:
09/16 08:22:55 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:22:55 AM: 	# validation passes without improvement: 3
09/16 08:22:55 AM: edges-spr2_loss: training: 0.237153 validation: 0.317219
09/16 08:22:55 AM: macro_avg: validation: 0.822242
09/16 08:22:55 AM: micro_avg: validation: 0.000000
09/16 08:22:55 AM: edges-spr2_mcc: training: 0.769567 validation: 0.719977
09/16 08:22:55 AM: edges-spr2_acc: training: 0.120119 validation: 0.074603
09/16 08:22:55 AM: edges-spr2_precision: training: 0.865412 validation: 0.838603
09/16 08:22:55 AM: edges-spr2_recall: training: 0.840133 validation: 0.806507
09/16 08:22:55 AM: edges-spr2_f1: training: 0.852585 validation: 0.822242
09/16 08:22:55 AM: Global learning rate: 2.5e-05
09/16 08:22:55 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:23:01 AM: Update 1471: task edges-spr2, batch 71 (1471): mcc: 0.7682, acc: 0.1211, precision: 0.8665, recall: 0.8366, f1: 0.8513, edges-spr2_loss: 0.2372
09/16 08:23:03 AM: ***** Step 1500 / Validation 15 *****
09/16 08:23:03 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:23:03 AM: Validating...
09/16 08:23:04 AM: Best result seen so far for edges-spr2.
09/16 08:23:04 AM: Best result seen so far for macro.
09/16 08:23:04 AM: Updating LR scheduler:
09/16 08:23:04 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:23:04 AM: 	# validation passes without improvement: 0
09/16 08:23:04 AM: edges-spr2_loss: training: 0.236496 validation: 0.317479
09/16 08:23:04 AM: macro_avg: validation: 0.825740
09/16 08:23:04 AM: micro_avg: validation: 0.000000
09/16 08:23:04 AM: edges-spr2_mcc: training: 0.769199 validation: 0.724730
09/16 08:23:04 AM: edges-spr2_acc: training: 0.120721 validation: 0.074603
09/16 08:23:04 AM: edges-spr2_precision: training: 0.867242 validation: 0.838780
09/16 08:23:04 AM: edges-spr2_recall: training: 0.837515 validation: 0.813098
09/16 08:23:04 AM: edges-spr2_f1: training: 0.852119 validation: 0.825740
09/16 08:23:04 AM: Global learning rate: 2.5e-05
09/16 08:23:04 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:23:11 AM: Update 1585: task edges-spr2, batch 85 (1585): mcc: 0.7706, acc: 0.1196, precision: 0.8666, recall: 0.8394, f1: 0.8528, edges-spr2_loss: 0.2354
09/16 08:23:12 AM: ***** Step 1600 / Validation 16 *****
09/16 08:23:12 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:23:12 AM: Validating...
09/16 08:23:13 AM: Updating LR scheduler:
09/16 08:23:13 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:23:13 AM: 	# validation passes without improvement: 1
09/16 08:23:13 AM: edges-spr2_loss: training: 0.236104 validation: 0.318005
09/16 08:23:13 AM: macro_avg: validation: 0.821114
09/16 08:23:13 AM: micro_avg: validation: 0.000000
09/16 08:23:13 AM: edges-spr2_mcc: training: 0.770059 validation: 0.718624
09/16 08:23:13 AM: edges-spr2_acc: training: 0.119747 validation: 0.076190
09/16 08:23:13 AM: edges-spr2_precision: training: 0.866070 validation: 0.839254
09/16 08:23:13 AM: edges-spr2_recall: training: 0.839317 validation: 0.803742
09/16 08:23:13 AM: edges-spr2_f1: training: 0.852483 validation: 0.821114
09/16 08:23:13 AM: Global learning rate: 2.5e-05
09/16 08:23:13 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:23:21 AM: Update 1688: task edges-spr2, batch 88 (1688): mcc: 0.7683, acc: 0.1179, precision: 0.8660, recall: 0.8372, f1: 0.8514, edges-spr2_loss: 0.2357
09/16 08:23:22 AM: ***** Step 1700 / Validation 17 *****
09/16 08:23:22 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:23:22 AM: Validating...
09/16 08:23:23 AM: Updating LR scheduler:
09/16 08:23:23 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:23:23 AM: 	# validation passes without improvement: 2
09/16 08:23:23 AM: edges-spr2_loss: training: 0.234740 validation: 0.317761
09/16 08:23:23 AM: macro_avg: validation: 0.822418
09/16 08:23:23 AM: micro_avg: validation: 0.000000
09/16 08:23:23 AM: edges-spr2_mcc: training: 0.769723 validation: 0.720679
09/16 08:23:23 AM: edges-spr2_acc: training: 0.119722 validation: 0.082540
09/16 08:23:23 AM: edges-spr2_precision: training: 0.866920 validation: 0.840586
09/16 08:23:23 AM: edges-spr2_recall: training: 0.837952 validation: 0.805018
09/16 08:23:23 AM: edges-spr2_f1: training: 0.852190 validation: 0.822418
09/16 08:23:23 AM: Global learning rate: 2.5e-05
09/16 08:23:23 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:23:31 AM: ***** Step 1800 / Validation 18 *****
09/16 08:23:31 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:23:31 AM: Validating...
09/16 08:23:31 AM: Evaluate: task edges-spr2, batch 4 (10): mcc: 0.7215, acc: 0.0686, precision: 0.8381, recall: 0.8202, f1: 0.8291, edges-spr2_loss: 0.2884
09/16 08:23:32 AM: Updating LR scheduler:
09/16 08:23:32 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:23:32 AM: 	# validation passes without improvement: 3
09/16 08:23:32 AM: edges-spr2_loss: training: 0.233562 validation: 0.319391
09/16 08:23:32 AM: macro_avg: validation: 0.822804
09/16 08:23:32 AM: micro_avg: validation: 0.000000
09/16 08:23:32 AM: edges-spr2_mcc: training: 0.773936 validation: 0.720472
09/16 08:23:32 AM: edges-spr2_acc: training: 0.123272 validation: 0.079365
09/16 08:23:32 AM: edges-spr2_precision: training: 0.868689 validation: 0.837481
09/16 08:23:32 AM: edges-spr2_recall: training: 0.841853 validation: 0.808633
09/16 08:23:32 AM: edges-spr2_f1: training: 0.855060 validation: 0.822804
09/16 08:23:32 AM: Global learning rate: 2.5e-05
09/16 08:23:32 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:23:40 AM: ***** Step 1900 / Validation 19 *****
09/16 08:23:40 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:23:40 AM: Validating...
09/16 08:23:41 AM: Evaluate: task edges-spr2, batch 7 (10): mcc: 0.7332, acc: 0.0711, precision: 0.8417, recall: 0.8282, f1: 0.8349, edges-spr2_loss: 0.2824
09/16 08:23:41 AM: Updating LR scheduler:
09/16 08:23:41 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:23:41 AM: 	# validation passes without improvement: 0
09/16 08:23:41 AM: edges-spr2_loss: training: 0.235488 validation: 0.319486
09/16 08:23:41 AM: macro_avg: validation: 0.823859
09/16 08:23:41 AM: micro_avg: validation: 0.000000
09/16 08:23:41 AM: edges-spr2_mcc: training: 0.770787 validation: 0.721568
09/16 08:23:41 AM: edges-spr2_acc: training: 0.124724 validation: 0.073016
09/16 08:23:41 AM: edges-spr2_precision: training: 0.866696 validation: 0.836033
09/16 08:23:41 AM: edges-spr2_recall: training: 0.840162 validation: 0.812035
09/16 08:23:41 AM: edges-spr2_f1: training: 0.853223 validation: 0.823859
09/16 08:23:41 AM: Global learning rate: 1.25e-05
09/16 08:23:41 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:23:50 AM: ***** Step 2000 / Validation 20 *****
09/16 08:23:50 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:23:50 AM: Validating...
09/16 08:23:51 AM: Updating LR scheduler:
09/16 08:23:51 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:23:51 AM: 	# validation passes without improvement: 1
09/16 08:23:51 AM: edges-spr2_loss: training: 0.230374 validation: 0.319435
09/16 08:23:51 AM: macro_avg: validation: 0.822499
09/16 08:23:51 AM: micro_avg: validation: 0.000000
09/16 08:23:51 AM: edges-spr2_mcc: training: 0.776723 validation: 0.719968
09/16 08:23:51 AM: edges-spr2_acc: training: 0.132610 validation: 0.077778
09/16 08:23:51 AM: edges-spr2_precision: training: 0.869918 validation: 0.837076
09/16 08:23:51 AM: edges-spr2_recall: training: 0.844592 validation: 0.808420
09/16 08:23:51 AM: edges-spr2_f1: training: 0.857068 validation: 0.822499
09/16 08:23:51 AM: Global learning rate: 1.25e-05
09/16 08:23:51 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:23:51 AM: Update 2009: task edges-spr2, batch 9 (2009): mcc: 0.7856, acc: 0.1261, precision: 0.8706, recall: 0.8548, f1: 0.8627, edges-spr2_loss: 0.2244
09/16 08:23:58 AM: ***** Step 2100 / Validation 21 *****
09/16 08:23:58 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:23:58 AM: Validating...
09/16 08:23:59 AM: Updating LR scheduler:
09/16 08:23:59 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:23:59 AM: 	# validation passes without improvement: 2
09/16 08:23:59 AM: edges-spr2_loss: training: 0.230120 validation: 0.320546
09/16 08:23:59 AM: macro_avg: validation: 0.821149
09/16 08:23:59 AM: micro_avg: validation: 0.000000
09/16 08:23:59 AM: edges-spr2_mcc: training: 0.778390 validation: 0.719021
09/16 08:23:59 AM: edges-spr2_acc: training: 0.134251 validation: 0.076190
09/16 08:23:59 AM: edges-spr2_precision: training: 0.871515 validation: 0.840722
09/16 08:23:59 AM: edges-spr2_recall: training: 0.844935 validation: 0.802467
09/16 08:23:59 AM: edges-spr2_f1: training: 0.858019 validation: 0.821149
09/16 08:23:59 AM: Global learning rate: 1.25e-05
09/16 08:23:59 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:24:01 AM: Update 2117: task edges-spr2, batch 17 (2117): mcc: 0.7710, acc: 0.1263, precision: 0.8678, recall: 0.8378, f1: 0.8525, edges-spr2_loss: 0.2332
09/16 08:24:08 AM: ***** Step 2200 / Validation 22 *****
09/16 08:24:08 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:24:08 AM: Validating...
09/16 08:24:09 AM: Updating LR scheduler:
09/16 08:24:09 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:24:09 AM: 	# validation passes without improvement: 3
09/16 08:24:09 AM: edges-spr2_loss: training: 0.231366 validation: 0.321176
09/16 08:24:09 AM: macro_avg: validation: 0.821939
09/16 08:24:09 AM: micro_avg: validation: 0.000000
09/16 08:24:09 AM: edges-spr2_mcc: training: 0.774903 validation: 0.719105
09/16 08:24:09 AM: edges-spr2_acc: training: 0.128407 validation: 0.071429
09/16 08:24:09 AM: edges-spr2_precision: training: 0.869861 validation: 0.836600
09/16 08:24:09 AM: edges-spr2_recall: training: 0.841983 validation: 0.807782
09/16 08:24:09 AM: edges-spr2_f1: training: 0.855695 validation: 0.821939
09/16 08:24:09 AM: Global learning rate: 1.25e-05
09/16 08:24:09 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:24:11 AM: Update 2234: task edges-spr2, batch 34 (2234): mcc: 0.7761, acc: 0.1184, precision: 0.8705, recall: 0.8425, f1: 0.8562, edges-spr2_loss: 0.2301
09/16 08:24:17 AM: ***** Step 2300 / Validation 23 *****
09/16 08:24:17 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:24:17 AM: Validating...
09/16 08:24:18 AM: Updating LR scheduler:
09/16 08:24:18 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:24:18 AM: 	# validation passes without improvement: 0
09/16 08:24:18 AM: edges-spr2_loss: training: 0.230653 validation: 0.321184
09/16 08:24:18 AM: macro_avg: validation: 0.823275
09/16 08:24:18 AM: micro_avg: validation: 0.000000
09/16 08:24:18 AM: edges-spr2_mcc: training: 0.773617 validation: 0.720812
09/16 08:24:18 AM: edges-spr2_acc: training: 0.125485 validation: 0.077778
09/16 08:24:18 AM: edges-spr2_precision: training: 0.869213 validation: 0.836184
09/16 08:24:18 AM: edges-spr2_recall: training: 0.841233 validation: 0.810759
09/16 08:24:18 AM: edges-spr2_f1: training: 0.854994 validation: 0.823275
09/16 08:24:18 AM: Global learning rate: 6.25e-06
09/16 08:24:18 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:24:21 AM: Update 2338: task edges-spr2, batch 38 (2338): mcc: 0.7699, acc: 0.1214, precision: 0.8642, recall: 0.8405, f1: 0.8522, edges-spr2_loss: 0.2354
09/16 08:24:26 AM: ***** Step 2400 / Validation 24 *****
09/16 08:24:26 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:24:26 AM: Validating...
09/16 08:24:27 AM: Updating LR scheduler:
09/16 08:24:27 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:24:27 AM: 	# validation passes without improvement: 1
09/16 08:24:27 AM: edges-spr2_loss: training: 0.228093 validation: 0.321431
09/16 08:24:27 AM: macro_avg: validation: 0.823059
09/16 08:24:27 AM: micro_avg: validation: 0.000000
09/16 08:24:27 AM: edges-spr2_mcc: training: 0.777964 validation: 0.720470
09/16 08:24:27 AM: edges-spr2_acc: training: 0.135325 validation: 0.074603
09/16 08:24:27 AM: edges-spr2_precision: training: 0.870209 validation: 0.835965
09/16 08:24:27 AM: edges-spr2_recall: training: 0.845544 validation: 0.810546
09/16 08:24:27 AM: edges-spr2_f1: training: 0.857699 validation: 0.823059
09/16 08:24:27 AM: Global learning rate: 6.25e-06
09/16 08:24:27 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:24:32 AM: Update 2451: task edges-spr2, batch 51 (2451): mcc: 0.7759, acc: 0.1271, precision: 0.8697, recall: 0.8436, f1: 0.8565, edges-spr2_loss: 0.2313
09/16 08:24:35 AM: ***** Step 2500 / Validation 25 *****
09/16 08:24:35 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:24:35 AM: Validating...
09/16 08:24:36 AM: Updating LR scheduler:
09/16 08:24:36 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:24:36 AM: 	# validation passes without improvement: 2
09/16 08:24:36 AM: Ran out of early stopping patience. Stopping training.
09/16 08:24:36 AM: edges-spr2_loss: training: 0.229745 validation: 0.321779
09/16 08:24:36 AM: macro_avg: validation: 0.823250
09/16 08:24:36 AM: micro_avg: validation: 0.000000
09/16 08:24:36 AM: edges-spr2_mcc: training: 0.777104 validation: 0.720920
09/16 08:24:36 AM: edges-spr2_acc: training: 0.130257 validation: 0.074603
09/16 08:24:36 AM: edges-spr2_precision: training: 0.870190 validation: 0.836811
09/16 08:24:36 AM: edges-spr2_recall: training: 0.844893 validation: 0.810121
09/16 08:24:36 AM: edges-spr2_f1: training: 0.857355 validation: 0.823250
09/16 08:24:36 AM: Global learning rate: 6.25e-06
09/16 08:24:36 AM: Saving checkpoints to: ./experiments/spr2-None-mix/run
09/16 08:24:36 AM: Stopped training after 25 validation checks
09/16 08:24:36 AM: Trained edges-spr2 for 2500 batches or 35.714 epochs
09/16 08:24:36 AM: ***** VALIDATION RESULTS *****
09/16 08:24:36 AM: edges-spr2_f1 (for best val pass 15): edges-spr2_loss: 0.31748, macro_avg: 0.82574, micro_avg: 0.00000, edges-spr2_mcc: 0.72473, edges-spr2_acc: 0.07460, edges-spr2_precision: 0.83878, edges-spr2_recall: 0.81310, edges-spr2_f1: 0.82574
09/16 08:24:36 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.34000, macro_avg: 0.80270, micro_avg: 0.00000, edges-spr2_mcc: 0.69852, edges-spr2_acc: 0.08889, edges-spr2_precision: 0.85216, edges-spr2_recall: 0.75866, edges-spr2_f1: 0.80270
09/16 08:24:36 AM: macro_avg (for best val pass 15): edges-spr2_loss: 0.31748, macro_avg: 0.82574, micro_avg: 0.00000, edges-spr2_mcc: 0.72473, edges-spr2_acc: 0.07460, edges-spr2_precision: 0.83878, edges-spr2_recall: 0.81310, edges-spr2_f1: 0.82574
09/16 08:24:36 AM: Evaluating...
09/16 08:24:36 AM: Loaded model state from ./experiments/spr2-None-mix/run/edges-spr2/model_state_target_train_val_15.best.th
09/16 08:24:36 AM: Evaluating on: edges-spr2, split: val
09/16 08:24:37 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:24:37 AM: Finished evaluating on: edges-spr2
09/16 08:24:37 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:24:37 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-None-mix/run
09/16 08:24:37 AM: Wrote all preds for split 'val' to ./experiments/spr2-None-mix/run
09/16 08:24:37 AM: Evaluating on: edges-spr2, split: test
09/16 08:24:38 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:24:38 AM: Finished evaluating on: edges-spr2
09/16 08:24:38 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:24:38 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-None-mix/run
09/16 08:24:38 AM: Wrote all preds for split 'test' to ./experiments/spr2-None-mix/run
09/16 08:24:38 AM: Writing results for split 'val' to ./experiments/spr2-None-mix/results.tsv
09/16 08:24:38 AM: micro_avg: 0.000, macro_avg: 0.826, edges-spr2_mcc: 0.725, edges-spr2_acc: 0.075, edges-spr2_precision: 0.839, edges-spr2_recall: 0.813, edges-spr2_f1: 0.826
09/16 08:24:38 AM: Done!
09/16 08:24:38 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
