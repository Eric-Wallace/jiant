09/16 08:35:00 AM: Git branch: master
09/16 08:35:00 AM: Git SHA: a6b97574b819abe0c17f2f3300d1097e5c87dbde
09/16 08:35:00 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-sts-top/",
  "exp_name": "experiments/rel-semeval-sts-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-sts-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/sts",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/rel-semeval-sts-top__run",
  "run_dir": "./experiments/rel-semeval-sts-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:35:00 AM: Saved config to ./experiments/rel-semeval-sts-top/run/params.conf
09/16 08:35:00 AM: Using random seed 1234
09/16 08:35:00 AM: Using GPU 0
09/16 08:35:00 AM: Loading tasks...
09/16 08:35:00 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-sts-top/
09/16 08:35:00 AM: 	Creating task edges-rel-semeval from scratch.
09/16 08:35:00 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 08:35:00 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 08:35:00 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 08:35:01 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 08:35:01 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 08:35:01 AM: 	Building vocab from scratch.
09/16 08:35:01 AM: 	Counting units for task edges-rel-semeval.
09/16 08:35:01 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 08:35:03 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:03 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:35:03 AM: 	Saved vocab to ./experiments/rel-semeval-sts-top/vocab
09/16 08:35:03 AM: Loading token dictionary from ./experiments/rel-semeval-sts-top/vocab.
09/16 08:35:03 AM: 	Loaded vocab from ./experiments/rel-semeval-sts-top/vocab
09/16 08:35:03 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:35:03 AM: 	Vocab namespace tokens: size 16020
09/16 08:35:03 AM: 	Vocab namespace chars: size 59
09/16 08:35:03 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 08:35:03 AM: 	Finished building vocab.
09/16 08:35:03 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 08:35:04 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-sts-top/preproc/edges-rel-semeval__train_data
09/16 08:35:04 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 08:35:04 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-sts-top/preproc/edges-rel-semeval__val_data
09/16 08:35:04 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 08:35:04 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-sts-top/preproc/edges-rel-semeval__test_data
09/16 08:35:04 AM: 	Finished indexing tasks
09/16 08:35:04 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 08:35:04 AM: 	  Training on 
09/16 08:35:04 AM: 	  Evaluating on edges-rel-semeval
09/16 08:35:04 AM: 	Finished loading tasks in 3.737s
09/16 08:35:04 AM: 	 Tasks: ['edges-rel-semeval']
09/16 08:35:04 AM: Building model...
09/16 08:35:04 AM: Using BERT model (bert-base-uncased).
09/16 08:35:04 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:35:04 AM: models/sts
09/16 08:35:04 AM: loading configuration file models/sts/config.json
09/16 08:35:04 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "sts-b",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 1,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:35:04 AM: loading weights file models/sts/pytorch_model.bin
09/16 08:35:07 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmp3txx2kwj
09/16 08:35:09 AM: copying /tmp/tmp3txx2kwj to cache at ./experiments/rel-semeval-sts-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:09 AM: creating metadata file for ./experiments/rel-semeval-sts-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:09 AM: removing temp file /tmp/tmp3txx2kwj
09/16 08:35:09 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-sts-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:09 AM: Initializing parameters
09/16 08:35:09 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:35:09 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:35:09 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:35:09 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:35:09 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 08:35:13 AM: Model specification:
09/16 08:35:13 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 08:35:13 AM: Model parameters:
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 08:35:13 AM: Total number of parameters: 110143763 (1.10144e+08)
09/16 08:35:13 AM: Number of trainable parameters: 661523 (661523)
09/16 08:35:13 AM: Finished building model in 9.189s
09/16 08:35:13 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 08:35:14 AM: patience = 9
09/16 08:35:14 AM: val_interval = 100
09/16 08:35:14 AM: max_vals = 100
09/16 08:35:14 AM: cuda_device = 0
09/16 08:35:14 AM: grad_norm = 5.0
09/16 08:35:14 AM: grad_clipping = None
09/16 08:35:14 AM: lr_decay = 0.99
09/16 08:35:14 AM: min_lr = 1e-06
09/16 08:35:14 AM: keep_all_checkpoints = 0
09/16 08:35:14 AM: val_data_limit = 5000
09/16 08:35:14 AM: max_epochs = -1
09/16 08:35:14 AM: dec_val_scale = 250
09/16 08:35:14 AM: training_data_fraction = 1
09/16 08:35:14 AM: type = adam
09/16 08:35:14 AM: parameter_groups = None
09/16 08:35:14 AM: Number of trainable parameters: 661523
09/16 08:35:14 AM: infer_type_and_cast = True
09/16 08:35:14 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:14 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:14 AM: lr = 0.0001
09/16 08:35:14 AM: amsgrad = True
09/16 08:35:14 AM: type = reduce_on_plateau
09/16 08:35:14 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:14 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:14 AM: mode = max
09/16 08:35:14 AM: factor = 0.5
09/16 08:35:14 AM: patience = 3
09/16 08:35:14 AM: threshold = 0.0001
09/16 08:35:14 AM: threshold_mode = abs
09/16 08:35:14 AM: verbose = True
09/16 08:35:14 AM: type = adam
09/16 08:35:14 AM: parameter_groups = None
09/16 08:35:14 AM: Number of trainable parameters: 661523
09/16 08:35:14 AM: infer_type_and_cast = True
09/16 08:35:14 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:14 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:14 AM: lr = 0.0001
09/16 08:35:14 AM: amsgrad = True
09/16 08:35:14 AM: type = reduce_on_plateau
09/16 08:35:14 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:14 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:14 AM: mode = max
09/16 08:35:14 AM: factor = 0.5
09/16 08:35:14 AM: patience = 3
09/16 08:35:14 AM: threshold = 0.0001
09/16 08:35:14 AM: threshold_mode = abs
09/16 08:35:14 AM: verbose = True
09/16 08:35:14 AM: Starting training without restoring from a checkpoint.
09/16 08:35:14 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 08:35:14 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 08:35:19 AM: ***** Step 100 / Validation 1 *****
09/16 08:35:19 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:19 AM: Validating...
09/16 08:35:22 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:22 AM: Best result seen so far for micro.
09/16 08:35:22 AM: Best result seen so far for macro.
09/16 08:35:22 AM: Updating LR scheduler:
09/16 08:35:22 AM: 	Best result seen so far for macro_avg: 0.000
09/16 08:35:22 AM: 	# validation passes without improvement: 0
09/16 08:35:22 AM: edges-rel-semeval_loss: training: 0.232893 validation: 0.182259
09/16 08:35:22 AM: macro_avg: validation: 0.000000
09/16 08:35:22 AM: micro_avg: validation: 0.000000
09/16 08:35:22 AM: edges-rel-semeval_mcc: training: 0.010231 validation: 0.000000
09/16 08:35:22 AM: edges-rel-semeval_acc: training: 0.003154 validation: 0.000000
09/16 08:35:22 AM: edges-rel-semeval_precision: training: 0.074355 validation: 0.000000
09/16 08:35:22 AM: edges-rel-semeval_recall: training: 0.015453 validation: 0.000000
09/16 08:35:22 AM: edges-rel-semeval_f1: training: 0.025587 validation: 0.000000
09/16 08:35:22 AM: Global learning rate: 0.0001
09/16 08:35:22 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:35:24 AM: Update 146: task edges-rel-semeval, batch 46 (146): mcc: 0.0328, acc: 0.0020, precision: 0.6000, recall: 0.0020, f1: 0.0041, edges-rel-semeval_loss: 0.1835
09/16 08:35:27 AM: ***** Step 200 / Validation 2 *****
09/16 08:35:27 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:27 AM: Validating...
09/16 08:35:29 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:29 AM: Best result seen so far for macro.
09/16 08:35:29 AM: Updating LR scheduler:
09/16 08:35:29 AM: 	Best result seen so far for macro_avg: 0.105
09/16 08:35:29 AM: 	# validation passes without improvement: 0
09/16 08:35:29 AM: edges-rel-semeval_loss: training: 0.177403 validation: 0.154346
09/16 08:35:29 AM: macro_avg: validation: 0.105090
09/16 08:35:29 AM: micro_avg: validation: 0.000000
09/16 08:35:29 AM: edges-rel-semeval_mcc: training: 0.083397 validation: 0.220624
09/16 08:35:29 AM: edges-rel-semeval_acc: training: 0.009062 validation: 0.055701
09/16 08:35:29 AM: edges-rel-semeval_precision: training: 0.828571 validation: 0.927536
09/16 08:35:29 AM: edges-rel-semeval_recall: training: 0.009062 validation: 0.055701
09/16 08:35:29 AM: edges-rel-semeval_f1: training: 0.017929 validation: 0.105090
09/16 08:35:29 AM: Global learning rate: 0.0001
09/16 08:35:29 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:35:34 AM: Update 278: task edges-rel-semeval, batch 78 (278): mcc: 0.2690, acc: 0.0928, precision: 0.8233, recall: 0.0944, f1: 0.1695, edges-rel-semeval_loss: 0.1536
09/16 08:35:35 AM: ***** Step 300 / Validation 3 *****
09/16 08:35:35 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:35 AM: Validating...
09/16 08:35:38 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:38 AM: Best result seen so far for macro.
09/16 08:35:38 AM: Updating LR scheduler:
09/16 08:35:38 AM: 	Best result seen so far for macro_avg: 0.259
09/16 08:35:38 AM: 	# validation passes without improvement: 0
09/16 08:35:38 AM: edges-rel-semeval_loss: training: 0.152053 validation: 0.131266
09/16 08:35:38 AM: macro_avg: validation: 0.259121
09/16 08:35:38 AM: micro_avg: validation: 0.000000
09/16 08:35:38 AM: edges-rel-semeval_mcc: training: 0.277416 validation: 0.358017
09/16 08:35:38 AM: edges-rel-semeval_acc: training: 0.099968 validation: 0.150566
09/16 08:35:38 AM: edges-rel-semeval_precision: training: 0.808458 validation: 0.896907
09/16 08:35:38 AM: edges-rel-semeval_recall: training: 0.102491 validation: 0.151436
09/16 08:35:38 AM: edges-rel-semeval_f1: training: 0.181920 validation: 0.259121
09/16 08:35:38 AM: Global learning rate: 0.0001
09/16 08:35:38 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:35:42 AM: ***** Step 400 / Validation 4 *****
09/16 08:35:42 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:42 AM: Validating...
09/16 08:35:44 AM: Evaluate: task edges-rel-semeval, batch 29 (36): mcc: 0.4953, acc: 0.2866, precision: 0.8933, recall: 0.2888, f1: 0.4365, edges-rel-semeval_loss: 0.1127
09/16 08:35:45 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:45 AM: Best result seen so far for macro.
09/16 08:35:45 AM: Updating LR scheduler:
09/16 08:35:45 AM: 	Best result seen so far for macro_avg: 0.413
09/16 08:35:45 AM: 	# validation passes without improvement: 0
09/16 08:35:45 AM: edges-rel-semeval_loss: training: 0.131102 validation: 0.115528
09/16 08:35:45 AM: macro_avg: validation: 0.413102
09/16 08:35:45 AM: micro_avg: validation: 0.000000
09/16 08:35:45 AM: edges-rel-semeval_mcc: training: 0.406279 validation: 0.476865
09/16 08:35:45 AM: edges-rel-semeval_acc: training: 0.207500 validation: 0.267189
09/16 08:35:45 AM: edges-rel-semeval_precision: training: 0.825666 validation: 0.890490
09/16 08:35:45 AM: edges-rel-semeval_recall: training: 0.213125 validation: 0.268930
09/16 08:35:45 AM: edges-rel-semeval_f1: training: 0.338798 validation: 0.413102
09/16 08:35:45 AM: Global learning rate: 0.0001
09/16 08:35:45 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:35:50 AM: ***** Step 500 / Validation 5 *****
09/16 08:35:50 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:50 AM: Validating...
09/16 08:35:53 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:53 AM: Best result seen so far for macro.
09/16 08:35:53 AM: Updating LR scheduler:
09/16 08:35:53 AM: 	Best result seen so far for macro_avg: 0.476
09/16 08:35:53 AM: 	# validation passes without improvement: 0
09/16 08:35:53 AM: edges-rel-semeval_loss: training: 0.120601 validation: 0.105756
09/16 08:35:53 AM: macro_avg: validation: 0.476069
09/16 08:35:53 AM: micro_avg: validation: 0.000000
09/16 08:35:53 AM: edges-rel-semeval_mcc: training: 0.477285 validation: 0.525409
09/16 08:35:53 AM: edges-rel-semeval_acc: training: 0.276254 validation: 0.320279
09/16 08:35:53 AM: edges-rel-semeval_precision: training: 0.839631 validation: 0.892344
09/16 08:35:53 AM: edges-rel-semeval_recall: training: 0.287291 validation: 0.324630
09/16 08:35:53 AM: edges-rel-semeval_f1: training: 0.428102 validation: 0.476069
09/16 08:35:53 AM: Global learning rate: 0.0001
09/16 08:35:53 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:35:54 AM: Update 527: task edges-rel-semeval, batch 27 (527): mcc: 0.5153, acc: 0.3252, precision: 0.8277, recall: 0.3391, f1: 0.4811, edges-rel-semeval_loss: 0.1101
09/16 08:35:58 AM: ***** Step 600 / Validation 6 *****
09/16 08:35:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:58 AM: Validating...
09/16 08:36:01 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:01 AM: Best result seen so far for macro.
09/16 08:36:01 AM: Updating LR scheduler:
09/16 08:36:01 AM: 	Best result seen so far for macro_avg: 0.550
09/16 08:36:01 AM: 	# validation passes without improvement: 0
09/16 08:36:01 AM: edges-rel-semeval_loss: training: 0.108400 validation: 0.097505
09/16 08:36:01 AM: macro_avg: validation: 0.550000
09/16 08:36:01 AM: micro_avg: validation: 0.000000
09/16 08:36:01 AM: edges-rel-semeval_mcc: training: 0.535351 validation: 0.577993
09/16 08:36:01 AM: edges-rel-semeval_acc: training: 0.350313 validation: 0.396867
09/16 08:36:01 AM: edges-rel-semeval_precision: training: 0.836469 validation: 0.870057
09/16 08:36:01 AM: edges-rel-semeval_recall: training: 0.361250 validation: 0.402089
09/16 08:36:01 AM: edges-rel-semeval_f1: training: 0.504583 validation: 0.550000
09/16 08:36:01 AM: Global learning rate: 0.0001
09/16 08:36:01 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:36:04 AM: Update 660: task edges-rel-semeval, batch 60 (660): mcc: 0.5621, acc: 0.3813, precision: 0.8348, recall: 0.3982, f1: 0.5392, edges-rel-semeval_loss: 0.1020
09/16 08:36:06 AM: ***** Step 700 / Validation 7 *****
09/16 08:36:06 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:06 AM: Validating...
09/16 08:36:09 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:09 AM: Best result seen so far for macro.
09/16 08:36:09 AM: Updating LR scheduler:
09/16 08:36:09 AM: 	Best result seen so far for macro_avg: 0.597
09/16 08:36:09 AM: 	# validation passes without improvement: 0
09/16 08:36:09 AM: edges-rel-semeval_loss: training: 0.101730 validation: 0.091020
09/16 08:36:09 AM: macro_avg: validation: 0.596672
09/16 08:36:09 AM: micro_avg: validation: 0.000000
09/16 08:36:09 AM: edges-rel-semeval_mcc: training: 0.569421 validation: 0.616244
09/16 08:36:09 AM: edges-rel-semeval_acc: training: 0.391990 validation: 0.445605
09/16 08:36:09 AM: edges-rel-semeval_precision: training: 0.833548 validation: 0.875421
09/16 08:36:09 AM: edges-rel-semeval_recall: training: 0.409019 validation: 0.452567
09/16 08:36:09 AM: edges-rel-semeval_f1: training: 0.548762 validation: 0.596672
09/16 08:36:09 AM: Global learning rate: 0.0001
09/16 08:36:09 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:36:14 AM: ***** Step 800 / Validation 8 *****
09/16 08:36:14 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:14 AM: Validating...
09/16 08:36:14 AM: Evaluate: task edges-rel-semeval, batch 4 (36): mcc: 0.6951, acc: 0.5625, precision: 0.8889, recall: 0.5625, f1: 0.6890, edges-rel-semeval_loss: 0.0754
09/16 08:36:17 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:17 AM: Best result seen so far for macro.
09/16 08:36:17 AM: Updating LR scheduler:
09/16 08:36:17 AM: 	Best result seen so far for macro_avg: 0.627
09/16 08:36:17 AM: 	# validation passes without improvement: 0
09/16 08:36:17 AM: edges-rel-semeval_loss: training: 0.095587 validation: 0.087571
09/16 08:36:17 AM: macro_avg: validation: 0.627166
09/16 08:36:17 AM: micro_avg: validation: 0.000000
09/16 08:36:17 AM: edges-rel-semeval_mcc: training: 0.608233 validation: 0.641243
09/16 08:36:17 AM: edges-rel-semeval_acc: training: 0.442188 validation: 0.479547
09/16 08:36:17 AM: edges-rel-semeval_precision: training: 0.837196 validation: 0.876562
09/16 08:36:17 AM: edges-rel-semeval_recall: training: 0.462813 validation: 0.488251
09/16 08:36:17 AM: edges-rel-semeval_f1: training: 0.596096 validation: 0.627166
09/16 08:36:17 AM: Global learning rate: 0.0001
09/16 08:36:17 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:36:23 AM: ***** Step 900 / Validation 9 *****
09/16 08:36:23 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:23 AM: Validating...
09/16 08:36:24 AM: Evaluate: task edges-rel-semeval, batch 18 (36): mcc: 0.7043, acc: 0.5642, precision: 0.8922, recall: 0.5747, f1: 0.6990, edges-rel-semeval_loss: 0.0789
09/16 08:36:26 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:26 AM: Best result seen so far for macro.
09/16 08:36:26 AM: Updating LR scheduler:
09/16 08:36:26 AM: 	Best result seen so far for macro_avg: 0.646
09/16 08:36:26 AM: 	# validation passes without improvement: 0
09/16 08:36:26 AM: edges-rel-semeval_loss: training: 0.093420 validation: 0.084925
09/16 08:36:26 AM: macro_avg: validation: 0.646154
09/16 08:36:26 AM: micro_avg: validation: 0.000000
09/16 08:36:26 AM: edges-rel-semeval_mcc: training: 0.615528 validation: 0.656864
09/16 08:36:26 AM: edges-rel-semeval_acc: training: 0.450016 validation: 0.502176
09/16 08:36:26 AM: edges-rel-semeval_precision: training: 0.832507 validation: 0.876304
09/16 08:36:26 AM: edges-rel-semeval_recall: training: 0.476506 validation: 0.511749
09/16 08:36:26 AM: edges-rel-semeval_f1: training: 0.606097 validation: 0.646154
09/16 08:36:26 AM: Global learning rate: 0.0001
09/16 08:36:26 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:36:31 AM: ***** Step 1000 / Validation 10 *****
09/16 08:36:31 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:31 AM: Validating...
09/16 08:36:34 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:34 AM: Best result seen so far for macro.
09/16 08:36:34 AM: Updating LR scheduler:
09/16 08:36:34 AM: 	Best result seen so far for macro_avg: 0.682
09/16 08:36:34 AM: 	# validation passes without improvement: 0
09/16 08:36:34 AM: edges-rel-semeval_loss: training: 0.085382 validation: 0.081956
09/16 08:36:34 AM: macro_avg: validation: 0.682147
09/16 08:36:34 AM: micro_avg: validation: 0.000000
09/16 08:36:34 AM: edges-rel-semeval_mcc: training: 0.661445 validation: 0.680861
09/16 08:36:34 AM: edges-rel-semeval_acc: training: 0.509375 validation: 0.547433
09/16 08:36:34 AM: edges-rel-semeval_precision: training: 0.855349 validation: 0.837769
09/16 08:36:34 AM: edges-rel-semeval_recall: training: 0.532188 validation: 0.575283
09/16 08:36:34 AM: edges-rel-semeval_f1: training: 0.656136 validation: 0.682147
09/16 08:36:34 AM: Global learning rate: 0.0001
09/16 08:36:34 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:36:34 AM: Update 1011: task edges-rel-semeval, batch 11 (1011): mcc: 0.6568, acc: 0.5000, precision: 0.8333, recall: 0.5398, f1: 0.6552, edges-rel-semeval_loss: 0.0870
09/16 08:36:40 AM: ***** Step 1100 / Validation 11 *****
09/16 08:36:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:40 AM: Validating...
09/16 08:36:43 AM: Updating LR scheduler:
09/16 08:36:43 AM: 	Best result seen so far for macro_avg: 0.682
09/16 08:36:43 AM: 	# validation passes without improvement: 1
09/16 08:36:43 AM: edges-rel-semeval_loss: training: 0.084576 validation: 0.082441
09/16 08:36:43 AM: macro_avg: validation: 0.664499
09/16 08:36:43 AM: micro_avg: validation: 0.000000
09/16 08:36:43 AM: edges-rel-semeval_mcc: training: 0.656689 validation: 0.672995
09/16 08:36:43 AM: edges-rel-semeval_acc: training: 0.505203 validation: 0.524804
09/16 08:36:43 AM: edges-rel-semeval_precision: training: 0.835127 validation: 0.880747
09/16 08:36:43 AM: edges-rel-semeval_recall: training: 0.538316 validation: 0.533507
09/16 08:36:43 AM: edges-rel-semeval_f1: training: 0.654650 validation: 0.664499
09/16 08:36:43 AM: Global learning rate: 0.0001
09/16 08:36:43 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:36:44 AM: Update 1120: task edges-rel-semeval, batch 20 (1120): mcc: 0.6844, acc: 0.5406, precision: 0.8528, recall: 0.5703, f1: 0.6835, edges-rel-semeval_loss: 0.0803
09/16 08:36:49 AM: ***** Step 1200 / Validation 12 *****
09/16 08:36:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:49 AM: Validating...
09/16 08:36:52 AM: Updating LR scheduler:
09/16 08:36:52 AM: 	Best result seen so far for macro_avg: 0.682
09/16 08:36:52 AM: 	# validation passes without improvement: 2
09/16 08:36:52 AM: edges-rel-semeval_loss: training: 0.081828 validation: 0.078975
09/16 08:36:52 AM: macro_avg: validation: 0.668783
09/16 08:36:52 AM: micro_avg: validation: 0.000000
09/16 08:36:52 AM: edges-rel-semeval_mcc: training: 0.680715 validation: 0.671776
09/16 08:36:52 AM: edges-rel-semeval_acc: training: 0.532500 validation: 0.532637
09/16 08:36:52 AM: edges-rel-semeval_precision: training: 0.850964 validation: 0.852901
09/16 08:36:52 AM: edges-rel-semeval_recall: training: 0.565625 validation: 0.550044
09/16 08:36:52 AM: edges-rel-semeval_f1: training: 0.679557 validation: 0.668783
09/16 08:36:52 AM: Global learning rate: 0.0001
09/16 08:36:52 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:36:54 AM: Update 1243: task edges-rel-semeval, batch 43 (1243): mcc: 0.6761, acc: 0.5342, precision: 0.8418, recall: 0.5647, f1: 0.6759, edges-rel-semeval_loss: 0.0803
09/16 08:36:58 AM: ***** Step 1300 / Validation 13 *****
09/16 08:36:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:58 AM: Validating...
09/16 08:37:01 AM: Best result seen so far for edges-rel-semeval.
09/16 08:37:01 AM: Best result seen so far for macro.
09/16 08:37:01 AM: Updating LR scheduler:
09/16 08:37:01 AM: 	Best result seen so far for macro_avg: 0.691
09/16 08:37:01 AM: 	# validation passes without improvement: 0
09/16 08:37:01 AM: edges-rel-semeval_loss: training: 0.080285 validation: 0.078546
09/16 08:37:01 AM: macro_avg: validation: 0.690985
09/16 08:37:01 AM: micro_avg: validation: 0.000000
09/16 08:37:01 AM: edges-rel-semeval_mcc: training: 0.672025 validation: 0.692235
09/16 08:37:01 AM: edges-rel-semeval_acc: training: 0.528225 validation: 0.557876
09/16 08:37:01 AM: edges-rel-semeval_precision: training: 0.837253 validation: 0.861039
09/16 08:37:01 AM: edges-rel-semeval_recall: training: 0.561337 validation: 0.577024
09/16 08:37:01 AM: edges-rel-semeval_f1: training: 0.672079 validation: 0.690985
09/16 08:37:01 AM: Global learning rate: 0.0001
09/16 08:37:01 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:37:04 AM: Update 1355: task edges-rel-semeval, batch 55 (1355): mcc: 0.6780, acc: 0.5307, precision: 0.8460, recall: 0.5648, f1: 0.6773, edges-rel-semeval_loss: 0.0801
09/16 08:37:07 AM: ***** Step 1400 / Validation 14 *****
09/16 08:37:07 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:07 AM: Validating...
09/16 08:37:09 AM: Best result seen so far for edges-rel-semeval.
09/16 08:37:09 AM: Best result seen so far for macro.
09/16 08:37:09 AM: Updating LR scheduler:
09/16 08:37:09 AM: 	Best result seen so far for macro_avg: 0.693
09/16 08:37:09 AM: 	# validation passes without improvement: 0
09/16 08:37:09 AM: edges-rel-semeval_loss: training: 0.077899 validation: 0.076868
09/16 08:37:09 AM: macro_avg: validation: 0.693235
09/16 08:37:09 AM: micro_avg: validation: 0.000000
09/16 08:37:09 AM: edges-rel-semeval_mcc: training: 0.689516 validation: 0.695961
09/16 08:37:09 AM: edges-rel-semeval_acc: training: 0.545312 validation: 0.563098
09/16 08:37:09 AM: edges-rel-semeval_precision: training: 0.850275 validation: 0.872032
09/16 08:37:09 AM: edges-rel-semeval_recall: training: 0.580312 validation: 0.575283
09/16 08:37:09 AM: edges-rel-semeval_f1: training: 0.689822 validation: 0.693235
09/16 08:37:09 AM: Global learning rate: 0.0001
09/16 08:37:09 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:37:14 AM: ***** Step 1500 / Validation 15 *****
09/16 08:37:14 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:14 AM: Validating...
09/16 08:37:14 AM: Evaluate: task edges-rel-semeval, batch 2 (36): mcc: 0.7146, acc: 0.5938, precision: 0.8667, recall: 0.6094, f1: 0.7156, edges-rel-semeval_loss: 0.0643
09/16 08:37:17 AM: Best result seen so far for edges-rel-semeval.
09/16 08:37:17 AM: Best result seen so far for macro.
09/16 08:37:17 AM: Updating LR scheduler:
09/16 08:37:17 AM: 	Best result seen so far for macro_avg: 0.699
09/16 08:37:17 AM: 	# validation passes without improvement: 0
09/16 08:37:17 AM: edges-rel-semeval_loss: training: 0.076145 validation: 0.074841
09/16 08:37:17 AM: macro_avg: validation: 0.698846
09/16 08:37:17 AM: micro_avg: validation: 0.000000
09/16 08:37:17 AM: edges-rel-semeval_mcc: training: 0.699688 validation: 0.702069
09/16 08:37:17 AM: edges-rel-semeval_acc: training: 0.560937 validation: 0.566580
09/16 08:37:17 AM: edges-rel-semeval_precision: training: 0.852034 validation: 0.879789
09/16 08:37:17 AM: edges-rel-semeval_recall: training: 0.595625 validation: 0.579634
09/16 08:37:17 AM: edges-rel-semeval_f1: training: 0.701122 validation: 0.698846
09/16 08:37:17 AM: Global learning rate: 0.0001
09/16 08:37:17 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:37:23 AM: ***** Step 1600 / Validation 16 *****
09/16 08:37:23 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:23 AM: Validating...
09/16 08:37:24 AM: Evaluate: task edges-rel-semeval, batch 27 (36): mcc: 0.7332, acc: 0.6134, precision: 0.8867, recall: 0.6250, f1: 0.7332, edges-rel-semeval_loss: 0.0717
09/16 08:37:25 AM: Best result seen so far for edges-rel-semeval.
09/16 08:37:25 AM: Best result seen so far for macro.
09/16 08:37:25 AM: Updating LR scheduler:
09/16 08:37:25 AM: 	Best result seen so far for macro_avg: 0.705
09/16 08:37:25 AM: 	# validation passes without improvement: 0
09/16 08:37:25 AM: edges-rel-semeval_loss: training: 0.072785 validation: 0.075644
09/16 08:37:25 AM: macro_avg: validation: 0.705274
09/16 08:37:25 AM: micro_avg: validation: 0.000000
09/16 08:37:25 AM: edges-rel-semeval_mcc: training: 0.710293 validation: 0.705898
09/16 08:37:25 AM: edges-rel-semeval_acc: training: 0.575528 validation: 0.580505
09/16 08:37:25 AM: edges-rel-semeval_precision: training: 0.848393 validation: 0.868790
09/16 08:37:25 AM: edges-rel-semeval_recall: training: 0.615894 validation: 0.593560
09/16 08:37:25 AM: edges-rel-semeval_f1: training: 0.713685 validation: 0.705274
09/16 08:37:25 AM: Global learning rate: 0.0001
09/16 08:37:25 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:37:30 AM: ***** Step 1700 / Validation 17 *****
09/16 08:37:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:30 AM: Validating...
09/16 08:37:33 AM: Best result seen so far for edges-rel-semeval.
09/16 08:37:33 AM: Best result seen so far for macro.
09/16 08:37:33 AM: Updating LR scheduler:
09/16 08:37:33 AM: 	Best result seen so far for macro_avg: 0.710
09/16 08:37:33 AM: 	# validation passes without improvement: 0
09/16 08:37:33 AM: edges-rel-semeval_loss: training: 0.074699 validation: 0.074095
09/16 08:37:33 AM: macro_avg: validation: 0.710065
09/16 08:37:33 AM: micro_avg: validation: 0.000000
09/16 08:37:33 AM: edges-rel-semeval_mcc: training: 0.700975 validation: 0.705334
09/16 08:37:33 AM: edges-rel-semeval_acc: training: 0.567500 validation: 0.586597
09/16 08:37:33 AM: edges-rel-semeval_precision: training: 0.831708 validation: 0.836085
09/16 08:37:33 AM: edges-rel-semeval_recall: training: 0.613125 validation: 0.617058
09/16 08:37:33 AM: edges-rel-semeval_f1: training: 0.705882 validation: 0.710065
09/16 08:37:33 AM: Global learning rate: 0.0001
09/16 08:37:33 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:37:35 AM: Update 1721: task edges-rel-semeval, batch 21 (1721): mcc: 0.6989, acc: 0.5614, precision: 0.8337, recall: 0.6081, f1: 0.7032, edges-rel-semeval_loss: 0.0724
09/16 08:37:38 AM: ***** Step 1800 / Validation 18 *****
09/16 08:37:38 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:38 AM: Validating...
09/16 08:37:41 AM: Updating LR scheduler:
09/16 08:37:41 AM: 	Best result seen so far for macro_avg: 0.710
09/16 08:37:41 AM: 	# validation passes without improvement: 1
09/16 08:37:41 AM: edges-rel-semeval_loss: training: 0.072111 validation: 0.073962
09/16 08:37:41 AM: macro_avg: validation: 0.707366
09/16 08:37:41 AM: micro_avg: validation: 0.000000
09/16 08:37:41 AM: edges-rel-semeval_mcc: training: 0.707208 validation: 0.703681
09/16 08:37:41 AM: edges-rel-semeval_acc: training: 0.573321 validation: 0.582245
09/16 08:37:41 AM: edges-rel-semeval_precision: training: 0.833545 validation: 0.841537
09/16 08:37:41 AM: edges-rel-semeval_recall: training: 0.622201 validation: 0.610096
09/16 08:37:41 AM: edges-rel-semeval_f1: training: 0.712532 validation: 0.707366
09/16 08:37:41 AM: Global learning rate: 0.0001
09/16 08:37:41 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:37:45 AM: Update 1875: task edges-rel-semeval, batch 75 (1875): mcc: 0.7166, acc: 0.5858, precision: 0.8438, recall: 0.6300, f1: 0.7214, edges-rel-semeval_loss: 0.0711
09/16 08:37:46 AM: ***** Step 1900 / Validation 19 *****
09/16 08:37:46 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:46 AM: Validating...
09/16 08:37:48 AM: Updating LR scheduler:
09/16 08:37:48 AM: 	Best result seen so far for macro_avg: 0.710
09/16 08:37:48 AM: 	# validation passes without improvement: 2
09/16 08:37:48 AM: edges-rel-semeval_loss: training: 0.071404 validation: 0.072152
09/16 08:37:48 AM: macro_avg: validation: 0.703666
09/16 08:37:48 AM: micro_avg: validation: 0.000000
09/16 08:37:48 AM: edges-rel-semeval_mcc: training: 0.712728 validation: 0.701308
09/16 08:37:48 AM: edges-rel-semeval_acc: training: 0.581250 validation: 0.584856
09/16 08:37:48 AM: edges-rel-semeval_precision: training: 0.842682 validation: 0.847853
09/16 08:37:48 AM: edges-rel-semeval_recall: training: 0.624375 validation: 0.601393
09/16 08:37:48 AM: edges-rel-semeval_f1: training: 0.717286 validation: 0.703666
09/16 08:37:48 AM: Global learning rate: 0.0001
09/16 08:37:48 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:37:54 AM: ***** Step 2000 / Validation 20 *****
09/16 08:37:54 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:54 AM: Validating...
09/16 08:37:55 AM: Evaluate: task edges-rel-semeval, batch 6 (36): mcc: 0.7512, acc: 0.6354, precision: 0.8986, recall: 0.6458, f1: 0.7515, edges-rel-semeval_loss: 0.0591
09/16 08:37:57 AM: Best result seen so far for edges-rel-semeval.
09/16 08:37:57 AM: Best result seen so far for macro.
09/16 08:37:57 AM: Updating LR scheduler:
09/16 08:37:57 AM: 	Best result seen so far for macro_avg: 0.711
09/16 08:37:57 AM: 	# validation passes without improvement: 0
09/16 08:37:57 AM: edges-rel-semeval_loss: training: 0.068121 validation: 0.071877
09/16 08:37:57 AM: macro_avg: validation: 0.711042
09/16 08:37:57 AM: micro_avg: validation: 0.000000
09/16 08:37:57 AM: edges-rel-semeval_mcc: training: 0.730423 validation: 0.711635
09/16 08:37:57 AM: edges-rel-semeval_acc: training: 0.598865 validation: 0.582245
09/16 08:37:57 AM: edges-rel-semeval_precision: training: 0.853039 validation: 0.873257
09/16 08:37:57 AM: edges-rel-semeval_recall: training: 0.646168 validation: 0.599652
09/16 08:37:57 AM: edges-rel-semeval_f1: training: 0.735331 validation: 0.711042
09/16 08:37:57 AM: Global learning rate: 0.0001
09/16 08:37:57 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:38:02 AM: ***** Step 2100 / Validation 21 *****
09/16 08:38:02 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:02 AM: Validating...
09/16 08:38:04 AM: Best result seen so far for edges-rel-semeval.
09/16 08:38:04 AM: Best result seen so far for macro.
09/16 08:38:04 AM: Updating LR scheduler:
09/16 08:38:04 AM: 	Best result seen so far for macro_avg: 0.721
09/16 08:38:04 AM: 	# validation passes without improvement: 0
09/16 08:38:04 AM: edges-rel-semeval_loss: training: 0.067870 validation: 0.072118
09/16 08:38:04 AM: macro_avg: validation: 0.721470
09/16 08:38:04 AM: micro_avg: validation: 0.000000
09/16 08:38:04 AM: edges-rel-semeval_mcc: training: 0.733246 validation: 0.712669
09/16 08:38:04 AM: edges-rel-semeval_acc: training: 0.607187 validation: 0.592689
09/16 08:38:04 AM: edges-rel-semeval_precision: training: 0.855437 validation: 0.811752
09/16 08:38:04 AM: edges-rel-semeval_recall: training: 0.649063 validation: 0.649260
09/16 08:38:04 AM: edges-rel-semeval_f1: training: 0.738095 validation: 0.721470
09/16 08:38:04 AM: Global learning rate: 0.0001
09/16 08:38:04 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:38:05 AM: Update 2104: task edges-rel-semeval, batch 4 (2104): mcc: 0.6911, acc: 0.5391, precision: 0.7864, recall: 0.6328, f1: 0.7013, edges-rel-semeval_loss: 0.0699
09/16 08:38:10 AM: ***** Step 2200 / Validation 22 *****
09/16 08:38:10 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:10 AM: Validating...
09/16 08:38:13 AM: Updating LR scheduler:
09/16 08:38:13 AM: 	Best result seen so far for macro_avg: 0.721
09/16 08:38:13 AM: 	# validation passes without improvement: 1
09/16 08:38:13 AM: edges-rel-semeval_loss: training: 0.067751 validation: 0.070181
09/16 08:38:13 AM: macro_avg: validation: 0.714141
09/16 08:38:13 AM: micro_avg: validation: 0.000000
09/16 08:38:13 AM: edges-rel-semeval_mcc: training: 0.729222 validation: 0.711038
09/16 08:38:13 AM: edges-rel-semeval_acc: training: 0.602649 validation: 0.587467
09/16 08:38:13 AM: edges-rel-semeval_precision: training: 0.846914 validation: 0.850782
09/16 08:38:13 AM: edges-rel-semeval_recall: training: 0.649007 validation: 0.615318
09/16 08:38:13 AM: edges-rel-semeval_f1: training: 0.734869 validation: 0.714141
09/16 08:38:13 AM: Global learning rate: 0.0001
09/16 08:38:13 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:38:15 AM: Update 2240: task edges-rel-semeval, batch 40 (2240): mcc: 0.7417, acc: 0.6211, precision: 0.8529, recall: 0.6656, f1: 0.7477, edges-rel-semeval_loss: 0.0677
09/16 08:38:17 AM: ***** Step 2300 / Validation 23 *****
09/16 08:38:17 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:17 AM: Validating...
09/16 08:38:20 AM: Updating LR scheduler:
09/16 08:38:20 AM: 	Best result seen so far for macro_avg: 0.721
09/16 08:38:20 AM: 	# validation passes without improvement: 2
09/16 08:38:20 AM: edges-rel-semeval_loss: training: 0.066743 validation: 0.070259
09/16 08:38:20 AM: macro_avg: validation: 0.719090
09/16 08:38:20 AM: micro_avg: validation: 0.000000
09/16 08:38:20 AM: edges-rel-semeval_mcc: training: 0.738639 validation: 0.713043
09/16 08:38:20 AM: edges-rel-semeval_acc: training: 0.611563 validation: 0.601393
09/16 08:38:20 AM: edges-rel-semeval_precision: training: 0.854826 validation: 0.832761
09/16 08:38:20 AM: edges-rel-semeval_recall: training: 0.658750 validation: 0.632724
09/16 08:38:20 AM: edges-rel-semeval_f1: training: 0.744088 validation: 0.719090
09/16 08:38:20 AM: Global learning rate: 0.0001
09/16 08:38:20 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:38:25 AM: Update 2384: task edges-rel-semeval, batch 84 (2384): mcc: 0.7390, acc: 0.6138, precision: 0.8511, recall: 0.6623, f1: 0.7449, edges-rel-semeval_loss: 0.0646
09/16 08:38:25 AM: ***** Step 2400 / Validation 24 *****
09/16 08:38:25 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:25 AM: Validating...
09/16 08:38:28 AM: Updating LR scheduler:
09/16 08:38:28 AM: 	Best result seen so far for macro_avg: 0.721
09/16 08:38:28 AM: 	# validation passes without improvement: 3
09/16 08:38:28 AM: edges-rel-semeval_loss: training: 0.064537 validation: 0.070194
09/16 08:38:28 AM: macro_avg: validation: 0.710071
09/16 08:38:28 AM: micro_avg: validation: 0.000000
09/16 08:38:28 AM: edges-rel-semeval_mcc: training: 0.739461 validation: 0.707935
09/16 08:38:28 AM: edges-rel-semeval_acc: training: 0.613687 validation: 0.586597
09/16 08:38:28 AM: edges-rel-semeval_precision: training: 0.851072 validation: 0.854345
09/16 08:38:28 AM: edges-rel-semeval_recall: training: 0.663198 validation: 0.607485
09/16 08:38:28 AM: edges-rel-semeval_f1: training: 0.745480 validation: 0.710071
09/16 08:38:28 AM: Global learning rate: 0.0001
09/16 08:38:28 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:38:33 AM: ***** Step 2500 / Validation 25 *****
09/16 08:38:33 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:33 AM: Validating...
09/16 08:38:35 AM: Evaluate: task edges-rel-semeval, batch 30 (36): mcc: 0.7436, acc: 0.6406, precision: 0.8556, recall: 0.6667, f1: 0.7494, edges-rel-semeval_loss: 0.0666
09/16 08:38:35 AM: Best result seen so far for edges-rel-semeval.
09/16 08:38:35 AM: Best result seen so far for macro.
09/16 08:38:35 AM: Updating LR scheduler:
09/16 08:38:35 AM: 	Best result seen so far for macro_avg: 0.733
09/16 08:38:35 AM: 	# validation passes without improvement: 0
09/16 08:38:35 AM: edges-rel-semeval_loss: training: 0.064009 validation: 0.069852
09/16 08:38:35 AM: macro_avg: validation: 0.732839
09/16 08:38:35 AM: micro_avg: validation: 0.000000
09/16 08:38:35 AM: edges-rel-semeval_mcc: training: 0.755285 validation: 0.727386
09/16 08:38:35 AM: edges-rel-semeval_acc: training: 0.637813 validation: 0.617929
09/16 08:38:35 AM: edges-rel-semeval_precision: training: 0.866560 validation: 0.847032
09/16 08:38:35 AM: edges-rel-semeval_recall: training: 0.677813 validation: 0.645779
09/16 08:38:35 AM: edges-rel-semeval_f1: training: 0.760652 validation: 0.732839
09/16 08:38:35 AM: Global learning rate: 0.0001
09/16 08:38:35 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:38:41 AM: ***** Step 2600 / Validation 26 *****
09/16 08:38:41 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:41 AM: Validating...
09/16 08:38:43 AM: Updating LR scheduler:
09/16 08:38:43 AM: 	Best result seen so far for macro_avg: 0.733
09/16 08:38:43 AM: 	# validation passes without improvement: 1
09/16 08:38:43 AM: edges-rel-semeval_loss: training: 0.063722 validation: 0.069557
09/16 08:38:43 AM: macro_avg: validation: 0.727814
09/16 08:38:43 AM: micro_avg: validation: 0.000000
09/16 08:38:43 AM: edges-rel-semeval_mcc: training: 0.744615 validation: 0.722634
09/16 08:38:43 AM: edges-rel-semeval_acc: training: 0.624409 validation: 0.609225
09/16 08:38:43 AM: edges-rel-semeval_precision: training: 0.845820 validation: 0.845622
09/16 08:38:43 AM: edges-rel-semeval_recall: training: 0.676443 validation: 0.638816
09/16 08:38:43 AM: edges-rel-semeval_f1: training: 0.751708 validation: 0.727814
09/16 08:38:43 AM: Global learning rate: 0.0001
09/16 08:38:43 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:38:45 AM: Update 2631: task edges-rel-semeval, batch 31 (2631): mcc: 0.7472, acc: 0.6149, precision: 0.8562, recall: 0.6724, f1: 0.7532, edges-rel-semeval_loss: 0.0651
09/16 08:38:48 AM: ***** Step 2700 / Validation 27 *****
09/16 08:38:48 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:48 AM: Validating...
09/16 08:38:51 AM: Updating LR scheduler:
09/16 08:38:51 AM: 	Best result seen so far for macro_avg: 0.733
09/16 08:38:51 AM: 	# validation passes without improvement: 2
09/16 08:38:51 AM: edges-rel-semeval_loss: training: 0.063808 validation: 0.069146
09/16 08:38:51 AM: macro_avg: validation: 0.720163
09/16 08:38:51 AM: micro_avg: validation: 0.000000
09/16 08:38:51 AM: edges-rel-semeval_mcc: training: 0.747800 validation: 0.718387
09/16 08:38:51 AM: edges-rel-semeval_acc: training: 0.620313 validation: 0.597041
09/16 08:38:51 AM: edges-rel-semeval_precision: training: 0.857656 validation: 0.864634
09/16 08:38:51 AM: edges-rel-semeval_recall: training: 0.672188 validation: 0.617058
09/16 08:38:51 AM: edges-rel-semeval_f1: training: 0.753679 validation: 0.720163
09/16 08:38:51 AM: Global learning rate: 0.0001
09/16 08:38:51 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:38:55 AM: Update 2786: task edges-rel-semeval, batch 86 (2786): mcc: 0.7466, acc: 0.6283, precision: 0.8488, recall: 0.6773, f1: 0.7534, edges-rel-semeval_loss: 0.0643
09/16 08:38:56 AM: ***** Step 2800 / Validation 28 *****
09/16 08:38:56 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:56 AM: Validating...
09/16 08:38:59 AM: Best result seen so far for edges-rel-semeval.
09/16 08:38:59 AM: Best result seen so far for macro.
09/16 08:38:59 AM: Updating LR scheduler:
09/16 08:38:59 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:38:59 AM: 	# validation passes without improvement: 0
09/16 08:38:59 AM: edges-rel-semeval_loss: training: 0.064207 validation: 0.069859
09/16 08:38:59 AM: macro_avg: validation: 0.739830
09/16 08:38:59 AM: micro_avg: validation: 0.000000
09/16 08:38:59 AM: edges-rel-semeval_mcc: training: 0.744078 validation: 0.729754
09/16 08:38:59 AM: edges-rel-semeval_acc: training: 0.623463 validation: 0.630113
09/16 08:38:59 AM: edges-rel-semeval_precision: training: 0.850020 validation: 0.810363
09/16 08:38:59 AM: edges-rel-semeval_recall: training: 0.672028 validation: 0.680592
09/16 08:38:59 AM: edges-rel-semeval_f1: training: 0.750616 validation: 0.739830
09/16 08:38:59 AM: Global learning rate: 0.0001
09/16 08:38:59 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:39:03 AM: ***** Step 2900 / Validation 29 *****
09/16 08:39:03 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:39:03 AM: Validating...
09/16 08:39:05 AM: Evaluate: task edges-rel-semeval, batch 24 (36): mcc: 0.7438, acc: 0.6367, precision: 0.8757, recall: 0.6510, f1: 0.7468, edges-rel-semeval_loss: 0.0656
09/16 08:39:06 AM: Updating LR scheduler:
09/16 08:39:06 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:39:06 AM: 	# validation passes without improvement: 1
09/16 08:39:06 AM: edges-rel-semeval_loss: training: 0.060999 validation: 0.070570
09/16 08:39:06 AM: macro_avg: validation: 0.716886
09/16 08:39:06 AM: micro_avg: validation: 0.000000
09/16 08:39:06 AM: edges-rel-semeval_mcc: training: 0.750090 validation: 0.714121
09/16 08:39:06 AM: edges-rel-semeval_acc: training: 0.627812 validation: 0.600522
09/16 08:39:06 AM: edges-rel-semeval_precision: training: 0.848121 validation: 0.855247
09/16 08:39:06 AM: edges-rel-semeval_recall: training: 0.684062 validation: 0.617058
09/16 08:39:06 AM: edges-rel-semeval_f1: training: 0.757308 validation: 0.716886
09/16 08:39:06 AM: Global learning rate: 0.0001
09/16 08:39:06 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:39:11 AM: ***** Step 3000 / Validation 30 *****
09/16 08:39:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:39:11 AM: Validating...
09/16 08:39:13 AM: Updating LR scheduler:
09/16 08:39:13 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:39:13 AM: 	# validation passes without improvement: 2
09/16 08:39:13 AM: edges-rel-semeval_loss: training: 0.064048 validation: 0.069246
09/16 08:39:13 AM: macro_avg: validation: 0.726190
09/16 08:39:13 AM: micro_avg: validation: 0.000000
09/16 08:39:13 AM: edges-rel-semeval_mcc: training: 0.747236 validation: 0.720988
09/16 08:39:13 AM: edges-rel-semeval_acc: training: 0.625313 validation: 0.610966
09/16 08:39:13 AM: edges-rel-semeval_precision: training: 0.851910 validation: 0.844291
09/16 08:39:13 AM: edges-rel-semeval_recall: training: 0.675937 validation: 0.637076
09/16 08:39:13 AM: edges-rel-semeval_f1: training: 0.753790 validation: 0.726190
09/16 08:39:13 AM: Global learning rate: 0.0001
09/16 08:39:13 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:39:15 AM: Update 3021: task edges-rel-semeval, batch 21 (3021): mcc: 0.7407, acc: 0.6283, precision: 0.8395, recall: 0.6750, f1: 0.7483, edges-rel-semeval_loss: 0.0628
09/16 08:39:19 AM: ***** Step 3100 / Validation 31 *****
09/16 08:39:19 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:39:19 AM: Validating...
09/16 08:39:21 AM: Updating LR scheduler:
09/16 08:39:21 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:39:21 AM: 	# validation passes without improvement: 3
09/16 08:39:21 AM: edges-rel-semeval_loss: training: 0.060878 validation: 0.070769
09/16 08:39:21 AM: macro_avg: validation: 0.719101
09/16 08:39:21 AM: micro_avg: validation: 0.000000
09/16 08:39:21 AM: edges-rel-semeval_mcc: training: 0.756807 validation: 0.711405
09/16 08:39:21 AM: edges-rel-semeval_acc: training: 0.640807 validation: 0.595300
09/16 08:39:21 AM: edges-rel-semeval_precision: training: 0.857648 validation: 0.819599
09/16 08:39:21 AM: edges-rel-semeval_recall: training: 0.687796 validation: 0.640557
09/16 08:39:21 AM: edges-rel-semeval_f1: training: 0.763388 validation: 0.719101
09/16 08:39:21 AM: Global learning rate: 0.0001
09/16 08:39:21 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:39:25 AM: Update 3170: task edges-rel-semeval, batch 70 (3170): mcc: 0.7556, acc: 0.6415, precision: 0.8556, recall: 0.6875, f1: 0.7624, edges-rel-semeval_loss: 0.0631
09/16 08:39:27 AM: ***** Step 3200 / Validation 32 *****
09/16 08:39:27 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:39:27 AM: Validating...
09/16 08:39:29 AM: Updating LR scheduler:
09/16 08:39:29 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:39:29 AM: 	# validation passes without improvement: 0
09/16 08:39:29 AM: edges-rel-semeval_loss: training: 0.062211 validation: 0.070129
09/16 08:39:29 AM: macro_avg: validation: 0.725830
09/16 08:39:29 AM: micro_avg: validation: 0.000000
09/16 08:39:29 AM: edges-rel-semeval_mcc: training: 0.758520 validation: 0.720534
09/16 08:39:29 AM: edges-rel-semeval_acc: training: 0.641563 validation: 0.603133
09/16 08:39:29 AM: edges-rel-semeval_precision: training: 0.860829 validation: 0.843318
09/16 08:39:29 AM: edges-rel-semeval_recall: training: 0.688125 validation: 0.637076
09/16 08:39:29 AM: edges-rel-semeval_f1: training: 0.764849 validation: 0.725830
09/16 08:39:29 AM: Global learning rate: 5e-05
09/16 08:39:29 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:39:35 AM: ***** Step 3300 / Validation 33 *****
09/16 08:39:35 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:39:35 AM: Validating...
09/16 08:39:35 AM: Evaluate: task edges-rel-semeval, batch 3 (36): mcc: 0.8118, acc: 0.7083, precision: 0.9103, recall: 0.7396, f1: 0.8161, edges-rel-semeval_loss: 0.0553
09/16 08:39:37 AM: Updating LR scheduler:
09/16 08:39:37 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:39:37 AM: 	# validation passes without improvement: 1
09/16 08:39:37 AM: edges-rel-semeval_loss: training: 0.059245 validation: 0.068375
09/16 08:39:37 AM: macro_avg: validation: 0.731225
09/16 08:39:37 AM: micro_avg: validation: 0.000000
09/16 08:39:37 AM: edges-rel-semeval_mcc: training: 0.763290 validation: 0.725748
09/16 08:39:37 AM: edges-rel-semeval_acc: training: 0.651845 validation: 0.617929
09/16 08:39:37 AM: edges-rel-semeval_precision: training: 0.853911 validation: 0.845714
09/16 08:39:37 AM: edges-rel-semeval_recall: training: 0.702302 validation: 0.644038
09/16 08:39:37 AM: edges-rel-semeval_f1: training: 0.770722 validation: 0.731225
09/16 08:39:37 AM: Global learning rate: 5e-05
09/16 08:39:37 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:39:42 AM: ***** Step 3400 / Validation 34 *****
09/16 08:39:42 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:39:42 AM: Validating...
09/16 08:39:45 AM: Updating LR scheduler:
09/16 08:39:45 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:39:45 AM: 	# validation passes without improvement: 2
09/16 08:39:45 AM: edges-rel-semeval_loss: training: 0.059924 validation: 0.069075
09/16 08:39:45 AM: macro_avg: validation: 0.727720
09/16 08:39:45 AM: micro_avg: validation: 0.000000
09/16 08:39:45 AM: edges-rel-semeval_mcc: training: 0.760479 validation: 0.721557
09/16 08:39:45 AM: edges-rel-semeval_acc: training: 0.644062 validation: 0.609225
09/16 08:39:45 AM: edges-rel-semeval_precision: training: 0.859302 validation: 0.837868
09/16 08:39:45 AM: edges-rel-semeval_recall: training: 0.692813 validation: 0.643168
09/16 08:39:45 AM: edges-rel-semeval_f1: training: 0.767128 validation: 0.727720
09/16 08:39:45 AM: Global learning rate: 5e-05
09/16 08:39:45 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:39:45 AM: Update 3402: task edges-rel-semeval, batch 2 (3402): mcc: 0.7383, acc: 0.5781, precision: 0.8571, recall: 0.6562, f1: 0.7434, edges-rel-semeval_loss: 0.0681
09/16 08:39:51 AM: ***** Step 3500 / Validation 35 *****
09/16 08:39:51 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:39:51 AM: Validating...
09/16 08:39:53 AM: Updating LR scheduler:
09/16 08:39:53 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:39:53 AM: 	# validation passes without improvement: 3
09/16 08:39:53 AM: edges-rel-semeval_loss: training: 0.056596 validation: 0.068977
09/16 08:39:53 AM: macro_avg: validation: 0.730769
09/16 08:39:53 AM: micro_avg: validation: 0.000000
09/16 08:39:53 AM: edges-rel-semeval_mcc: training: 0.775819 validation: 0.724987
09/16 08:39:53 AM: edges-rel-semeval_acc: training: 0.659098 validation: 0.606614
09/16 08:39:53 AM: edges-rel-semeval_precision: training: 0.869029 validation: 0.843003
09/16 08:39:53 AM: edges-rel-semeval_recall: training: 0.711447 validation: 0.644909
09/16 08:39:53 AM: edges-rel-semeval_f1: training: 0.782382 validation: 0.730769
09/16 08:39:53 AM: Global learning rate: 5e-05
09/16 08:39:53 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:39:55 AM: Update 3545: task edges-rel-semeval, batch 45 (3545): mcc: 0.7809, acc: 0.6667, precision: 0.8718, recall: 0.7181, f1: 0.7875, edges-rel-semeval_loss: 0.0587
09/16 08:39:58 AM: ***** Step 3600 / Validation 36 *****
09/16 08:39:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:39:58 AM: Validating...
09/16 08:40:00 AM: Updating LR scheduler:
09/16 08:40:00 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:40:00 AM: 	# validation passes without improvement: 0
09/16 08:40:00 AM: edges-rel-semeval_loss: training: 0.059995 validation: 0.069373
09/16 08:40:00 AM: macro_avg: validation: 0.720484
09/16 08:40:00 AM: micro_avg: validation: 0.000000
09/16 08:40:00 AM: edges-rel-semeval_mcc: training: 0.767341 validation: 0.717601
09/16 08:40:00 AM: edges-rel-semeval_acc: training: 0.651875 validation: 0.595300
09/16 08:40:00 AM: edges-rel-semeval_precision: training: 0.859101 validation: 0.857143
09/16 08:40:00 AM: edges-rel-semeval_recall: training: 0.705000 validation: 0.621410
09/16 08:40:00 AM: edges-rel-semeval_f1: training: 0.774459 validation: 0.720484
09/16 08:40:00 AM: Global learning rate: 2.5e-05
09/16 08:40:00 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:40:05 AM: Update 3684: task edges-rel-semeval, batch 84 (3684): mcc: 0.7786, acc: 0.6653, precision: 0.8697, recall: 0.7157, f1: 0.7852, edges-rel-semeval_loss: 0.0566
09/16 08:40:06 AM: ***** Step 3700 / Validation 37 *****
09/16 08:40:06 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:40:06 AM: Validating...
09/16 08:40:08 AM: Updating LR scheduler:
09/16 08:40:08 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:40:08 AM: 	# validation passes without improvement: 1
09/16 08:40:08 AM: edges-rel-semeval_loss: training: 0.056460 validation: 0.069215
09/16 08:40:08 AM: macro_avg: validation: 0.723618
09/16 08:40:08 AM: micro_avg: validation: 0.000000
09/16 08:40:08 AM: edges-rel-semeval_mcc: training: 0.779289 validation: 0.720262
09/16 08:40:08 AM: edges-rel-semeval_acc: training: 0.666982 validation: 0.604874
09/16 08:40:08 AM: edges-rel-semeval_precision: training: 0.868421 validation: 0.856124
09/16 08:40:08 AM: edges-rel-semeval_recall: training: 0.718070 validation: 0.626632
09/16 08:40:08 AM: edges-rel-semeval_f1: training: 0.786121 validation: 0.723618
09/16 08:40:08 AM: Global learning rate: 2.5e-05
09/16 08:40:08 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:40:14 AM: ***** Step 3800 / Validation 38 *****
09/16 08:40:14 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:40:14 AM: Validating...
09/16 08:40:15 AM: Evaluate: task edges-rel-semeval, batch 19 (36): mcc: 0.7571, acc: 0.6579, precision: 0.8646, recall: 0.6826, f1: 0.7629, edges-rel-semeval_loss: 0.0638
09/16 08:40:17 AM: Updating LR scheduler:
09/16 08:40:17 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:40:17 AM: 	# validation passes without improvement: 2
09/16 08:40:17 AM: Ran out of early stopping patience. Stopping training.
09/16 08:40:17 AM: edges-rel-semeval_loss: training: 0.054784 validation: 0.068029
09/16 08:40:17 AM: macro_avg: validation: 0.729260
09/16 08:40:17 AM: micro_avg: validation: 0.000000
09/16 08:40:17 AM: edges-rel-semeval_mcc: training: 0.789085 validation: 0.724457
09/16 08:40:17 AM: edges-rel-semeval_acc: training: 0.685625 validation: 0.613577
09/16 08:40:17 AM: edges-rel-semeval_precision: training: 0.874299 validation: 0.849537
09/16 08:40:17 AM: edges-rel-semeval_recall: training: 0.730313 validation: 0.638816
09/16 08:40:17 AM: edges-rel-semeval_f1: training: 0.795845 validation: 0.729260
09/16 08:40:17 AM: Global learning rate: 2.5e-05
09/16 08:40:17 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-top/run
09/16 08:40:17 AM: Stopped training after 38 validation checks
09/16 08:40:17 AM: Trained edges-rel-semeval for 3800 batches or 17.674 epochs
09/16 08:40:17 AM: ***** VALIDATION RESULTS *****
09/16 08:40:17 AM: edges-rel-semeval_f1 (for best val pass 28): edges-rel-semeval_loss: 0.06986, macro_avg: 0.73983, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.72975, edges-rel-semeval_acc: 0.63011, edges-rel-semeval_precision: 0.81036, edges-rel-semeval_recall: 0.68059, edges-rel-semeval_f1: 0.73983
09/16 08:40:17 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.18226, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 08:40:17 AM: macro_avg (for best val pass 28): edges-rel-semeval_loss: 0.06986, macro_avg: 0.73983, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.72975, edges-rel-semeval_acc: 0.63011, edges-rel-semeval_precision: 0.81036, edges-rel-semeval_recall: 0.68059, edges-rel-semeval_f1: 0.73983
09/16 08:40:17 AM: Evaluating...
09/16 08:40:17 AM: Loaded model state from ./experiments/rel-semeval-sts-top/run/edges-rel-semeval/model_state_target_train_val_28.best.th
09/16 08:40:17 AM: Evaluating on: edges-rel-semeval, split: val
09/16 08:40:20 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:40:20 AM: Finished evaluating on: edges-rel-semeval
09/16 08:40:20 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 08:40:20 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-sts-top/run
09/16 08:40:20 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-sts-top/run
09/16 08:40:20 AM: Evaluating on: edges-rel-semeval, split: test
09/16 08:40:27 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:40:27 AM: Finished evaluating on: edges-rel-semeval
09/16 08:40:27 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 08:40:27 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-sts-top/run
09/16 08:40:27 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-sts-top/run
09/16 08:40:27 AM: Writing results for split 'val' to ./experiments/rel-semeval-sts-top/results.tsv
09/16 08:40:27 AM: micro_avg: 0.000, macro_avg: 0.740, edges-rel-semeval_mcc: 0.730, edges-rel-semeval_acc: 0.630, edges-rel-semeval_precision: 0.810, edges-rel-semeval_recall: 0.681, edges-rel-semeval_f1: 0.740
09/16 08:40:27 AM: Done!
09/16 08:40:27 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
