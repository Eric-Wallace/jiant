09/16 08:42:05 AM: Git branch: master
09/16 08:42:05 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:42:05 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-multiqa-mix/",
  "exp_name": "experiments/spr2-multiqa-mix",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-multiqa-mix/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/multiqa",
  "pytorch_transformers_output_mode": "mix",
  "remote_log_name": "experiments/spr2-multiqa-mix__run",
  "run_dir": "./experiments/spr2-multiqa-mix/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:42:05 AM: Saved config to ./experiments/spr2-multiqa-mix/run/params.conf
09/16 08:42:05 AM: Using random seed 1234
09/16 08:42:07 AM: Using GPU 0
09/16 08:42:07 AM: Loading tasks...
09/16 08:42:07 AM: Writing pre-preprocessed tasks to ./experiments/spr2-multiqa-mix/
09/16 08:42:07 AM: 	Creating task edges-spr2 from scratch.
09/16 08:42:07 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:42:07 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:42:07 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:42:07 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:42:07 AM: 	Finished loading tasks: edges-spr2.
09/16 08:42:07 AM: 	Building vocab from scratch.
09/16 08:42:07 AM: 	Counting units for task edges-spr2.
09/16 08:42:07 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:42:08 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:08 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:42:09 AM: 	Saved vocab to ./experiments/spr2-multiqa-mix/vocab
09/16 08:42:09 AM: Loading token dictionary from ./experiments/spr2-multiqa-mix/vocab.
09/16 08:42:09 AM: 	Loaded vocab from ./experiments/spr2-multiqa-mix/vocab
09/16 08:42:09 AM: 	Vocab namespace tokens: size 7943
09/16 08:42:09 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:42:09 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:42:09 AM: 	Vocab namespace chars: size 65
09/16 08:42:09 AM: 	Finished building vocab.
09/16 08:42:09 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:42:09 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-multiqa-mix/preproc/edges-spr2__train_data
09/16 08:42:09 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:42:09 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-multiqa-mix/preproc/edges-spr2__val_data
09/16 08:42:09 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:42:10 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-multiqa-mix/preproc/edges-spr2__test_data
09/16 08:42:10 AM: 	Finished indexing tasks
09/16 08:42:10 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:42:10 AM: 	  Training on 
09/16 08:42:10 AM: 	  Evaluating on edges-spr2
09/16 08:42:10 AM: 	Finished loading tasks in 2.497s
09/16 08:42:10 AM: 	 Tasks: ['edges-spr2']
09/16 08:42:10 AM: Building model...
09/16 08:42:10 AM: Using BERT model (bert-base-uncased).
09/16 08:42:10 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:42:10 AM: models/multiqa
09/16 08:42:10 AM: loading configuration file models/multiqa/config.json
09/16 08:42:10 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:42:10 AM: loading weights file models/multiqa/pytorch_model.bin
09/16 08:42:21 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpnth46up5
09/16 08:42:23 AM: copying /tmp/tmpnth46up5 to cache at ./experiments/spr2-multiqa-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:23 AM: creating metadata file for ./experiments/spr2-multiqa-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:23 AM: removing temp file /tmp/tmpnth46up5
09/16 08:42:23 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-multiqa-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:23 AM: NOTE: pytorch_transformers_output_mode='mix', so scalar mixing weights will be fine-tuned even if BERT model is frozen.
09/16 08:42:23 AM: Initializing parameters
09/16 08:42:23 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:42:23 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:42:23 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:42:23 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.scalar_mix.gamma
09/16 08:42:23 AM:    _text_field_embedder.scalar_mix.scalar_parameters.0
09/16 08:42:23 AM:    _text_field_embedder.scalar_mix.scalar_parameters.1
09/16 08:42:23 AM:    _text_field_embedder.scalar_mix.scalar_parameters.10
09/16 08:42:23 AM:    _text_field_embedder.scalar_mix.scalar_parameters.11
09/16 08:42:23 AM:    _text_field_embedder.scalar_mix.scalar_parameters.12
09/16 08:42:23 AM:    _text_field_embedder.scalar_mix.scalar_parameters.2
09/16 08:42:23 AM:    _text_field_embedder.scalar_mix.scalar_parameters.3
09/16 08:42:23 AM:    _text_field_embedder.scalar_mix.scalar_parameters.4
09/16 08:42:23 AM:    _text_field_embedder.scalar_mix.scalar_parameters.5
09/16 08:42:23 AM:    _text_field_embedder.scalar_mix.scalar_parameters.6
09/16 08:42:23 AM:    _text_field_embedder.scalar_mix.scalar_parameters.7
09/16 08:42:23 AM:    _text_field_embedder.scalar_mix.scalar_parameters.8
09/16 08:42:23 AM:    _text_field_embedder.scalar_mix.scalar_parameters.9
09/16 08:42:23 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:42:30 AM: Model specification:
09/16 08:42:30 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
      (scalar_mix): ScalarMix(
        (scalar_parameters): ParameterList(
            (0): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (1): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (2): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (3): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (4): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (5): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (6): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (7): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (8): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (9): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (10): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (11): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (12): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:42:30 AM: Model parameters:
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.scalar_mix.gamma: Trainable parameter, count 1 with torch.Size([1])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.0: Trainable parameter, count 1 with torch.Size([1])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.1: Trainable parameter, count 1 with torch.Size([1])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.2: Trainable parameter, count 1 with torch.Size([1])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.3: Trainable parameter, count 1 with torch.Size([1])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.4: Trainable parameter, count 1 with torch.Size([1])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.5: Trainable parameter, count 1 with torch.Size([1])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.6: Trainable parameter, count 1 with torch.Size([1])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.7: Trainable parameter, count 1 with torch.Size([1])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.8: Trainable parameter, count 1 with torch.Size([1])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.9: Trainable parameter, count 1 with torch.Size([1])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.10: Trainable parameter, count 1 with torch.Size([1])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.11: Trainable parameter, count 1 with torch.Size([1])
09/16 08:42:30 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.12: Trainable parameter, count 1 with torch.Size([1])
09/16 08:42:30 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:42:30 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:30 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:42:30 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:30 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:42:30 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:30 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:30 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:30 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:42:30 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:42:30 AM: Total number of parameters: 110144034 (1.10144e+08)
09/16 08:42:30 AM: Number of trainable parameters: 661794 (661794)
09/16 08:42:30 AM: Finished building model in 20.138s
09/16 08:42:30 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:42:30 AM: patience = 9
09/16 08:42:30 AM: val_interval = 100
09/16 08:42:30 AM: max_vals = 100
09/16 08:42:30 AM: cuda_device = 0
09/16 08:42:30 AM: grad_norm = 5.0
09/16 08:42:30 AM: grad_clipping = None
09/16 08:42:30 AM: lr_decay = 0.99
09/16 08:42:30 AM: min_lr = 1e-06
09/16 08:42:30 AM: keep_all_checkpoints = 0
09/16 08:42:30 AM: val_data_limit = 5000
09/16 08:42:30 AM: max_epochs = -1
09/16 08:42:30 AM: dec_val_scale = 250
09/16 08:42:30 AM: training_data_fraction = 1
09/16 08:42:30 AM: type = adam
09/16 08:42:30 AM: parameter_groups = None
09/16 08:42:30 AM: Number of trainable parameters: 661794
09/16 08:42:30 AM: infer_type_and_cast = True
09/16 08:42:30 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:30 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:30 AM: lr = 0.0001
09/16 08:42:30 AM: amsgrad = True
09/16 08:42:30 AM: type = reduce_on_plateau
09/16 08:42:30 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:30 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:30 AM: mode = max
09/16 08:42:30 AM: factor = 0.5
09/16 08:42:30 AM: patience = 3
09/16 08:42:30 AM: threshold = 0.0001
09/16 08:42:30 AM: threshold_mode = abs
09/16 08:42:30 AM: verbose = True
09/16 08:42:30 AM: type = adam
09/16 08:42:30 AM: parameter_groups = None
09/16 08:42:30 AM: Number of trainable parameters: 661794
09/16 08:42:30 AM: infer_type_and_cast = True
09/16 08:42:30 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:30 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:30 AM: lr = 0.0001
09/16 08:42:30 AM: amsgrad = True
09/16 08:42:30 AM: type = reduce_on_plateau
09/16 08:42:30 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:30 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:30 AM: mode = max
09/16 08:42:30 AM: factor = 0.5
09/16 08:42:30 AM: patience = 3
09/16 08:42:30 AM: threshold = 0.0001
09/16 08:42:30 AM: threshold_mode = abs
09/16 08:42:30 AM: verbose = True
09/16 08:42:30 AM: Starting training without restoring from a checkpoint.
09/16 08:42:30 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:42:30 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:42:40 AM: ***** Step 100 / Validation 1 *****
09/16 08:42:40 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:42:40 AM: Validating...
09/16 08:42:41 AM: Evaluate: task edges-spr2, batch 2 (10): mcc: 0.7042, acc: 0.0580, precision: 0.8625, recall: 0.7712, f1: 0.8143, edges-spr2_loss: 0.3133
09/16 08:42:41 AM: Best result seen so far for edges-spr2.
09/16 08:42:41 AM: Best result seen so far for micro.
09/16 08:42:41 AM: Best result seen so far for macro.
09/16 08:42:41 AM: Updating LR scheduler:
09/16 08:42:41 AM: 	Best result seen so far for macro_avg: 0.803
09/16 08:42:41 AM: 	# validation passes without improvement: 0
09/16 08:42:41 AM: edges-spr2_loss: training: 0.375490 validation: 0.336914
09/16 08:42:41 AM: macro_avg: validation: 0.802624
09/16 08:42:41 AM: micro_avg: validation: 0.000000
09/16 08:42:41 AM: edges-spr2_mcc: training: 0.626317 validation: 0.700010
09/16 08:42:41 AM: edges-spr2_acc: training: 0.045115 validation: 0.088889
09/16 08:42:41 AM: edges-spr2_precision: training: 0.780327 validation: 0.857419
09/16 08:42:41 AM: edges-spr2_recall: training: 0.738806 validation: 0.754412
09/16 08:42:41 AM: edges-spr2_f1: training: 0.758999 validation: 0.802624
09/16 08:42:41 AM: Global learning rate: 0.0001
09/16 08:42:41 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:42:51 AM: Update 199: task edges-spr2, batch 99 (199): mcc: 0.6997, acc: 0.0708, precision: 0.8304, recall: 0.7823, f1: 0.8056, edges-spr2_loss: 0.3075
09/16 08:42:51 AM: ***** Step 200 / Validation 2 *****
09/16 08:42:51 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:42:51 AM: Validating...
09/16 08:42:52 AM: Best result seen so far for edges-spr2.
09/16 08:42:52 AM: Best result seen so far for macro.
09/16 08:42:52 AM: Updating LR scheduler:
09/16 08:42:52 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:42:52 AM: 	# validation passes without improvement: 0
09/16 08:42:52 AM: edges-spr2_loss: training: 0.307504 validation: 0.318880
09/16 08:42:52 AM: macro_avg: validation: 0.820209
09/16 08:42:52 AM: micro_avg: validation: 0.000000
09/16 08:42:52 AM: edges-spr2_mcc: training: 0.699732 validation: 0.719637
09/16 08:42:52 AM: edges-spr2_acc: training: 0.070336 validation: 0.090476
09/16 08:42:52 AM: edges-spr2_precision: training: 0.830520 validation: 0.848251
09/16 08:42:52 AM: edges-spr2_recall: training: 0.782141 validation: 0.793961
09/16 08:42:52 AM: edges-spr2_f1: training: 0.805605 validation: 0.820209
09/16 08:42:52 AM: Global learning rate: 0.0001
09/16 08:42:52 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:43:01 AM: Update 300: task edges-spr2, batch 100 (300): mcc: 0.7192, acc: 0.0787, precision: 0.8403, recall: 0.7984, f1: 0.8188, edges-spr2_loss: 0.2886
09/16 08:43:01 AM: ***** Step 300 / Validation 3 *****
09/16 08:43:01 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:01 AM: Validating...
09/16 08:43:02 AM: Best result seen so far for edges-spr2.
09/16 08:43:02 AM: Best result seen so far for macro.
09/16 08:43:02 AM: Updating LR scheduler:
09/16 08:43:02 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:43:02 AM: 	# validation passes without improvement: 0
09/16 08:43:02 AM: edges-spr2_loss: training: 0.288603 validation: 0.313714
09/16 08:43:02 AM: macro_avg: validation: 0.824301
09/16 08:43:02 AM: micro_avg: validation: 0.000000
09/16 08:43:02 AM: edges-spr2_mcc: training: 0.719153 validation: 0.724911
09/16 08:43:02 AM: edges-spr2_acc: training: 0.078720 validation: 0.088889
09/16 08:43:02 AM: edges-spr2_precision: training: 0.840333 validation: 0.847831
09/16 08:43:02 AM: edges-spr2_recall: training: 0.798358 validation: 0.802041
09/16 08:43:02 AM: edges-spr2_f1: training: 0.818807 validation: 0.824301
09/16 08:43:02 AM: Global learning rate: 0.0001
09/16 08:43:02 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:43:11 AM: Update 399: task edges-spr2, batch 99 (399): mcc: 0.7288, acc: 0.0845, precision: 0.8437, recall: 0.8079, f1: 0.8254, edges-spr2_loss: 0.2783
09/16 08:43:11 AM: ***** Step 400 / Validation 4 *****
09/16 08:43:11 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:11 AM: Validating...
09/16 08:43:12 AM: Updating LR scheduler:
09/16 08:43:12 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:43:12 AM: 	# validation passes without improvement: 1
09/16 08:43:12 AM: edges-spr2_loss: training: 0.278208 validation: 0.311663
09/16 08:43:12 AM: macro_avg: validation: 0.823019
09/16 08:43:12 AM: micro_avg: validation: 0.000000
09/16 08:43:12 AM: edges-spr2_mcc: training: 0.728997 validation: 0.727239
09/16 08:43:12 AM: edges-spr2_acc: training: 0.084605 validation: 0.104762
09/16 08:43:12 AM: edges-spr2_precision: training: 0.843956 validation: 0.863583
09/16 08:43:12 AM: edges-spr2_recall: training: 0.807846 validation: 0.786094
09/16 08:43:12 AM: edges-spr2_f1: training: 0.825506 validation: 0.823019
09/16 08:43:12 AM: Global learning rate: 0.0001
09/16 08:43:12 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:43:21 AM: Update 494: task edges-spr2, batch 94 (494): mcc: 0.7351, acc: 0.0939, precision: 0.8490, recall: 0.8108, f1: 0.8295, edges-spr2_loss: 0.2711
09/16 08:43:21 AM: ***** Step 500 / Validation 5 *****
09/16 08:43:21 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:21 AM: Validating...
09/16 08:43:22 AM: Best result seen so far for edges-spr2.
09/16 08:43:22 AM: Best result seen so far for macro.
09/16 08:43:22 AM: Updating LR scheduler:
09/16 08:43:22 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:43:22 AM: 	# validation passes without improvement: 0
09/16 08:43:22 AM: edges-spr2_loss: training: 0.270561 validation: 0.305938
09/16 08:43:22 AM: macro_avg: validation: 0.824904
09/16 08:43:22 AM: micro_avg: validation: 0.000000
09/16 08:43:22 AM: edges-spr2_mcc: training: 0.735884 validation: 0.727747
09/16 08:43:22 AM: edges-spr2_acc: training: 0.094136 validation: 0.093651
09/16 08:43:22 AM: edges-spr2_precision: training: 0.850007 validation: 0.856130
09/16 08:43:22 AM: edges-spr2_recall: training: 0.810856 validation: 0.795875
09/16 08:43:22 AM: edges-spr2_f1: training: 0.829970 validation: 0.824904
09/16 08:43:22 AM: Global learning rate: 0.0001
09/16 08:43:22 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:43:31 AM: Update 592: task edges-spr2, batch 92 (592): mcc: 0.7407, acc: 0.0938, precision: 0.8520, recall: 0.8148, f1: 0.8330, edges-spr2_loss: 0.2642
09/16 08:43:32 AM: ***** Step 600 / Validation 6 *****
09/16 08:43:32 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:32 AM: Validating...
09/16 08:43:33 AM: Best result seen so far for edges-spr2.
09/16 08:43:33 AM: Best result seen so far for macro.
09/16 08:43:33 AM: Updating LR scheduler:
09/16 08:43:33 AM: 	Best result seen so far for macro_avg: 0.829
09/16 08:43:33 AM: 	# validation passes without improvement: 0
09/16 08:43:33 AM: edges-spr2_loss: training: 0.264524 validation: 0.305401
09/16 08:43:33 AM: macro_avg: validation: 0.828862
09/16 08:43:33 AM: micro_avg: validation: 0.000000
09/16 08:43:33 AM: edges-spr2_mcc: training: 0.740180 validation: 0.732523
09/16 08:43:33 AM: edges-spr2_acc: training: 0.091716 validation: 0.095238
09/16 08:43:33 AM: edges-spr2_precision: training: 0.850320 validation: 0.854402
09/16 08:43:33 AM: edges-spr2_recall: training: 0.816180 validation: 0.804805
09/16 08:43:33 AM: edges-spr2_f1: training: 0.832900 validation: 0.828862
09/16 08:43:33 AM: Global learning rate: 0.0001
09/16 08:43:33 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:43:41 AM: Update 688: task edges-spr2, batch 88 (688): mcc: 0.7470, acc: 0.0978, precision: 0.8555, recall: 0.8200, f1: 0.8374, edges-spr2_loss: 0.2587
09/16 08:43:42 AM: ***** Step 700 / Validation 7 *****
09/16 08:43:42 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:42 AM: Validating...
09/16 08:43:43 AM: Updating LR scheduler:
09/16 08:43:43 AM: 	Best result seen so far for macro_avg: 0.829
09/16 08:43:43 AM: 	# validation passes without improvement: 1
09/16 08:43:43 AM: edges-spr2_loss: training: 0.257819 validation: 0.306161
09/16 08:43:43 AM: macro_avg: validation: 0.826415
09/16 08:43:43 AM: micro_avg: validation: 0.000000
09/16 08:43:43 AM: edges-spr2_mcc: training: 0.748352 validation: 0.728731
09/16 08:43:43 AM: edges-spr2_acc: training: 0.097703 validation: 0.095238
09/16 08:43:43 AM: edges-spr2_precision: training: 0.856684 validation: 0.852078
09/16 08:43:43 AM: edges-spr2_recall: training: 0.820450 validation: 0.802254
09/16 08:43:43 AM: edges-spr2_f1: training: 0.838175 validation: 0.826415
09/16 08:43:43 AM: Global learning rate: 0.0001
09/16 08:43:43 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:43:51 AM: Update 788: task edges-spr2, batch 88 (788): mcc: 0.7486, acc: 0.1030, precision: 0.8540, recall: 0.8237, f1: 0.8386, edges-spr2_loss: 0.2557
09/16 08:43:52 AM: ***** Step 800 / Validation 8 *****
09/16 08:43:52 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:52 AM: Validating...
09/16 08:43:53 AM: Updating LR scheduler:
09/16 08:43:53 AM: 	Best result seen so far for macro_avg: 0.829
09/16 08:43:53 AM: 	# validation passes without improvement: 2
09/16 08:43:53 AM: edges-spr2_loss: training: 0.254558 validation: 0.308818
09/16 08:43:53 AM: macro_avg: validation: 0.828318
09/16 08:43:53 AM: micro_avg: validation: 0.000000
09/16 08:43:53 AM: edges-spr2_mcc: training: 0.750025 validation: 0.731527
09/16 08:43:53 AM: edges-spr2_acc: training: 0.103379 validation: 0.100000
09/16 08:43:53 AM: edges-spr2_precision: training: 0.855249 validation: 0.853246
09/16 08:43:53 AM: edges-spr2_recall: training: 0.824354 validation: 0.804805
09/16 08:43:53 AM: edges-spr2_f1: training: 0.839518 validation: 0.828318
09/16 08:43:53 AM: Global learning rate: 0.0001
09/16 08:43:53 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:44:01 AM: ***** Step 900 / Validation 9 *****
09/16 08:44:01 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:01 AM: Validating...
09/16 08:44:01 AM: Evaluate: task edges-spr2, batch 3 (10): mcc: 0.7319, acc: 0.0905, precision: 0.8559, recall: 0.8117, f1: 0.8332, edges-spr2_loss: 0.2812
09/16 08:44:02 AM: Updating LR scheduler:
09/16 08:44:02 AM: 	Best result seen so far for macro_avg: 0.829
09/16 08:44:02 AM: 	# validation passes without improvement: 3
09/16 08:44:02 AM: edges-spr2_loss: training: 0.250664 validation: 0.311765
09/16 08:44:02 AM: macro_avg: validation: 0.824329
09/16 08:44:02 AM: micro_avg: validation: 0.000000
09/16 08:44:02 AM: edges-spr2_mcc: training: 0.753406 validation: 0.725602
09/16 08:44:02 AM: edges-spr2_acc: training: 0.105669 validation: 0.092063
09/16 08:44:02 AM: edges-spr2_precision: training: 0.857114 validation: 0.850520
09/16 08:44:02 AM: edges-spr2_recall: training: 0.826377 validation: 0.799702
09/16 08:44:02 AM: edges-spr2_f1: training: 0.841465 validation: 0.824329
09/16 08:44:02 AM: Global learning rate: 0.0001
09/16 08:44:02 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:44:10 AM: ***** Step 1000 / Validation 10 *****
09/16 08:44:10 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:10 AM: Validating...
09/16 08:44:11 AM: Evaluate: task edges-spr2, batch 10 (10): mcc: 0.7221, acc: 0.0857, precision: 0.8513, recall: 0.7937, f1: 0.8215, edges-spr2_loss: 0.3125
09/16 08:44:11 AM: Updating LR scheduler:
09/16 08:44:11 AM: 	Best result seen so far for macro_avg: 0.829
09/16 08:44:11 AM: 	# validation passes without improvement: 0
09/16 08:44:11 AM: edges-spr2_loss: training: 0.248277 validation: 0.312498
09/16 08:44:11 AM: macro_avg: validation: 0.821523
09/16 08:44:11 AM: micro_avg: validation: 0.000000
09/16 08:44:11 AM: edges-spr2_mcc: training: 0.756458 validation: 0.722126
09/16 08:44:11 AM: edges-spr2_acc: training: 0.107272 validation: 0.085714
09/16 08:44:11 AM: edges-spr2_precision: training: 0.860461 validation: 0.851311
09/16 08:44:11 AM: edges-spr2_recall: training: 0.828210 validation: 0.793749
09/16 08:44:11 AM: edges-spr2_f1: training: 0.844028 validation: 0.821523
09/16 08:44:11 AM: Global learning rate: 5e-05
09/16 08:44:11 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:44:19 AM: ***** Step 1100 / Validation 11 *****
09/16 08:44:19 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:19 AM: Validating...
09/16 08:44:20 AM: Updating LR scheduler:
09/16 08:44:20 AM: 	Best result seen so far for macro_avg: 0.829
09/16 08:44:20 AM: 	# validation passes without improvement: 1
09/16 08:44:20 AM: edges-spr2_loss: training: 0.242883 validation: 0.309519
09/16 08:44:20 AM: macro_avg: validation: 0.827758
09/16 08:44:20 AM: micro_avg: validation: 0.000000
09/16 08:44:20 AM: edges-spr2_mcc: training: 0.761880 validation: 0.729075
09/16 08:44:20 AM: edges-spr2_acc: training: 0.112177 validation: 0.090476
09/16 08:44:20 AM: edges-spr2_precision: training: 0.862201 validation: 0.845949
09/16 08:44:20 AM: edges-spr2_recall: training: 0.832351 validation: 0.810334
09/16 08:44:20 AM: edges-spr2_f1: training: 0.847013 validation: 0.827758
09/16 08:44:20 AM: Global learning rate: 5e-05
09/16 08:44:20 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:44:21 AM: Update 1114: task edges-spr2, batch 14 (1114): mcc: 0.7615, acc: 0.1179, precision: 0.8684, recall: 0.8264, f1: 0.8469, edges-spr2_loss: 0.2447
09/16 08:44:29 AM: ***** Step 1200 / Validation 12 *****
09/16 08:44:29 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:29 AM: Validating...
09/16 08:44:30 AM: Updating LR scheduler:
09/16 08:44:30 AM: 	Best result seen so far for macro_avg: 0.829
09/16 08:44:30 AM: 	# validation passes without improvement: 2
09/16 08:44:30 AM: edges-spr2_loss: training: 0.242263 validation: 0.311435
09/16 08:44:30 AM: macro_avg: validation: 0.826690
09/16 08:44:30 AM: micro_avg: validation: 0.000000
09/16 08:44:30 AM: edges-spr2_mcc: training: 0.761725 validation: 0.726867
09/16 08:44:30 AM: edges-spr2_acc: training: 0.113360 validation: 0.082540
09/16 08:44:30 AM: edges-spr2_precision: training: 0.862566 validation: 0.842570
09/16 08:44:30 AM: edges-spr2_recall: training: 0.832226 validation: 0.811397
09/16 08:44:30 AM: edges-spr2_f1: training: 0.847124 validation: 0.826690
09/16 08:44:30 AM: Global learning rate: 5e-05
09/16 08:44:30 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:44:31 AM: Update 1218: task edges-spr2, batch 18 (1218): mcc: 0.7722, acc: 0.1333, precision: 0.8692, recall: 0.8391, f1: 0.8539, edges-spr2_loss: 0.2370
09/16 08:44:37 AM: ***** Step 1300 / Validation 13 *****
09/16 08:44:37 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:37 AM: Validating...
09/16 08:44:38 AM: Updating LR scheduler:
09/16 08:44:38 AM: 	Best result seen so far for macro_avg: 0.829
09/16 08:44:38 AM: 	# validation passes without improvement: 3
09/16 08:44:38 AM: edges-spr2_loss: training: 0.238115 validation: 0.312233
09/16 08:44:38 AM: macro_avg: validation: 0.826233
09/16 08:44:38 AM: micro_avg: validation: 0.000000
09/16 08:44:38 AM: edges-spr2_mcc: training: 0.768635 validation: 0.726298
09/16 08:44:38 AM: edges-spr2_acc: training: 0.121182 validation: 0.093651
09/16 08:44:38 AM: edges-spr2_precision: training: 0.866225 validation: 0.842769
09/16 08:44:38 AM: edges-spr2_recall: training: 0.837067 validation: 0.810334
09/16 08:44:38 AM: edges-spr2_f1: training: 0.851396 validation: 0.826233
09/16 08:44:38 AM: Global learning rate: 5e-05
09/16 08:44:38 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:44:41 AM: Update 1331: task edges-spr2, batch 31 (1331): mcc: 0.7625, acc: 0.1151, precision: 0.8605, recall: 0.8370, f1: 0.8486, edges-spr2_loss: 0.2400
09/16 08:44:46 AM: ***** Step 1400 / Validation 14 *****
09/16 08:44:46 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:46 AM: Validating...
09/16 08:44:47 AM: Updating LR scheduler:
09/16 08:44:47 AM: 	Best result seen so far for macro_avg: 0.829
09/16 08:44:47 AM: 	# validation passes without improvement: 0
09/16 08:44:47 AM: edges-spr2_loss: training: 0.238018 validation: 0.312136
09/16 08:44:47 AM: macro_avg: validation: 0.821726
09/16 08:44:47 AM: micro_avg: validation: 0.000000
09/16 08:44:47 AM: edges-spr2_mcc: training: 0.765658 validation: 0.721348
09/16 08:44:47 AM: edges-spr2_acc: training: 0.117564 validation: 0.090476
09/16 08:44:47 AM: edges-spr2_precision: training: 0.863053 validation: 0.847144
09/16 08:44:47 AM: edges-spr2_recall: training: 0.837459 validation: 0.797789
09/16 08:44:47 AM: edges-spr2_f1: training: 0.850063 validation: 0.821726
09/16 08:44:47 AM: Global learning rate: 2.5e-05
09/16 08:44:47 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:44:51 AM: Update 1448: task edges-spr2, batch 48 (1448): mcc: 0.7680, acc: 0.1245, precision: 0.8673, recall: 0.8356, f1: 0.8511, edges-spr2_loss: 0.2364
09/16 08:44:56 AM: ***** Step 1500 / Validation 15 *****
09/16 08:44:56 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:56 AM: Validating...
09/16 08:44:57 AM: Updating LR scheduler:
09/16 08:44:57 AM: 	Best result seen so far for macro_avg: 0.829
09/16 08:44:57 AM: 	# validation passes without improvement: 1
09/16 08:44:57 AM: edges-spr2_loss: training: 0.235751 validation: 0.311830
09/16 08:44:57 AM: macro_avg: validation: 0.824867
09/16 08:44:57 AM: micro_avg: validation: 0.000000
09/16 08:44:57 AM: edges-spr2_mcc: training: 0.769453 validation: 0.723969
09/16 08:44:57 AM: edges-spr2_acc: training: 0.122258 validation: 0.090476
09/16 08:44:57 AM: edges-spr2_precision: training: 0.867078 validation: 0.840618
09/16 08:44:57 AM: edges-spr2_recall: training: 0.838068 validation: 0.809696
09/16 08:44:57 AM: edges-spr2_f1: training: 0.852326 validation: 0.824867
09/16 08:44:57 AM: Global learning rate: 2.5e-05
09/16 08:44:57 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:45:01 AM: Update 1550: task edges-spr2, batch 50 (1550): mcc: 0.7680, acc: 0.1217, precision: 0.8654, recall: 0.8372, f1: 0.8511, edges-spr2_loss: 0.2369
09/16 08:45:05 AM: ***** Step 1600 / Validation 16 *****
09/16 08:45:05 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:45:05 AM: Validating...
09/16 08:45:06 AM: Updating LR scheduler:
09/16 08:45:06 AM: 	Best result seen so far for macro_avg: 0.829
09/16 08:45:06 AM: 	# validation passes without improvement: 2
09/16 08:45:06 AM: Ran out of early stopping patience. Stopping training.
09/16 08:45:06 AM: edges-spr2_loss: training: 0.234676 validation: 0.313226
09/16 08:45:06 AM: macro_avg: validation: 0.821616
09/16 08:45:06 AM: micro_avg: validation: 0.000000
09/16 08:45:06 AM: edges-spr2_mcc: training: 0.771174 validation: 0.720502
09/16 08:45:06 AM: edges-spr2_acc: training: 0.120898 validation: 0.090476
09/16 08:45:06 AM: edges-spr2_precision: training: 0.867301 validation: 0.844290
09/16 08:45:06 AM: edges-spr2_recall: training: 0.839415 validation: 0.800128
09/16 08:45:06 AM: edges-spr2_f1: training: 0.853130 validation: 0.821616
09/16 08:45:06 AM: Global learning rate: 2.5e-05
09/16 08:45:06 AM: Saving checkpoints to: ./experiments/spr2-multiqa-mix/run
09/16 08:45:06 AM: Stopped training after 16 validation checks
09/16 08:45:06 AM: Trained edges-spr2 for 1600 batches or 22.857 epochs
09/16 08:45:06 AM: ***** VALIDATION RESULTS *****
09/16 08:45:06 AM: edges-spr2_f1 (for best val pass 6): edges-spr2_loss: 0.30540, macro_avg: 0.82886, micro_avg: 0.00000, edges-spr2_mcc: 0.73252, edges-spr2_acc: 0.09524, edges-spr2_precision: 0.85440, edges-spr2_recall: 0.80481, edges-spr2_f1: 0.82886
09/16 08:45:06 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.33691, macro_avg: 0.80262, micro_avg: 0.00000, edges-spr2_mcc: 0.70001, edges-spr2_acc: 0.08889, edges-spr2_precision: 0.85742, edges-spr2_recall: 0.75441, edges-spr2_f1: 0.80262
09/16 08:45:06 AM: macro_avg (for best val pass 6): edges-spr2_loss: 0.30540, macro_avg: 0.82886, micro_avg: 0.00000, edges-spr2_mcc: 0.73252, edges-spr2_acc: 0.09524, edges-spr2_precision: 0.85440, edges-spr2_recall: 0.80481, edges-spr2_f1: 0.82886
09/16 08:45:06 AM: Evaluating...
09/16 08:45:06 AM: Loaded model state from ./experiments/spr2-multiqa-mix/run/edges-spr2/model_state_target_train_val_6.best.th
09/16 08:45:06 AM: Evaluating on: edges-spr2, split: val
09/16 08:45:07 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:45:07 AM: Finished evaluating on: edges-spr2
09/16 08:45:07 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:45:07 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-multiqa-mix/run
09/16 08:45:07 AM: Wrote all preds for split 'val' to ./experiments/spr2-multiqa-mix/run
09/16 08:45:07 AM: Evaluating on: edges-spr2, split: test
09/16 08:45:08 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:45:08 AM: Finished evaluating on: edges-spr2
09/16 08:45:08 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:45:08 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-multiqa-mix/run
09/16 08:45:08 AM: Wrote all preds for split 'test' to ./experiments/spr2-multiqa-mix/run
09/16 08:45:08 AM: Writing results for split 'val' to ./experiments/spr2-multiqa-mix/results.tsv
09/16 08:45:08 AM: micro_avg: 0.000, macro_avg: 0.829, edges-spr2_mcc: 0.733, edges-spr2_acc: 0.095, edges-spr2_precision: 0.854, edges-spr2_recall: 0.805, edges-spr2_f1: 0.829
09/16 08:45:08 AM: Done!
09/16 08:45:08 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
