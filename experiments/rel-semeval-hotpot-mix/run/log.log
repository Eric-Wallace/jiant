09/16 08:10:40 AM: Git branch: master
09/16 08:10:40 AM: Git SHA: a6b97574b819abe0c17f2f3300d1097e5c87dbde
09/16 08:10:40 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-hotpot-mix/",
  "exp_name": "experiments/rel-semeval-hotpot-mix",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-hotpot-mix/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/hotpot",
  "pytorch_transformers_output_mode": "mix",
  "remote_log_name": "experiments/rel-semeval-hotpot-mix__run",
  "run_dir": "./experiments/rel-semeval-hotpot-mix/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:10:40 AM: Saved config to ./experiments/rel-semeval-hotpot-mix/run/params.conf
09/16 08:10:40 AM: Using random seed 1234
09/16 08:10:41 AM: Using GPU 0
09/16 08:10:41 AM: Loading tasks...
09/16 08:10:41 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-hotpot-mix/
09/16 08:10:41 AM: 	Creating task edges-rel-semeval from scratch.
09/16 08:10:41 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 08:10:41 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 08:10:41 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 08:10:41 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 08:10:41 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 08:10:41 AM: 	Building vocab from scratch.
09/16 08:10:41 AM: 	Counting units for task edges-rel-semeval.
09/16 08:10:42 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 08:10:43 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:10:43 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:10:43 AM: 	Saved vocab to ./experiments/rel-semeval-hotpot-mix/vocab
09/16 08:10:43 AM: Loading token dictionary from ./experiments/rel-semeval-hotpot-mix/vocab.
09/16 08:10:43 AM: 	Loaded vocab from ./experiments/rel-semeval-hotpot-mix/vocab
09/16 08:10:43 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:10:43 AM: 	Vocab namespace tokens: size 16020
09/16 08:10:43 AM: 	Vocab namespace chars: size 59
09/16 08:10:43 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 08:10:43 AM: 	Finished building vocab.
09/16 08:10:43 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 08:10:44 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-hotpot-mix/preproc/edges-rel-semeval__train_data
09/16 08:10:44 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 08:10:45 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-hotpot-mix/preproc/edges-rel-semeval__val_data
09/16 08:10:45 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 08:10:45 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-hotpot-mix/preproc/edges-rel-semeval__test_data
09/16 08:10:45 AM: 	Finished indexing tasks
09/16 08:10:45 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 08:10:45 AM: 	  Training on 
09/16 08:10:45 AM: 	  Evaluating on edges-rel-semeval
09/16 08:10:45 AM: 	Finished loading tasks in 3.839s
09/16 08:10:45 AM: 	 Tasks: ['edges-rel-semeval']
09/16 08:10:45 AM: Building model...
09/16 08:10:45 AM: Using BERT model (bert-base-uncased).
09/16 08:10:45 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:10:45 AM: models/hotpot
09/16 08:10:45 AM: loading configuration file models/hotpot/config.json
09/16 08:10:45 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:10:45 AM: loading weights file models/hotpot/pytorch_model.bin
09/16 08:10:48 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpr5fw7b9o
09/16 08:10:50 AM: copying /tmp/tmpr5fw7b9o to cache at ./experiments/rel-semeval-hotpot-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:10:50 AM: creating metadata file for ./experiments/rel-semeval-hotpot-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:10:50 AM: removing temp file /tmp/tmpr5fw7b9o
09/16 08:10:50 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-hotpot-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:10:50 AM: NOTE: pytorch_transformers_output_mode='mix', so scalar mixing weights will be fine-tuned even if BERT model is frozen.
09/16 08:10:50 AM: Initializing parameters
09/16 08:10:50 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:10:50 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:10:50 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:10:50 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:10:50 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:10:50 AM:    _text_field_embedder.scalar_mix.gamma
09/16 08:10:50 AM:    _text_field_embedder.scalar_mix.scalar_parameters.0
09/16 08:10:50 AM:    _text_field_embedder.scalar_mix.scalar_parameters.1
09/16 08:10:50 AM:    _text_field_embedder.scalar_mix.scalar_parameters.10
09/16 08:10:50 AM:    _text_field_embedder.scalar_mix.scalar_parameters.11
09/16 08:10:50 AM:    _text_field_embedder.scalar_mix.scalar_parameters.12
09/16 08:10:50 AM:    _text_field_embedder.scalar_mix.scalar_parameters.2
09/16 08:10:50 AM:    _text_field_embedder.scalar_mix.scalar_parameters.3
09/16 08:10:50 AM:    _text_field_embedder.scalar_mix.scalar_parameters.4
09/16 08:10:50 AM:    _text_field_embedder.scalar_mix.scalar_parameters.5
09/16 08:10:50 AM:    _text_field_embedder.scalar_mix.scalar_parameters.6
09/16 08:10:50 AM:    _text_field_embedder.scalar_mix.scalar_parameters.7
09/16 08:10:50 AM:    _text_field_embedder.scalar_mix.scalar_parameters.8
09/16 08:10:50 AM:    _text_field_embedder.scalar_mix.scalar_parameters.9
09/16 08:10:50 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 08:10:54 AM: Model specification:
09/16 08:10:54 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
      (scalar_mix): ScalarMix(
        (scalar_parameters): ParameterList(
            (0): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (1): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (2): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (3): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (4): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (5): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (6): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (7): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (8): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (9): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (10): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (11): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (12): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 08:10:54 AM: Model parameters:
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.scalar_mix.gamma: Trainable parameter, count 1 with torch.Size([1])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.0: Trainable parameter, count 1 with torch.Size([1])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.1: Trainable parameter, count 1 with torch.Size([1])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.2: Trainable parameter, count 1 with torch.Size([1])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.3: Trainable parameter, count 1 with torch.Size([1])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.4: Trainable parameter, count 1 with torch.Size([1])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.5: Trainable parameter, count 1 with torch.Size([1])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.6: Trainable parameter, count 1 with torch.Size([1])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.7: Trainable parameter, count 1 with torch.Size([1])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.8: Trainable parameter, count 1 with torch.Size([1])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.9: Trainable parameter, count 1 with torch.Size([1])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.10: Trainable parameter, count 1 with torch.Size([1])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.11: Trainable parameter, count 1 with torch.Size([1])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.12: Trainable parameter, count 1 with torch.Size([1])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 08:10:54 AM: Total number of parameters: 110143777 (1.10144e+08)
09/16 08:10:54 AM: Number of trainable parameters: 661537 (661537)
09/16 08:10:54 AM: Finished building model in 9.196s
09/16 08:10:54 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 08:10:55 AM: patience = 9
09/16 08:10:55 AM: val_interval = 100
09/16 08:10:55 AM: max_vals = 100
09/16 08:10:55 AM: cuda_device = 0
09/16 08:10:55 AM: grad_norm = 5.0
09/16 08:10:55 AM: grad_clipping = None
09/16 08:10:55 AM: lr_decay = 0.99
09/16 08:10:55 AM: min_lr = 1e-06
09/16 08:10:55 AM: keep_all_checkpoints = 0
09/16 08:10:55 AM: val_data_limit = 5000
09/16 08:10:55 AM: max_epochs = -1
09/16 08:10:55 AM: dec_val_scale = 250
09/16 08:10:55 AM: training_data_fraction = 1
09/16 08:10:55 AM: type = adam
09/16 08:10:55 AM: parameter_groups = None
09/16 08:10:55 AM: Number of trainable parameters: 661537
09/16 08:10:55 AM: infer_type_and_cast = True
09/16 08:10:55 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:10:55 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:10:55 AM: lr = 0.0001
09/16 08:10:55 AM: amsgrad = True
09/16 08:10:55 AM: type = reduce_on_plateau
09/16 08:10:55 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:10:55 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:10:55 AM: mode = max
09/16 08:10:55 AM: factor = 0.5
09/16 08:10:55 AM: patience = 3
09/16 08:10:55 AM: threshold = 0.0001
09/16 08:10:55 AM: threshold_mode = abs
09/16 08:10:55 AM: verbose = True
09/16 08:10:55 AM: type = adam
09/16 08:10:55 AM: parameter_groups = None
09/16 08:10:55 AM: Number of trainable parameters: 661537
09/16 08:10:55 AM: infer_type_and_cast = True
09/16 08:10:55 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:10:55 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:10:55 AM: lr = 0.0001
09/16 08:10:55 AM: amsgrad = True
09/16 08:10:55 AM: type = reduce_on_plateau
09/16 08:10:55 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:10:55 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:10:55 AM: mode = max
09/16 08:10:55 AM: factor = 0.5
09/16 08:10:55 AM: patience = 3
09/16 08:10:55 AM: threshold = 0.0001
09/16 08:10:55 AM: threshold_mode = abs
09/16 08:10:55 AM: verbose = True
09/16 08:10:55 AM: Starting training without restoring from a checkpoint.
09/16 08:10:55 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 08:10:55 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 08:11:00 AM: ***** Step 100 / Validation 1 *****
09/16 08:11:00 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:00 AM: Validating...
09/16 08:11:03 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:03 AM: Best result seen so far for micro.
09/16 08:11:03 AM: Best result seen so far for macro.
09/16 08:11:03 AM: Updating LR scheduler:
09/16 08:11:03 AM: 	Best result seen so far for macro_avg: 0.000
09/16 08:11:03 AM: 	# validation passes without improvement: 0
09/16 08:11:03 AM: edges-rel-semeval_loss: training: 0.244357 validation: 0.179028
09/16 08:11:03 AM: macro_avg: validation: 0.000000
09/16 08:11:03 AM: micro_avg: validation: 0.000000
09/16 08:11:03 AM: edges-rel-semeval_mcc: training: 0.006995 validation: 0.000000
09/16 08:11:03 AM: edges-rel-semeval_acc: training: 0.003154 validation: 0.000000
09/16 08:11:03 AM: edges-rel-semeval_precision: training: 0.064516 validation: 0.000000
09/16 08:11:03 AM: edges-rel-semeval_recall: training: 0.020814 validation: 0.000000
09/16 08:11:03 AM: edges-rel-semeval_f1: training: 0.031474 validation: 0.000000
09/16 08:11:03 AM: Global learning rate: 0.0001
09/16 08:11:03 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:11:05 AM: Update 148: task edges-rel-semeval, batch 48 (148): mcc: 0.0608, acc: 0.0039, precision: 1.0000, recall: 0.0039, f1: 0.0078, edges-rel-semeval_loss: 0.1789
09/16 08:11:07 AM: ***** Step 200 / Validation 2 *****
09/16 08:11:07 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:07 AM: Validating...
09/16 08:11:10 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:10 AM: Best result seen so far for macro.
09/16 08:11:10 AM: Updating LR scheduler:
09/16 08:11:10 AM: 	Best result seen so far for macro_avg: 0.123
09/16 08:11:10 AM: 	# validation passes without improvement: 0
09/16 08:11:10 AM: edges-rel-semeval_loss: training: 0.171761 validation: 0.148192
09/16 08:11:10 AM: macro_avg: validation: 0.123477
09/16 08:11:10 AM: micro_avg: validation: 0.000000
09/16 08:11:10 AM: edges-rel-semeval_mcc: training: 0.112013 validation: 0.240389
09/16 08:11:10 AM: edges-rel-semeval_acc: training: 0.015625 validation: 0.066144
09/16 08:11:10 AM: edges-rel-semeval_precision: training: 0.862069 validation: 0.926829
09/16 08:11:10 AM: edges-rel-semeval_recall: training: 0.015625 validation: 0.066144
09/16 08:11:10 AM: edges-rel-semeval_f1: training: 0.030694 validation: 0.123477
09/16 08:11:10 AM: Global learning rate: 0.0001
09/16 08:11:10 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:11:15 AM: Update 296: task edges-rel-semeval, batch 96 (296): mcc: 0.3103, acc: 0.1226, precision: 0.8130, recall: 0.1272, f1: 0.2199, edges-rel-semeval_loss: 0.1458
09/16 08:11:15 AM: ***** Step 300 / Validation 3 *****
09/16 08:11:15 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:15 AM: Validating...
09/16 08:11:17 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:17 AM: Best result seen so far for macro.
09/16 08:11:17 AM: Updating LR scheduler:
09/16 08:11:17 AM: 	Best result seen so far for macro_avg: 0.279
09/16 08:11:17 AM: 	# validation passes without improvement: 0
09/16 08:11:17 AM: edges-rel-semeval_loss: training: 0.145662 validation: 0.126382
09/16 08:11:17 AM: macro_avg: validation: 0.278761
09/16 08:11:17 AM: micro_avg: validation: 0.000000
09/16 08:11:17 AM: edges-rel-semeval_mcc: training: 0.312152 validation: 0.377000
09/16 08:11:17 AM: edges-rel-semeval_acc: training: 0.123620 validation: 0.163621
09/16 08:11:17 AM: edges-rel-semeval_precision: training: 0.816901 validation: 0.913043
09/16 08:11:17 AM: edges-rel-semeval_recall: training: 0.128035 validation: 0.164491
09/16 08:11:17 AM: edges-rel-semeval_f1: training: 0.221374 validation: 0.278761
09/16 08:11:17 AM: Global learning rate: 0.0001
09/16 08:11:17 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:11:22 AM: ***** Step 400 / Validation 4 *****
09/16 08:11:22 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:22 AM: Validating...
09/16 08:11:24 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:24 AM: Best result seen so far for macro.
09/16 08:11:24 AM: Updating LR scheduler:
09/16 08:11:24 AM: 	Best result seen so far for macro_avg: 0.439
09/16 08:11:24 AM: 	# validation passes without improvement: 0
09/16 08:11:24 AM: edges-rel-semeval_loss: training: 0.126264 validation: 0.112325
09/16 08:11:24 AM: macro_avg: validation: 0.438735
09/16 08:11:24 AM: micro_avg: validation: 0.000000
09/16 08:11:24 AM: edges-rel-semeval_mcc: training: 0.441318 validation: 0.499018
09/16 08:11:24 AM: edges-rel-semeval_acc: training: 0.237813 validation: 0.286336
09/16 08:11:24 AM: edges-rel-semeval_precision: training: 0.837752 validation: 0.902439
09/16 08:11:24 AM: edges-rel-semeval_recall: training: 0.246875 validation: 0.289817
09/16 08:11:24 AM: edges-rel-semeval_f1: training: 0.381366 validation: 0.438735
09/16 08:11:24 AM: Global learning rate: 0.0001
09/16 08:11:24 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:11:25 AM: Update 421: task edges-rel-semeval, batch 21 (421): mcc: 0.4841, acc: 0.2708, precision: 0.8826, recall: 0.2798, f1: 0.4249, edges-rel-semeval_loss: 0.1224
09/16 08:11:29 AM: ***** Step 500 / Validation 5 *****
09/16 08:11:29 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:29 AM: Validating...
09/16 08:11:32 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:32 AM: Best result seen so far for macro.
09/16 08:11:32 AM: Updating LR scheduler:
09/16 08:11:32 AM: 	Best result seen so far for macro_avg: 0.521
09/16 08:11:32 AM: 	# validation passes without improvement: 0
09/16 08:11:32 AM: edges-rel-semeval_loss: training: 0.115844 validation: 0.103607
09/16 08:11:32 AM: macro_avg: validation: 0.520833
09/16 08:11:32 AM: micro_avg: validation: 0.000000
09/16 08:11:32 AM: edges-rel-semeval_mcc: training: 0.511415 validation: 0.557273
09/16 08:11:32 AM: edges-rel-semeval_acc: training: 0.312835 validation: 0.363795
09/16 08:11:32 AM: edges-rel-semeval_precision: training: 0.850993 validation: 0.879917
09/16 08:11:32 AM: edges-rel-semeval_recall: training: 0.324188 validation: 0.369887
09/16 08:11:32 AM: edges-rel-semeval_f1: training: 0.469514 validation: 0.520833
09/16 08:11:32 AM: Global learning rate: 0.0001
09/16 08:11:32 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:11:35 AM: Update 581: task edges-rel-semeval, batch 81 (581): mcc: 0.5668, acc: 0.3846, precision: 0.8522, recall: 0.3958, f1: 0.5406, edges-rel-semeval_loss: 0.1045
09/16 08:11:36 AM: ***** Step 600 / Validation 6 *****
09/16 08:11:36 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:36 AM: Validating...
09/16 08:11:38 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:38 AM: Best result seen so far for macro.
09/16 08:11:38 AM: Updating LR scheduler:
09/16 08:11:38 AM: 	Best result seen so far for macro_avg: 0.567
09/16 08:11:38 AM: 	# validation passes without improvement: 0
09/16 08:11:38 AM: edges-rel-semeval_loss: training: 0.104549 validation: 0.097310
09/16 08:11:38 AM: macro_avg: validation: 0.567095
09/16 08:11:38 AM: micro_avg: validation: 0.000000
09/16 08:11:38 AM: edges-rel-semeval_mcc: training: 0.562204 validation: 0.589475
09/16 08:11:38 AM: edges-rel-semeval_acc: training: 0.382188 validation: 0.414273
09/16 08:11:38 AM: edges-rel-semeval_precision: training: 0.844400 validation: 0.860177
09/16 08:11:38 AM: edges-rel-semeval_recall: training: 0.393438 validation: 0.422976
09/16 08:11:38 AM: edges-rel-semeval_f1: training: 0.536773 validation: 0.567095
09/16 08:11:38 AM: Global learning rate: 0.0001
09/16 08:11:38 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:11:43 AM: ***** Step 700 / Validation 7 *****
09/16 08:11:43 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:43 AM: Validating...
09/16 08:11:45 AM: Evaluate: task edges-rel-semeval, batch 30 (36): mcc: 0.6242, acc: 0.4510, precision: 0.8838, recall: 0.4594, f1: 0.6045, edges-rel-semeval_loss: 0.0891
09/16 08:11:45 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:45 AM: Best result seen so far for macro.
09/16 08:11:45 AM: Updating LR scheduler:
09/16 08:11:45 AM: 	Best result seen so far for macro_avg: 0.579
09/16 08:11:45 AM: 	# validation passes without improvement: 0
09/16 08:11:45 AM: edges-rel-semeval_loss: training: 0.097298 validation: 0.092204
09/16 08:11:45 AM: macro_avg: validation: 0.578704
09/16 08:11:45 AM: micro_avg: validation: 0.000000
09/16 08:11:45 AM: edges-rel-semeval_mcc: training: 0.596280 validation: 0.599429
09/16 08:11:45 AM: edges-rel-semeval_acc: training: 0.421949 validation: 0.427328
09/16 08:11:45 AM: edges-rel-semeval_precision: training: 0.840000 validation: 0.863558
09/16 08:11:45 AM: edges-rel-semeval_recall: training: 0.443709 validation: 0.435161
09/16 08:11:45 AM: edges-rel-semeval_f1: training: 0.580685 validation: 0.578704
09/16 08:11:45 AM: Global learning rate: 0.0001
09/16 08:11:45 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:11:50 AM: ***** Step 800 / Validation 8 *****
09/16 08:11:50 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:50 AM: Validating...
09/16 08:11:52 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:52 AM: Best result seen so far for macro.
09/16 08:11:52 AM: Updating LR scheduler:
09/16 08:11:52 AM: 	Best result seen so far for macro_avg: 0.640
09/16 08:11:52 AM: 	# validation passes without improvement: 0
09/16 08:11:52 AM: edges-rel-semeval_loss: training: 0.092024 validation: 0.087451
09/16 08:11:52 AM: macro_avg: validation: 0.639779
09/16 08:11:52 AM: micro_avg: validation: 0.000000
09/16 08:11:52 AM: edges-rel-semeval_mcc: training: 0.630866 validation: 0.651513
09/16 08:11:52 AM: edges-rel-semeval_acc: training: 0.462187 validation: 0.489121
09/16 08:11:52 AM: edges-rel-semeval_precision: training: 0.857301 validation: 0.875946
09/16 08:11:52 AM: edges-rel-semeval_recall: training: 0.484375 validation: 0.503916
09/16 08:11:52 AM: edges-rel-semeval_f1: training: 0.619010 validation: 0.639779
09/16 08:11:52 AM: Global learning rate: 0.0001
09/16 08:11:52 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:11:56 AM: Update 861: task edges-rel-semeval, batch 61 (861): mcc: 0.6235, acc: 0.4592, precision: 0.8338, recall: 0.4878, f1: 0.6155, edges-rel-semeval_loss: 0.0895
09/16 08:11:58 AM: ***** Step 900 / Validation 9 *****
09/16 08:11:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:58 AM: Validating...
09/16 08:12:00 AM: Best result seen so far for edges-rel-semeval.
09/16 08:12:00 AM: Best result seen so far for macro.
09/16 08:12:00 AM: Updating LR scheduler:
09/16 08:12:00 AM: 	Best result seen so far for macro_avg: 0.649
09/16 08:12:00 AM: 	# validation passes without improvement: 0
09/16 08:12:00 AM: edges-rel-semeval_loss: training: 0.088051 validation: 0.084423
09/16 08:12:00 AM: macro_avg: validation: 0.648561
09/16 08:12:00 AM: micro_avg: validation: 0.000000
09/16 08:12:00 AM: edges-rel-semeval_mcc: training: 0.636603 validation: 0.656385
09/16 08:12:00 AM: edges-rel-semeval_acc: training: 0.474614 validation: 0.506527
09/16 08:12:00 AM: edges-rel-semeval_precision: training: 0.841245 validation: 0.862717
09/16 08:12:00 AM: edges-rel-semeval_recall: training: 0.502996 validation: 0.519582
09/16 08:12:00 AM: edges-rel-semeval_f1: training: 0.629564 validation: 0.648561
09/16 08:12:00 AM: Global learning rate: 0.0001
09/16 08:12:00 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:12:05 AM: ***** Step 1000 / Validation 10 *****
09/16 08:12:05 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:05 AM: Validating...
09/16 08:12:06 AM: Evaluate: task edges-rel-semeval, batch 19 (36): mcc: 0.6923, acc: 0.5428, precision: 0.8678, recall: 0.5724, f1: 0.6898, edges-rel-semeval_loss: 0.0781
09/16 08:12:07 AM: Best result seen so far for edges-rel-semeval.
09/16 08:12:07 AM: Best result seen so far for macro.
09/16 08:12:07 AM: Updating LR scheduler:
09/16 08:12:07 AM: 	Best result seen so far for macro_avg: 0.663
09/16 08:12:07 AM: 	# validation passes without improvement: 0
09/16 08:12:07 AM: edges-rel-semeval_loss: training: 0.082099 validation: 0.082092
09/16 08:12:07 AM: macro_avg: validation: 0.663107
09/16 08:12:07 AM: micro_avg: validation: 0.000000
09/16 08:12:07 AM: edges-rel-semeval_mcc: training: 0.673880 validation: 0.667767
09/16 08:12:07 AM: edges-rel-semeval_acc: training: 0.518125 validation: 0.515231
09/16 08:12:07 AM: edges-rel-semeval_precision: training: 0.855550 validation: 0.857735
09/16 08:12:07 AM: edges-rel-semeval_recall: training: 0.551562 validation: 0.540470
09/16 08:12:07 AM: edges-rel-semeval_f1: training: 0.670720 validation: 0.663107
09/16 08:12:07 AM: Global learning rate: 0.0001
09/16 08:12:07 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:12:13 AM: ***** Step 1100 / Validation 11 *****
09/16 08:12:13 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:13 AM: Validating...
09/16 08:12:15 AM: Best result seen so far for edges-rel-semeval.
09/16 08:12:15 AM: Best result seen so far for macro.
09/16 08:12:15 AM: Updating LR scheduler:
09/16 08:12:15 AM: 	Best result seen so far for macro_avg: 0.676
09/16 08:12:15 AM: 	# validation passes without improvement: 0
09/16 08:12:15 AM: edges-rel-semeval_loss: training: 0.080745 validation: 0.081065
09/16 08:12:15 AM: macro_avg: validation: 0.676267
09/16 08:12:15 AM: micro_avg: validation: 0.000000
09/16 08:12:15 AM: edges-rel-semeval_mcc: training: 0.667250 validation: 0.681631
09/16 08:12:15 AM: edges-rel-semeval_acc: training: 0.518764 validation: 0.536118
09/16 08:12:15 AM: edges-rel-semeval_precision: training: 0.835311 validation: 0.873278
09/16 08:12:15 AM: edges-rel-semeval_recall: training: 0.555030 validation: 0.551784
09/16 08:12:15 AM: edges-rel-semeval_f1: training: 0.666919 validation: 0.676267
09/16 08:12:15 AM: Global learning rate: 0.0001
09/16 08:12:15 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:12:16 AM: Update 1124: task edges-rel-semeval, batch 24 (1124): mcc: 0.7107, acc: 0.5729, precision: 0.8757, recall: 0.5964, f1: 0.7095, edges-rel-semeval_loss: 0.0765
09/16 08:12:20 AM: ***** Step 1200 / Validation 12 *****
09/16 08:12:20 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:20 AM: Validating...
09/16 08:12:22 AM: Updating LR scheduler:
09/16 08:12:22 AM: 	Best result seen so far for macro_avg: 0.676
09/16 08:12:22 AM: 	# validation passes without improvement: 1
09/16 08:12:22 AM: edges-rel-semeval_loss: training: 0.077390 validation: 0.079072
09/16 08:12:22 AM: macro_avg: validation: 0.672737
09/16 08:12:22 AM: micro_avg: validation: 0.000000
09/16 08:12:22 AM: edges-rel-semeval_mcc: training: 0.698427 validation: 0.678871
09/16 08:12:22 AM: edges-rel-semeval_acc: training: 0.556250 validation: 0.524804
09/16 08:12:22 AM: edges-rel-semeval_precision: training: 0.865616 validation: 0.874652
09/16 08:12:22 AM: edges-rel-semeval_recall: training: 0.583750 validation: 0.546562
09/16 08:12:22 AM: edges-rel-semeval_f1: training: 0.697275 validation: 0.672737
09/16 08:12:22 AM: Global learning rate: 0.0001
09/16 08:12:22 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:12:26 AM: Update 1286: task edges-rel-semeval, batch 86 (1286): mcc: 0.6832, acc: 0.5385, precision: 0.8376, recall: 0.5792, f1: 0.6849, edges-rel-semeval_loss: 0.0776
09/16 08:12:27 AM: ***** Step 1300 / Validation 13 *****
09/16 08:12:27 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:27 AM: Validating...
09/16 08:12:30 AM: Best result seen so far for edges-rel-semeval.
09/16 08:12:30 AM: Best result seen so far for macro.
09/16 08:12:30 AM: Updating LR scheduler:
09/16 08:12:30 AM: 	Best result seen so far for macro_avg: 0.707
09/16 08:12:30 AM: 	# validation passes without improvement: 0
09/16 08:12:30 AM: edges-rel-semeval_loss: training: 0.076666 validation: 0.076344
09/16 08:12:30 AM: macro_avg: validation: 0.706905
09/16 08:12:30 AM: micro_avg: validation: 0.000000
09/16 08:12:30 AM: edges-rel-semeval_mcc: training: 0.685028 validation: 0.705577
09/16 08:12:30 AM: edges-rel-semeval_acc: training: 0.541154 validation: 0.575283
09/16 08:12:30 AM: edges-rel-semeval_precision: training: 0.835969 validation: 0.857320
09/16 08:12:30 AM: edges-rel-semeval_recall: training: 0.583412 validation: 0.601393
09/16 08:12:30 AM: edges-rel-semeval_f1: training: 0.687221 validation: 0.706905
09/16 08:12:30 AM: Global learning rate: 0.0001
09/16 08:12:30 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:12:34 AM: ***** Step 1400 / Validation 14 *****
09/16 08:12:34 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:34 AM: Validating...
09/16 08:12:36 AM: Evaluate: task edges-rel-semeval, batch 25 (36): mcc: 0.7235, acc: 0.5938, precision: 0.8857, recall: 0.6100, f1: 0.7224, edges-rel-semeval_loss: 0.0720
09/16 08:12:37 AM: Updating LR scheduler:
09/16 08:12:37 AM: 	Best result seen so far for macro_avg: 0.707
09/16 08:12:37 AM: 	# validation passes without improvement: 1
09/16 08:12:37 AM: edges-rel-semeval_loss: training: 0.071856 validation: 0.076391
09/16 08:12:37 AM: macro_avg: validation: 0.696017
09/16 08:12:37 AM: micro_avg: validation: 0.000000
09/16 08:12:37 AM: edges-rel-semeval_mcc: training: 0.717779 validation: 0.698819
09/16 08:12:37 AM: edges-rel-semeval_acc: training: 0.582500 validation: 0.560487
09/16 08:12:37 AM: edges-rel-semeval_precision: training: 0.861874 validation: 0.874835
09/16 08:12:37 AM: edges-rel-semeval_recall: training: 0.618125 validation: 0.577894
09/16 08:12:37 AM: edges-rel-semeval_f1: training: 0.719927 validation: 0.696017
09/16 08:12:37 AM: Global learning rate: 0.0001
09/16 08:12:37 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:12:41 AM: ***** Step 1500 / Validation 15 *****
09/16 08:12:41 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:41 AM: Validating...
09/16 08:12:44 AM: Updating LR scheduler:
09/16 08:12:44 AM: 	Best result seen so far for macro_avg: 0.707
09/16 08:12:44 AM: 	# validation passes without improvement: 2
09/16 08:12:44 AM: edges-rel-semeval_loss: training: 0.071058 validation: 0.074880
09/16 08:12:44 AM: macro_avg: validation: 0.703297
09/16 08:12:44 AM: micro_avg: validation: 0.000000
09/16 08:12:44 AM: edges-rel-semeval_mcc: training: 0.723705 validation: 0.706257
09/16 08:12:44 AM: edges-rel-semeval_acc: training: 0.583438 validation: 0.566580
09/16 08:12:44 AM: edges-rel-semeval_precision: training: 0.867449 validation: 0.881890
09/16 08:12:44 AM: edges-rel-semeval_recall: training: 0.623750 validation: 0.584856
09/16 08:12:44 AM: edges-rel-semeval_f1: training: 0.725686 validation: 0.703297
09/16 08:12:44 AM: Global learning rate: 0.0001
09/16 08:12:44 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:12:46 AM: Update 1535: task edges-rel-semeval, batch 35 (1535): mcc: 0.7487, acc: 0.6178, precision: 0.8854, recall: 0.6517, f1: 0.7508, edges-rel-semeval_loss: 0.0660
09/16 08:12:49 AM: ***** Step 1600 / Validation 16 *****
09/16 08:12:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:49 AM: Validating...
09/16 08:12:52 AM: Best result seen so far for edges-rel-semeval.
09/16 08:12:52 AM: Best result seen so far for macro.
09/16 08:12:52 AM: Updating LR scheduler:
09/16 08:12:52 AM: 	Best result seen so far for macro_avg: 0.707
09/16 08:12:52 AM: 	# validation passes without improvement: 0
09/16 08:12:52 AM: edges-rel-semeval_loss: training: 0.067480 validation: 0.075232
09/16 08:12:52 AM: macro_avg: validation: 0.707102
09/16 08:12:52 AM: micro_avg: validation: 0.000000
09/16 08:12:52 AM: edges-rel-semeval_mcc: training: 0.735087 validation: 0.708363
09/16 08:12:52 AM: edges-rel-semeval_acc: training: 0.600757 validation: 0.578764
09/16 08:12:52 AM: edges-rel-semeval_precision: training: 0.866299 validation: 0.874359
09/16 08:12:52 AM: edges-rel-semeval_recall: training: 0.643646 validation: 0.593560
09/16 08:12:52 AM: edges-rel-semeval_f1: training: 0.738556 validation: 0.707102
09/16 08:12:52 AM: Global learning rate: 0.0001
09/16 08:12:52 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:12:56 AM: ***** Step 1700 / Validation 17 *****
09/16 08:12:56 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:56 AM: Validating...
09/16 08:12:56 AM: Evaluate: task edges-rel-semeval, batch 2 (36): mcc: 0.7487, acc: 0.6250, precision: 0.8600, recall: 0.6719, f1: 0.7544, edges-rel-semeval_loss: 0.0613
09/16 08:12:58 AM: Best result seen so far for edges-rel-semeval.
09/16 08:12:58 AM: Best result seen so far for macro.
09/16 08:12:58 AM: Updating LR scheduler:
09/16 08:12:58 AM: 	Best result seen so far for macro_avg: 0.712
09/16 08:12:58 AM: 	# validation passes without improvement: 0
09/16 08:12:58 AM: edges-rel-semeval_loss: training: 0.068374 validation: 0.073820
09/16 08:12:58 AM: macro_avg: validation: 0.711984
09/16 08:12:58 AM: micro_avg: validation: 0.000000
09/16 08:12:58 AM: edges-rel-semeval_mcc: training: 0.733811 validation: 0.708249
09/16 08:12:58 AM: edges-rel-semeval_acc: training: 0.605625 validation: 0.583116
09/16 08:12:58 AM: edges-rel-semeval_precision: training: 0.857438 validation: 0.844683
09/16 08:12:58 AM: edges-rel-semeval_recall: training: 0.648438 validation: 0.615318
09/16 08:12:58 AM: edges-rel-semeval_f1: training: 0.738434 validation: 0.711984
09/16 08:12:58 AM: Global learning rate: 0.0001
09/16 08:12:58 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:13:04 AM: ***** Step 1800 / Validation 18 *****
09/16 08:13:04 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:13:04 AM: Validating...
09/16 08:13:06 AM: Best result seen so far for edges-rel-semeval.
09/16 08:13:06 AM: Best result seen so far for macro.
09/16 08:13:06 AM: Updating LR scheduler:
09/16 08:13:06 AM: 	Best result seen so far for macro_avg: 0.712
09/16 08:13:06 AM: 	# validation passes without improvement: 0
09/16 08:13:06 AM: edges-rel-semeval_loss: training: 0.064991 validation: 0.073687
09/16 08:13:06 AM: macro_avg: validation: 0.712106
09/16 08:13:06 AM: micro_avg: validation: 0.000000
09/16 08:13:06 AM: edges-rel-semeval_mcc: training: 0.746713 validation: 0.710096
09/16 08:13:06 AM: edges-rel-semeval_acc: training: 0.617786 validation: 0.583986
09/16 08:13:06 AM: edges-rel-semeval_precision: training: 0.862153 validation: 0.856793
09/16 08:13:06 AM: edges-rel-semeval_recall: training: 0.666667 validation: 0.609225
09/16 08:13:06 AM: edges-rel-semeval_f1: training: 0.751912 validation: 0.712106
09/16 08:13:06 AM: Global learning rate: 0.0001
09/16 08:13:06 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:13:06 AM: Update 1804: task edges-rel-semeval, batch 4 (1804): mcc: 0.7223, acc: 0.5938, precision: 0.8235, recall: 0.6562, f1: 0.7304, edges-rel-semeval_loss: 0.0721
09/16 08:13:11 AM: ***** Step 1900 / Validation 19 *****
09/16 08:13:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:13:11 AM: Validating...
09/16 08:13:13 AM: Updating LR scheduler:
09/16 08:13:13 AM: 	Best result seen so far for macro_avg: 0.712
09/16 08:13:13 AM: 	# validation passes without improvement: 1
09/16 08:13:13 AM: edges-rel-semeval_loss: training: 0.064935 validation: 0.071788
09/16 08:13:13 AM: macro_avg: validation: 0.711951
09/16 08:13:13 AM: micro_avg: validation: 0.000000
09/16 08:13:13 AM: edges-rel-semeval_mcc: training: 0.742565 validation: 0.710662
09/16 08:13:13 AM: edges-rel-semeval_acc: training: 0.618437 validation: 0.584856
09/16 08:13:13 AM: edges-rel-semeval_precision: training: 0.860456 validation: 0.861557
09/16 08:13:13 AM: edges-rel-semeval_recall: training: 0.660937 validation: 0.606614
09/16 08:13:13 AM: edges-rel-semeval_f1: training: 0.747614 validation: 0.711951
09/16 08:13:13 AM: Global learning rate: 0.0001
09/16 08:13:13 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:13:16 AM: Update 1952: task edges-rel-semeval, batch 52 (1952): mcc: 0.7502, acc: 0.6196, precision: 0.8711, recall: 0.6654, f1: 0.7545, edges-rel-semeval_loss: 0.0639
09/16 08:13:18 AM: ***** Step 2000 / Validation 20 *****
09/16 08:13:18 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:13:18 AM: Validating...
09/16 08:13:21 AM: Best result seen so far for edges-rel-semeval.
09/16 08:13:21 AM: Best result seen so far for macro.
09/16 08:13:21 AM: Updating LR scheduler:
09/16 08:13:21 AM: 	Best result seen so far for macro_avg: 0.713
09/16 08:13:21 AM: 	# validation passes without improvement: 0
09/16 08:13:21 AM: edges-rel-semeval_loss: training: 0.062025 validation: 0.072362
09/16 08:13:21 AM: macro_avg: validation: 0.712632
09/16 08:13:21 AM: micro_avg: validation: 0.000000
09/16 08:13:21 AM: edges-rel-semeval_mcc: training: 0.760495 validation: 0.708855
09/16 08:13:21 AM: edges-rel-semeval_acc: training: 0.633869 validation: 0.590078
09/16 08:13:21 AM: edges-rel-semeval_precision: training: 0.875000 validation: 0.844869
09/16 08:13:21 AM: edges-rel-semeval_recall: training: 0.679912 validation: 0.616188
09/16 08:13:21 AM: edges-rel-semeval_f1: training: 0.765217 validation: 0.712632
09/16 08:13:21 AM: Global learning rate: 0.0001
09/16 08:13:21 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:13:25 AM: ***** Step 2100 / Validation 21 *****
09/16 08:13:25 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:13:25 AM: Validating...
09/16 08:13:26 AM: Evaluate: task edges-rel-semeval, batch 19 (36): mcc: 0.7330, acc: 0.6184, precision: 0.8501, recall: 0.6530, f1: 0.7386, edges-rel-semeval_loss: 0.0672
09/16 08:13:27 AM: Best result seen so far for edges-rel-semeval.
09/16 08:13:27 AM: Best result seen so far for macro.
09/16 08:13:27 AM: Updating LR scheduler:
09/16 08:13:27 AM: 	Best result seen so far for macro_avg: 0.720
09/16 08:13:27 AM: 	# validation passes without improvement: 0
09/16 08:13:27 AM: edges-rel-semeval_loss: training: 0.061549 validation: 0.071547
09/16 08:13:27 AM: macro_avg: validation: 0.719524
09/16 08:13:27 AM: micro_avg: validation: 0.000000
09/16 08:13:27 AM: edges-rel-semeval_mcc: training: 0.759983 validation: 0.713786
09/16 08:13:27 AM: edges-rel-semeval_acc: training: 0.643437 validation: 0.599652
09/16 08:13:27 AM: edges-rel-semeval_precision: training: 0.869583 validation: 0.835443
09/16 08:13:27 AM: edges-rel-semeval_recall: training: 0.683438 validation: 0.631854
09/16 08:13:27 AM: edges-rel-semeval_f1: training: 0.765354 validation: 0.719524
09/16 08:13:27 AM: Global learning rate: 0.0001
09/16 08:13:27 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:13:32 AM: ***** Step 2200 / Validation 22 *****
09/16 08:13:32 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:13:32 AM: Validating...
09/16 08:13:35 AM: Updating LR scheduler:
09/16 08:13:35 AM: 	Best result seen so far for macro_avg: 0.720
09/16 08:13:35 AM: 	# validation passes without improvement: 1
09/16 08:13:35 AM: edges-rel-semeval_loss: training: 0.060253 validation: 0.070278
09/16 08:13:35 AM: macro_avg: validation: 0.718210
09/16 08:13:35 AM: micro_avg: validation: 0.000000
09/16 08:13:35 AM: edges-rel-semeval_mcc: training: 0.767234 validation: 0.716581
09/16 08:13:35 AM: edges-rel-semeval_acc: training: 0.649637 validation: 0.588338
09/16 08:13:35 AM: edges-rel-semeval_precision: training: 0.871095 validation: 0.864137
09/16 08:13:35 AM: edges-rel-semeval_recall: training: 0.694734 validation: 0.614447
09/16 08:13:35 AM: edges-rel-semeval_f1: training: 0.772982 validation: 0.718210
09/16 08:13:35 AM: Global learning rate: 0.0001
09/16 08:13:35 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:13:36 AM: Update 2232: task edges-rel-semeval, batch 32 (2232): mcc: 0.7584, acc: 0.6387, precision: 0.8672, recall: 0.6826, f1: 0.7639, edges-rel-semeval_loss: 0.0609
09/16 08:13:40 AM: ***** Step 2300 / Validation 23 *****
09/16 08:13:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:13:40 AM: Validating...
09/16 08:13:42 AM: Best result seen so far for edges-rel-semeval.
09/16 08:13:42 AM: Best result seen so far for macro.
09/16 08:13:42 AM: Updating LR scheduler:
09/16 08:13:42 AM: 	Best result seen so far for macro_avg: 0.729
09/16 08:13:42 AM: 	# validation passes without improvement: 0
09/16 08:13:42 AM: edges-rel-semeval_loss: training: 0.061952 validation: 0.070327
09/16 08:13:42 AM: macro_avg: validation: 0.729353
09/16 08:13:42 AM: micro_avg: validation: 0.000000
09/16 08:13:42 AM: edges-rel-semeval_mcc: training: 0.757546 validation: 0.724779
09/16 08:13:42 AM: edges-rel-semeval_acc: training: 0.636250 validation: 0.610096
09/16 08:13:42 AM: edges-rel-semeval_precision: training: 0.862938 validation: 0.851336
09/16 08:13:42 AM: edges-rel-semeval_recall: training: 0.684687 validation: 0.637946
09/16 08:13:42 AM: edges-rel-semeval_f1: training: 0.763548 validation: 0.729353
09/16 08:13:42 AM: Global learning rate: 0.0001
09/16 08:13:42 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:13:46 AM: Update 2382: task edges-rel-semeval, batch 82 (2382): mcc: 0.7784, acc: 0.6555, precision: 0.8785, recall: 0.7079, f1: 0.7840, edges-rel-semeval_loss: 0.0567
09/16 08:13:47 AM: ***** Step 2400 / Validation 24 *****
09/16 08:13:47 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:13:47 AM: Validating...
09/16 08:13:49 AM: Updating LR scheduler:
09/16 08:13:49 AM: 	Best result seen so far for macro_avg: 0.729
09/16 08:13:49 AM: 	# validation passes without improvement: 1
09/16 08:13:49 AM: edges-rel-semeval_loss: training: 0.055998 validation: 0.070525
09/16 08:13:49 AM: macro_avg: validation: 0.720205
09/16 08:13:49 AM: micro_avg: validation: 0.000000
09/16 08:13:49 AM: edges-rel-semeval_mcc: training: 0.785360 validation: 0.719720
09/16 08:13:49 AM: edges-rel-semeval_acc: training: 0.666351 validation: 0.592689
09/16 08:13:49 AM: edges-rel-semeval_precision: training: 0.882079 validation: 0.873449
09/16 08:13:49 AM: edges-rel-semeval_recall: training: 0.717124 validation: 0.612707
09/16 08:13:49 AM: edges-rel-semeval_f1: training: 0.791094 validation: 0.720205
09/16 08:13:49 AM: Global learning rate: 0.0001
09/16 08:13:49 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:13:54 AM: ***** Step 2500 / Validation 25 *****
09/16 08:13:54 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:13:54 AM: Validating...
09/16 08:13:56 AM: Best result seen so far for edges-rel-semeval.
09/16 08:13:56 AM: Best result seen so far for macro.
09/16 08:13:56 AM: Updating LR scheduler:
09/16 08:13:56 AM: 	Best result seen so far for macro_avg: 0.730
09/16 08:13:56 AM: 	# validation passes without improvement: 0
09/16 08:13:56 AM: edges-rel-semeval_loss: training: 0.057008 validation: 0.069134
09/16 08:13:56 AM: macro_avg: validation: 0.729553
09/16 08:13:56 AM: micro_avg: validation: 0.000000
09/16 08:13:56 AM: edges-rel-semeval_mcc: training: 0.779464 validation: 0.726313
09/16 08:13:56 AM: edges-rel-semeval_acc: training: 0.665937 validation: 0.610966
09/16 08:13:56 AM: edges-rel-semeval_precision: training: 0.876443 validation: 0.861374
09/16 08:13:56 AM: edges-rel-semeval_recall: training: 0.711563 validation: 0.632724
09/16 08:13:56 AM: edges-rel-semeval_f1: training: 0.785443 validation: 0.729553
09/16 08:13:56 AM: Global learning rate: 0.0001
09/16 08:13:56 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:13:56 AM: Update 2504: task edges-rel-semeval, batch 4 (2504): mcc: 0.7459, acc: 0.6172, precision: 0.8447, recall: 0.6797, f1: 0.7532, edges-rel-semeval_loss: 0.0672
09/16 08:14:01 AM: ***** Step 2600 / Validation 26 *****
09/16 08:14:01 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:14:01 AM: Validating...
09/16 08:14:04 AM: Updating LR scheduler:
09/16 08:14:04 AM: 	Best result seen so far for macro_avg: 0.730
09/16 08:14:04 AM: 	# validation passes without improvement: 1
09/16 08:14:04 AM: edges-rel-semeval_loss: training: 0.057238 validation: 0.070161
09/16 08:14:04 AM: macro_avg: validation: 0.726531
09/16 08:14:04 AM: micro_avg: validation: 0.000000
09/16 08:14:04 AM: edges-rel-semeval_mcc: training: 0.776143 validation: 0.725975
09/16 08:14:04 AM: edges-rel-semeval_acc: training: 0.659098 validation: 0.602263
09/16 08:14:04 AM: edges-rel-semeval_precision: training: 0.869699 validation: 0.877928
09/16 08:14:04 AM: edges-rel-semeval_recall: training: 0.711447 validation: 0.619669
09/16 08:14:04 AM: edges-rel-semeval_f1: training: 0.782654 validation: 0.726531
09/16 08:14:04 AM: Global learning rate: 0.0001
09/16 08:14:04 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:14:06 AM: Update 2664: task edges-rel-semeval, batch 64 (2664): mcc: 0.7981, acc: 0.6821, precision: 0.8841, recall: 0.7378, f1: 0.8044, edges-rel-semeval_loss: 0.0537
09/16 08:14:08 AM: ***** Step 2700 / Validation 27 *****
09/16 08:14:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:14:08 AM: Validating...
09/16 08:14:10 AM: Updating LR scheduler:
09/16 08:14:10 AM: 	Best result seen so far for macro_avg: 0.730
09/16 08:14:10 AM: 	# validation passes without improvement: 2
09/16 08:14:10 AM: edges-rel-semeval_loss: training: 0.053969 validation: 0.069910
09/16 08:14:10 AM: macro_avg: validation: 0.724086
09/16 08:14:10 AM: micro_avg: validation: 0.000000
09/16 08:14:10 AM: edges-rel-semeval_mcc: training: 0.793926 validation: 0.720197
09/16 08:14:10 AM: edges-rel-semeval_acc: training: 0.680000 validation: 0.606614
09/16 08:14:10 AM: edges-rel-semeval_precision: training: 0.880961 validation: 0.852594
09/16 08:14:10 AM: edges-rel-semeval_recall: training: 0.733125 validation: 0.629243
09/16 08:14:10 AM: edges-rel-semeval_f1: training: 0.800273 validation: 0.724086
09/16 08:14:10 AM: Global learning rate: 0.0001
09/16 08:14:10 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:14:16 AM: ***** Step 2800 / Validation 28 *****
09/16 08:14:16 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:14:16 AM: Validating...
09/16 08:14:16 AM: Evaluate: task edges-rel-semeval, batch 11 (36): mcc: 0.7489, acc: 0.6449, precision: 0.8587, recall: 0.6733, f1: 0.7548, edges-rel-semeval_loss: 0.0661
09/16 08:14:18 AM: Best result seen so far for edges-rel-semeval.
09/16 08:14:18 AM: Best result seen so far for macro.
09/16 08:14:18 AM: Updating LR scheduler:
09/16 08:14:18 AM: 	Best result seen so far for macro_avg: 0.733
09/16 08:14:18 AM: 	# validation passes without improvement: 0
09/16 08:14:18 AM: edges-rel-semeval_loss: training: 0.056754 validation: 0.070067
09/16 08:14:18 AM: macro_avg: validation: 0.733005
09/16 08:14:18 AM: micro_avg: validation: 0.000000
09/16 08:14:18 AM: edges-rel-semeval_mcc: training: 0.771134 validation: 0.727216
09/16 08:14:18 AM: edges-rel-semeval_acc: training: 0.650899 validation: 0.620540
09/16 08:14:18 AM: edges-rel-semeval_precision: training: 0.864917 validation: 0.844495
09/16 08:14:18 AM: edges-rel-semeval_recall: training: 0.706717 validation: 0.647520
09/16 08:14:18 AM: edges-rel-semeval_f1: training: 0.777855 validation: 0.733005
09/16 08:14:18 AM: Global learning rate: 0.0001
09/16 08:14:18 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:14:23 AM: ***** Step 2900 / Validation 29 *****
09/16 08:14:23 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:14:23 AM: Validating...
09/16 08:14:25 AM: Best result seen so far for edges-rel-semeval.
09/16 08:14:25 AM: Best result seen so far for macro.
09/16 08:14:25 AM: Updating LR scheduler:
09/16 08:14:25 AM: 	Best result seen so far for macro_avg: 0.736
09/16 08:14:25 AM: 	# validation passes without improvement: 0
09/16 08:14:25 AM: edges-rel-semeval_loss: training: 0.051575 validation: 0.070196
09/16 08:14:25 AM: macro_avg: validation: 0.735969
09/16 08:14:25 AM: micro_avg: validation: 0.000000
09/16 08:14:25 AM: edges-rel-semeval_mcc: training: 0.798767 validation: 0.729112
09/16 08:14:25 AM: edges-rel-semeval_acc: training: 0.685625 validation: 0.624891
09/16 08:14:25 AM: edges-rel-semeval_precision: training: 0.886176 validation: 0.837778
09/16 08:14:25 AM: edges-rel-semeval_recall: training: 0.737188 validation: 0.656223
09/16 08:14:25 AM: edges-rel-semeval_f1: training: 0.804845 validation: 0.735969
09/16 08:14:25 AM: Global learning rate: 0.0001
09/16 08:14:25 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:14:26 AM: Update 2927: task edges-rel-semeval, batch 27 (2927): mcc: 0.7758, acc: 0.6759, precision: 0.8591, recall: 0.7199, f1: 0.7834, edges-rel-semeval_loss: 0.0584
09/16 08:14:30 AM: ***** Step 3000 / Validation 30 *****
09/16 08:14:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:14:30 AM: Validating...
09/16 08:14:32 AM: Updating LR scheduler:
09/16 08:14:32 AM: 	Best result seen so far for macro_avg: 0.736
09/16 08:14:32 AM: 	# validation passes without improvement: 1
09/16 08:14:32 AM: edges-rel-semeval_loss: training: 0.056190 validation: 0.070157
09/16 08:14:32 AM: macro_avg: validation: 0.710867
09/16 08:14:32 AM: micro_avg: validation: 0.000000
09/16 08:14:32 AM: edges-rel-semeval_mcc: training: 0.784007 validation: 0.705496
09/16 08:14:32 AM: edges-rel-semeval_acc: training: 0.676875 validation: 0.585727
09/16 08:14:32 AM: edges-rel-semeval_precision: training: 0.870774 validation: 0.831972
09/16 08:14:32 AM: edges-rel-semeval_recall: training: 0.724375 validation: 0.620540
09/16 08:14:32 AM: edges-rel-semeval_f1: training: 0.790856 validation: 0.710867
09/16 08:14:32 AM: Global learning rate: 0.0001
09/16 08:14:32 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:14:36 AM: Update 3071: task edges-rel-semeval, batch 71 (3071): mcc: 0.7981, acc: 0.6866, precision: 0.8866, recall: 0.7356, f1: 0.8041, edges-rel-semeval_loss: 0.0525
09/16 08:14:38 AM: ***** Step 3100 / Validation 31 *****
09/16 08:14:38 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:14:38 AM: Validating...
09/16 08:14:40 AM: Updating LR scheduler:
09/16 08:14:40 AM: 	Best result seen so far for macro_avg: 0.736
09/16 08:14:40 AM: 	# validation passes without improvement: 2
09/16 08:14:40 AM: edges-rel-semeval_loss: training: 0.052056 validation: 0.070361
09/16 08:14:40 AM: macro_avg: validation: 0.717694
09/16 08:14:40 AM: micro_avg: validation: 0.000000
09/16 08:14:40 AM: edges-rel-semeval_mcc: training: 0.796431 validation: 0.712282
09/16 08:14:40 AM: edges-rel-semeval_acc: training: 0.684642 validation: 0.599652
09/16 08:14:40 AM: edges-rel-semeval_precision: training: 0.884542 validation: 0.836616
09/16 08:14:40 AM: edges-rel-semeval_recall: training: 0.734469 validation: 0.628372
09/16 08:14:40 AM: edges-rel-semeval_f1: training: 0.802550 validation: 0.717694
09/16 08:14:40 AM: Global learning rate: 0.0001
09/16 08:14:40 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:14:45 AM: ***** Step 3200 / Validation 32 *****
09/16 08:14:45 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:14:45 AM: Validating...
09/16 08:14:46 AM: Evaluate: task edges-rel-semeval, batch 25 (36): mcc: 0.7401, acc: 0.6325, precision: 0.8487, recall: 0.6662, f1: 0.7465, edges-rel-semeval_loss: 0.0651
09/16 08:14:47 AM: Updating LR scheduler:
09/16 08:14:47 AM: 	Best result seen so far for macro_avg: 0.736
09/16 08:14:47 AM: 	# validation passes without improvement: 3
09/16 08:14:47 AM: edges-rel-semeval_loss: training: 0.054898 validation: 0.069989
09/16 08:14:47 AM: macro_avg: validation: 0.720276
09/16 08:14:47 AM: micro_avg: validation: 0.000000
09/16 08:14:47 AM: edges-rel-semeval_mcc: training: 0.796196 validation: 0.713953
09/16 08:14:47 AM: edges-rel-semeval_acc: training: 0.683438 validation: 0.601393
09/16 08:14:47 AM: edges-rel-semeval_precision: training: 0.882353 validation: 0.831435
09/16 08:14:47 AM: edges-rel-semeval_recall: training: 0.735937 validation: 0.635335
09/16 08:14:47 AM: edges-rel-semeval_f1: training: 0.802522 validation: 0.720276
09/16 08:14:47 AM: Global learning rate: 0.0001
09/16 08:14:47 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:14:53 AM: ***** Step 3300 / Validation 33 *****
09/16 08:14:53 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:14:53 AM: Validating...
09/16 08:14:55 AM: Updating LR scheduler:
09/16 08:14:55 AM: 	Best result seen so far for macro_avg: 0.736
09/16 08:14:55 AM: 	# validation passes without improvement: 0
09/16 08:14:55 AM: edges-rel-semeval_loss: training: 0.051305 validation: 0.069653
09/16 08:14:55 AM: macro_avg: validation: 0.734653
09/16 08:14:55 AM: micro_avg: validation: 0.000000
09/16 08:14:55 AM: edges-rel-semeval_mcc: training: 0.807632 validation: 0.729660
09/16 08:14:55 AM: edges-rel-semeval_acc: training: 0.703248 validation: 0.617058
09/16 08:14:55 AM: edges-rel-semeval_precision: training: 0.880264 validation: 0.851894
09/16 08:14:55 AM: edges-rel-semeval_recall: training: 0.758120 validation: 0.645779
09/16 08:14:55 AM: edges-rel-semeval_f1: training: 0.814639 validation: 0.734653
09/16 08:14:55 AM: Global learning rate: 5e-05
09/16 08:14:55 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:14:56 AM: Update 3333: task edges-rel-semeval, batch 33 (3333): mcc: 0.8217, acc: 0.7169, precision: 0.9008, recall: 0.7652, f1: 0.8274, edges-rel-semeval_loss: 0.0496
09/16 08:14:59 AM: ***** Step 3400 / Validation 34 *****
09/16 08:14:59 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:14:59 AM: Validating...
09/16 08:15:02 AM: Updating LR scheduler:
09/16 08:15:02 AM: 	Best result seen so far for macro_avg: 0.736
09/16 08:15:02 AM: 	# validation passes without improvement: 1
09/16 08:15:02 AM: edges-rel-semeval_loss: training: 0.051031 validation: 0.069997
09/16 08:15:02 AM: macro_avg: validation: 0.733333
09/16 08:15:02 AM: micro_avg: validation: 0.000000
09/16 08:15:02 AM: edges-rel-semeval_mcc: training: 0.808716 validation: 0.726898
09/16 08:15:02 AM: edges-rel-semeval_acc: training: 0.705000 validation: 0.615318
09/16 08:15:02 AM: edges-rel-semeval_precision: training: 0.887417 validation: 0.839506
09/16 08:15:02 AM: edges-rel-semeval_recall: training: 0.753750 validation: 0.651001
09/16 08:15:02 AM: edges-rel-semeval_f1: training: 0.815140 validation: 0.733333
09/16 08:15:02 AM: Global learning rate: 5e-05
09/16 08:15:02 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:15:06 AM: Update 3491: task edges-rel-semeval, batch 91 (3491): mcc: 0.8167, acc: 0.7083, precision: 0.8906, recall: 0.7652, f1: 0.8231, edges-rel-semeval_loss: 0.0486
09/16 08:15:07 AM: ***** Step 3500 / Validation 35 *****
09/16 08:15:07 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:15:07 AM: Validating...
09/16 08:15:09 AM: Updating LR scheduler:
09/16 08:15:09 AM: 	Best result seen so far for macro_avg: 0.736
09/16 08:15:09 AM: 	# validation passes without improvement: 2
09/16 08:15:09 AM: edges-rel-semeval_loss: training: 0.048762 validation: 0.070271
09/16 08:15:09 AM: macro_avg: validation: 0.724138
09/16 08:15:09 AM: micro_avg: validation: 0.000000
09/16 08:15:09 AM: edges-rel-semeval_mcc: training: 0.815214 validation: 0.717834
09/16 08:15:09 AM: edges-rel-semeval_acc: training: 0.707663 validation: 0.603133
09/16 08:15:09 AM: edges-rel-semeval_precision: training: 0.890608 validation: 0.834279
09/16 08:15:09 AM: edges-rel-semeval_recall: training: 0.762535 validation: 0.639687
09/16 08:15:09 AM: edges-rel-semeval_f1: training: 0.821611 validation: 0.724138
09/16 08:15:09 AM: Global learning rate: 5e-05
09/16 08:15:09 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:15:14 AM: ***** Step 3600 / Validation 36 *****
09/16 08:15:14 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:15:14 AM: Validating...
09/16 08:15:16 AM: Updating LR scheduler:
09/16 08:15:16 AM: 	Best result seen so far for macro_avg: 0.736
09/16 08:15:16 AM: 	# validation passes without improvement: 3
09/16 08:15:16 AM: edges-rel-semeval_loss: training: 0.048813 validation: 0.069548
09/16 08:15:16 AM: macro_avg: validation: 0.731286
09/16 08:15:16 AM: micro_avg: validation: 0.000000
09/16 08:15:16 AM: edges-rel-semeval_mcc: training: 0.815723 validation: 0.722173
09/16 08:15:16 AM: edges-rel-semeval_acc: training: 0.710313 validation: 0.618799
09/16 08:15:16 AM: edges-rel-semeval_precision: training: 0.887441 validation: 0.814973
09/16 08:15:16 AM: edges-rel-semeval_recall: training: 0.766250 validation: 0.663185
09/16 08:15:16 AM: edges-rel-semeval_f1: training: 0.822405 validation: 0.731286
09/16 08:15:16 AM: Global learning rate: 5e-05
09/16 08:15:16 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:15:17 AM: Update 3618: task edges-rel-semeval, batch 18 (3618): mcc: 0.8232, acc: 0.7361, precision: 0.8781, recall: 0.7882, f1: 0.8307, edges-rel-semeval_loss: 0.0473
09/16 08:15:21 AM: ***** Step 3700 / Validation 37 *****
09/16 08:15:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:15:21 AM: Validating...
09/16 08:15:23 AM: Updating LR scheduler:
09/16 08:15:23 AM: 	Best result seen so far for macro_avg: 0.736
09/16 08:15:23 AM: 	# validation passes without improvement: 0
09/16 08:15:23 AM: edges-rel-semeval_loss: training: 0.048125 validation: 0.069955
09/16 08:15:23 AM: macro_avg: validation: 0.727363
09/16 08:15:23 AM: micro_avg: validation: 0.000000
09/16 08:15:23 AM: edges-rel-semeval_mcc: training: 0.813886 validation: 0.722671
09/16 08:15:23 AM: edges-rel-semeval_acc: training: 0.710186 validation: 0.610096
09/16 08:15:23 AM: edges-rel-semeval_precision: training: 0.888276 validation: 0.849013
09/16 08:15:23 AM: edges-rel-semeval_recall: training: 0.762220 validation: 0.636205
09/16 08:15:23 AM: edges-rel-semeval_f1: training: 0.820435 validation: 0.727363
09/16 08:15:23 AM: Global learning rate: 2.5e-05
09/16 08:15:23 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:15:27 AM: Update 3777: task edges-rel-semeval, batch 77 (3777): mcc: 0.8210, acc: 0.7208, precision: 0.8963, recall: 0.7679, f1: 0.8271, edges-rel-semeval_loss: 0.0473
09/16 08:15:27 AM: ***** Step 3800 / Validation 38 *****
09/16 08:15:27 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:15:27 AM: Validating...
09/16 08:15:30 AM: Updating LR scheduler:
09/16 08:15:30 AM: 	Best result seen so far for macro_avg: 0.736
09/16 08:15:30 AM: 	# validation passes without improvement: 1
09/16 08:15:30 AM: edges-rel-semeval_loss: training: 0.046447 validation: 0.069454
09/16 08:15:30 AM: macro_avg: validation: 0.733927
09/16 08:15:30 AM: micro_avg: validation: 0.000000
09/16 08:15:30 AM: edges-rel-semeval_mcc: training: 0.827139 validation: 0.728748
09/16 08:15:30 AM: edges-rel-semeval_acc: training: 0.730000 validation: 0.620540
09/16 08:15:30 AM: edges-rel-semeval_precision: training: 0.899927 validation: 0.849943
09/16 08:15:30 AM: edges-rel-semeval_recall: training: 0.775625 validation: 0.645779
09/16 08:15:30 AM: edges-rel-semeval_f1: training: 0.833166 validation: 0.733927
09/16 08:15:30 AM: Global learning rate: 2.5e-05
09/16 08:15:30 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:15:35 AM: ***** Step 3900 / Validation 39 *****
09/16 08:15:35 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:15:35 AM: Validating...
09/16 08:15:37 AM: Evaluate: task edges-rel-semeval, batch 27 (36): mcc: 0.7468, acc: 0.6400, precision: 0.8623, recall: 0.6667, f1: 0.7520, edges-rel-semeval_loss: 0.0659
09/16 08:15:37 AM: Updating LR scheduler:
09/16 08:15:37 AM: 	Best result seen so far for macro_avg: 0.736
09/16 08:15:37 AM: 	# validation passes without improvement: 2
09/16 08:15:37 AM: Ran out of early stopping patience. Stopping training.
09/16 08:15:37 AM: edges-rel-semeval_loss: training: 0.046675 validation: 0.069682
09/16 08:15:37 AM: macro_avg: validation: 0.727632
09/16 08:15:37 AM: micro_avg: validation: 0.000000
09/16 08:15:37 AM: edges-rel-semeval_mcc: training: 0.820147 validation: 0.722015
09/16 08:15:37 AM: edges-rel-semeval_acc: training: 0.717439 validation: 0.612707
09/16 08:15:37 AM: edges-rel-semeval_precision: training: 0.891320 validation: 0.842105
09/16 08:15:37 AM: edges-rel-semeval_recall: training: 0.770735 validation: 0.640557
09/16 08:15:37 AM: edges-rel-semeval_f1: training: 0.826653 validation: 0.727632
09/16 08:15:37 AM: Global learning rate: 2.5e-05
09/16 08:15:37 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-mix/run
09/16 08:15:37 AM: Stopped training after 39 validation checks
09/16 08:15:37 AM: Trained edges-rel-semeval for 3900 batches or 18.140 epochs
09/16 08:15:37 AM: ***** VALIDATION RESULTS *****
09/16 08:15:37 AM: edges-rel-semeval_f1 (for best val pass 29): edges-rel-semeval_loss: 0.07020, macro_avg: 0.73597, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.72911, edges-rel-semeval_acc: 0.62489, edges-rel-semeval_precision: 0.83778, edges-rel-semeval_recall: 0.65622, edges-rel-semeval_f1: 0.73597
09/16 08:15:37 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.17903, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 08:15:37 AM: macro_avg (for best val pass 29): edges-rel-semeval_loss: 0.07020, macro_avg: 0.73597, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.72911, edges-rel-semeval_acc: 0.62489, edges-rel-semeval_precision: 0.83778, edges-rel-semeval_recall: 0.65622, edges-rel-semeval_f1: 0.73597
09/16 08:15:37 AM: Evaluating...
09/16 08:15:37 AM: Loaded model state from ./experiments/rel-semeval-hotpot-mix/run/edges-rel-semeval/model_state_target_train_val_29.best.th
09/16 08:15:37 AM: Evaluating on: edges-rel-semeval, split: val
09/16 08:15:39 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:15:39 AM: Finished evaluating on: edges-rel-semeval
09/16 08:15:39 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 08:15:39 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-hotpot-mix/run
09/16 08:15:39 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-hotpot-mix/run
09/16 08:15:39 AM: Evaluating on: edges-rel-semeval, split: test
09/16 08:15:45 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:15:45 AM: Finished evaluating on: edges-rel-semeval
09/16 08:15:45 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 08:15:45 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-hotpot-mix/run
09/16 08:15:45 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-hotpot-mix/run
09/16 08:15:45 AM: Writing results for split 'val' to ./experiments/rel-semeval-hotpot-mix/results.tsv
09/16 08:15:45 AM: micro_avg: 0.000, macro_avg: 0.736, edges-rel-semeval_mcc: 0.729, edges-rel-semeval_acc: 0.625, edges-rel-semeval_precision: 0.838, edges-rel-semeval_recall: 0.656, edges-rel-semeval_f1: 0.736
09/16 08:15:45 AM: Done!
09/16 08:15:45 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
