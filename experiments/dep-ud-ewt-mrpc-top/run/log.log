09/16 09:18:53 AM: Git branch: master
09/16 09:18:53 AM: Git SHA: e62dc9f3b01eb77fa9261a5ff029cc2e417b8272
09/16 09:18:53 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/dep-ud-ewt-mrpc-top/",
  "exp_name": "experiments/dep-ud-ewt-mrpc-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/dep-ud-ewt-mrpc-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/mrpc",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/dep-ud-ewt-mrpc-top__run",
  "run_dir": "./experiments/dep-ud-ewt-mrpc-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-dep-ud-ewt",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 09:18:53 AM: Saved config to ./experiments/dep-ud-ewt-mrpc-top/run/params.conf
09/16 09:18:53 AM: Using random seed 1234
09/16 09:18:55 AM: Using GPU 0
09/16 09:18:55 AM: Loading tasks...
09/16 09:18:55 AM: Writing pre-preprocessed tasks to ./experiments/dep-ud-ewt-mrpc-top/
09/16 09:18:55 AM: 	Creating task edges-dep-ud-ewt from scratch.
09/16 09:18:57 AM: Read=12522, Skip=0, Total=12522 from ./probing_data/edges/dep_ewt/en_ewt-ud-train.json.retokenized.bert-base-uncased
09/16 09:18:57 AM: Read=2000, Skip=0, Total=2000 from ./probing_data/edges/dep_ewt/en_ewt-ud-dev.json.retokenized.bert-base-uncased
09/16 09:18:57 AM: Read=2075, Skip=0, Total=2075 from ./probing_data/edges/dep_ewt/en_ewt-ud-test.json.retokenized.bert-base-uncased
09/16 09:18:58 AM: 	Task 'edges-dep-ud-ewt': |train|=12522 |val|=2000 |test|=2075
09/16 09:18:58 AM: 	Finished loading tasks: edges-dep-ud-ewt.
09/16 09:18:58 AM: 	Building vocab from scratch.
09/16 09:18:58 AM: 	Counting units for task edges-dep-ud-ewt.
09/16 09:18:58 AM: 	Task 'edges-dep-ud-ewt': adding vocab namespace 'edges-dep-ud-ewt_labels'
09/16 09:18:59 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:18:59 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 09:18:59 AM: 	Saved vocab to ./experiments/dep-ud-ewt-mrpc-top/vocab
09/16 09:18:59 AM: Loading token dictionary from ./experiments/dep-ud-ewt-mrpc-top/vocab.
09/16 09:18:59 AM: 	Loaded vocab from ./experiments/dep-ud-ewt-mrpc-top/vocab
09/16 09:18:59 AM: 	Vocab namespace tokens: size 14333
09/16 09:18:59 AM: 	Vocab namespace bert_uncased: size 30524
09/16 09:18:59 AM: 	Vocab namespace edges-dep-ud-ewt_labels: size 49
09/16 09:18:59 AM: 	Vocab namespace chars: size 81
09/16 09:18:59 AM: 	Finished building vocab.
09/16 09:18:59 AM: 	Task edges-dep-ud-ewt (train): Indexing from scratch.
09/16 09:19:05 AM: 	Task edges-dep-ud-ewt (train): Saved 12522 instances to ./experiments/dep-ud-ewt-mrpc-top/preproc/edges-dep-ud-ewt__train_data
09/16 09:19:05 AM: 	Task edges-dep-ud-ewt (val): Indexing from scratch.
09/16 09:19:06 AM: 	Task edges-dep-ud-ewt (val): Saved 2000 instances to ./experiments/dep-ud-ewt-mrpc-top/preproc/edges-dep-ud-ewt__val_data
09/16 09:19:06 AM: 	Task edges-dep-ud-ewt (test): Indexing from scratch.
09/16 09:19:07 AM: 	Task edges-dep-ud-ewt (test): Saved 2075 instances to ./experiments/dep-ud-ewt-mrpc-top/preproc/edges-dep-ud-ewt__test_data
09/16 09:19:07 AM: 	Finished indexing tasks
09/16 09:19:07 AM: 	Creating trimmed target-only version of edges-dep-ud-ewt train.
09/16 09:19:07 AM: 	  Training on 
09/16 09:19:07 AM: 	  Evaluating on edges-dep-ud-ewt
09/16 09:19:07 AM: 	Finished loading tasks in 11.388s
09/16 09:19:07 AM: 	 Tasks: ['edges-dep-ud-ewt']
09/16 09:19:07 AM: Building model...
09/16 09:19:07 AM: Using BERT model (bert-base-uncased).
09/16 09:19:07 AM: LOADING A FUNETUNED MODEL from: 
09/16 09:19:07 AM: models/mrpc
09/16 09:19:07 AM: loading configuration file models/mrpc/config.json
09/16 09:19:07 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "mrpc",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 09:19:07 AM: loading weights file models/mrpc/pytorch_model.bin
09/16 09:19:11 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpljkj1aa6
09/16 09:19:13 AM: copying /tmp/tmpljkj1aa6 to cache at ./experiments/dep-ud-ewt-mrpc-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:19:13 AM: creating metadata file for ./experiments/dep-ud-ewt-mrpc-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:19:13 AM: removing temp file /tmp/tmpljkj1aa6
09/16 09:19:13 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/dep-ud-ewt-mrpc-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:19:13 AM: Initializing parameters
09/16 09:19:13 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 09:19:13 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 09:19:13 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 09:19:13 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 09:19:13 AM: 	Task 'edges-dep-ud-ewt' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-dep-ud-ewt"
}
09/16 09:19:18 AM: Model specification:
09/16 09:19:18 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-dep-ud-ewt_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=49, bias=True)
      )
    )
  )
)
09/16 09:19:18 AM: Model parameters:
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.4.weight: Trainable parameter, count 12544 with torch.Size([49, 256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.4.bias: Trainable parameter, count 49 with torch.Size([49])
09/16 09:19:18 AM: Total number of parameters: 110151473 (1.10151e+08)
09/16 09:19:18 AM: Number of trainable parameters: 669233 (669233)
09/16 09:19:18 AM: Finished building model in 10.994s
09/16 09:19:18 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-dep-ud-ewt 

09/16 09:19:22 AM: patience = 9
09/16 09:19:22 AM: val_interval = 1000
09/16 09:19:22 AM: max_vals = 250
09/16 09:19:22 AM: cuda_device = 0
09/16 09:19:22 AM: grad_norm = 5.0
09/16 09:19:22 AM: grad_clipping = None
09/16 09:19:22 AM: lr_decay = 0.99
09/16 09:19:22 AM: min_lr = 1e-06
09/16 09:19:22 AM: keep_all_checkpoints = 0
09/16 09:19:22 AM: val_data_limit = 5000
09/16 09:19:22 AM: max_epochs = -1
09/16 09:19:22 AM: dec_val_scale = 250
09/16 09:19:22 AM: training_data_fraction = 1
09/16 09:19:22 AM: type = adam
09/16 09:19:22 AM: parameter_groups = None
09/16 09:19:22 AM: Number of trainable parameters: 669233
09/16 09:19:22 AM: infer_type_and_cast = True
09/16 09:19:22 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:22 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:22 AM: lr = 0.0001
09/16 09:19:22 AM: amsgrad = True
09/16 09:19:22 AM: type = reduce_on_plateau
09/16 09:19:22 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:22 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:22 AM: mode = max
09/16 09:19:22 AM: factor = 0.5
09/16 09:19:22 AM: patience = 3
09/16 09:19:22 AM: threshold = 0.0001
09/16 09:19:22 AM: threshold_mode = abs
09/16 09:19:22 AM: verbose = True
09/16 09:19:22 AM: type = adam
09/16 09:19:22 AM: parameter_groups = None
09/16 09:19:22 AM: Number of trainable parameters: 669233
09/16 09:19:22 AM: infer_type_and_cast = True
09/16 09:19:22 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:22 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:22 AM: lr = 0.0001
09/16 09:19:22 AM: amsgrad = True
09/16 09:19:23 AM: type = reduce_on_plateau
09/16 09:19:23 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:23 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:23 AM: mode = max
09/16 09:19:23 AM: factor = 0.5
09/16 09:19:23 AM: patience = 3
09/16 09:19:23 AM: threshold = 0.0001
09/16 09:19:23 AM: threshold_mode = abs
09/16 09:19:23 AM: verbose = True
09/16 09:19:23 AM: Starting training without restoring from a checkpoint.
09/16 09:19:23 AM: Training examples per task, before any subsampling: {'edges-dep-ud-ewt': 12522}
09/16 09:19:23 AM: Beginning training with stopping criteria based on metric: edges-dep-ud-ewt_f1
09/16 09:19:33 AM: Update 25: task edges-dep-ud-ewt, batch 25 (25): mcc: 0.0120, acc: 0.0066, precision: 0.0249, recall: 0.1536, f1: 0.0428, edges-dep-ud-ewt_loss: 0.3655
09/16 09:19:43 AM: Update 87: task edges-dep-ud-ewt, batch 87 (87): mcc: 0.0104, acc: 0.0073, precision: 0.0268, recall: 0.0655, f1: 0.0380, edges-dep-ud-ewt_loss: 0.2213
09/16 09:19:53 AM: Update 138: task edges-dep-ud-ewt, batch 138 (138): mcc: 0.0136, acc: 0.0113, precision: 0.0311, recall: 0.0475, f1: 0.0376, edges-dep-ud-ewt_loss: 0.1796
09/16 09:20:03 AM: Update 184: task edges-dep-ud-ewt, batch 184 (184): mcc: 0.0196, acc: 0.0167, precision: 0.0386, recall: 0.0428, f1: 0.0406, edges-dep-ud-ewt_loss: 0.1580
09/16 09:20:13 AM: Update 235: task edges-dep-ud-ewt, batch 235 (235): mcc: 0.0281, acc: 0.0233, precision: 0.0499, recall: 0.0437, f1: 0.0466, edges-dep-ud-ewt_loss: 0.1425
09/16 09:20:23 AM: Update 284: task edges-dep-ud-ewt, batch 284 (284): mcc: 0.0374, acc: 0.0295, precision: 0.0634, recall: 0.0462, f1: 0.0535, edges-dep-ud-ewt_loss: 0.1317
09/16 09:20:33 AM: Update 320: task edges-dep-ud-ewt, batch 320 (320): mcc: 0.0454, acc: 0.0343, precision: 0.0760, recall: 0.0489, f1: 0.0595, edges-dep-ud-ewt_loss: 0.1256
09/16 09:20:43 AM: Update 370: task edges-dep-ud-ewt, batch 370 (370): mcc: 0.0586, acc: 0.0425, precision: 0.0968, recall: 0.0551, f1: 0.0703, edges-dep-ud-ewt_loss: 0.1185
09/16 09:20:53 AM: Update 399: task edges-dep-ud-ewt, batch 399 (399): mcc: 0.0704, acc: 0.0499, precision: 0.1154, recall: 0.0615, f1: 0.0802, edges-dep-ud-ewt_loss: 0.1149
09/16 09:21:04 AM: Update 441: task edges-dep-ud-ewt, batch 441 (441): mcc: 0.0900, acc: 0.0620, precision: 0.1464, recall: 0.0724, f1: 0.0969, edges-dep-ud-ewt_loss: 0.1102
09/16 09:21:14 AM: Update 497: task edges-dep-ud-ewt, batch 497 (497): mcc: 0.1144, acc: 0.0772, precision: 0.1849, recall: 0.0868, f1: 0.1181, edges-dep-ud-ewt_loss: 0.1045
09/16 09:21:24 AM: Update 542: task edges-dep-ud-ewt, batch 542 (542): mcc: 0.1394, acc: 0.0926, precision: 0.2250, recall: 0.1014, f1: 0.1398, edges-dep-ud-ewt_loss: 0.1007
09/16 09:21:34 AM: Update 600: task edges-dep-ud-ewt, batch 600 (600): mcc: 0.1657, acc: 0.1090, precision: 0.2665, recall: 0.1173, f1: 0.1629, edges-dep-ud-ewt_loss: 0.0959
09/16 09:21:44 AM: Update 651: task edges-dep-ud-ewt, batch 651 (651): mcc: 0.1909, acc: 0.1248, precision: 0.3060, recall: 0.1328, f1: 0.1852, edges-dep-ud-ewt_loss: 0.0922
09/16 09:21:54 AM: Update 701: task edges-dep-ud-ewt, batch 701 (701): mcc: 0.2150, acc: 0.1401, precision: 0.3434, recall: 0.1478, f1: 0.2066, edges-dep-ud-ewt_loss: 0.0890
09/16 09:22:04 AM: Update 738: task edges-dep-ud-ewt, batch 738 (738): mcc: 0.2354, acc: 0.1532, precision: 0.3744, recall: 0.1608, f1: 0.2250, edges-dep-ud-ewt_loss: 0.0869
09/16 09:22:18 AM: Update 785: task edges-dep-ud-ewt, batch 785 (785): mcc: 0.2584, acc: 0.1684, precision: 0.4085, recall: 0.1758, f1: 0.2458, edges-dep-ud-ewt_loss: 0.0844
09/16 09:22:28 AM: Update 837: task edges-dep-ud-ewt, batch 837 (837): mcc: 0.2800, acc: 0.1829, precision: 0.4397, recall: 0.1903, f1: 0.2657, edges-dep-ud-ewt_loss: 0.0817
09/16 09:22:38 AM: Update 887: task edges-dep-ud-ewt, batch 887 (887): mcc: 0.3004, acc: 0.1969, precision: 0.4685, recall: 0.2044, f1: 0.2846, edges-dep-ud-ewt_loss: 0.0795
09/16 09:22:48 AM: Update 937: task edges-dep-ud-ewt, batch 937 (937): mcc: 0.3199, acc: 0.2105, precision: 0.4953, recall: 0.2182, f1: 0.3030, edges-dep-ud-ewt_loss: 0.0773
09/16 09:22:58 AM: Update 990: task edges-dep-ud-ewt, batch 990 (990): mcc: 0.3380, acc: 0.2235, precision: 0.5194, recall: 0.2313, f1: 0.3201, edges-dep-ud-ewt_loss: 0.0752
09/16 09:23:01 AM: ***** Step 1000 / Validation 1 *****
09/16 09:23:01 AM: edges-dep-ud-ewt: trained on 1000 batches, 2.551 epochs
09/16 09:23:01 AM: Validating...
09/16 09:23:08 AM: Evaluate: task edges-dep-ud-ewt, batch 31 (63): mcc: 0.7043, acc: 0.5308, precision: 0.9379, recall: 0.5351, f1: 0.6814, edges-dep-ud-ewt_loss: 0.0344
09/16 09:23:15 AM: Best result seen so far for edges-dep-ud-ewt.
09/16 09:23:15 AM: Best result seen so far for micro.
09/16 09:23:15 AM: Best result seen so far for macro.
09/16 09:23:15 AM: Updating LR scheduler:
09/16 09:23:15 AM: 	Best result seen so far for macro_avg: 0.684
09/16 09:23:15 AM: 	# validation passes without improvement: 0
09/16 09:23:15 AM: edges-dep-ud-ewt_loss: training: 0.074816 validation: 0.034269
09/16 09:23:15 AM: macro_avg: validation: 0.683795
09/16 09:23:15 AM: micro_avg: validation: 0.000000
09/16 09:23:15 AM: edges-dep-ud-ewt_mcc: training: 0.342596 validation: 0.706046
09/16 09:23:15 AM: edges-dep-ud-ewt_acc: training: 0.226820 validation: 0.534130
09/16 09:23:15 AM: edges-dep-ud-ewt_precision: training: 0.525345 validation: 0.936677
09/16 09:23:15 AM: edges-dep-ud-ewt_recall: training: 0.234748 validation: 0.538431
09/16 09:23:15 AM: edges-dep-ud-ewt_f1: training: 0.324496 validation: 0.683795
09/16 09:23:15 AM: Global learning rate: 0.0001
09/16 09:23:15 AM: Saving checkpoints to: ./experiments/dep-ud-ewt-mrpc-top/run
09/16 09:23:18 AM: Update 1014: task edges-dep-ud-ewt, batch 14 (1014): mcc: 0.6561, acc: 0.4745, precision: 0.8971, recall: 0.4867, f1: 0.6310, edges-dep-ud-ewt_loss: 0.0384
09/16 09:23:28 AM: Update 1061: task edges-dep-ud-ewt, batch 61 (1061): mcc: 0.6640, acc: 0.4848, precision: 0.8987, recall: 0.4974, f1: 0.6404, edges-dep-ud-ewt_loss: 0.0374
09/16 09:23:39 AM: Update 1101: task edges-dep-ud-ewt, batch 101 (1101): mcc: 0.6684, acc: 0.4905, precision: 0.8991, recall: 0.5038, f1: 0.6458, edges-dep-ud-ewt_loss: 0.0370
09/16 09:23:49 AM: Update 1154: task edges-dep-ud-ewt, batch 154 (1154): mcc: 0.6787, acc: 0.5048, precision: 0.9009, recall: 0.5182, f1: 0.6580, edges-dep-ud-ewt_loss: 0.0362
09/16 09:23:59 AM: Update 1181: task edges-dep-ud-ewt, batch 181 (1181): mcc: 0.6818, acc: 0.5096, precision: 0.9003, recall: 0.5232, f1: 0.6618, edges-dep-ud-ewt_loss: 0.0362
09/16 09:24:09 AM: Update 1233: task edges-dep-ud-ewt, batch 233 (1233): mcc: 0.6853, acc: 0.5151, precision: 0.8992, recall: 0.5292, f1: 0.6663, edges-dep-ud-ewt_loss: 0.0359
09/16 09:24:19 AM: Update 1287: task edges-dep-ud-ewt, batch 287 (1287): mcc: 0.6882, acc: 0.5200, precision: 0.8978, recall: 0.5344, f1: 0.6700, edges-dep-ud-ewt_loss: 0.0353
09/16 09:24:29 AM: Update 1343: task edges-dep-ud-ewt, batch 343 (1343): mcc: 0.6914, acc: 0.5249, precision: 0.8967, recall: 0.5402, f1: 0.6742, edges-dep-ud-ewt_loss: 0.0347
09/16 09:24:40 AM: Update 1387: task edges-dep-ud-ewt, batch 387 (1387): mcc: 0.6939, acc: 0.5285, precision: 0.8963, recall: 0.5442, f1: 0.6772, edges-dep-ud-ewt_loss: 0.0345
09/16 09:24:50 AM: Update 1433: task edges-dep-ud-ewt, batch 433 (1433): mcc: 0.6970, acc: 0.5328, precision: 0.8963, recall: 0.5490, f1: 0.6809, edges-dep-ud-ewt_loss: 0.0342
09/16 09:25:00 AM: Update 1486: task edges-dep-ud-ewt, batch 486 (1486): mcc: 0.6997, acc: 0.5371, precision: 0.8958, recall: 0.5536, f1: 0.6843, edges-dep-ud-ewt_loss: 0.0337
09/16 09:25:10 AM: Update 1522: task edges-dep-ud-ewt, batch 522 (1522): mcc: 0.7028, acc: 0.5414, precision: 0.8961, recall: 0.5582, f1: 0.6879, edges-dep-ud-ewt_loss: 0.0336
09/16 09:25:23 AM: Update 1569: task edges-dep-ud-ewt, batch 569 (1569): mcc: 0.7058, acc: 0.5458, precision: 0.8959, recall: 0.5630, f1: 0.6915, edges-dep-ud-ewt_loss: 0.0333
09/16 09:25:34 AM: Update 1612: task edges-dep-ud-ewt, batch 612 (1612): mcc: 0.7077, acc: 0.5488, precision: 0.8950, recall: 0.5666, f1: 0.6939, edges-dep-ud-ewt_loss: 0.0331
09/16 09:25:44 AM: Update 1657: task edges-dep-ud-ewt, batch 657 (1657): mcc: 0.7094, acc: 0.5515, precision: 0.8944, recall: 0.5697, f1: 0.6961, edges-dep-ud-ewt_loss: 0.0329
09/16 09:25:54 AM: Update 1701: task edges-dep-ud-ewt, batch 701 (1701): mcc: 0.7113, acc: 0.5544, precision: 0.8936, recall: 0.5732, f1: 0.6984, edges-dep-ud-ewt_loss: 0.0327
09/16 09:26:04 AM: Update 1759: task edges-dep-ud-ewt, batch 759 (1759): mcc: 0.7135, acc: 0.5576, precision: 0.8935, recall: 0.5769, f1: 0.7011, edges-dep-ud-ewt_loss: 0.0323
09/16 09:26:14 AM: Update 1812: task edges-dep-ud-ewt, batch 812 (1812): mcc: 0.7153, acc: 0.5603, precision: 0.8932, recall: 0.5799, f1: 0.7032, edges-dep-ud-ewt_loss: 0.0320
09/16 09:26:24 AM: Update 1859: task edges-dep-ud-ewt, batch 859 (1859): mcc: 0.7171, acc: 0.5630, precision: 0.8930, recall: 0.5830, f1: 0.7054, edges-dep-ud-ewt_loss: 0.0319
09/16 09:26:35 AM: Update 1904: task edges-dep-ud-ewt, batch 904 (1904): mcc: 0.7187, acc: 0.5654, precision: 0.8929, recall: 0.5856, f1: 0.7073, edges-dep-ud-ewt_loss: 0.0316
09/16 09:26:45 AM: Update 1955: task edges-dep-ud-ewt, batch 955 (1955): mcc: 0.7212, acc: 0.5691, precision: 0.8929, recall: 0.5896, f1: 0.7102, edges-dep-ud-ewt_loss: 0.0314
09/16 09:26:55 AM: Update 1986: task edges-dep-ud-ewt, batch 986 (1986): mcc: 0.7219, acc: 0.5703, precision: 0.8926, recall: 0.5910, f1: 0.7111, edges-dep-ud-ewt_loss: 0.0313
09/16 09:26:57 AM: ***** Step 2000 / Validation 2 *****
09/16 09:26:57 AM: edges-dep-ud-ewt: trained on 1000 batches, 2.551 epochs
09/16 09:26:57 AM: Validating...
09/16 09:27:05 AM: Evaluate: task edges-dep-ud-ewt, batch 32 (63): mcc: 0.8102, acc: 0.7062, precision: 0.9130, recall: 0.7249, f1: 0.8082, edges-dep-ud-ewt_loss: 0.0232
09/16 09:27:11 AM: Best result seen so far for edges-dep-ud-ewt.
09/16 09:27:11 AM: Best result seen so far for macro.
09/16 09:27:11 AM: Updating LR scheduler:
09/16 09:27:11 AM: 	Best result seen so far for macro_avg: 0.810
09/16 09:27:11 AM: 	# validation passes without improvement: 0
09/16 09:27:11 AM: edges-dep-ud-ewt_loss: training: 0.031159 validation: 0.023029
09/16 09:27:11 AM: macro_avg: validation: 0.810193
09/16 09:27:11 AM: micro_avg: validation: 0.000000
09/16 09:27:11 AM: edges-dep-ud-ewt_mcc: training: 0.722380 validation: 0.812173
09/16 09:27:11 AM: edges-dep-ud-ewt_acc: training: 0.570985 validation: 0.710275
09/16 09:27:11 AM: edges-dep-ud-ewt_precision: training: 0.892560 validation: 0.914256
09/16 09:27:11 AM: edges-dep-ud-ewt_recall: training: 0.591718 validation: 0.727399
09/16 09:27:11 AM: edges-dep-ud-ewt_f1: training: 0.711651 validation: 0.810193
09/16 09:27:11 AM: Global learning rate: 0.0001
09/16 09:27:11 AM: Saving checkpoints to: ./experiments/dep-ud-ewt-mrpc-top/run
09/16 09:27:15 AM: Update 2019: task edges-dep-ud-ewt, batch 19 (2019): mcc: 0.7538, acc: 0.6230, precision: 0.8832, recall: 0.6504, f1: 0.7492, edges-dep-ud-ewt_loss: 0.0272
09/16 09:27:26 AM: Update 2067: task edges-dep-ud-ewt, batch 67 (2067): mcc: 0.7533, acc: 0.6208, precision: 0.8850, recall: 0.6482, f1: 0.7483, edges-dep-ud-ewt_loss: 0.0277
09/16 09:27:36 AM: Update 2117: task edges-dep-ud-ewt, batch 117 (2117): mcc: 0.7526, acc: 0.6203, precision: 0.8834, recall: 0.6483, f1: 0.7478, edges-dep-ud-ewt_loss: 0.0276
09/16 09:27:46 AM: Update 2162: task edges-dep-ud-ewt, batch 162 (2162): mcc: 0.7535, acc: 0.6211, precision: 0.8829, recall: 0.6501, f1: 0.7488, edges-dep-ud-ewt_loss: 0.0271
09/16 09:27:56 AM: Update 2211: task edges-dep-ud-ewt, batch 211 (2211): mcc: 0.7551, acc: 0.6233, precision: 0.8836, recall: 0.6523, f1: 0.7505, edges-dep-ud-ewt_loss: 0.0267
09/16 09:28:06 AM: Update 2263: task edges-dep-ud-ewt, batch 263 (2263): mcc: 0.7565, acc: 0.6254, precision: 0.8838, recall: 0.6546, f1: 0.7521, edges-dep-ud-ewt_loss: 0.0267
09/16 09:28:16 AM: Update 2306: task edges-dep-ud-ewt, batch 306 (2306): mcc: 0.7585, acc: 0.6282, precision: 0.8844, recall: 0.6576, f1: 0.7543, edges-dep-ud-ewt_loss: 0.0267
09/16 09:28:29 AM: Update 2353: task edges-dep-ud-ewt, batch 353 (2353): mcc: 0.7606, acc: 0.6310, precision: 0.8851, recall: 0.6606, f1: 0.7565, edges-dep-ud-ewt_loss: 0.0265
09/16 09:28:40 AM: Update 2399: task edges-dep-ud-ewt, batch 399 (2399): mcc: 0.7613, acc: 0.6318, precision: 0.8852, recall: 0.6617, f1: 0.7573, edges-dep-ud-ewt_loss: 0.0264
09/16 09:28:50 AM: Update 2447: task edges-dep-ud-ewt, batch 447 (2447): mcc: 0.7615, acc: 0.6321, precision: 0.8849, recall: 0.6624, f1: 0.7576, edges-dep-ud-ewt_loss: 0.0264
09/16 09:29:00 AM: Update 2497: task edges-dep-ud-ewt, batch 497 (2497): mcc: 0.7622, acc: 0.6331, precision: 0.8846, recall: 0.6638, f1: 0.7584, edges-dep-ud-ewt_loss: 0.0263
09/16 09:29:10 AM: Update 2547: task edges-dep-ud-ewt, batch 547 (2547): mcc: 0.7627, acc: 0.6337, precision: 0.8848, recall: 0.6645, f1: 0.7590, edges-dep-ud-ewt_loss: 0.0262
09/16 09:29:20 AM: Update 2605: task edges-dep-ud-ewt, batch 605 (2605): mcc: 0.7636, acc: 0.6351, precision: 0.8847, recall: 0.6661, f1: 0.7600, edges-dep-ud-ewt_loss: 0.0260
09/16 09:29:30 AM: Update 2652: task edges-dep-ud-ewt, batch 652 (2652): mcc: 0.7637, acc: 0.6354, precision: 0.8841, recall: 0.6666, f1: 0.7601, edges-dep-ud-ewt_loss: 0.0259
09/16 09:29:40 AM: Update 2689: task edges-dep-ud-ewt, batch 689 (2689): mcc: 0.7647, acc: 0.6368, precision: 0.8845, recall: 0.6681, f1: 0.7612, edges-dep-ud-ewt_loss: 0.0258
09/16 09:29:50 AM: Update 2740: task edges-dep-ud-ewt, batch 740 (2740): mcc: 0.7660, acc: 0.6387, precision: 0.8847, recall: 0.6702, f1: 0.7627, edges-dep-ud-ewt_loss: 0.0257
09/16 09:30:01 AM: Update 2775: task edges-dep-ud-ewt, batch 775 (2775): mcc: 0.7661, acc: 0.6389, precision: 0.8843, recall: 0.6707, f1: 0.7628, edges-dep-ud-ewt_loss: 0.0257
09/16 09:30:11 AM: Update 2822: task edges-dep-ud-ewt, batch 822 (2822): mcc: 0.7666, acc: 0.6396, precision: 0.8840, recall: 0.6717, f1: 0.7634, edges-dep-ud-ewt_loss: 0.0256
09/16 09:30:21 AM: Update 2869: task edges-dep-ud-ewt, batch 869 (2869): mcc: 0.7672, acc: 0.6406, precision: 0.8838, recall: 0.6730, f1: 0.7641, edges-dep-ud-ewt_loss: 0.0255
09/16 09:30:31 AM: Update 2923: task edges-dep-ud-ewt, batch 923 (2923): mcc: 0.7676, acc: 0.6413, precision: 0.8836, recall: 0.6739, f1: 0.7646, edges-dep-ud-ewt_loss: 0.0254
09/16 09:30:41 AM: Update 2969: task edges-dep-ud-ewt, batch 969 (2969): mcc: 0.7682, acc: 0.6421, precision: 0.8835, recall: 0.6749, f1: 0.7652, edges-dep-ud-ewt_loss: 0.0254
09/16 09:30:46 AM: ***** Step 3000 / Validation 3 *****
09/16 09:30:46 AM: edges-dep-ud-ewt: trained on 1000 batches, 2.551 epochs
09/16 09:30:46 AM: Validating...
09/16 09:30:51 AM: Evaluate: task edges-dep-ud-ewt, batch 19 (63): mcc: 0.8342, acc: 0.7409, precision: 0.9250, recall: 0.7577, f1: 0.8331, edges-dep-ud-ewt_loss: 0.0194
09/16 09:31:00 AM: Best result seen so far for edges-dep-ud-ewt.
09/16 09:31:00 AM: Best result seen so far for macro.
09/16 09:31:00 AM: Updating LR scheduler:
09/16 09:31:00 AM: 	Best result seen so far for macro_avg: 0.833
09/16 09:31:00 AM: 	# validation passes without improvement: 0
09/16 09:31:00 AM: edges-dep-ud-ewt_loss: training: 0.025393 validation: 0.019535
09/16 09:31:00 AM: macro_avg: validation: 0.832841
09/16 09:31:00 AM: micro_avg: validation: 0.000000
09/16 09:31:00 AM: edges-dep-ud-ewt_mcc: training: 0.768483 validation: 0.834033
09/16 09:31:00 AM: edges-dep-ud-ewt_acc: training: 0.642556 validation: 0.740342
09/16 09:31:00 AM: edges-dep-ud-ewt_precision: training: 0.883485 validation: 0.925169
09/16 09:31:00 AM: edges-dep-ud-ewt_recall: training: 0.675436 validation: 0.757268
09/16 09:31:00 AM: edges-dep-ud-ewt_f1: training: 0.765577 validation: 0.832841
09/16 09:31:00 AM: Global learning rate: 0.0001
09/16 09:31:00 AM: Saving checkpoints to: ./experiments/dep-ud-ewt-mrpc-top/run
09/16 09:31:02 AM: Update 3008: task edges-dep-ud-ewt, batch 8 (3008): mcc: 0.8063, acc: 0.7011, precision: 0.8854, recall: 0.7406, f1: 0.8066, edges-dep-ud-ewt_loss: 0.0207
