09/16 08:47:21 AM: Git branch: master
09/16 08:47:21 AM: Git SHA: a6b97574b819abe0c17f2f3300d1097e5c87dbde
09/16 08:47:21 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-multiqa-only/",
  "exp_name": "experiments/rel-semeval-multiqa-only",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-multiqa-only/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/multiqa",
  "pytorch_transformers_output_mode": "only",
  "remote_log_name": "experiments/rel-semeval-multiqa-only__run",
  "run_dir": "./experiments/rel-semeval-multiqa-only/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:47:21 AM: Saved config to ./experiments/rel-semeval-multiqa-only/run/params.conf
09/16 08:47:21 AM: Using random seed 1234
09/16 08:47:22 AM: Using GPU 0
09/16 08:47:22 AM: Loading tasks...
09/16 08:47:22 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-multiqa-only/
09/16 08:47:22 AM: 	Creating task edges-rel-semeval from scratch.
09/16 08:47:22 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 08:47:22 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 08:47:22 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 08:47:22 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 08:47:22 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 08:47:22 AM: 	Building vocab from scratch.
09/16 08:47:22 AM: 	Counting units for task edges-rel-semeval.
09/16 08:47:22 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 08:47:23 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:47:23 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:47:24 AM: 	Saved vocab to ./experiments/rel-semeval-multiqa-only/vocab
09/16 08:47:24 AM: Loading token dictionary from ./experiments/rel-semeval-multiqa-only/vocab.
09/16 08:47:24 AM: 	Loaded vocab from ./experiments/rel-semeval-multiqa-only/vocab
09/16 08:47:24 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:47:24 AM: 	Vocab namespace tokens: size 16020
09/16 08:47:24 AM: 	Vocab namespace chars: size 59
09/16 08:47:24 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 08:47:24 AM: 	Finished building vocab.
09/16 08:47:24 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 08:47:24 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-multiqa-only/preproc/edges-rel-semeval__train_data
09/16 08:47:24 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 08:47:25 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-multiqa-only/preproc/edges-rel-semeval__val_data
09/16 08:47:25 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 08:47:25 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-multiqa-only/preproc/edges-rel-semeval__test_data
09/16 08:47:25 AM: 	Finished indexing tasks
09/16 08:47:25 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 08:47:25 AM: 	  Training on 
09/16 08:47:25 AM: 	  Evaluating on edges-rel-semeval
09/16 08:47:25 AM: 	Finished loading tasks in 3.035s
09/16 08:47:25 AM: 	 Tasks: ['edges-rel-semeval']
09/16 08:47:25 AM: Building model...
09/16 08:47:25 AM: Using BERT model (bert-base-uncased).
09/16 08:47:25 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:47:25 AM: models/multiqa
09/16 08:47:25 AM: loading configuration file models/multiqa/config.json
09/16 08:47:25 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:47:25 AM: loading weights file models/multiqa/pytorch_model.bin
09/16 08:47:28 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmp98hdqp36
09/16 08:47:30 AM: copying /tmp/tmp98hdqp36 to cache at ./experiments/rel-semeval-multiqa-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:47:30 AM: creating metadata file for ./experiments/rel-semeval-multiqa-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:47:30 AM: removing temp file /tmp/tmp98hdqp36
09/16 08:47:30 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-multiqa-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:47:30 AM: Initializing parameters
09/16 08:47:30 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:47:30 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:47:30 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:47:30 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:47:30 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 08:47:35 AM: Model specification:
09/16 08:47:35 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 08:47:35 AM: Model parameters:
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:35 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:35 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:47:35 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:47:35 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:47:35 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:47:35 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:47:35 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:47:35 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:47:35 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:47:35 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 08:47:35 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 08:47:35 AM: Total number of parameters: 110143763 (1.10144e+08)
09/16 08:47:35 AM: Number of trainable parameters: 661523 (661523)
09/16 08:47:35 AM: Finished building model in 10.056s
09/16 08:47:35 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 08:47:36 AM: patience = 9
09/16 08:47:36 AM: val_interval = 100
09/16 08:47:36 AM: max_vals = 100
09/16 08:47:36 AM: cuda_device = 0
09/16 08:47:36 AM: grad_norm = 5.0
09/16 08:47:36 AM: grad_clipping = None
09/16 08:47:36 AM: lr_decay = 0.99
09/16 08:47:36 AM: min_lr = 1e-06
09/16 08:47:36 AM: keep_all_checkpoints = 0
09/16 08:47:36 AM: val_data_limit = 5000
09/16 08:47:36 AM: max_epochs = -1
09/16 08:47:36 AM: dec_val_scale = 250
09/16 08:47:36 AM: training_data_fraction = 1
09/16 08:47:36 AM: type = adam
09/16 08:47:36 AM: parameter_groups = None
09/16 08:47:36 AM: Number of trainable parameters: 661523
09/16 08:47:36 AM: infer_type_and_cast = True
09/16 08:47:36 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:47:36 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:47:36 AM: lr = 0.0001
09/16 08:47:36 AM: amsgrad = True
09/16 08:47:36 AM: type = reduce_on_plateau
09/16 08:47:36 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:47:36 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:47:36 AM: mode = max
09/16 08:47:36 AM: factor = 0.5
09/16 08:47:36 AM: patience = 3
09/16 08:47:36 AM: threshold = 0.0001
09/16 08:47:36 AM: threshold_mode = abs
09/16 08:47:36 AM: verbose = True
09/16 08:47:36 AM: type = adam
09/16 08:47:36 AM: parameter_groups = None
09/16 08:47:36 AM: Number of trainable parameters: 661523
09/16 08:47:36 AM: infer_type_and_cast = True
09/16 08:47:36 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:47:36 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:47:36 AM: lr = 0.0001
09/16 08:47:36 AM: amsgrad = True
09/16 08:47:36 AM: type = reduce_on_plateau
09/16 08:47:36 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:47:36 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:47:36 AM: mode = max
09/16 08:47:36 AM: factor = 0.5
09/16 08:47:36 AM: patience = 3
09/16 08:47:36 AM: threshold = 0.0001
09/16 08:47:36 AM: threshold_mode = abs
09/16 08:47:36 AM: verbose = True
09/16 08:47:36 AM: Starting training without restoring from a checkpoint.
09/16 08:47:36 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 08:47:36 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 08:47:38 AM: ***** Step 100 / Validation 1 *****
09/16 08:47:38 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:47:38 AM: Validating...
09/16 08:47:38 AM: Best result seen so far for edges-rel-semeval.
09/16 08:47:38 AM: Best result seen so far for micro.
09/16 08:47:38 AM: Best result seen so far for macro.
09/16 08:47:38 AM: Updating LR scheduler:
09/16 08:47:38 AM: 	Best result seen so far for macro_avg: 0.000
09/16 08:47:38 AM: 	# validation passes without improvement: 0
09/16 08:47:38 AM: edges-rel-semeval_loss: training: 0.283595 validation: 0.187463
09/16 08:47:38 AM: macro_avg: validation: 0.000000
09/16 08:47:38 AM: micro_avg: validation: 0.000000
09/16 08:47:38 AM: edges-rel-semeval_mcc: training: 0.010297 validation: 0.000000
09/16 08:47:38 AM: edges-rel-semeval_acc: training: 0.004730 validation: 0.000000
09/16 08:47:38 AM: edges-rel-semeval_precision: training: 0.063611 validation: 0.000000
09/16 08:47:38 AM: edges-rel-semeval_recall: training: 0.050773 validation: 0.000000
09/16 08:47:38 AM: edges-rel-semeval_f1: training: 0.056471 validation: 0.000000
09/16 08:47:38 AM: Global learning rate: 0.0001
09/16 08:47:38 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:47:40 AM: ***** Step 200 / Validation 2 *****
09/16 08:47:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:47:40 AM: Validating...
09/16 08:47:40 AM: Updating LR scheduler:
09/16 08:47:40 AM: 	Best result seen so far for macro_avg: 0.000
09/16 08:47:40 AM: 	# validation passes without improvement: 1
09/16 08:47:40 AM: edges-rel-semeval_loss: training: 0.186145 validation: 0.174151
09/16 08:47:40 AM: macro_avg: validation: 0.000000
09/16 08:47:40 AM: micro_avg: validation: 0.000000
09/16 08:47:40 AM: edges-rel-semeval_mcc: training: 0.011201 validation: 0.000000
09/16 08:47:40 AM: edges-rel-semeval_acc: training: 0.000625 validation: 0.000000
09/16 08:47:40 AM: edges-rel-semeval_precision: training: 0.285714 validation: 0.000000
09/16 08:47:40 AM: edges-rel-semeval_recall: training: 0.000625 validation: 0.000000
09/16 08:47:40 AM: edges-rel-semeval_f1: training: 0.001247 validation: 0.000000
09/16 08:47:40 AM: Global learning rate: 0.0001
09/16 08:47:40 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:47:42 AM: ***** Step 300 / Validation 3 *****
09/16 08:47:42 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:47:42 AM: Validating...
09/16 08:47:43 AM: Best result seen so far for edges-rel-semeval.
09/16 08:47:43 AM: Best result seen so far for macro.
09/16 08:47:43 AM: Updating LR scheduler:
09/16 08:47:43 AM: 	Best result seen so far for macro_avg: 0.046
09/16 08:47:43 AM: 	# validation passes without improvement: 0
09/16 08:47:43 AM: edges-rel-semeval_loss: training: 0.170668 validation: 0.158657
09/16 08:47:43 AM: macro_avg: validation: 0.045802
09/16 08:47:43 AM: micro_avg: validation: 0.000000
09/16 08:47:43 AM: edges-rel-semeval_mcc: training: 0.086160 validation: 0.140771
09/16 08:47:43 AM: edges-rel-semeval_acc: training: 0.011984 validation: 0.023499
09/16 08:47:43 AM: edges-rel-semeval_precision: training: 0.672414 validation: 0.900000
09/16 08:47:43 AM: edges-rel-semeval_recall: training: 0.012299 validation: 0.023499
09/16 08:47:43 AM: edges-rel-semeval_f1: training: 0.024156 validation: 0.045802
09/16 08:47:43 AM: Global learning rate: 0.0001
09/16 08:47:43 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:47:44 AM: ***** Step 400 / Validation 4 *****
09/16 08:47:44 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:47:44 AM: Validating...
09/16 08:47:45 AM: Best result seen so far for edges-rel-semeval.
09/16 08:47:45 AM: Best result seen so far for macro.
09/16 08:47:45 AM: Updating LR scheduler:
09/16 08:47:45 AM: 	Best result seen so far for macro_avg: 0.130
09/16 08:47:45 AM: 	# validation passes without improvement: 0
09/16 08:47:45 AM: edges-rel-semeval_loss: training: 0.154098 validation: 0.145519
09/16 08:47:45 AM: macro_avg: validation: 0.129808
09/16 08:47:45 AM: micro_avg: validation: 0.000000
09/16 08:47:45 AM: edges-rel-semeval_mcc: training: 0.235674 validation: 0.231398
09/16 08:47:45 AM: edges-rel-semeval_acc: training: 0.075938 validation: 0.069626
09/16 08:47:45 AM: edges-rel-semeval_precision: training: 0.771605 validation: 0.818182
09/16 08:47:45 AM: edges-rel-semeval_recall: training: 0.078125 validation: 0.070496
09/16 08:47:45 AM: edges-rel-semeval_f1: training: 0.141884 validation: 0.129808
09/16 08:47:45 AM: Global learning rate: 0.0001
09/16 08:47:45 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:47:46 AM: Update 431: task edges-rel-semeval, batch 31 (431): mcc: 0.2562, acc: 0.0903, precision: 0.7480, recall: 0.0955, f1: 0.1694, edges-rel-semeval_loss: 0.1506
09/16 08:47:47 AM: ***** Step 500 / Validation 5 *****
09/16 08:47:47 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:47:47 AM: Validating...
09/16 08:47:47 AM: Best result seen so far for edges-rel-semeval.
09/16 08:47:47 AM: Best result seen so far for macro.
09/16 08:47:47 AM: Updating LR scheduler:
09/16 08:47:47 AM: 	Best result seen so far for macro_avg: 0.206
09/16 08:47:47 AM: 	# validation passes without improvement: 0
09/16 08:47:47 AM: edges-rel-semeval_loss: training: 0.143534 validation: 0.136904
09/16 08:47:47 AM: macro_avg: validation: 0.205636
09/16 08:47:47 AM: micro_avg: validation: 0.000000
09/16 08:47:47 AM: edges-rel-semeval_mcc: training: 0.303910 validation: 0.300217
09/16 08:47:47 AM: edges-rel-semeval_acc: training: 0.127089 validation: 0.116623
09/16 08:47:47 AM: edges-rel-semeval_precision: training: 0.760949 validation: 0.823171
09/16 08:47:47 AM: edges-rel-semeval_recall: training: 0.131504 validation: 0.117493
09/16 08:47:47 AM: edges-rel-semeval_f1: training: 0.224254 validation: 0.205636
09/16 08:47:47 AM: Global learning rate: 0.0001
09/16 08:47:47 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:47:49 AM: ***** Step 600 / Validation 6 *****
09/16 08:47:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:47:49 AM: Validating...
09/16 08:47:49 AM: Best result seen so far for edges-rel-semeval.
09/16 08:47:49 AM: Best result seen so far for macro.
09/16 08:47:49 AM: Updating LR scheduler:
09/16 08:47:49 AM: 	Best result seen so far for macro_avg: 0.274
09/16 08:47:49 AM: 	# validation passes without improvement: 0
09/16 08:47:49 AM: edges-rel-semeval_loss: training: 0.134396 validation: 0.130480
09/16 08:47:49 AM: macro_avg: validation: 0.274311
09/16 08:47:49 AM: micro_avg: validation: 0.000000
09/16 08:47:49 AM: edges-rel-semeval_mcc: training: 0.364003 validation: 0.356284
09/16 08:47:49 AM: edges-rel-semeval_acc: training: 0.184688 validation: 0.160139
09/16 08:47:49 AM: edges-rel-semeval_precision: training: 0.749082 validation: 0.825328
09/16 08:47:49 AM: edges-rel-semeval_recall: training: 0.191250 validation: 0.164491
09/16 08:47:49 AM: edges-rel-semeval_f1: training: 0.304705 validation: 0.274311
09/16 08:47:49 AM: Global learning rate: 0.0001
09/16 08:47:49 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:47:51 AM: ***** Step 700 / Validation 7 *****
09/16 08:47:51 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:47:51 AM: Validating...
09/16 08:47:52 AM: Best result seen so far for edges-rel-semeval.
09/16 08:47:52 AM: Best result seen so far for macro.
09/16 08:47:52 AM: Updating LR scheduler:
09/16 08:47:52 AM: 	Best result seen so far for macro_avg: 0.329
09/16 08:47:52 AM: 	# validation passes without improvement: 0
09/16 08:47:52 AM: edges-rel-semeval_loss: training: 0.125247 validation: 0.126332
09/16 08:47:52 AM: macro_avg: validation: 0.329167
09/16 08:47:52 AM: micro_avg: validation: 0.000000
09/16 08:47:52 AM: edges-rel-semeval_mcc: training: 0.410979 validation: 0.396536
09/16 08:47:52 AM: edges-rel-semeval_acc: training: 0.226427 validation: 0.203655
09/16 08:47:52 AM: edges-rel-semeval_precision: training: 0.764467 validation: 0.814433
09/16 08:47:52 AM: edges-rel-semeval_recall: training: 0.237465 validation: 0.206266
09/16 08:47:52 AM: edges-rel-semeval_f1: training: 0.362368 validation: 0.329167
09/16 08:47:52 AM: Global learning rate: 0.0001
09/16 08:47:52 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:47:53 AM: ***** Step 800 / Validation 8 *****
09/16 08:47:53 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:47:53 AM: Validating...
09/16 08:47:54 AM: Best result seen so far for edges-rel-semeval.
09/16 08:47:54 AM: Best result seen so far for macro.
09/16 08:47:54 AM: Updating LR scheduler:
09/16 08:47:54 AM: 	Best result seen so far for macro_avg: 0.375
09/16 08:47:54 AM: 	# validation passes without improvement: 0
09/16 08:47:54 AM: edges-rel-semeval_loss: training: 0.121081 validation: 0.121992
09/16 08:47:54 AM: macro_avg: validation: 0.374833
09/16 08:47:54 AM: micro_avg: validation: 0.000000
09/16 08:47:54 AM: edges-rel-semeval_mcc: training: 0.456081 validation: 0.430695
09/16 08:47:54 AM: edges-rel-semeval_acc: training: 0.268125 validation: 0.241079
09/16 08:47:54 AM: edges-rel-semeval_precision: training: 0.780634 validation: 0.811594
09/16 08:47:54 AM: edges-rel-semeval_recall: training: 0.284687 validation: 0.243690
09/16 08:47:54 AM: edges-rel-semeval_f1: training: 0.417220 validation: 0.374833
09/16 08:47:54 AM: Global learning rate: 0.0001
09/16 08:47:54 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:47:56 AM: Update 893: task edges-rel-semeval, batch 93 (893): mcc: 0.4632, acc: 0.2867, precision: 0.7638, recall: 0.3006, f1: 0.4315, edges-rel-semeval_loss: 0.1151
09/16 08:47:56 AM: ***** Step 900 / Validation 9 *****
09/16 08:47:56 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:47:56 AM: Validating...
09/16 08:47:57 AM: Best result seen so far for edges-rel-semeval.
09/16 08:47:57 AM: Best result seen so far for macro.
09/16 08:47:57 AM: Updating LR scheduler:
09/16 08:47:57 AM: 	Best result seen so far for macro_avg: 0.391
09/16 08:47:57 AM: 	# validation passes without improvement: 0
09/16 08:47:57 AM: edges-rel-semeval_loss: training: 0.115188 validation: 0.120309
09/16 08:47:57 AM: macro_avg: validation: 0.390820
09/16 08:47:57 AM: micro_avg: validation: 0.000000
09/16 08:47:57 AM: edges-rel-semeval_mcc: training: 0.465266 validation: 0.438665
09/16 08:47:57 AM: edges-rel-semeval_acc: training: 0.288868 validation: 0.255004
09/16 08:47:57 AM: edges-rel-semeval_precision: training: 0.762055 validation: 0.792553
09/16 08:47:57 AM: edges-rel-semeval_recall: training: 0.304005 validation: 0.259356
09/16 08:47:57 AM: edges-rel-semeval_f1: training: 0.434626 validation: 0.390820
09/16 08:47:57 AM: Global learning rate: 0.0001
09/16 08:47:57 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:47:58 AM: ***** Step 1000 / Validation 10 *****
09/16 08:47:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:47:58 AM: Validating...
09/16 08:47:59 AM: Best result seen so far for edges-rel-semeval.
09/16 08:47:59 AM: Best result seen so far for macro.
09/16 08:47:59 AM: Updating LR scheduler:
09/16 08:47:59 AM: 	Best result seen so far for macro_avg: 0.409
09/16 08:47:59 AM: 	# validation passes without improvement: 0
09/16 08:47:59 AM: edges-rel-semeval_loss: training: 0.109130 validation: 0.118670
09/16 08:47:59 AM: macro_avg: validation: 0.408533
09/16 08:47:59 AM: micro_avg: validation: 0.000000
09/16 08:47:59 AM: edges-rel-semeval_mcc: training: 0.519166 validation: 0.452412
09/16 08:47:59 AM: edges-rel-semeval_acc: training: 0.334375 validation: 0.270670
09/16 08:47:59 AM: edges-rel-semeval_precision: training: 0.803105 validation: 0.793970
09/16 08:47:59 AM: edges-rel-semeval_recall: training: 0.355625 validation: 0.275022
09/16 08:47:59 AM: edges-rel-semeval_f1: training: 0.492961 validation: 0.408533
09/16 08:47:59 AM: Global learning rate: 0.0001
09/16 08:47:59 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:01 AM: ***** Step 1100 / Validation 11 *****
09/16 08:48:01 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:01 AM: Validating...
09/16 08:48:01 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:01 AM: Best result seen so far for macro.
09/16 08:48:01 AM: Updating LR scheduler:
09/16 08:48:01 AM: 	Best result seen so far for macro_avg: 0.461
09/16 08:48:01 AM: 	# validation passes without improvement: 0
09/16 08:48:01 AM: edges-rel-semeval_loss: training: 0.107168 validation: 0.116616
09/16 08:48:01 AM: macro_avg: validation: 0.461162
09/16 08:48:01 AM: micro_avg: validation: 0.000000
09/16 08:48:01 AM: edges-rel-semeval_mcc: training: 0.523744 validation: 0.488629
09/16 08:48:01 AM: edges-rel-semeval_acc: training: 0.354778 validation: 0.315927
09/16 08:48:01 AM: edges-rel-semeval_precision: training: 0.778361 validation: 0.775720
09/16 08:48:01 AM: edges-rel-semeval_recall: training: 0.374330 validation: 0.328111
09/16 08:48:01 AM: edges-rel-semeval_f1: training: 0.505537 validation: 0.461162
09/16 08:48:01 AM: Global learning rate: 0.0001
09/16 08:48:01 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:03 AM: ***** Step 1200 / Validation 12 *****
09/16 08:48:03 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:03 AM: Validating...
09/16 08:48:03 AM: Updating LR scheduler:
09/16 08:48:03 AM: 	Best result seen so far for macro_avg: 0.461
09/16 08:48:03 AM: 	# validation passes without improvement: 1
09/16 08:48:03 AM: edges-rel-semeval_loss: training: 0.102372 validation: 0.116125
09/16 08:48:03 AM: macro_avg: validation: 0.441493
09/16 08:48:03 AM: micro_avg: validation: 0.000000
09/16 08:48:03 AM: edges-rel-semeval_mcc: training: 0.557381 validation: 0.480559
09/16 08:48:03 AM: edges-rel-semeval_acc: training: 0.382188 validation: 0.295039
09/16 08:48:03 AM: edges-rel-semeval_precision: training: 0.798059 validation: 0.807870
09/16 08:48:03 AM: edges-rel-semeval_recall: training: 0.411250 validation: 0.303742
09/16 08:48:03 AM: edges-rel-semeval_f1: training: 0.542792 validation: 0.441493
09/16 08:48:03 AM: Global learning rate: 0.0001
09/16 08:48:03 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:05 AM: ***** Step 1300 / Validation 13 *****
09/16 08:48:05 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:05 AM: Validating...
09/16 08:48:06 AM: Updating LR scheduler:
09/16 08:48:06 AM: 	Best result seen so far for macro_avg: 0.461
09/16 08:48:06 AM: 	# validation passes without improvement: 2
09/16 08:48:06 AM: edges-rel-semeval_loss: training: 0.099761 validation: 0.114982
09/16 08:48:06 AM: macro_avg: validation: 0.450722
09/16 08:48:06 AM: micro_avg: validation: 0.000000
09/16 08:48:06 AM: edges-rel-semeval_mcc: training: 0.553565 validation: 0.487768
09/16 08:48:06 AM: edges-rel-semeval_acc: training: 0.383791 validation: 0.302872
09/16 08:48:06 AM: edges-rel-semeval_precision: training: 0.781139 validation: 0.808559
09/16 08:48:06 AM: edges-rel-semeval_recall: training: 0.415326 validation: 0.312446
09/16 08:48:06 AM: edges-rel-semeval_f1: training: 0.542310 validation: 0.450722
09/16 08:48:06 AM: Global learning rate: 0.0001
09/16 08:48:06 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:06 AM: Update 1325: task edges-rel-semeval, batch 25 (1325): mcc: 0.5977, acc: 0.4300, precision: 0.8284, recall: 0.4525, f1: 0.5853, edges-rel-semeval_loss: 0.0939
09/16 08:48:07 AM: ***** Step 1400 / Validation 14 *****
09/16 08:48:07 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:07 AM: Validating...
09/16 08:48:07 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:07 AM: Best result seen so far for macro.
09/16 08:48:07 AM: Updating LR scheduler:
09/16 08:48:07 AM: 	Best result seen so far for macro_avg: 0.472
09/16 08:48:07 AM: 	# validation passes without improvement: 0
09/16 08:48:07 AM: edges-rel-semeval_loss: training: 0.095323 validation: 0.114105
09/16 08:48:07 AM: macro_avg: validation: 0.472289
09/16 08:48:07 AM: micro_avg: validation: 0.000000
09/16 08:48:07 AM: edges-rel-semeval_mcc: training: 0.586039 validation: 0.495372
09/16 08:48:07 AM: edges-rel-semeval_acc: training: 0.413438 validation: 0.328982
09/16 08:48:07 AM: edges-rel-semeval_precision: training: 0.810335 validation: 0.767123
09/16 08:48:07 AM: edges-rel-semeval_recall: training: 0.445938 validation: 0.341166
09/16 08:48:07 AM: edges-rel-semeval_f1: training: 0.575287 validation: 0.472289
09/16 08:48:07 AM: Global learning rate: 0.0001
09/16 08:48:07 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:09 AM: ***** Step 1500 / Validation 15 *****
09/16 08:48:09 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:09 AM: Validating...
09/16 08:48:09 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:09 AM: Best result seen so far for macro.
09/16 08:48:09 AM: Updating LR scheduler:
09/16 08:48:09 AM: 	Best result seen so far for macro_avg: 0.473
09/16 08:48:09 AM: 	# validation passes without improvement: 0
09/16 08:48:09 AM: edges-rel-semeval_loss: training: 0.097429 validation: 0.113264
09/16 08:48:09 AM: macro_avg: validation: 0.473039
09/16 08:48:09 AM: micro_avg: validation: 0.000000
09/16 08:48:09 AM: edges-rel-semeval_mcc: training: 0.576370 validation: 0.502881
09/16 08:48:09 AM: edges-rel-semeval_acc: training: 0.413438 validation: 0.327241
09/16 08:48:09 AM: edges-rel-semeval_precision: training: 0.790529 validation: 0.799172
09/16 08:48:09 AM: edges-rel-semeval_recall: training: 0.443437 validation: 0.335944
09/16 08:48:09 AM: edges-rel-semeval_f1: training: 0.568168 validation: 0.473039
09/16 08:48:09 AM: Global learning rate: 0.0001
09/16 08:48:09 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:11 AM: ***** Step 1600 / Validation 16 *****
09/16 08:48:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:12 AM: Validating...
09/16 08:48:12 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:12 AM: Best result seen so far for macro.
09/16 08:48:12 AM: Updating LR scheduler:
09/16 08:48:12 AM: 	Best result seen so far for macro_avg: 0.490
09/16 08:48:12 AM: 	# validation passes without improvement: 0
09/16 08:48:12 AM: edges-rel-semeval_loss: training: 0.089347 validation: 0.113134
09/16 08:48:12 AM: macro_avg: validation: 0.489700
09/16 08:48:12 AM: micro_avg: validation: 0.000000
09/16 08:48:12 AM: edges-rel-semeval_mcc: training: 0.611683 validation: 0.506652
09/16 08:48:12 AM: edges-rel-semeval_acc: training: 0.443393 validation: 0.350740
09/16 08:48:12 AM: edges-rel-semeval_precision: training: 0.817060 validation: 0.756364
09/16 08:48:12 AM: edges-rel-semeval_recall: training: 0.480290 validation: 0.362054
09/16 08:48:12 AM: edges-rel-semeval_f1: training: 0.604965 validation: 0.489700
09/16 08:48:12 AM: Global learning rate: 0.0001
09/16 08:48:12 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:13 AM: ***** Step 1700 / Validation 17 *****
09/16 08:48:13 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:13 AM: Validating...
09/16 08:48:14 AM: Updating LR scheduler:
09/16 08:48:14 AM: 	Best result seen so far for macro_avg: 0.490
09/16 08:48:14 AM: 	# validation passes without improvement: 1
09/16 08:48:14 AM: edges-rel-semeval_loss: training: 0.091821 validation: 0.114114
09/16 08:48:14 AM: macro_avg: validation: 0.469226
09/16 08:48:14 AM: micro_avg: validation: 0.000000
09/16 08:48:14 AM: edges-rel-semeval_mcc: training: 0.611524 validation: 0.496329
09/16 08:48:14 AM: edges-rel-semeval_acc: training: 0.460000 validation: 0.327241
09/16 08:48:14 AM: edges-rel-semeval_precision: training: 0.800612 validation: 0.782520
09/16 08:48:14 AM: edges-rel-semeval_recall: training: 0.490625 validation: 0.335074
09/16 08:48:14 AM: edges-rel-semeval_f1: training: 0.608409 validation: 0.469226
09/16 08:48:14 AM: Global learning rate: 0.0001
09/16 08:48:14 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:16 AM: Update 1786: task edges-rel-semeval, batch 86 (1786): mcc: 0.6395, acc: 0.4844, precision: 0.8288, recall: 0.5156, f1: 0.6357, edges-rel-semeval_loss: 0.0865
09/16 08:48:16 AM: ***** Step 1800 / Validation 18 *****
09/16 08:48:16 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:16 AM: Validating...
09/16 08:48:17 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:17 AM: Best result seen so far for macro.
09/16 08:48:17 AM: Updating LR scheduler:
09/16 08:48:17 AM: 	Best result seen so far for macro_avg: 0.501
09/16 08:48:17 AM: 	# validation passes without improvement: 0
09/16 08:48:17 AM: edges-rel-semeval_loss: training: 0.086234 validation: 0.113449
09/16 08:48:17 AM: macro_avg: validation: 0.501155
09/16 08:48:17 AM: micro_avg: validation: 0.000000
09/16 08:48:17 AM: edges-rel-semeval_mcc: training: 0.639979 validation: 0.513179
09/16 08:48:17 AM: edges-rel-semeval_acc: training: 0.484074 validation: 0.364665
09/16 08:48:17 AM: edges-rel-semeval_precision: training: 0.824649 validation: 0.744425
09/16 08:48:17 AM: edges-rel-semeval_recall: training: 0.519079 validation: 0.377720
09/16 08:48:17 AM: edges-rel-semeval_f1: training: 0.637120 validation: 0.501155
09/16 08:48:17 AM: Global learning rate: 0.0001
09/16 08:48:17 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:18 AM: ***** Step 1900 / Validation 19 *****
09/16 08:48:18 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:18 AM: Validating...
09/16 08:48:18 AM: Updating LR scheduler:
09/16 08:48:18 AM: 	Best result seen so far for macro_avg: 0.501
09/16 08:48:18 AM: 	# validation passes without improvement: 1
09/16 08:48:18 AM: edges-rel-semeval_loss: training: 0.087855 validation: 0.113441
09/16 08:48:18 AM: macro_avg: validation: 0.485356
09/16 08:48:18 AM: micro_avg: validation: 0.000000
09/16 08:48:18 AM: edges-rel-semeval_mcc: training: 0.621609 validation: 0.507184
09/16 08:48:18 AM: edges-rel-semeval_acc: training: 0.465313 validation: 0.340296
09/16 08:48:18 AM: edges-rel-semeval_precision: training: 0.798526 validation: 0.774809
09/16 08:48:18 AM: edges-rel-semeval_recall: training: 0.507812 validation: 0.353351
09/16 08:48:18 AM: edges-rel-semeval_f1: training: 0.620821 validation: 0.485356
09/16 08:48:18 AM: Global learning rate: 0.0001
09/16 08:48:18 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:21 AM: ***** Step 2000 / Validation 20 *****
09/16 08:48:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:21 AM: Validating...
09/16 08:48:21 AM: Updating LR scheduler:
09/16 08:48:21 AM: 	Best result seen so far for macro_avg: 0.501
09/16 08:48:21 AM: 	# validation passes without improvement: 2
09/16 08:48:21 AM: edges-rel-semeval_loss: training: 0.082202 validation: 0.113979
09/16 08:48:21 AM: macro_avg: validation: 0.498834
09/16 08:48:21 AM: micro_avg: validation: 0.000000
09/16 08:48:21 AM: edges-rel-semeval_mcc: training: 0.660906 validation: 0.513522
09/16 08:48:21 AM: edges-rel-semeval_acc: training: 0.508357 validation: 0.356832
09/16 08:48:21 AM: edges-rel-semeval_precision: training: 0.839355 validation: 0.754850
09/16 08:48:21 AM: edges-rel-semeval_recall: training: 0.542100 validation: 0.372498
09/16 08:48:21 AM: edges-rel-semeval_f1: training: 0.658747 validation: 0.498834
09/16 08:48:21 AM: Global learning rate: 0.0001
09/16 08:48:21 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:23 AM: ***** Step 2100 / Validation 21 *****
09/16 08:48:23 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:23 AM: Validating...
09/16 08:48:23 AM: Updating LR scheduler:
09/16 08:48:23 AM: 	Best result seen so far for macro_avg: 0.501
09/16 08:48:23 AM: 	# validation passes without improvement: 3
09/16 08:48:23 AM: edges-rel-semeval_loss: training: 0.082971 validation: 0.114286
09/16 08:48:23 AM: macro_avg: validation: 0.485611
09/16 08:48:23 AM: micro_avg: validation: 0.000000
09/16 08:48:23 AM: edges-rel-semeval_mcc: training: 0.648366 validation: 0.508570
09/16 08:48:23 AM: edges-rel-semeval_acc: training: 0.500000 validation: 0.342907
09/16 08:48:23 AM: edges-rel-semeval_precision: training: 0.807889 validation: 0.780347
09/16 08:48:23 AM: edges-rel-semeval_recall: training: 0.544062 validation: 0.352480
09/16 08:48:23 AM: edges-rel-semeval_f1: training: 0.650233 validation: 0.485611
09/16 08:48:23 AM: Global learning rate: 0.0001
09/16 08:48:23 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:26 AM: ***** Step 2200 / Validation 22 *****
09/16 08:48:26 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:26 AM: Validating...
09/16 08:48:26 AM: Evaluate: task edges-rel-semeval, batch 29 (36): mcc: 0.5223, acc: 0.3696, precision: 0.7574, recall: 0.3836, f1: 0.5093, edges-rel-semeval_loss: 0.1122
09/16 08:48:26 AM: Updating LR scheduler:
09/16 08:48:26 AM: 	Best result seen so far for macro_avg: 0.501
09/16 08:48:26 AM: 	# validation passes without improvement: 0
09/16 08:48:26 AM: edges-rel-semeval_loss: training: 0.080344 validation: 0.114298
09/16 08:48:26 AM: macro_avg: validation: 0.492686
09/16 08:48:26 AM: micro_avg: validation: 0.000000
09/16 08:48:26 AM: edges-rel-semeval_mcc: training: 0.656805 validation: 0.508031
09/16 08:48:26 AM: edges-rel-semeval_acc: training: 0.509618 validation: 0.351610
09/16 08:48:26 AM: edges-rel-semeval_precision: training: 0.814299 validation: 0.751786
09/16 08:48:26 AM: edges-rel-semeval_recall: training: 0.553138 validation: 0.366406
09/16 08:48:26 AM: edges-rel-semeval_f1: training: 0.658779 validation: 0.492686
09/16 08:48:26 AM: Global learning rate: 5e-05
09/16 08:48:26 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:28 AM: ***** Step 2300 / Validation 23 *****
09/16 08:48:28 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:28 AM: Validating...
09/16 08:48:28 AM: Updating LR scheduler:
09/16 08:48:28 AM: 	Best result seen so far for macro_avg: 0.501
09/16 08:48:28 AM: 	# validation passes without improvement: 1
09/16 08:48:28 AM: edges-rel-semeval_loss: training: 0.078590 validation: 0.114001
09/16 08:48:28 AM: macro_avg: validation: 0.498554
09/16 08:48:28 AM: micro_avg: validation: 0.000000
09/16 08:48:28 AM: edges-rel-semeval_mcc: training: 0.666234 validation: 0.510843
09/16 08:48:28 AM: edges-rel-semeval_acc: training: 0.515000 validation: 0.358573
09/16 08:48:28 AM: edges-rel-semeval_precision: training: 0.829076 validation: 0.743103
09/16 08:48:28 AM: edges-rel-semeval_recall: training: 0.557813 validation: 0.375109
09/16 08:48:28 AM: edges-rel-semeval_f1: training: 0.666916 validation: 0.498554
09/16 08:48:28 AM: Global learning rate: 5e-05
09/16 08:48:28 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:30 AM: ***** Step 2400 / Validation 24 *****
09/16 08:48:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:30 AM: Validating...
09/16 08:48:31 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:31 AM: Best result seen so far for macro.
09/16 08:48:31 AM: Updating LR scheduler:
09/16 08:48:31 AM: 	Best result seen so far for macro_avg: 0.502
09/16 08:48:31 AM: 	# validation passes without improvement: 0
09/16 08:48:31 AM: edges-rel-semeval_loss: training: 0.074518 validation: 0.113704
09/16 08:48:31 AM: macro_avg: validation: 0.502336
09/16 08:48:31 AM: micro_avg: validation: 0.000000
09/16 08:48:31 AM: edges-rel-semeval_mcc: training: 0.690156 validation: 0.518155
09/16 08:48:31 AM: edges-rel-semeval_acc: training: 0.543677 validation: 0.363795
09/16 08:48:31 AM: edges-rel-semeval_precision: training: 0.840541 validation: 0.763766
09/16 08:48:31 AM: edges-rel-semeval_recall: training: 0.588458 validation: 0.374238
09/16 08:48:31 AM: edges-rel-semeval_f1: training: 0.692265 validation: 0.502336
09/16 08:48:31 AM: Global learning rate: 5e-05
09/16 08:48:31 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:32 AM: ***** Step 2500 / Validation 25 *****
09/16 08:48:32 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:32 AM: Validating...
09/16 08:48:33 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:33 AM: Best result seen so far for macro.
09/16 08:48:33 AM: Updating LR scheduler:
09/16 08:48:33 AM: 	Best result seen so far for macro_avg: 0.503
09/16 08:48:33 AM: 	# validation passes without improvement: 0
09/16 08:48:33 AM: edges-rel-semeval_loss: training: 0.075188 validation: 0.113187
09/16 08:48:33 AM: macro_avg: validation: 0.503472
09/16 08:48:33 AM: micro_avg: validation: 0.000000
09/16 08:48:33 AM: edges-rel-semeval_mcc: training: 0.687719 validation: 0.516446
09/16 08:48:33 AM: edges-rel-semeval_acc: training: 0.546250 validation: 0.364665
09/16 08:48:33 AM: edges-rel-semeval_precision: training: 0.833481 validation: 0.751295
09/16 08:48:33 AM: edges-rel-semeval_recall: training: 0.589688 validation: 0.378590
09/16 08:48:33 AM: edges-rel-semeval_f1: training: 0.690703 validation: 0.503472
09/16 08:48:33 AM: Global learning rate: 5e-05
09/16 08:48:33 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:35 AM: ***** Step 2600 / Validation 26 *****
09/16 08:48:35 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:35 AM: Validating...
09/16 08:48:36 AM: Updating LR scheduler:
09/16 08:48:36 AM: 	Best result seen so far for macro_avg: 0.503
09/16 08:48:36 AM: 	# validation passes without improvement: 1
09/16 08:48:36 AM: edges-rel-semeval_loss: training: 0.075759 validation: 0.114779
09/16 08:48:36 AM: macro_avg: validation: 0.500582
09/16 08:48:36 AM: micro_avg: validation: 0.000000
09/16 08:48:36 AM: edges-rel-semeval_mcc: training: 0.689020 validation: 0.515082
09/16 08:48:36 AM: edges-rel-semeval_acc: training: 0.544308 validation: 0.360313
09/16 08:48:36 AM: edges-rel-semeval_precision: training: 0.832521 validation: 0.755712
09/16 08:48:36 AM: edges-rel-semeval_recall: training: 0.592558 validation: 0.374238
09/16 08:48:36 AM: edges-rel-semeval_f1: training: 0.692336 validation: 0.500582
09/16 08:48:36 AM: Global learning rate: 5e-05
09/16 08:48:36 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:36 AM: Update 2619: task edges-rel-semeval, batch 19 (2619): mcc: 0.6976, acc: 0.5543, precision: 0.8478, recall: 0.5954, f1: 0.6995, edges-rel-semeval_loss: 0.0733
09/16 08:48:37 AM: ***** Step 2700 / Validation 27 *****
09/16 08:48:37 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:37 AM: Validating...
09/16 08:48:38 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:38 AM: Best result seen so far for macro.
09/16 08:48:38 AM: Updating LR scheduler:
09/16 08:48:38 AM: 	Best result seen so far for macro_avg: 0.505
09/16 08:48:38 AM: 	# validation passes without improvement: 0
09/16 08:48:38 AM: edges-rel-semeval_loss: training: 0.073332 validation: 0.114317
09/16 08:48:38 AM: macro_avg: validation: 0.504922
09/16 08:48:38 AM: micro_avg: validation: 0.000000
09/16 08:48:38 AM: edges-rel-semeval_mcc: training: 0.701148 validation: 0.518225
09/16 08:48:38 AM: edges-rel-semeval_acc: training: 0.559375 validation: 0.364665
09/16 08:48:38 AM: edges-rel-semeval_precision: training: 0.847271 validation: 0.754325
09/16 08:48:38 AM: edges-rel-semeval_recall: training: 0.601562 validation: 0.379460
09/16 08:48:38 AM: edges-rel-semeval_f1: training: 0.703582 validation: 0.504922
09/16 08:48:38 AM: Global learning rate: 5e-05
09/16 08:48:38 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:40 AM: ***** Step 2800 / Validation 28 *****
09/16 08:48:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:40 AM: Validating...
09/16 08:48:41 AM: Updating LR scheduler:
09/16 08:48:41 AM: 	Best result seen so far for macro_avg: 0.505
09/16 08:48:41 AM: 	# validation passes without improvement: 1
09/16 08:48:41 AM: edges-rel-semeval_loss: training: 0.074746 validation: 0.114933
09/16 08:48:41 AM: macro_avg: validation: 0.493356
09/16 08:48:41 AM: micro_avg: validation: 0.000000
09/16 08:48:41 AM: edges-rel-semeval_mcc: training: 0.684018 validation: 0.504761
09/16 08:48:41 AM: edges-rel-semeval_acc: training: 0.540208 validation: 0.354221
09/16 08:48:41 AM: edges-rel-semeval_precision: training: 0.831169 validation: 0.733677
09/16 08:48:41 AM: edges-rel-semeval_recall: training: 0.585304 validation: 0.371628
09/16 08:48:41 AM: edges-rel-semeval_f1: training: 0.686899 validation: 0.493356
09/16 08:48:41 AM: Global learning rate: 5e-05
09/16 08:48:41 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:42 AM: ***** Step 2900 / Validation 29 *****
09/16 08:48:42 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:42 AM: Validating...
09/16 08:48:43 AM: Updating LR scheduler:
09/16 08:48:43 AM: 	Best result seen so far for macro_avg: 0.505
09/16 08:48:43 AM: 	# validation passes without improvement: 2
09/16 08:48:43 AM: edges-rel-semeval_loss: training: 0.071545 validation: 0.115262
09/16 08:48:43 AM: macro_avg: validation: 0.498278
09/16 08:48:43 AM: micro_avg: validation: 0.000000
09/16 08:48:43 AM: edges-rel-semeval_mcc: training: 0.708833 validation: 0.508290
09/16 08:48:43 AM: edges-rel-semeval_acc: training: 0.570625 validation: 0.362924
09/16 08:48:43 AM: edges-rel-semeval_precision: training: 0.848014 validation: 0.731872
09/16 08:48:43 AM: edges-rel-semeval_recall: training: 0.613750 validation: 0.377720
09/16 08:48:43 AM: edges-rel-semeval_f1: training: 0.712110 validation: 0.498278
09/16 08:48:43 AM: Global learning rate: 5e-05
09/16 08:48:43 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:44 AM: ***** Step 3000 / Validation 30 *****
09/16 08:48:44 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:44 AM: Validating...
09/16 08:48:45 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:45 AM: Best result seen so far for macro.
09/16 08:48:45 AM: Updating LR scheduler:
09/16 08:48:45 AM: 	Best result seen so far for macro_avg: 0.526
09/16 08:48:45 AM: 	# validation passes without improvement: 0
09/16 08:48:45 AM: edges-rel-semeval_loss: training: 0.072694 validation: 0.114061
09/16 08:48:45 AM: macro_avg: validation: 0.525556
09/16 08:48:45 AM: micro_avg: validation: 0.000000
09/16 08:48:45 AM: edges-rel-semeval_mcc: training: 0.706422 validation: 0.529137
09/16 08:48:45 AM: edges-rel-semeval_acc: training: 0.561250 validation: 0.391645
09/16 08:48:45 AM: edges-rel-semeval_precision: training: 0.846021 validation: 0.726574
09/16 08:48:45 AM: edges-rel-semeval_recall: training: 0.611250 validation: 0.411662
09/16 08:48:45 AM: edges-rel-semeval_f1: training: 0.709724 validation: 0.525556
09/16 08:48:45 AM: Global learning rate: 5e-05
09/16 08:48:45 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:46 AM: Update 3035: task edges-rel-semeval, batch 35 (3035): mcc: 0.7085, acc: 0.5729, precision: 0.8398, recall: 0.6196, f1: 0.7131, edges-rel-semeval_loss: 0.0712
09/16 08:48:47 AM: ***** Step 3100 / Validation 31 *****
09/16 08:48:47 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:47 AM: Validating...
09/16 08:48:47 AM: Updating LR scheduler:
09/16 08:48:47 AM: 	Best result seen so far for macro_avg: 0.526
09/16 08:48:47 AM: 	# validation passes without improvement: 1
09/16 08:48:47 AM: edges-rel-semeval_loss: training: 0.069930 validation: 0.115516
09/16 08:48:47 AM: macro_avg: validation: 0.511811
09/16 08:48:47 AM: micro_avg: validation: 0.000000
09/16 08:48:47 AM: edges-rel-semeval_mcc: training: 0.716912 validation: 0.517378
09/16 08:48:47 AM: edges-rel-semeval_acc: training: 0.574582 validation: 0.374238
09/16 08:48:47 AM: edges-rel-semeval_precision: training: 0.851311 validation: 0.723370
09/16 08:48:47 AM: edges-rel-semeval_recall: training: 0.624724 validation: 0.395997
09/16 08:48:47 AM: edges-rel-semeval_f1: training: 0.720626 validation: 0.511811
09/16 08:48:47 AM: Global learning rate: 5e-05
09/16 08:48:47 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:49 AM: ***** Step 3200 / Validation 32 *****
09/16 08:48:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:49 AM: Validating...
09/16 08:48:50 AM: Updating LR scheduler:
09/16 08:48:50 AM: 	Best result seen so far for macro_avg: 0.526
09/16 08:48:50 AM: 	# validation passes without improvement: 2
09/16 08:48:50 AM: edges-rel-semeval_loss: training: 0.070569 validation: 0.115326
09/16 08:48:50 AM: macro_avg: validation: 0.513928
09/16 08:48:50 AM: micro_avg: validation: 0.000000
09/16 08:48:50 AM: edges-rel-semeval_mcc: training: 0.708715 validation: 0.522649
09/16 08:48:50 AM: edges-rel-semeval_acc: training: 0.568750 validation: 0.372498
09/16 08:48:50 AM: edges-rel-semeval_precision: training: 0.840832 validation: 0.740984
09/16 08:48:50 AM: edges-rel-semeval_recall: training: 0.619062 validation: 0.393386
09/16 08:48:50 AM: edges-rel-semeval_f1: training: 0.713103 validation: 0.513928
09/16 08:48:50 AM: Global learning rate: 5e-05
09/16 08:48:50 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:52 AM: ***** Step 3300 / Validation 33 *****
09/16 08:48:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:52 AM: Validating...
09/16 08:48:53 AM: Updating LR scheduler:
09/16 08:48:53 AM: 	Best result seen so far for macro_avg: 0.526
09/16 08:48:53 AM: 	# validation passes without improvement: 3
09/16 08:48:53 AM: edges-rel-semeval_loss: training: 0.068955 validation: 0.116204
09/16 08:48:53 AM: macro_avg: validation: 0.513375
09/16 08:48:53 AM: micro_avg: validation: 0.000000
09/16 08:48:53 AM: edges-rel-semeval_mcc: training: 0.717560 validation: 0.522368
09/16 08:48:53 AM: edges-rel-semeval_acc: training: 0.582151 validation: 0.369887
09/16 08:48:53 AM: edges-rel-semeval_precision: training: 0.838602 validation: 0.741776
09/16 08:48:53 AM: edges-rel-semeval_recall: training: 0.635762 validation: 0.392515
09/16 08:48:53 AM: edges-rel-semeval_f1: training: 0.723229 validation: 0.513375
09/16 08:48:53 AM: Global learning rate: 5e-05
09/16 08:48:53 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:54 AM: ***** Step 3400 / Validation 34 *****
09/16 08:48:54 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:54 AM: Validating...
09/16 08:48:55 AM: Updating LR scheduler:
09/16 08:48:55 AM: 	Best result seen so far for macro_avg: 0.526
09/16 08:48:55 AM: 	# validation passes without improvement: 0
09/16 08:48:55 AM: edges-rel-semeval_loss: training: 0.068747 validation: 0.116605
09/16 08:48:55 AM: macro_avg: validation: 0.500577
09/16 08:48:55 AM: micro_avg: validation: 0.000000
09/16 08:48:55 AM: edges-rel-semeval_mcc: training: 0.717376 validation: 0.512192
09/16 08:48:55 AM: edges-rel-semeval_acc: training: 0.585000 validation: 0.360313
09/16 08:48:55 AM: edges-rel-semeval_precision: training: 0.849936 validation: 0.741880
09/16 08:48:55 AM: edges-rel-semeval_recall: training: 0.626562 validation: 0.377720
09/16 08:48:55 AM: edges-rel-semeval_f1: training: 0.721353 validation: 0.500577
09/16 08:48:55 AM: Global learning rate: 2.5e-05
09/16 08:48:55 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:48:56 AM: Update 3441: task edges-rel-semeval, batch 41 (3441): mcc: 0.6967, acc: 0.5573, precision: 0.8312, recall: 0.6064, f1: 0.7012, edges-rel-semeval_loss: 0.0717
09/16 08:48:57 AM: ***** Step 3500 / Validation 35 *****
09/16 08:48:57 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:57 AM: Validating...
09/16 08:48:58 AM: Updating LR scheduler:
09/16 08:48:58 AM: 	Best result seen so far for macro_avg: 0.526
09/16 08:48:58 AM: 	# validation passes without improvement: 1
09/16 08:48:58 AM: edges-rel-semeval_loss: training: 0.068499 validation: 0.115763
09/16 08:48:58 AM: macro_avg: validation: 0.511048
09/16 08:48:58 AM: micro_avg: validation: 0.000000
09/16 08:48:58 AM: edges-rel-semeval_mcc: training: 0.720232 validation: 0.518541
09/16 08:48:58 AM: edges-rel-semeval_acc: training: 0.585935 validation: 0.375979
09/16 08:48:58 AM: edges-rel-semeval_precision: training: 0.849153 validation: 0.732143
09/16 08:48:58 AM: edges-rel-semeval_recall: training: 0.631977 validation: 0.392515
09/16 08:48:58 AM: edges-rel-semeval_f1: training: 0.724643 validation: 0.511048
09/16 08:48:58 AM: Global learning rate: 2.5e-05
09/16 08:48:58 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:49:00 AM: ***** Step 3600 / Validation 36 *****
09/16 08:49:00 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:49:00 AM: Validating...
09/16 08:49:00 AM: Updating LR scheduler:
09/16 08:49:00 AM: 	Best result seen so far for macro_avg: 0.526
09/16 08:49:00 AM: 	# validation passes without improvement: 2
09/16 08:49:00 AM: edges-rel-semeval_loss: training: 0.067174 validation: 0.116414
09/16 08:49:00 AM: macro_avg: validation: 0.502838
09/16 08:49:00 AM: micro_avg: validation: 0.000000
09/16 08:49:00 AM: edges-rel-semeval_mcc: training: 0.727322 validation: 0.510033
09/16 08:49:00 AM: edges-rel-semeval_acc: training: 0.590625 validation: 0.366406
09/16 08:49:00 AM: edges-rel-semeval_precision: training: 0.854994 validation: 0.722675
09/16 08:49:00 AM: edges-rel-semeval_recall: training: 0.639375 validation: 0.385553
09/16 08:49:00 AM: edges-rel-semeval_f1: training: 0.731629 validation: 0.502838
09/16 08:49:00 AM: Global learning rate: 2.5e-05
09/16 08:49:00 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:49:02 AM: ***** Step 3700 / Validation 37 *****
09/16 08:49:02 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:49:02 AM: Validating...
09/16 08:49:03 AM: Updating LR scheduler:
09/16 08:49:03 AM: 	Best result seen so far for macro_avg: 0.526
09/16 08:49:03 AM: 	# validation passes without improvement: 3
09/16 08:49:03 AM: edges-rel-semeval_loss: training: 0.066910 validation: 0.116267
09/16 08:49:03 AM: macro_avg: validation: 0.507684
09/16 08:49:03 AM: micro_avg: validation: 0.000000
09/16 08:49:03 AM: edges-rel-semeval_mcc: training: 0.730896 validation: 0.516134
09/16 08:49:03 AM: edges-rel-semeval_acc: training: 0.596342 validation: 0.369887
09/16 08:49:03 AM: edges-rel-semeval_precision: training: 0.855649 validation: 0.733553
09/16 08:49:03 AM: edges-rel-semeval_recall: training: 0.644907 validation: 0.388164
09/16 08:49:03 AM: edges-rel-semeval_f1: training: 0.735479 validation: 0.507684
09/16 08:49:03 AM: Global learning rate: 2.5e-05
09/16 08:49:03 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:49:05 AM: ***** Step 3800 / Validation 38 *****
09/16 08:49:05 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:49:05 AM: Validating...
09/16 08:49:05 AM: Updating LR scheduler:
09/16 08:49:05 AM: 	Best result seen so far for macro_avg: 0.526
09/16 08:49:05 AM: 	# validation passes without improvement: 0
09/16 08:49:05 AM: edges-rel-semeval_loss: training: 0.066344 validation: 0.116362
09/16 08:49:05 AM: macro_avg: validation: 0.503130
09/16 08:49:05 AM: micro_avg: validation: 0.000000
09/16 08:49:05 AM: edges-rel-semeval_mcc: training: 0.720613 validation: 0.511147
09/16 08:49:05 AM: edges-rel-semeval_acc: training: 0.586250 validation: 0.369017
09/16 08:49:05 AM: edges-rel-semeval_precision: training: 0.840592 validation: 0.726974
09/16 08:49:05 AM: edges-rel-semeval_recall: training: 0.639375 validation: 0.384682
09/16 08:49:05 AM: edges-rel-semeval_f1: training: 0.726305 validation: 0.503130
09/16 08:49:05 AM: Global learning rate: 1.25e-05
09/16 08:49:05 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:49:07 AM: Update 3871: task edges-rel-semeval, batch 71 (3871): mcc: 0.7340, acc: 0.6010, precision: 0.8570, recall: 0.6491, f1: 0.7387, edges-rel-semeval_loss: 0.0656
09/16 08:49:08 AM: ***** Step 3900 / Validation 39 *****
09/16 08:49:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:49:08 AM: Validating...
09/16 08:49:08 AM: Updating LR scheduler:
09/16 08:49:08 AM: 	Best result seen so far for macro_avg: 0.526
09/16 08:49:08 AM: 	# validation passes without improvement: 1
09/16 08:49:08 AM: edges-rel-semeval_loss: training: 0.065412 validation: 0.115817
09/16 08:49:08 AM: macro_avg: validation: 0.509296
09/16 08:49:08 AM: micro_avg: validation: 0.000000
09/16 08:49:08 AM: edges-rel-semeval_mcc: training: 0.733771 validation: 0.515086
09/16 08:49:08 AM: edges-rel-semeval_acc: training: 0.601388 validation: 0.372498
09/16 08:49:08 AM: edges-rel-semeval_precision: training: 0.855837 validation: 0.722045
09/16 08:49:08 AM: edges-rel-semeval_recall: training: 0.649637 validation: 0.393386
09/16 08:49:08 AM: edges-rel-semeval_f1: training: 0.738616 validation: 0.509296
09/16 08:49:08 AM: Global learning rate: 1.25e-05
09/16 08:49:08 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:49:10 AM: ***** Step 4000 / Validation 40 *****
09/16 08:49:10 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:49:10 AM: Validating...
09/16 08:49:10 AM: Updating LR scheduler:
09/16 08:49:10 AM: 	Best result seen so far for macro_avg: 0.526
09/16 08:49:10 AM: 	# validation passes without improvement: 2
09/16 08:49:10 AM: Ran out of early stopping patience. Stopping training.
09/16 08:49:10 AM: edges-rel-semeval_loss: training: 0.064597 validation: 0.116582
09/16 08:49:10 AM: macro_avg: validation: 0.503425
09/16 08:49:10 AM: micro_avg: validation: 0.000000
09/16 08:49:10 AM: edges-rel-semeval_mcc: training: 0.744494 validation: 0.512279
09/16 08:49:10 AM: edges-rel-semeval_acc: training: 0.611250 validation: 0.367276
09/16 08:49:10 AM: edges-rel-semeval_precision: training: 0.860672 validation: 0.731343
09/16 08:49:10 AM: edges-rel-semeval_recall: training: 0.664062 validation: 0.383812
09/16 08:49:10 AM: edges-rel-semeval_f1: training: 0.749691 validation: 0.503425
09/16 08:49:10 AM: Global learning rate: 1.25e-05
09/16 08:49:10 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-only/run
09/16 08:49:10 AM: Stopped training after 40 validation checks
09/16 08:49:10 AM: Trained edges-rel-semeval for 4000 batches or 18.605 epochs
09/16 08:49:10 AM: ***** VALIDATION RESULTS *****
09/16 08:49:10 AM: edges-rel-semeval_f1 (for best val pass 30): edges-rel-semeval_loss: 0.11406, macro_avg: 0.52556, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.52914, edges-rel-semeval_acc: 0.39164, edges-rel-semeval_precision: 0.72657, edges-rel-semeval_recall: 0.41166, edges-rel-semeval_f1: 0.52556
09/16 08:49:10 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.18746, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 08:49:10 AM: macro_avg (for best val pass 30): edges-rel-semeval_loss: 0.11406, macro_avg: 0.52556, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.52914, edges-rel-semeval_acc: 0.39164, edges-rel-semeval_precision: 0.72657, edges-rel-semeval_recall: 0.41166, edges-rel-semeval_f1: 0.52556
09/16 08:49:10 AM: Evaluating...
09/16 08:49:10 AM: Loaded model state from ./experiments/rel-semeval-multiqa-only/run/edges-rel-semeval/model_state_target_train_val_30.best.th
09/16 08:49:10 AM: Evaluating on: edges-rel-semeval, split: val
09/16 08:49:10 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:49:10 AM: Finished evaluating on: edges-rel-semeval
09/16 08:49:10 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 08:49:10 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-multiqa-only/run
09/16 08:49:10 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-multiqa-only/run
09/16 08:49:10 AM: Evaluating on: edges-rel-semeval, split: test
09/16 08:49:12 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:49:12 AM: Finished evaluating on: edges-rel-semeval
09/16 08:49:12 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 08:49:12 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-multiqa-only/run
09/16 08:49:12 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-multiqa-only/run
09/16 08:49:12 AM: Writing results for split 'val' to ./experiments/rel-semeval-multiqa-only/results.tsv
09/16 08:49:12 AM: micro_avg: 0.000, macro_avg: 0.526, edges-rel-semeval_mcc: 0.529, edges-rel-semeval_acc: 0.392, edges-rel-semeval_precision: 0.727, edges-rel-semeval_recall: 0.412, edges-rel-semeval_f1: 0.526
09/16 08:49:12 AM: Done!
09/16 08:49:12 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
