09/16 08:42:04 AM: Git branch: master
09/16 08:42:04 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:42:05 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-memorization-cat/",
  "exp_name": "experiments/spr2-memorization-cat",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-memorization-cat/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/memorization",
  "pytorch_transformers_output_mode": "cat",
  "remote_log_name": "experiments/spr2-memorization-cat__run",
  "run_dir": "./experiments/spr2-memorization-cat/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:42:05 AM: Saved config to ./experiments/spr2-memorization-cat/run/params.conf
09/16 08:42:05 AM: Using random seed 1234
09/16 08:42:07 AM: Using GPU 0
09/16 08:42:07 AM: Loading tasks...
09/16 08:42:07 AM: Writing pre-preprocessed tasks to ./experiments/spr2-memorization-cat/
09/16 08:42:07 AM: 	Creating task edges-spr2 from scratch.
09/16 08:42:07 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:42:07 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:42:07 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:42:07 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:42:07 AM: 	Finished loading tasks: edges-spr2.
09/16 08:42:07 AM: 	Building vocab from scratch.
09/16 08:42:07 AM: 	Counting units for task edges-spr2.
09/16 08:42:07 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:42:08 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:08 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:42:09 AM: 	Saved vocab to ./experiments/spr2-memorization-cat/vocab
09/16 08:42:09 AM: Loading token dictionary from ./experiments/spr2-memorization-cat/vocab.
09/16 08:42:09 AM: 	Loaded vocab from ./experiments/spr2-memorization-cat/vocab
09/16 08:42:09 AM: 	Vocab namespace tokens: size 7943
09/16 08:42:09 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:42:09 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:42:09 AM: 	Vocab namespace chars: size 65
09/16 08:42:09 AM: 	Finished building vocab.
09/16 08:42:09 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:42:09 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-memorization-cat/preproc/edges-spr2__train_data
09/16 08:42:09 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:42:09 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-memorization-cat/preproc/edges-spr2__val_data
09/16 08:42:09 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:42:09 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-memorization-cat/preproc/edges-spr2__test_data
09/16 08:42:09 AM: 	Finished indexing tasks
09/16 08:42:09 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:42:09 AM: 	  Training on 
09/16 08:42:09 AM: 	  Evaluating on edges-spr2
09/16 08:42:09 AM: 	Finished loading tasks in 2.564s
09/16 08:42:09 AM: 	 Tasks: ['edges-spr2']
09/16 08:42:09 AM: Building model...
09/16 08:42:09 AM: Using BERT model (bert-base-uncased).
09/16 08:42:09 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:42:09 AM: models/memorization
09/16 08:42:09 AM: loading configuration file models/memorization/config.json
09/16 08:42:09 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "random-memorization",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:42:09 AM: loading weights file models/memorization/pytorch_model.bin
09/16 08:42:21 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmppk5xixug
09/16 08:42:23 AM: copying /tmp/tmppk5xixug to cache at ./experiments/spr2-memorization-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:23 AM: creating metadata file for ./experiments/spr2-memorization-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:23 AM: removing temp file /tmp/tmppk5xixug
09/16 08:42:23 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-memorization-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:23 AM: Initializing parameters
09/16 08:42:23 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:42:23 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:42:23 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:42:23 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:42:23 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:42:23 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:42:23 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:42:29 AM: Model specification:
09/16 08:42:29 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:42:29 AM: Model parameters:
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:29 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:29 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 08:42:29 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:29 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 08:42:29 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:29 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:42:29 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:29 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:29 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:29 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:42:29 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:42:29 AM: Total number of parameters: 110537236 (1.10537e+08)
09/16 08:42:29 AM: Number of trainable parameters: 1054996 (1.055e+06)
09/16 08:42:29 AM: Finished building model in 19.202s
09/16 08:42:29 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:42:30 AM: patience = 9
09/16 08:42:30 AM: val_interval = 100
09/16 08:42:30 AM: max_vals = 100
09/16 08:42:30 AM: cuda_device = 0
09/16 08:42:30 AM: grad_norm = 5.0
09/16 08:42:30 AM: grad_clipping = None
09/16 08:42:30 AM: lr_decay = 0.99
09/16 08:42:30 AM: min_lr = 1e-06
09/16 08:42:30 AM: keep_all_checkpoints = 0
09/16 08:42:30 AM: val_data_limit = 5000
09/16 08:42:30 AM: max_epochs = -1
09/16 08:42:30 AM: dec_val_scale = 250
09/16 08:42:30 AM: training_data_fraction = 1
09/16 08:42:30 AM: type = adam
09/16 08:42:30 AM: parameter_groups = None
09/16 08:42:30 AM: Number of trainable parameters: 1054996
09/16 08:42:30 AM: infer_type_and_cast = True
09/16 08:42:30 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:30 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:30 AM: lr = 0.0001
09/16 08:42:30 AM: amsgrad = True
09/16 08:42:30 AM: type = reduce_on_plateau
09/16 08:42:30 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:30 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:30 AM: mode = max
09/16 08:42:30 AM: factor = 0.5
09/16 08:42:30 AM: patience = 3
09/16 08:42:30 AM: threshold = 0.0001
09/16 08:42:30 AM: threshold_mode = abs
09/16 08:42:30 AM: verbose = True
09/16 08:42:30 AM: type = adam
09/16 08:42:30 AM: parameter_groups = None
09/16 08:42:30 AM: Number of trainable parameters: 1054996
09/16 08:42:30 AM: infer_type_and_cast = True
09/16 08:42:30 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:30 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:30 AM: lr = 0.0001
09/16 08:42:30 AM: amsgrad = True
09/16 08:42:30 AM: type = reduce_on_plateau
09/16 08:42:30 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:30 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:30 AM: mode = max
09/16 08:42:30 AM: factor = 0.5
09/16 08:42:30 AM: patience = 3
09/16 08:42:30 AM: threshold = 0.0001
09/16 08:42:30 AM: threshold_mode = abs
09/16 08:42:30 AM: verbose = True
09/16 08:42:30 AM: Starting training without restoring from a checkpoint.
09/16 08:42:30 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:42:30 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:42:38 AM: ***** Step 100 / Validation 1 *****
09/16 08:42:38 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:42:38 AM: Validating...
09/16 08:42:39 AM: Best result seen so far for edges-spr2.
09/16 08:42:39 AM: Best result seen so far for micro.
09/16 08:42:39 AM: Best result seen so far for macro.
09/16 08:42:39 AM: Updating LR scheduler:
09/16 08:42:39 AM: 	Best result seen so far for macro_avg: 0.792
09/16 08:42:39 AM: 	# validation passes without improvement: 0
09/16 08:42:39 AM: edges-spr2_loss: training: 0.372097 validation: 0.345314
09/16 08:42:39 AM: macro_avg: validation: 0.792350
09/16 08:42:39 AM: micro_avg: validation: 0.000000
09/16 08:42:39 AM: edges-spr2_mcc: training: 0.621220 validation: 0.684279
09/16 08:42:39 AM: edges-spr2_acc: training: 0.047230 validation: 0.073016
09/16 08:42:39 AM: edges-spr2_precision: training: 0.777513 validation: 0.846880
09/16 08:42:39 AM: edges-spr2_recall: training: 0.734839 validation: 0.744418
09/16 08:42:39 AM: edges-spr2_f1: training: 0.755574 validation: 0.792350
09/16 08:42:39 AM: Global learning rate: 0.0001
09/16 08:42:39 AM: Saving checkpoints to: ./experiments/spr2-memorization-cat/run
09/16 08:42:40 AM: Update 105: task edges-spr2, batch 5 (105): mcc: 0.6856, acc: 0.0648, precision: 0.8353, recall: 0.7588, f1: 0.7952, edges-spr2_loss: 0.3226
09/16 08:42:47 AM: ***** Step 200 / Validation 2 *****
09/16 08:42:47 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:42:47 AM: Validating...
09/16 08:42:48 AM: Best result seen so far for edges-spr2.
09/16 08:42:48 AM: Best result seen so far for macro.
09/16 08:42:48 AM: Updating LR scheduler:
09/16 08:42:48 AM: 	Best result seen so far for macro_avg: 0.815
09/16 08:42:48 AM: 	# validation passes without improvement: 0
09/16 08:42:48 AM: edges-spr2_loss: training: 0.308137 validation: 0.328715
09/16 08:42:48 AM: macro_avg: validation: 0.814733
09/16 08:42:48 AM: micro_avg: validation: 0.000000
09/16 08:42:48 AM: edges-spr2_mcc: training: 0.698545 validation: 0.712024
09/16 08:42:48 AM: edges-spr2_acc: training: 0.069049 validation: 0.077778
09/16 08:42:48 AM: edges-spr2_precision: training: 0.832259 validation: 0.846277
09/16 08:42:48 AM: edges-spr2_recall: training: 0.778206 validation: 0.785456
09/16 08:42:48 AM: edges-spr2_f1: training: 0.804325 validation: 0.814733
09/16 08:42:48 AM: Global learning rate: 0.0001
09/16 08:42:48 AM: Saving checkpoints to: ./experiments/spr2-memorization-cat/run
09/16 08:42:50 AM: Update 214: task edges-spr2, batch 14 (214): mcc: 0.7004, acc: 0.0690, precision: 0.8327, recall: 0.7795, f1: 0.8052, edges-spr2_loss: 0.2956
09/16 08:42:56 AM: ***** Step 300 / Validation 3 *****
09/16 08:42:56 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:42:56 AM: Validating...
09/16 08:42:57 AM: Best result seen so far for edges-spr2.
09/16 08:42:57 AM: Best result seen so far for macro.
09/16 08:42:57 AM: Updating LR scheduler:
09/16 08:42:57 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:42:57 AM: 	# validation passes without improvement: 0
09/16 08:42:57 AM: edges-spr2_loss: training: 0.285952 validation: 0.324280
09/16 08:42:57 AM: macro_avg: validation: 0.822392
09/16 08:42:57 AM: micro_avg: validation: 0.000000
09/16 08:42:57 AM: edges-spr2_mcc: training: 0.719339 validation: 0.718505
09/16 08:42:57 AM: edges-spr2_acc: training: 0.079428 validation: 0.076190
09/16 08:42:57 AM: edges-spr2_precision: training: 0.841920 validation: 0.831234
09/16 08:42:57 AM: edges-spr2_recall: training: 0.796653 validation: 0.813736
09/16 08:42:57 AM: edges-spr2_f1: training: 0.818661 validation: 0.822392
09/16 08:42:57 AM: Global learning rate: 0.0001
09/16 08:42:57 AM: Saving checkpoints to: ./experiments/spr2-memorization-cat/run
09/16 08:43:00 AM: Update 333: task edges-spr2, batch 33 (333): mcc: 0.7364, acc: 0.0887, precision: 0.8431, recall: 0.8187, f1: 0.8307, edges-spr2_loss: 0.2730
09/16 08:43:05 AM: ***** Step 400 / Validation 4 *****
09/16 08:43:05 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:05 AM: Validating...
09/16 08:43:06 AM: Updating LR scheduler:
09/16 08:43:06 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:43:06 AM: 	# validation passes without improvement: 1
09/16 08:43:06 AM: edges-spr2_loss: training: 0.272206 validation: 0.320785
09/16 08:43:06 AM: macro_avg: validation: 0.820038
09/16 08:43:06 AM: micro_avg: validation: 0.000000
09/16 08:43:06 AM: edges-spr2_mcc: training: 0.736185 validation: 0.720449
09/16 08:43:06 AM: edges-spr2_acc: training: 0.085028 validation: 0.073016
09/16 08:43:06 AM: edges-spr2_precision: training: 0.846895 validation: 0.852294
09/16 08:43:06 AM: edges-spr2_recall: training: 0.814558 validation: 0.790134
09/16 08:43:06 AM: edges-spr2_f1: training: 0.830412 validation: 0.820038
09/16 08:43:06 AM: Global learning rate: 0.0001
09/16 08:43:06 AM: Saving checkpoints to: ./experiments/spr2-memorization-cat/run
09/16 08:43:10 AM: Update 442: task edges-spr2, batch 42 (442): mcc: 0.7403, acc: 0.0938, precision: 0.8495, recall: 0.8178, f1: 0.8333, edges-spr2_loss: 0.2668
09/16 08:43:14 AM: ***** Step 500 / Validation 5 *****
09/16 08:43:14 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:14 AM: Validating...
09/16 08:43:15 AM: Best result seen so far for edges-spr2.
09/16 08:43:15 AM: Best result seen so far for macro.
09/16 08:43:15 AM: Updating LR scheduler:
09/16 08:43:15 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:43:15 AM: 	# validation passes without improvement: 0
09/16 08:43:15 AM: edges-spr2_loss: training: 0.260589 validation: 0.318451
09/16 08:43:15 AM: macro_avg: validation: 0.824346
09/16 08:43:15 AM: micro_avg: validation: 0.000000
09/16 08:43:15 AM: edges-spr2_mcc: training: 0.746300 validation: 0.723496
09/16 08:43:15 AM: edges-spr2_acc: training: 0.097544 validation: 0.076190
09/16 08:43:15 AM: edges-spr2_precision: training: 0.854178 validation: 0.841604
09/16 08:43:15 AM: edges-spr2_recall: training: 0.820650 validation: 0.807782
09/16 08:43:15 AM: edges-spr2_f1: training: 0.837079 validation: 0.824346
09/16 08:43:15 AM: Global learning rate: 0.0001
09/16 08:43:15 AM: Saving checkpoints to: ./experiments/spr2-memorization-cat/run
09/16 08:43:20 AM: Update 561: task edges-spr2, batch 61 (561): mcc: 0.7513, acc: 0.1031, precision: 0.8547, recall: 0.8270, f1: 0.8406, edges-spr2_loss: 0.2541
09/16 08:43:23 AM: ***** Step 600 / Validation 6 *****
09/16 08:43:23 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:23 AM: Validating...
09/16 08:43:24 AM: Updating LR scheduler:
09/16 08:43:24 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:43:24 AM: 	# validation passes without improvement: 1
09/16 08:43:24 AM: edges-spr2_loss: training: 0.251600 validation: 0.318922
09/16 08:43:24 AM: macro_avg: validation: 0.821634
09/16 08:43:24 AM: micro_avg: validation: 0.000000
09/16 08:43:24 AM: edges-spr2_mcc: training: 0.753727 validation: 0.723022
09/16 08:43:24 AM: edges-spr2_acc: training: 0.107777 validation: 0.084127
09/16 08:43:24 AM: edges-spr2_precision: training: 0.854760 validation: 0.854258
09/16 08:43:24 AM: edges-spr2_recall: training: 0.830084 validation: 0.791410
09/16 08:43:24 AM: edges-spr2_f1: training: 0.842241 validation: 0.821634
09/16 08:43:24 AM: Global learning rate: 0.0001
09/16 08:43:24 AM: Saving checkpoints to: ./experiments/spr2-memorization-cat/run
09/16 08:43:30 AM: Update 675: task edges-spr2, batch 75 (675): mcc: 0.7651, acc: 0.1190, precision: 0.8630, recall: 0.8369, f1: 0.8497, edges-spr2_loss: 0.2434
09/16 08:43:32 AM: ***** Step 700 / Validation 7 *****
09/16 08:43:32 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:32 AM: Validating...
09/16 08:43:33 AM: Updating LR scheduler:
09/16 08:43:33 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:43:33 AM: 	# validation passes without improvement: 2
09/16 08:43:33 AM: edges-spr2_loss: training: 0.242586 validation: 0.320790
09/16 08:43:33 AM: macro_avg: validation: 0.820580
09/16 08:43:33 AM: micro_avg: validation: 0.000000
09/16 08:43:33 AM: edges-spr2_mcc: training: 0.765654 validation: 0.717646
09/16 08:43:33 AM: edges-spr2_acc: training: 0.119366 validation: 0.074603
09/16 08:43:33 AM: edges-spr2_precision: training: 0.865188 validation: 0.838137
09/16 08:43:33 AM: edges-spr2_recall: training: 0.834714 validation: 0.803742
09/16 08:43:33 AM: edges-spr2_f1: training: 0.849678 validation: 0.820580
09/16 08:43:33 AM: Global learning rate: 0.0001
09/16 08:43:33 AM: Saving checkpoints to: ./experiments/spr2-memorization-cat/run
09/16 08:43:40 AM: Update 784: task edges-spr2, batch 84 (784): mcc: 0.7689, acc: 0.1188, precision: 0.8644, recall: 0.8399, f1: 0.8520, edges-spr2_loss: 0.2375
09/16 08:43:41 AM: ***** Step 800 / Validation 8 *****
09/16 08:43:41 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:41 AM: Validating...
09/16 08:43:42 AM: Updating LR scheduler:
09/16 08:43:42 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:43:42 AM: 	# validation passes without improvement: 3
09/16 08:43:42 AM: edges-spr2_loss: training: 0.235754 validation: 0.320524
09/16 08:43:42 AM: macro_avg: validation: 0.823363
09/16 08:43:42 AM: micro_avg: validation: 0.000000
09/16 08:43:42 AM: edges-spr2_mcc: training: 0.771095 validation: 0.722080
09/16 08:43:42 AM: edges-spr2_acc: training: 0.120063 validation: 0.080952
09/16 08:43:42 AM: edges-spr2_precision: training: 0.866242 validation: 0.841171
09/16 08:43:42 AM: edges-spr2_recall: training: 0.840914 validation: 0.806294
09/16 08:43:42 AM: edges-spr2_f1: training: 0.853390 validation: 0.823363
09/16 08:43:42 AM: Global learning rate: 0.0001
09/16 08:43:42 AM: Saving checkpoints to: ./experiments/spr2-memorization-cat/run
09/16 08:43:50 AM: Update 899: task edges-spr2, batch 99 (899): mcc: 0.7787, acc: 0.1356, precision: 0.8712, recall: 0.8450, f1: 0.8579, edges-spr2_loss: 0.2306
09/16 08:43:50 AM: ***** Step 900 / Validation 9 *****
09/16 08:43:50 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:50 AM: Validating...
09/16 08:43:51 AM: Updating LR scheduler:
09/16 08:43:51 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:43:51 AM: 	# validation passes without improvement: 0
09/16 08:43:51 AM: edges-spr2_loss: training: 0.230994 validation: 0.327902
09/16 08:43:51 AM: macro_avg: validation: 0.816654
09/16 08:43:51 AM: micro_avg: validation: 0.000000
09/16 08:43:51 AM: edges-spr2_mcc: training: 0.778337 validation: 0.711228
09/16 08:43:51 AM: edges-spr2_acc: training: 0.135513 validation: 0.069841
09/16 08:43:51 AM: edges-spr2_precision: training: 0.871238 validation: 0.833186
09/16 08:43:51 AM: edges-spr2_recall: training: 0.844670 validation: 0.800765
09/16 08:43:51 AM: edges-spr2_f1: training: 0.857748 validation: 0.816654
09/16 08:43:51 AM: Global learning rate: 5e-05
09/16 08:43:51 AM: Saving checkpoints to: ./experiments/spr2-memorization-cat/run
09/16 08:44:00 AM: ***** Step 1000 / Validation 10 *****
09/16 08:44:00 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:00 AM: Validating...
09/16 08:44:00 AM: Evaluate: task edges-spr2, batch 5 (10): mcc: 0.7193, acc: 0.0698, precision: 0.8490, recall: 0.8020, f1: 0.8248, edges-spr2_loss: 0.2957
09/16 08:44:01 AM: Updating LR scheduler:
09/16 08:44:01 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:44:01 AM: 	# validation passes without improvement: 1
09/16 08:44:01 AM: edges-spr2_loss: training: 0.223694 validation: 0.322535
09/16 08:44:01 AM: macro_avg: validation: 0.813735
09/16 08:44:01 AM: micro_avg: validation: 0.000000
09/16 08:44:01 AM: edges-spr2_mcc: training: 0.786061 validation: 0.710759
09/16 08:44:01 AM: edges-spr2_acc: training: 0.146545 validation: 0.076190
09/16 08:44:01 AM: edges-spr2_precision: training: 0.876313 validation: 0.846348
09/16 08:44:01 AM: edges-spr2_recall: training: 0.850831 validation: 0.783542
09/16 08:44:01 AM: edges-spr2_f1: training: 0.863384 validation: 0.813735
09/16 08:44:01 AM: Global learning rate: 5e-05
09/16 08:44:01 AM: Saving checkpoints to: ./experiments/spr2-memorization-cat/run
09/16 08:44:08 AM: ***** Step 1100 / Validation 11 *****
09/16 08:44:08 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:08 AM: Validating...
09/16 08:44:09 AM: Updating LR scheduler:
09/16 08:44:09 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:44:09 AM: 	# validation passes without improvement: 2
09/16 08:44:09 AM: edges-spr2_loss: training: 0.217506 validation: 0.325612
09/16 08:44:09 AM: macro_avg: validation: 0.810571
09/16 08:44:09 AM: micro_avg: validation: 0.000000
09/16 08:44:09 AM: edges-spr2_mcc: training: 0.791543 validation: 0.707234
09/16 08:44:09 AM: edges-spr2_acc: training: 0.156350 validation: 0.073016
09/16 08:44:09 AM: edges-spr2_precision: training: 0.877993 validation: 0.848245
09/16 08:44:09 AM: edges-spr2_recall: training: 0.855239 validation: 0.776100
09/16 08:44:09 AM: edges-spr2_f1: training: 0.866467 validation: 0.810571
09/16 08:44:09 AM: Global learning rate: 5e-05
09/16 08:44:09 AM: Saving checkpoints to: ./experiments/spr2-memorization-cat/run
09/16 08:44:10 AM: Update 1114: task edges-spr2, batch 14 (1114): mcc: 0.7867, acc: 0.1443, precision: 0.8854, recall: 0.8417, f1: 0.8630, edges-spr2_loss: 0.2245
09/16 08:44:18 AM: ***** Step 1200 / Validation 12 *****
09/16 08:44:18 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:18 AM: Validating...
09/16 08:44:19 AM: Updating LR scheduler:
09/16 08:44:19 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:44:19 AM: 	# validation passes without improvement: 3
09/16 08:44:19 AM: edges-spr2_loss: training: 0.218791 validation: 0.325019
09/16 08:44:19 AM: macro_avg: validation: 0.815245
09/16 08:44:19 AM: micro_avg: validation: 0.000000
09/16 08:44:19 AM: edges-spr2_mcc: training: 0.788409 validation: 0.711202
09/16 08:44:19 AM: edges-spr2_acc: training: 0.146307 validation: 0.063492
09/16 08:44:19 AM: edges-spr2_precision: training: 0.877269 validation: 0.840560
09/16 08:44:19 AM: edges-spr2_recall: training: 0.852189 validation: 0.791410
09/16 08:44:19 AM: edges-spr2_f1: training: 0.864547 validation: 0.815245
09/16 08:44:19 AM: Global learning rate: 5e-05
09/16 08:44:19 AM: Saving checkpoints to: ./experiments/spr2-memorization-cat/run
09/16 08:44:20 AM: Update 1220: task edges-spr2, batch 20 (1220): mcc: 0.7967, acc: 0.1736, precision: 0.8850, recall: 0.8549, f1: 0.8697, edges-spr2_loss: 0.2137
09/16 08:44:27 AM: ***** Step 1300 / Validation 13 *****
09/16 08:44:27 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:27 AM: Validating...
09/16 08:44:27 AM: Updating LR scheduler:
09/16 08:44:27 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:44:27 AM: 	# validation passes without improvement: 0
09/16 08:44:27 AM: edges-spr2_loss: training: 0.214793 validation: 0.327358
09/16 08:44:27 AM: macro_avg: validation: 0.813823
09/16 08:44:27 AM: micro_avg: validation: 0.000000
09/16 08:44:27 AM: edges-spr2_mcc: training: 0.794275 validation: 0.709377
09/16 08:44:27 AM: edges-spr2_acc: training: 0.159942 validation: 0.068254
09/16 08:44:27 AM: edges-spr2_precision: training: 0.880323 validation: 0.840662
09/16 08:44:27 AM: edges-spr2_recall: training: 0.856308 validation: 0.788646
09/16 08:44:27 AM: edges-spr2_f1: training: 0.868149 validation: 0.813823
09/16 08:44:27 AM: Global learning rate: 2.5e-05
09/16 08:44:27 AM: Saving checkpoints to: ./experiments/spr2-memorization-cat/run
09/16 08:44:31 AM: Update 1331: task edges-spr2, batch 31 (1331): mcc: 0.7963, acc: 0.1556, precision: 0.8813, recall: 0.8593, f1: 0.8702, edges-spr2_loss: 0.2140
09/16 08:44:36 AM: ***** Step 1400 / Validation 14 *****
09/16 08:44:36 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:36 AM: Validating...
09/16 08:44:37 AM: Updating LR scheduler:
09/16 08:44:37 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:44:37 AM: 	# validation passes without improvement: 1
09/16 08:44:37 AM: edges-spr2_loss: training: 0.210048 validation: 0.326637
09/16 08:44:37 AM: macro_avg: validation: 0.813893
09/16 08:44:37 AM: micro_avg: validation: 0.000000
09/16 08:44:37 AM: edges-spr2_mcc: training: 0.800776 validation: 0.708460
09/16 08:44:37 AM: edges-spr2_acc: training: 0.167542 validation: 0.063492
09/16 08:44:37 AM: edges-spr2_precision: training: 0.883305 validation: 0.836739
09/16 08:44:37 AM: edges-spr2_recall: training: 0.862520 validation: 0.792260
09/16 08:44:37 AM: edges-spr2_f1: training: 0.872789 validation: 0.813893
09/16 08:44:37 AM: Global learning rate: 2.5e-05
09/16 08:44:37 AM: Saving checkpoints to: ./experiments/spr2-memorization-cat/run
09/16 08:44:41 AM: Update 1446: task edges-spr2, batch 46 (1446): mcc: 0.7972, acc: 0.1723, precision: 0.8824, recall: 0.8583, f1: 0.8702, edges-spr2_loss: 0.2095
09/16 08:44:45 AM: ***** Step 1500 / Validation 15 *****
09/16 08:44:45 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:45 AM: Validating...
09/16 08:44:46 AM: Updating LR scheduler:
09/16 08:44:46 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:44:46 AM: 	# validation passes without improvement: 2
09/16 08:44:46 AM: Ran out of early stopping patience. Stopping training.
09/16 08:44:46 AM: edges-spr2_loss: training: 0.209381 validation: 0.326637
09/16 08:44:46 AM: macro_avg: validation: 0.818761
09/16 08:44:46 AM: micro_avg: validation: 0.000000
09/16 08:44:46 AM: edges-spr2_mcc: training: 0.798341 validation: 0.713890
09/16 08:44:46 AM: edges-spr2_acc: training: 0.166550 validation: 0.058730
09/16 08:44:46 AM: edges-spr2_precision: training: 0.882551 validation: 0.832527
09/16 08:44:46 AM: edges-spr2_recall: training: 0.860106 validation: 0.805443
09/16 08:44:46 AM: edges-spr2_f1: training: 0.871184 validation: 0.818761
09/16 08:44:46 AM: Global learning rate: 2.5e-05
09/16 08:44:46 AM: Saving checkpoints to: ./experiments/spr2-memorization-cat/run
09/16 08:44:46 AM: Stopped training after 15 validation checks
09/16 08:44:46 AM: Trained edges-spr2 for 1500 batches or 21.429 epochs
09/16 08:44:46 AM: ***** VALIDATION RESULTS *****
09/16 08:44:46 AM: edges-spr2_f1 (for best val pass 5): edges-spr2_loss: 0.31845, macro_avg: 0.82435, micro_avg: 0.00000, edges-spr2_mcc: 0.72350, edges-spr2_acc: 0.07619, edges-spr2_precision: 0.84160, edges-spr2_recall: 0.80778, edges-spr2_f1: 0.82435
09/16 08:44:46 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.34531, macro_avg: 0.79235, micro_avg: 0.00000, edges-spr2_mcc: 0.68428, edges-spr2_acc: 0.07302, edges-spr2_precision: 0.84688, edges-spr2_recall: 0.74442, edges-spr2_f1: 0.79235
09/16 08:44:46 AM: macro_avg (for best val pass 5): edges-spr2_loss: 0.31845, macro_avg: 0.82435, micro_avg: 0.00000, edges-spr2_mcc: 0.72350, edges-spr2_acc: 0.07619, edges-spr2_precision: 0.84160, edges-spr2_recall: 0.80778, edges-spr2_f1: 0.82435
09/16 08:44:46 AM: Evaluating...
09/16 08:44:46 AM: Loaded model state from ./experiments/spr2-memorization-cat/run/edges-spr2/model_state_target_train_val_5.best.th
09/16 08:44:46 AM: Evaluating on: edges-spr2, split: val
09/16 08:44:47 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:44:47 AM: Finished evaluating on: edges-spr2
09/16 08:44:47 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:44:47 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-memorization-cat/run
09/16 08:44:47 AM: Wrote all preds for split 'val' to ./experiments/spr2-memorization-cat/run
09/16 08:44:47 AM: Evaluating on: edges-spr2, split: test
09/16 08:44:48 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:44:48 AM: Finished evaluating on: edges-spr2
09/16 08:44:48 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:44:48 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-memorization-cat/run
09/16 08:44:48 AM: Wrote all preds for split 'test' to ./experiments/spr2-memorization-cat/run
09/16 08:44:48 AM: Writing results for split 'val' to ./experiments/spr2-memorization-cat/results.tsv
09/16 08:44:48 AM: micro_avg: 0.000, macro_avg: 0.824, edges-spr2_mcc: 0.723, edges-spr2_acc: 0.076, edges-spr2_precision: 0.842, edges-spr2_recall: 0.808, edges-spr2_f1: 0.824
09/16 08:44:48 AM: Done!
09/16 08:44:48 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
