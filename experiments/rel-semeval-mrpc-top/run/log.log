09/16 07:58:13 AM: Git branch: master
09/16 07:58:13 AM: Git SHA: a6b97574b819abe0c17f2f3300d1097e5c87dbde
09/16 07:58:13 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-mrpc-top/",
  "exp_name": "experiments/rel-semeval-mrpc-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-mrpc-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/mrpc",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/rel-semeval-mrpc-top__run",
  "run_dir": "./experiments/rel-semeval-mrpc-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 07:58:13 AM: Saved config to ./experiments/rel-semeval-mrpc-top/run/params.conf
09/16 07:58:13 AM: Using random seed 1234
09/16 07:58:14 AM: Using GPU 0
09/16 07:58:14 AM: Loading tasks...
09/16 07:58:14 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-mrpc-top/
09/16 07:58:14 AM: 	Creating task edges-rel-semeval from scratch.
09/16 07:58:14 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 07:58:14 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 07:58:14 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 07:58:14 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 07:58:14 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 07:58:14 AM: 	Building vocab from scratch.
09/16 07:58:14 AM: 	Counting units for task edges-rel-semeval.
09/16 07:58:14 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 07:58:15 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:58:15 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 07:58:16 AM: 	Saved vocab to ./experiments/rel-semeval-mrpc-top/vocab
09/16 07:58:16 AM: Loading token dictionary from ./experiments/rel-semeval-mrpc-top/vocab.
09/16 07:58:16 AM: 	Loaded vocab from ./experiments/rel-semeval-mrpc-top/vocab
09/16 07:58:16 AM: 	Vocab namespace bert_uncased: size 30524
09/16 07:58:16 AM: 	Vocab namespace tokens: size 16020
09/16 07:58:16 AM: 	Vocab namespace chars: size 59
09/16 07:58:16 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 07:58:16 AM: 	Finished building vocab.
09/16 07:58:16 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 07:58:16 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-mrpc-top/preproc/edges-rel-semeval__train_data
09/16 07:58:16 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 07:58:17 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-mrpc-top/preproc/edges-rel-semeval__val_data
09/16 07:58:17 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 07:58:17 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-mrpc-top/preproc/edges-rel-semeval__test_data
09/16 07:58:17 AM: 	Finished indexing tasks
09/16 07:58:17 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 07:58:17 AM: 	  Training on 
09/16 07:58:17 AM: 	  Evaluating on edges-rel-semeval
09/16 07:58:17 AM: 	Finished loading tasks in 2.921s
09/16 07:58:17 AM: 	 Tasks: ['edges-rel-semeval']
09/16 07:58:17 AM: Building model...
09/16 07:58:17 AM: Using BERT model (bert-base-uncased).
09/16 07:58:17 AM: LOADING A FUNETUNED MODEL from: 
09/16 07:58:17 AM: models/mrpc
09/16 07:58:17 AM: loading configuration file models/mrpc/config.json
09/16 07:58:17 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "mrpc",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 07:58:17 AM: loading weights file models/mrpc/pytorch_model.bin
09/16 07:58:20 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpf9ujkxwc
09/16 07:58:22 AM: copying /tmp/tmpf9ujkxwc to cache at ./experiments/rel-semeval-mrpc-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:58:22 AM: creating metadata file for ./experiments/rel-semeval-mrpc-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:58:22 AM: removing temp file /tmp/tmpf9ujkxwc
09/16 07:58:22 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-mrpc-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:58:22 AM: Initializing parameters
09/16 07:58:22 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 07:58:22 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 07:58:22 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 07:58:22 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 07:58:22 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 07:58:27 AM: Model specification:
09/16 07:58:27 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 07:58:27 AM: Model parameters:
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 07:58:27 AM: Total number of parameters: 110143763 (1.10144e+08)
09/16 07:58:27 AM: Number of trainable parameters: 661523 (661523)
09/16 07:58:27 AM: Finished building model in 9.771s
09/16 07:58:27 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 07:58:28 AM: patience = 9
09/16 07:58:28 AM: val_interval = 100
09/16 07:58:28 AM: max_vals = 100
09/16 07:58:28 AM: cuda_device = 0
09/16 07:58:28 AM: grad_norm = 5.0
09/16 07:58:28 AM: grad_clipping = None
09/16 07:58:28 AM: lr_decay = 0.99
09/16 07:58:28 AM: min_lr = 1e-06
09/16 07:58:28 AM: keep_all_checkpoints = 0
09/16 07:58:28 AM: val_data_limit = 5000
09/16 07:58:28 AM: max_epochs = -1
09/16 07:58:28 AM: dec_val_scale = 250
09/16 07:58:28 AM: training_data_fraction = 1
09/16 07:58:28 AM: type = adam
09/16 07:58:28 AM: parameter_groups = None
09/16 07:58:28 AM: Number of trainable parameters: 661523
09/16 07:58:28 AM: infer_type_and_cast = True
09/16 07:58:28 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:58:28 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:58:28 AM: lr = 0.0001
09/16 07:58:28 AM: amsgrad = True
09/16 07:58:28 AM: type = reduce_on_plateau
09/16 07:58:28 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:58:28 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:58:28 AM: mode = max
09/16 07:58:28 AM: factor = 0.5
09/16 07:58:28 AM: patience = 3
09/16 07:58:28 AM: threshold = 0.0001
09/16 07:58:28 AM: threshold_mode = abs
09/16 07:58:28 AM: verbose = True
09/16 07:58:28 AM: type = adam
09/16 07:58:28 AM: parameter_groups = None
09/16 07:58:28 AM: Number of trainable parameters: 661523
09/16 07:58:28 AM: infer_type_and_cast = True
09/16 07:58:28 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:58:28 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:58:28 AM: lr = 0.0001
09/16 07:58:28 AM: amsgrad = True
09/16 07:58:28 AM: type = reduce_on_plateau
09/16 07:58:28 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:58:28 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:58:28 AM: mode = max
09/16 07:58:28 AM: factor = 0.5
09/16 07:58:28 AM: patience = 3
09/16 07:58:28 AM: threshold = 0.0001
09/16 07:58:28 AM: threshold_mode = abs
09/16 07:58:28 AM: verbose = True
09/16 07:58:28 AM: Starting training without restoring from a checkpoint.
09/16 07:58:28 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 07:58:28 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 07:58:33 AM: ***** Step 100 / Validation 1 *****
09/16 07:58:33 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:33 AM: Validating...
09/16 07:58:36 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:36 AM: Best result seen so far for micro.
09/16 07:58:36 AM: Best result seen so far for macro.
09/16 07:58:36 AM: Updating LR scheduler:
09/16 07:58:36 AM: 	Best result seen so far for macro_avg: 0.000
09/16 07:58:36 AM: 	# validation passes without improvement: 0
09/16 07:58:36 AM: edges-rel-semeval_loss: training: 0.240356 validation: 0.180317
09/16 07:58:36 AM: macro_avg: validation: 0.000000
09/16 07:58:36 AM: micro_avg: validation: 0.000000
09/16 07:58:36 AM: edges-rel-semeval_mcc: training: 0.003490 validation: 0.000000
09/16 07:58:36 AM: edges-rel-semeval_acc: training: 0.001892 validation: 0.000000
09/16 07:58:36 AM: edges-rel-semeval_precision: training: 0.059096 validation: 0.000000
09/16 07:58:36 AM: edges-rel-semeval_recall: training: 0.016083 validation: 0.000000
09/16 07:58:36 AM: edges-rel-semeval_f1: training: 0.025285 validation: 0.000000
09/16 07:58:36 AM: Global learning rate: 0.0001
09/16 07:58:36 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 07:58:38 AM: Update 131: task edges-rel-semeval, batch 31 (131): mcc: -0.0017, acc: 0.0000, precision: 0.0000, recall: 0.0000, f1: 0.0000, edges-rel-semeval_loss: 0.1835
09/16 07:58:41 AM: ***** Step 200 / Validation 2 *****
09/16 07:58:41 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:41 AM: Validating...
09/16 07:58:44 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:44 AM: Best result seen so far for macro.
09/16 07:58:44 AM: Updating LR scheduler:
09/16 07:58:44 AM: 	Best result seen so far for macro_avg: 0.153
09/16 07:58:44 AM: 	# validation passes without improvement: 0
09/16 07:58:44 AM: edges-rel-semeval_loss: training: 0.174591 validation: 0.150197
09/16 07:58:44 AM: macro_avg: validation: 0.153232
09/16 07:58:44 AM: micro_avg: validation: 0.000000
09/16 07:58:44 AM: edges-rel-semeval_mcc: training: 0.082773 validation: 0.269697
09/16 07:58:44 AM: edges-rel-semeval_acc: training: 0.008438 validation: 0.083551
09/16 07:58:44 AM: edges-rel-semeval_precision: training: 0.870968 validation: 0.923077
09/16 07:58:44 AM: edges-rel-semeval_recall: training: 0.008438 validation: 0.083551
09/16 07:58:44 AM: edges-rel-semeval_f1: training: 0.016713 validation: 0.153232
09/16 07:58:44 AM: Global learning rate: 0.0001
09/16 07:58:44 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 07:58:48 AM: Update 264: task edges-rel-semeval, batch 64 (264): mcc: 0.2851, acc: 0.1040, precision: 0.8340, recall: 0.1045, f1: 0.1857, edges-rel-semeval_loss: 0.1517
09/16 07:58:49 AM: ***** Step 300 / Validation 3 *****
09/16 07:58:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:49 AM: Validating...
09/16 07:58:52 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:52 AM: Best result seen so far for macro.
09/16 07:58:52 AM: Updating LR scheduler:
09/16 07:58:52 AM: 	Best result seen so far for macro_avg: 0.319
09/16 07:58:52 AM: 	# validation passes without improvement: 0
09/16 07:58:52 AM: edges-rel-semeval_loss: training: 0.147966 validation: 0.126500
09/16 07:58:52 AM: macro_avg: validation: 0.318737
09/16 07:58:52 AM: micro_avg: validation: 0.000000
09/16 07:58:52 AM: edges-rel-semeval_mcc: training: 0.306966 validation: 0.408132
09/16 07:58:52 AM: edges-rel-semeval_acc: training: 0.119205 validation: 0.190601
09/16 07:58:52 AM: edges-rel-semeval_precision: training: 0.831533 validation: 0.909836
09/16 07:58:52 AM: edges-rel-semeval_recall: training: 0.121413 validation: 0.193211
09/16 07:58:52 AM: edges-rel-semeval_f1: training: 0.211888 validation: 0.318737
09/16 07:58:52 AM: Global learning rate: 0.0001
09/16 07:58:52 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 07:58:57 AM: ***** Step 400 / Validation 4 *****
09/16 07:58:57 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:57 AM: Validating...
09/16 07:58:58 AM: Evaluate: task edges-rel-semeval, batch 10 (36): mcc: 0.5680, acc: 0.3563, precision: 0.9280, recall: 0.3625, f1: 0.5213, edges-rel-semeval_loss: 0.1061
09/16 07:59:00 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:00 AM: Best result seen so far for macro.
09/16 07:59:00 AM: Updating LR scheduler:
09/16 07:59:00 AM: 	Best result seen so far for macro_avg: 0.470
09/16 07:59:00 AM: 	# validation passes without improvement: 0
09/16 07:59:00 AM: edges-rel-semeval_loss: training: 0.126803 validation: 0.110922
09/16 07:59:00 AM: macro_avg: validation: 0.470058
09/16 07:59:00 AM: micro_avg: validation: 0.000000
09/16 07:59:00 AM: edges-rel-semeval_mcc: training: 0.429554 validation: 0.523205
09/16 07:59:00 AM: edges-rel-semeval_acc: training: 0.230625 validation: 0.312446
09/16 07:59:00 AM: edges-rel-semeval_precision: training: 0.830769 validation: 0.903465
09/16 07:59:00 AM: edges-rel-semeval_recall: training: 0.236250 validation: 0.317668
09/16 07:59:00 AM: edges-rel-semeval_f1: training: 0.367883 validation: 0.470058
09/16 07:59:00 AM: Global learning rate: 0.0001
09/16 07:59:00 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 07:59:06 AM: ***** Step 500 / Validation 5 *****
09/16 07:59:06 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:06 AM: Validating...
09/16 07:59:08 AM: Evaluate: task edges-rel-semeval, batch 28 (36): mcc: 0.5952, acc: 0.4040, precision: 0.8998, recall: 0.4107, f1: 0.5640, edges-rel-semeval_loss: 0.0985
09/16 07:59:08 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:08 AM: Best result seen so far for macro.
09/16 07:59:08 AM: Updating LR scheduler:
09/16 07:59:08 AM: 	Best result seen so far for macro_avg: 0.540
09/16 07:59:08 AM: 	# validation passes without improvement: 0
09/16 07:59:08 AM: edges-rel-semeval_loss: training: 0.115372 validation: 0.101472
09/16 07:59:08 AM: macro_avg: validation: 0.539721
09/16 07:59:08 AM: micro_avg: validation: 0.000000
09/16 07:59:08 AM: edges-rel-semeval_mcc: training: 0.502406 validation: 0.574134
09/16 07:59:08 AM: edges-rel-semeval_acc: training: 0.305897 validation: 0.381201
09/16 07:59:08 AM: edges-rel-semeval_precision: training: 0.842282 validation: 0.890000
09/16 07:59:08 AM: edges-rel-semeval_recall: training: 0.316619 validation: 0.387293
09/16 07:59:08 AM: edges-rel-semeval_f1: training: 0.460234 validation: 0.539721
09/16 07:59:08 AM: Global learning rate: 0.0001
09/16 07:59:08 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 07:59:14 AM: ***** Step 600 / Validation 6 *****
09/16 07:59:14 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:14 AM: Validating...
09/16 07:59:16 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:16 AM: Best result seen so far for macro.
09/16 07:59:16 AM: Updating LR scheduler:
09/16 07:59:16 AM: 	Best result seen so far for macro_avg: 0.593
09/16 07:59:16 AM: 	# validation passes without improvement: 0
09/16 07:59:16 AM: edges-rel-semeval_loss: training: 0.103639 validation: 0.094274
09/16 07:59:16 AM: macro_avg: validation: 0.592801
09/16 07:59:16 AM: micro_avg: validation: 0.000000
09/16 07:59:16 AM: edges-rel-semeval_mcc: training: 0.573522 validation: 0.605673
09/16 07:59:16 AM: edges-rel-semeval_acc: training: 0.390313 validation: 0.449086
09/16 07:59:16 AM: edges-rel-semeval_precision: training: 0.856478 validation: 0.837838
09/16 07:59:16 AM: edges-rel-semeval_recall: training: 0.402813 validation: 0.458660
09/16 07:59:16 AM: edges-rel-semeval_f1: training: 0.547928 validation: 0.592801
09/16 07:59:16 AM: Global learning rate: 0.0001
09/16 07:59:16 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 07:59:18 AM: Update 632: task edges-rel-semeval, batch 32 (632): mcc: 0.5813, acc: 0.4014, precision: 0.8462, recall: 0.4189, f1: 0.5604, edges-rel-semeval_loss: 0.0995
09/16 07:59:22 AM: ***** Step 700 / Validation 7 *****
09/16 07:59:22 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:22 AM: Validating...
09/16 07:59:25 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:25 AM: Best result seen so far for macro.
09/16 07:59:25 AM: Updating LR scheduler:
09/16 07:59:25 AM: 	Best result seen so far for macro_avg: 0.629
09/16 07:59:25 AM: 	# validation passes without improvement: 0
09/16 07:59:25 AM: edges-rel-semeval_loss: training: 0.097547 validation: 0.088816
09/16 07:59:25 AM: macro_avg: validation: 0.629487
09/16 07:59:25 AM: micro_avg: validation: 0.000000
09/16 07:59:25 AM: edges-rel-semeval_mcc: training: 0.589789 validation: 0.640207
09/16 07:59:25 AM: edges-rel-semeval_acc: training: 0.416903 validation: 0.483899
09/16 07:59:25 AM: edges-rel-semeval_precision: training: 0.836254 validation: 0.861027
09/16 07:59:25 AM: edges-rel-semeval_recall: training: 0.436455 validation: 0.496084
09/16 07:59:25 AM: edges-rel-semeval_f1: training: 0.573560 validation: 0.629487
09/16 07:59:25 AM: Global learning rate: 0.0001
09/16 07:59:25 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 07:59:28 AM: Update 762: task edges-rel-semeval, batch 62 (762): mcc: 0.6350, acc: 0.4688, precision: 0.8534, recall: 0.4929, f1: 0.6249, edges-rel-semeval_loss: 0.0919
09/16 07:59:30 AM: ***** Step 800 / Validation 8 *****
09/16 07:59:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:30 AM: Validating...
09/16 07:59:32 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:32 AM: Best result seen so far for macro.
09/16 07:59:32 AM: Updating LR scheduler:
09/16 07:59:32 AM: 	Best result seen so far for macro_avg: 0.661
09/16 07:59:32 AM: 	# validation passes without improvement: 0
09/16 07:59:32 AM: edges-rel-semeval_loss: training: 0.091169 validation: 0.084714
09/16 07:59:32 AM: macro_avg: validation: 0.661325
09/16 07:59:32 AM: micro_avg: validation: 0.000000
09/16 07:59:32 AM: edges-rel-semeval_mcc: training: 0.636487 validation: 0.665980
09/16 07:59:32 AM: edges-rel-semeval_acc: training: 0.473750 validation: 0.523934
09/16 07:59:32 AM: edges-rel-semeval_precision: training: 0.852688 validation: 0.856155
09/16 07:59:32 AM: edges-rel-semeval_recall: training: 0.495625 validation: 0.538729
09/16 07:59:32 AM: edges-rel-semeval_f1: training: 0.626877 validation: 0.661325
09/16 07:59:32 AM: Global learning rate: 0.0001
09/16 07:59:32 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 07:59:38 AM: Update 896: task edges-rel-semeval, batch 96 (896): mcc: 0.6387, acc: 0.4795, precision: 0.8451, recall: 0.5038, f1: 0.6313, edges-rel-semeval_loss: 0.0890
09/16 07:59:38 AM: ***** Step 900 / Validation 9 *****
09/16 07:59:38 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:38 AM: Validating...
09/16 07:59:41 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:41 AM: Best result seen so far for macro.
09/16 07:59:41 AM: Updating LR scheduler:
09/16 07:59:41 AM: 	Best result seen so far for macro_avg: 0.666
09/16 07:59:41 AM: 	# validation passes without improvement: 0
09/16 07:59:41 AM: edges-rel-semeval_loss: training: 0.089288 validation: 0.082541
09/16 07:59:41 AM: macro_avg: validation: 0.665959
09/16 07:59:41 AM: micro_avg: validation: 0.000000
09/16 07:59:41 AM: edges-rel-semeval_mcc: training: 0.636992 validation: 0.669589
09/16 07:59:41 AM: edges-rel-semeval_acc: training: 0.478083 validation: 0.531767
09/16 07:59:41 AM: edges-rel-semeval_precision: training: 0.843667 validation: 0.854223
09/16 07:59:41 AM: edges-rel-semeval_recall: training: 0.502050 validation: 0.545692
09/16 07:59:41 AM: edges-rel-semeval_f1: training: 0.629498 validation: 0.665959
09/16 07:59:41 AM: Global learning rate: 0.0001
09/16 07:59:41 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 07:59:46 AM: ***** Step 1000 / Validation 10 *****
09/16 07:59:46 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:46 AM: Validating...
09/16 07:59:48 AM: Evaluate: task edges-rel-semeval, batch 31 (36): mcc: 0.7033, acc: 0.5847, precision: 0.8516, recall: 0.6018, f1: 0.7053, edges-rel-semeval_loss: 0.0765
09/16 07:59:48 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:48 AM: Best result seen so far for macro.
09/16 07:59:48 AM: Updating LR scheduler:
09/16 07:59:48 AM: 	Best result seen so far for macro_avg: 0.683
09/16 07:59:48 AM: 	# validation passes without improvement: 0
09/16 07:59:48 AM: edges-rel-semeval_loss: training: 0.081458 validation: 0.079774
09/16 07:59:48 AM: macro_avg: validation: 0.683153
09/16 07:59:48 AM: micro_avg: validation: 0.000000
09/16 07:59:48 AM: edges-rel-semeval_mcc: training: 0.680186 validation: 0.681639
09/16 07:59:48 AM: edges-rel-semeval_acc: training: 0.534062 validation: 0.557006
09/16 07:59:48 AM: edges-rel-semeval_precision: training: 0.857827 validation: 0.837121
09/16 07:59:48 AM: edges-rel-semeval_recall: training: 0.560000 validation: 0.577024
09/16 07:59:48 AM: edges-rel-semeval_f1: training: 0.677633 validation: 0.683153
09/16 07:59:48 AM: Global learning rate: 0.0001
09/16 07:59:48 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 07:59:54 AM: ***** Step 1100 / Validation 11 *****
09/16 07:59:54 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:54 AM: Validating...
09/16 07:59:56 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:56 AM: Best result seen so far for macro.
09/16 07:59:56 AM: Updating LR scheduler:
09/16 07:59:56 AM: 	Best result seen so far for macro_avg: 0.690
09/16 07:59:56 AM: 	# validation passes without improvement: 0
09/16 07:59:56 AM: edges-rel-semeval_loss: training: 0.080910 validation: 0.079475
09/16 07:59:56 AM: macro_avg: validation: 0.690339
09/16 07:59:56 AM: micro_avg: validation: 0.000000
09/16 07:59:56 AM: edges-rel-semeval_mcc: training: 0.678196 validation: 0.691979
09/16 07:59:56 AM: edges-rel-semeval_acc: training: 0.534216 validation: 0.557876
09/16 07:59:56 AM: edges-rel-semeval_precision: training: 0.852687 validation: 0.862924
09/16 07:59:56 AM: edges-rel-semeval_recall: training: 0.560391 validation: 0.575283
09/16 07:59:56 AM: edges-rel-semeval_f1: training: 0.676308 validation: 0.690339
09/16 07:59:56 AM: Global learning rate: 0.0001
09/16 07:59:56 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 07:59:58 AM: Update 1126: task edges-rel-semeval, batch 26 (1126): mcc: 0.6885, acc: 0.5601, precision: 0.8411, recall: 0.5853, f1: 0.6903, edges-rel-semeval_loss: 0.0789
09/16 08:00:02 AM: ***** Step 1200 / Validation 12 *****
09/16 08:00:02 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:02 AM: Validating...
09/16 08:00:05 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:05 AM: Best result seen so far for macro.
09/16 08:00:05 AM: Updating LR scheduler:
09/16 08:00:05 AM: 	Best result seen so far for macro_avg: 0.693
09/16 08:00:05 AM: 	# validation passes without improvement: 0
09/16 08:00:05 AM: edges-rel-semeval_loss: training: 0.078443 validation: 0.076656
09/16 08:00:05 AM: macro_avg: validation: 0.692817
09/16 08:00:05 AM: micro_avg: validation: 0.000000
09/16 08:00:05 AM: edges-rel-semeval_mcc: training: 0.692317 validation: 0.689869
09/16 08:00:05 AM: edges-rel-semeval_acc: training: 0.558125 validation: 0.566580
09/16 08:00:05 AM: edges-rel-semeval_precision: training: 0.848800 validation: 0.835381
09/16 08:00:05 AM: edges-rel-semeval_recall: training: 0.585938 validation: 0.591819
09/16 08:00:05 AM: edges-rel-semeval_f1: training: 0.693289 validation: 0.692817
09/16 08:00:05 AM: Global learning rate: 0.0001
09/16 08:00:05 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:00:08 AM: Update 1246: task edges-rel-semeval, batch 46 (1246): mcc: 0.6839, acc: 0.5428, precision: 0.8416, recall: 0.5774, f1: 0.6849, edges-rel-semeval_loss: 0.0767
09/16 08:00:12 AM: ***** Step 1300 / Validation 13 *****
09/16 08:00:12 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:12 AM: Validating...
09/16 08:00:15 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:15 AM: Best result seen so far for macro.
09/16 08:00:15 AM: Updating LR scheduler:
09/16 08:00:15 AM: 	Best result seen so far for macro_avg: 0.701
09/16 08:00:15 AM: 	# validation passes without improvement: 0
09/16 08:00:15 AM: edges-rel-semeval_loss: training: 0.076749 validation: 0.075769
09/16 08:00:15 AM: macro_avg: validation: 0.700916
09/16 08:00:15 AM: micro_avg: validation: 0.000000
09/16 08:00:15 AM: edges-rel-semeval_mcc: training: 0.686019 validation: 0.698207
09/16 08:00:15 AM: edges-rel-semeval_acc: training: 0.549669 validation: 0.575283
09/16 08:00:15 AM: edges-rel-semeval_precision: training: 0.842491 validation: 0.843329
09/16 08:00:15 AM: edges-rel-semeval_recall: training: 0.580259 validation: 0.599652
09/16 08:00:15 AM: edges-rel-semeval_f1: training: 0.687208 validation: 0.700916
09/16 08:00:15 AM: Global learning rate: 0.0001
09/16 08:00:15 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:00:18 AM: Update 1346: task edges-rel-semeval, batch 46 (1346): mcc: 0.6954, acc: 0.5611, precision: 0.8370, recall: 0.5999, f1: 0.6989, edges-rel-semeval_loss: 0.0762
09/16 08:00:21 AM: ***** Step 1400 / Validation 14 *****
09/16 08:00:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:21 AM: Validating...
09/16 08:00:24 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:24 AM: Best result seen so far for macro.
09/16 08:00:24 AM: Updating LR scheduler:
09/16 08:00:24 AM: 	Best result seen so far for macro_avg: 0.709
09/16 08:00:24 AM: 	# validation passes without improvement: 0
09/16 08:00:24 AM: edges-rel-semeval_loss: training: 0.073749 validation: 0.075090
09/16 08:00:24 AM: macro_avg: validation: 0.709480
09/16 08:00:24 AM: micro_avg: validation: 0.000000
09/16 08:00:24 AM: edges-rel-semeval_mcc: training: 0.711353 validation: 0.707668
09/16 08:00:24 AM: edges-rel-semeval_acc: training: 0.576250 validation: 0.588338
09/16 08:00:24 AM: edges-rel-semeval_precision: training: 0.853542 validation: 0.856089
09/16 08:00:24 AM: edges-rel-semeval_recall: training: 0.613750 validation: 0.605744
09/16 08:00:24 AM: edges-rel-semeval_f1: training: 0.714052 validation: 0.709480
09/16 08:00:24 AM: Global learning rate: 0.0001
09/16 08:00:24 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:00:28 AM: Update 1465: task edges-rel-semeval, batch 65 (1465): mcc: 0.7107, acc: 0.5774, precision: 0.8480, recall: 0.6168, f1: 0.7142, edges-rel-semeval_loss: 0.0726
09/16 08:00:30 AM: ***** Step 1500 / Validation 15 *****
09/16 08:00:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:30 AM: Validating...
09/16 08:00:33 AM: Updating LR scheduler:
09/16 08:00:33 AM: 	Best result seen so far for macro_avg: 0.709
09/16 08:00:33 AM: 	# validation passes without improvement: 1
09/16 08:00:33 AM: edges-rel-semeval_loss: training: 0.072118 validation: 0.073834
09/16 08:00:33 AM: macro_avg: validation: 0.703570
09/16 08:00:33 AM: micro_avg: validation: 0.000000
09/16 08:00:33 AM: edges-rel-semeval_mcc: training: 0.714776 validation: 0.704184
09/16 08:00:33 AM: edges-rel-semeval_acc: training: 0.581562 validation: 0.577023
09/16 08:00:33 AM: edges-rel-semeval_precision: training: 0.851995 validation: 0.867347
09/16 08:00:33 AM: edges-rel-semeval_recall: training: 0.620625 validation: 0.591819
09/16 08:00:33 AM: edges-rel-semeval_f1: training: 0.718134 validation: 0.703570
09/16 08:00:33 AM: Global learning rate: 0.0001
09/16 08:00:33 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:00:38 AM: Update 1585: task edges-rel-semeval, batch 85 (1585): mcc: 0.7232, acc: 0.5931, precision: 0.8548, recall: 0.6325, f1: 0.7270, edges-rel-semeval_loss: 0.0705
09/16 08:00:39 AM: ***** Step 1600 / Validation 16 *****
09/16 08:00:39 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:39 AM: Validating...
09/16 08:00:41 AM: Updating LR scheduler:
09/16 08:00:41 AM: 	Best result seen so far for macro_avg: 0.709
09/16 08:00:41 AM: 	# validation passes without improvement: 2
09/16 08:00:41 AM: edges-rel-semeval_loss: training: 0.069893 validation: 0.073885
09/16 08:00:41 AM: macro_avg: validation: 0.703206
09/16 08:00:41 AM: micro_avg: validation: 0.000000
09/16 08:00:41 AM: edges-rel-semeval_mcc: training: 0.727391 validation: 0.703694
09/16 08:00:41 AM: edges-rel-semeval_acc: training: 0.600126 validation: 0.579634
09/16 08:00:41 AM: edges-rel-semeval_precision: training: 0.856538 validation: 0.866242
09/16 08:00:41 AM: edges-rel-semeval_recall: training: 0.638284 validation: 0.591819
09/16 08:00:41 AM: edges-rel-semeval_f1: training: 0.731478 validation: 0.703206
09/16 08:00:41 AM: Global learning rate: 0.0001
09/16 08:00:41 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:00:46 AM: ***** Step 1700 / Validation 17 *****
09/16 08:00:46 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:46 AM: Validating...
09/16 08:00:48 AM: Evaluate: task edges-rel-semeval, batch 23 (36): mcc: 0.7357, acc: 0.6399, precision: 0.8367, recall: 0.6685, f1: 0.7432, edges-rel-semeval_loss: 0.0684
09/16 08:00:49 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:49 AM: Best result seen so far for macro.
09/16 08:00:49 AM: Updating LR scheduler:
09/16 08:00:49 AM: 	Best result seen so far for macro_avg: 0.715
09/16 08:00:49 AM: 	# validation passes without improvement: 0
09/16 08:00:49 AM: edges-rel-semeval_loss: training: 0.070482 validation: 0.072288
09/16 08:00:49 AM: macro_avg: validation: 0.714780
09/16 08:00:49 AM: micro_avg: validation: 0.000000
09/16 08:00:49 AM: edges-rel-semeval_mcc: training: 0.719860 validation: 0.708412
09/16 08:00:49 AM: edges-rel-semeval_acc: training: 0.589688 validation: 0.596171
09/16 08:00:49 AM: edges-rel-semeval_precision: training: 0.847280 validation: 0.827231
09/16 08:00:49 AM: edges-rel-semeval_recall: training: 0.632812 validation: 0.629243
09/16 08:00:49 AM: edges-rel-semeval_f1: training: 0.724508 validation: 0.714780
09/16 08:00:49 AM: Global learning rate: 0.0001
09/16 08:00:49 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:00:55 AM: ***** Step 1800 / Validation 18 *****
09/16 08:00:55 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:55 AM: Validating...
09/16 08:00:57 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:57 AM: Best result seen so far for macro.
09/16 08:00:57 AM: Updating LR scheduler:
09/16 08:00:57 AM: 	Best result seen so far for macro_avg: 0.726
09/16 08:00:57 AM: 	# validation passes without improvement: 0
09/16 08:00:57 AM: edges-rel-semeval_loss: training: 0.068141 validation: 0.071965
09/16 08:00:57 AM: macro_avg: validation: 0.725664
09/16 08:00:57 AM: micro_avg: validation: 0.000000
09/16 08:00:57 AM: edges-rel-semeval_mcc: training: 0.732067 validation: 0.719180
09/16 08:00:57 AM: edges-rel-semeval_acc: training: 0.602964 validation: 0.610966
09/16 08:00:57 AM: edges-rel-semeval_precision: training: 0.852588 validation: 0.833898
09/16 08:00:57 AM: edges-rel-semeval_recall: training: 0.649322 validation: 0.642298
09/16 08:00:57 AM: edges-rel-semeval_f1: training: 0.737200 validation: 0.725664
09/16 08:00:57 AM: Global learning rate: 0.0001
09/16 08:00:57 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:00:58 AM: Update 1815: task edges-rel-semeval, batch 15 (1815): mcc: 0.7449, acc: 0.6250, precision: 0.8482, recall: 0.6750, f1: 0.7517, edges-rel-semeval_loss: 0.0685
09/16 08:01:02 AM: ***** Step 1900 / Validation 19 *****
09/16 08:01:02 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:02 AM: Validating...
09/16 08:01:05 AM: Updating LR scheduler:
09/16 08:01:05 AM: 	Best result seen so far for macro_avg: 0.726
09/16 08:01:05 AM: 	# validation passes without improvement: 1
09/16 08:01:05 AM: edges-rel-semeval_loss: training: 0.067368 validation: 0.071554
09/16 08:01:05 AM: macro_avg: validation: 0.704312
09/16 08:01:05 AM: micro_avg: validation: 0.000000
09/16 08:01:05 AM: edges-rel-semeval_mcc: training: 0.737329 validation: 0.703484
09/16 08:01:05 AM: edges-rel-semeval_acc: training: 0.610313 validation: 0.576153
09/16 08:01:05 AM: edges-rel-semeval_precision: training: 0.854760 validation: 0.858573
09/16 08:01:05 AM: edges-rel-semeval_recall: training: 0.656563 validation: 0.597041
09/16 08:01:05 AM: edges-rel-semeval_f1: training: 0.742665 validation: 0.704312
09/16 08:01:05 AM: Global learning rate: 0.0001
09/16 08:01:05 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:01:08 AM: Update 1948: task edges-rel-semeval, batch 48 (1948): mcc: 0.7538, acc: 0.6231, precision: 0.8703, recall: 0.6722, f1: 0.7585, edges-rel-semeval_loss: 0.0653
09/16 08:01:11 AM: ***** Step 2000 / Validation 20 *****
09/16 08:01:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:11 AM: Validating...
09/16 08:01:13 AM: Updating LR scheduler:
09/16 08:01:13 AM: 	Best result seen so far for macro_avg: 0.726
09/16 08:01:13 AM: 	# validation passes without improvement: 2
09/16 08:01:13 AM: edges-rel-semeval_loss: training: 0.064608 validation: 0.072530
09/16 08:01:13 AM: macro_avg: validation: 0.721378
09/16 08:01:13 AM: micro_avg: validation: 0.000000
09/16 08:01:13 AM: edges-rel-semeval_mcc: training: 0.753992 validation: 0.719236
09/16 08:01:13 AM: edges-rel-semeval_acc: training: 0.630716 validation: 0.597041
09/16 08:01:13 AM: edges-rel-semeval_precision: training: 0.867450 validation: 0.863030
09/16 08:01:13 AM: edges-rel-semeval_recall: training: 0.674866 validation: 0.619669
09/16 08:01:13 AM: edges-rel-semeval_f1: training: 0.759134 validation: 0.721378
09/16 08:01:13 AM: Global learning rate: 0.0001
09/16 08:01:13 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:01:18 AM: ***** Step 2100 / Validation 21 *****
09/16 08:01:18 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:18 AM: Validating...
09/16 08:01:18 AM: Evaluate: task edges-rel-semeval, batch 1 (36): mcc: 0.7088, acc: 0.5625, precision: 0.8333, recall: 0.6250, f1: 0.7143, edges-rel-semeval_loss: 0.0546
09/16 08:01:20 AM: Updating LR scheduler:
09/16 08:01:20 AM: 	Best result seen so far for macro_avg: 0.726
09/16 08:01:20 AM: 	# validation passes without improvement: 3
09/16 08:01:20 AM: edges-rel-semeval_loss: training: 0.064269 validation: 0.071034
09/16 08:01:20 AM: macro_avg: validation: 0.721135
09/16 08:01:20 AM: micro_avg: validation: 0.000000
09/16 08:01:20 AM: edges-rel-semeval_mcc: training: 0.744078 validation: 0.713743
09/16 08:01:20 AM: edges-rel-semeval_acc: training: 0.625938 validation: 0.599652
09/16 08:01:20 AM: edges-rel-semeval_precision: training: 0.852485 validation: 0.823464
09/16 08:01:20 AM: edges-rel-semeval_recall: training: 0.670000 validation: 0.641427
09/16 08:01:20 AM: edges-rel-semeval_f1: training: 0.750306 validation: 0.721135
09/16 08:01:20 AM: Global learning rate: 0.0001
09/16 08:01:20 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:01:25 AM: ***** Step 2200 / Validation 22 *****
09/16 08:01:25 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:25 AM: Validating...
09/16 08:01:27 AM: Updating LR scheduler:
09/16 08:01:27 AM: 	Best result seen so far for macro_avg: 0.726
09/16 08:01:27 AM: 	# validation passes without improvement: 0
09/16 08:01:27 AM: edges-rel-semeval_loss: training: 0.063668 validation: 0.070293
09/16 08:01:27 AM: macro_avg: validation: 0.715373
09/16 08:01:27 AM: micro_avg: validation: 0.000000
09/16 08:01:27 AM: edges-rel-semeval_mcc: training: 0.752977 validation: 0.713122
09/16 08:01:27 AM: edges-rel-semeval_acc: training: 0.631347 validation: 0.585727
09/16 08:01:27 AM: edges-rel-semeval_precision: training: 0.862595 validation: 0.857664
09/16 08:01:27 AM: edges-rel-semeval_recall: training: 0.677073 validation: 0.613577
09/16 08:01:27 AM: edges-rel-semeval_f1: training: 0.758657 validation: 0.715373
09/16 08:01:27 AM: Global learning rate: 5e-05
09/16 08:01:27 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:01:28 AM: Update 2220: task edges-rel-semeval, batch 20 (2220): mcc: 0.7648, acc: 0.6484, precision: 0.8748, recall: 0.6875, f1: 0.7699, edges-rel-semeval_loss: 0.0634
09/16 08:01:32 AM: ***** Step 2300 / Validation 23 *****
09/16 08:01:32 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:32 AM: Validating...
09/16 08:01:35 AM: Best result seen so far for edges-rel-semeval.
09/16 08:01:35 AM: Best result seen so far for macro.
09/16 08:01:35 AM: Updating LR scheduler:
09/16 08:01:35 AM: 	Best result seen so far for macro_avg: 0.733
09/16 08:01:35 AM: 	# validation passes without improvement: 0
09/16 08:01:35 AM: edges-rel-semeval_loss: training: 0.062380 validation: 0.069108
09/16 08:01:35 AM: macro_avg: validation: 0.733268
09/16 08:01:35 AM: micro_avg: validation: 0.000000
09/16 08:01:35 AM: edges-rel-semeval_mcc: training: 0.765402 validation: 0.727358
09/16 08:01:35 AM: edges-rel-semeval_acc: training: 0.649375 validation: 0.616188
09/16 08:01:35 AM: edges-rel-semeval_precision: training: 0.873368 validation: 0.843715
09/16 08:01:35 AM: edges-rel-semeval_recall: training: 0.689687 validation: 0.648390
09/16 08:01:35 AM: edges-rel-semeval_f1: training: 0.770735 validation: 0.733268
09/16 08:01:35 AM: Global learning rate: 5e-05
09/16 08:01:35 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:01:39 AM: Update 2366: task edges-rel-semeval, batch 66 (2366): mcc: 0.7707, acc: 0.6534, precision: 0.8739, recall: 0.6985, f1: 0.7764, edges-rel-semeval_loss: 0.0594
09/16 08:01:40 AM: ***** Step 2400 / Validation 24 *****
09/16 08:01:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:40 AM: Validating...
09/16 08:01:43 AM: Updating LR scheduler:
09/16 08:01:43 AM: 	Best result seen so far for macro_avg: 0.733
09/16 08:01:43 AM: 	# validation passes without improvement: 1
09/16 08:01:43 AM: edges-rel-semeval_loss: training: 0.058711 validation: 0.069699
09/16 08:01:43 AM: macro_avg: validation: 0.724900
09/16 08:01:43 AM: micro_avg: validation: 0.000000
09/16 08:01:43 AM: edges-rel-semeval_mcc: training: 0.771349 validation: 0.721459
09/16 08:01:43 AM: edges-rel-semeval_acc: training: 0.656260 validation: 0.601393
09/16 08:01:43 AM: edges-rel-semeval_precision: training: 0.870602 validation: 0.856465
09/16 08:01:43 AM: edges-rel-semeval_recall: training: 0.702302 validation: 0.628372
09/16 08:01:43 AM: edges-rel-semeval_f1: training: 0.777448 validation: 0.724900
09/16 08:01:43 AM: Global learning rate: 5e-05
09/16 08:01:43 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:01:48 AM: ***** Step 2500 / Validation 25 *****
09/16 08:01:48 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:48 AM: Validating...
09/16 08:01:49 AM: Evaluate: task edges-rel-semeval, batch 11 (36): mcc: 0.7624, acc: 0.6648, precision: 0.8732, recall: 0.6847, f1: 0.7675, edges-rel-semeval_loss: 0.0638
09/16 08:01:51 AM: Best result seen so far for edges-rel-semeval.
09/16 08:01:51 AM: Best result seen so far for macro.
09/16 08:01:51 AM: Updating LR scheduler:
09/16 08:01:51 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:01:51 AM: 	# validation passes without improvement: 0
09/16 08:01:51 AM: edges-rel-semeval_loss: training: 0.059296 validation: 0.068730
09/16 08:01:51 AM: macro_avg: validation: 0.740079
09/16 08:01:51 AM: micro_avg: validation: 0.000000
09/16 08:01:51 AM: edges-rel-semeval_mcc: training: 0.771200 validation: 0.735694
09/16 08:01:51 AM: edges-rel-semeval_acc: training: 0.657500 validation: 0.622280
09/16 08:01:51 AM: edges-rel-semeval_precision: training: 0.869683 validation: 0.860438
09/16 08:01:51 AM: edges-rel-semeval_recall: training: 0.702812 validation: 0.649260
09/16 08:01:51 AM: edges-rel-semeval_f1: training: 0.777394 validation: 0.740079
09/16 08:01:51 AM: Global learning rate: 5e-05
09/16 08:01:51 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:01:56 AM: ***** Step 2600 / Validation 26 *****
09/16 08:01:56 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:56 AM: Validating...
09/16 08:01:59 AM: Evaluate: task edges-rel-semeval, batch 34 (36): mcc: 0.7351, acc: 0.6241, precision: 0.8608, recall: 0.6480, f1: 0.7394, edges-rel-semeval_loss: 0.0665
09/16 08:01:59 AM: Updating LR scheduler:
09/16 08:01:59 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:01:59 AM: 	# validation passes without improvement: 1
09/16 08:01:59 AM: edges-rel-semeval_loss: training: 0.059227 validation: 0.069225
09/16 08:01:59 AM: macro_avg: validation: 0.728088
09/16 08:01:59 AM: micro_avg: validation: 0.000000
09/16 08:01:59 AM: edges-rel-semeval_mcc: training: 0.769252 validation: 0.723589
09/16 08:01:59 AM: edges-rel-semeval_acc: training: 0.656891 validation: 0.610096
09/16 08:01:59 AM: edges-rel-semeval_precision: training: 0.871896 validation: 0.850990
09/16 08:01:59 AM: edges-rel-semeval_recall: training: 0.697572 validation: 0.636205
09/16 08:01:59 AM: edges-rel-semeval_f1: training: 0.775053 validation: 0.728088
09/16 08:01:59 AM: Global learning rate: 5e-05
09/16 08:01:59 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:02:04 AM: ***** Step 2700 / Validation 27 *****
09/16 08:02:04 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:04 AM: Validating...
09/16 08:02:06 AM: Updating LR scheduler:
09/16 08:02:06 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:02:06 AM: 	# validation passes without improvement: 2
09/16 08:02:06 AM: edges-rel-semeval_loss: training: 0.058470 validation: 0.069864
09/16 08:02:06 AM: macro_avg: validation: 0.721095
09/16 08:02:06 AM: micro_avg: validation: 0.000000
09/16 08:02:06 AM: edges-rel-semeval_mcc: training: 0.780778 validation: 0.719111
09/16 08:02:06 AM: edges-rel-semeval_acc: training: 0.669063 validation: 0.600522
09/16 08:02:06 AM: edges-rel-semeval_precision: training: 0.880666 validation: 0.863913
09/16 08:02:06 AM: edges-rel-semeval_recall: training: 0.710312 validation: 0.618799
09/16 08:02:06 AM: edges-rel-semeval_f1: training: 0.786369 validation: 0.721095
09/16 08:02:06 AM: Global learning rate: 5e-05
09/16 08:02:06 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:02:09 AM: Update 2744: task edges-rel-semeval, batch 44 (2744): mcc: 0.7834, acc: 0.6754, precision: 0.8837, recall: 0.7124, f1: 0.7888, edges-rel-semeval_loss: 0.0591
09/16 08:02:12 AM: ***** Step 2800 / Validation 28 *****
09/16 08:02:12 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:12 AM: Validating...
09/16 08:02:15 AM: Updating LR scheduler:
09/16 08:02:15 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:02:15 AM: 	# validation passes without improvement: 3
09/16 08:02:15 AM: edges-rel-semeval_loss: training: 0.058832 validation: 0.068882
09/16 08:02:15 AM: macro_avg: validation: 0.735452
09/16 08:02:15 AM: micro_avg: validation: 0.000000
09/16 08:02:15 AM: edges-rel-semeval_mcc: training: 0.776948 validation: 0.728817
09/16 08:02:15 AM: edges-rel-semeval_acc: training: 0.665721 validation: 0.615318
09/16 08:02:15 AM: edges-rel-semeval_precision: training: 0.880774 validation: 0.839286
09/16 08:02:15 AM: edges-rel-semeval_recall: training: 0.703564 validation: 0.654482
09/16 08:02:15 AM: edges-rel-semeval_f1: training: 0.782258 validation: 0.735452
09/16 08:02:15 AM: Global learning rate: 5e-05
09/16 08:02:15 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:02:19 AM: Update 2880: task edges-rel-semeval, batch 80 (2880): mcc: 0.7870, acc: 0.6719, precision: 0.8804, recall: 0.7215, f1: 0.7930, edges-rel-semeval_loss: 0.0559
09/16 08:02:20 AM: ***** Step 2900 / Validation 29 *****
09/16 08:02:20 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:20 AM: Validating...
09/16 08:02:22 AM: Updating LR scheduler:
09/16 08:02:22 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:02:22 AM: 	# validation passes without improvement: 0
09/16 08:02:22 AM: edges-rel-semeval_loss: training: 0.056227 validation: 0.069184
09/16 08:02:22 AM: macro_avg: validation: 0.736893
09/16 08:02:22 AM: micro_avg: validation: 0.000000
09/16 08:02:22 AM: edges-rel-semeval_mcc: training: 0.785603 validation: 0.729422
09/16 08:02:22 AM: edges-rel-semeval_acc: training: 0.671250 validation: 0.622280
09/16 08:02:22 AM: edges-rel-semeval_precision: training: 0.881766 validation: 0.833150
09/16 08:02:22 AM: edges-rel-semeval_recall: training: 0.717812 validation: 0.660574
09/16 08:02:22 AM: edges-rel-semeval_f1: training: 0.791387 validation: 0.736893
09/16 08:02:22 AM: Global learning rate: 2.5e-05
09/16 08:02:22 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:02:28 AM: ***** Step 3000 / Validation 30 *****
09/16 08:02:28 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:28 AM: Validating...
09/16 08:02:29 AM: Evaluate: task edges-rel-semeval, batch 18 (36): mcc: 0.7675, acc: 0.6736, precision: 0.8617, recall: 0.7031, f1: 0.7744, edges-rel-semeval_loss: 0.0609
09/16 08:02:30 AM: Updating LR scheduler:
09/16 08:02:30 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:02:30 AM: 	# validation passes without improvement: 1
09/16 08:02:30 AM: edges-rel-semeval_loss: training: 0.058775 validation: 0.068397
09/16 08:02:30 AM: macro_avg: validation: 0.739216
09/16 08:02:30 AM: micro_avg: validation: 0.000000
09/16 08:02:30 AM: edges-rel-semeval_mcc: training: 0.776797 validation: 0.733119
09/16 08:02:30 AM: edges-rel-semeval_acc: training: 0.665937 validation: 0.622280
09/16 08:02:30 AM: edges-rel-semeval_precision: training: 0.870179 validation: 0.846240
09/16 08:02:30 AM: edges-rel-semeval_recall: training: 0.712188 validation: 0.656223
09/16 08:02:30 AM: edges-rel-semeval_f1: training: 0.783296 validation: 0.739216
09/16 08:02:30 AM: Global learning rate: 2.5e-05
09/16 08:02:30 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:02:36 AM: ***** Step 3100 / Validation 31 *****
09/16 08:02:36 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:36 AM: Validating...
09/16 08:02:39 AM: Updating LR scheduler:
09/16 08:02:39 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:02:39 AM: 	# validation passes without improvement: 2
09/16 08:02:39 AM: edges-rel-semeval_loss: training: 0.057512 validation: 0.068526
09/16 08:02:39 AM: macro_avg: validation: 0.737673
09/16 08:02:39 AM: micro_avg: validation: 0.000000
09/16 08:02:39 AM: edges-rel-semeval_mcc: training: 0.775527 validation: 0.732292
09/16 08:02:39 AM: edges-rel-semeval_acc: training: 0.662252 validation: 0.616188
09/16 08:02:39 AM: edges-rel-semeval_precision: training: 0.871030 validation: 0.850967
09/16 08:02:39 AM: edges-rel-semeval_recall: training: 0.709240 validation: 0.651001
09/16 08:02:39 AM: edges-rel-semeval_f1: training: 0.781853 validation: 0.737673
09/16 08:02:39 AM: Global learning rate: 2.5e-05
09/16 08:02:39 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:02:39 AM: Update 3103: task edges-rel-semeval, batch 3 (3103): mcc: 0.8511, acc: 0.7604, precision: 0.9070, recall: 0.8125, f1: 0.8571, edges-rel-semeval_loss: 0.0536
09/16 08:02:44 AM: ***** Step 3200 / Validation 32 *****
09/16 08:02:44 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:44 AM: Validating...
09/16 08:02:46 AM: Updating LR scheduler:
09/16 08:02:46 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:02:46 AM: 	# validation passes without improvement: 3
09/16 08:02:46 AM: edges-rel-semeval_loss: training: 0.056499 validation: 0.068200
09/16 08:02:46 AM: macro_avg: validation: 0.735034
09/16 08:02:46 AM: micro_avg: validation: 0.000000
09/16 08:02:46 AM: edges-rel-semeval_mcc: training: 0.785381 validation: 0.728827
09/16 08:02:46 AM: edges-rel-semeval_acc: training: 0.676562 validation: 0.619669
09/16 08:02:46 AM: edges-rel-semeval_precision: training: 0.883533 validation: 0.842520
09/16 08:02:46 AM: edges-rel-semeval_recall: training: 0.715937 validation: 0.651871
09/16 08:02:46 AM: edges-rel-semeval_f1: training: 0.790955 validation: 0.735034
09/16 08:02:46 AM: Global learning rate: 2.5e-05
09/16 08:02:46 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:02:49 AM: Update 3238: task edges-rel-semeval, batch 38 (3238): mcc: 0.7754, acc: 0.6613, precision: 0.8676, recall: 0.7119, f1: 0.7820, edges-rel-semeval_loss: 0.0570
09/16 08:02:52 AM: ***** Step 3300 / Validation 33 *****
09/16 08:02:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:52 AM: Validating...
09/16 08:02:55 AM: Updating LR scheduler:
09/16 08:02:55 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:02:55 AM: 	# validation passes without improvement: 0
09/16 08:02:55 AM: edges-rel-semeval_loss: training: 0.056633 validation: 0.067894
09/16 08:02:55 AM: macro_avg: validation: 0.737713
09/16 08:02:55 AM: micro_avg: validation: 0.000000
09/16 08:02:55 AM: edges-rel-semeval_mcc: training: 0.779276 validation: 0.730587
09/16 08:02:55 AM: edges-rel-semeval_acc: training: 0.666982 validation: 0.623151
09/16 08:02:55 AM: edges-rel-semeval_precision: training: 0.872832 validation: 0.836645
09/16 08:02:55 AM: edges-rel-semeval_recall: training: 0.714286 validation: 0.659704
09/16 08:02:55 AM: edges-rel-semeval_f1: training: 0.785640 validation: 0.737713
09/16 08:02:55 AM: Global learning rate: 1.25e-05
09/16 08:02:55 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:02:59 AM: Update 3383: task edges-rel-semeval, batch 83 (3383): mcc: 0.7881, acc: 0.6762, precision: 0.8800, recall: 0.7236, f1: 0.7942, edges-rel-semeval_loss: 0.0570
09/16 08:03:00 AM: ***** Step 3400 / Validation 34 *****
09/16 08:03:00 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:03:00 AM: Validating...
09/16 08:03:02 AM: Updating LR scheduler:
09/16 08:03:02 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:03:02 AM: 	# validation passes without improvement: 1
09/16 08:03:02 AM: edges-rel-semeval_loss: training: 0.057091 validation: 0.068127
09/16 08:03:02 AM: macro_avg: validation: 0.730348
09/16 08:03:02 AM: micro_avg: validation: 0.000000
09/16 08:03:02 AM: edges-rel-semeval_mcc: training: 0.788221 validation: 0.725833
09/16 08:03:02 AM: edges-rel-semeval_acc: training: 0.677188 validation: 0.614447
09/16 08:03:02 AM: edges-rel-semeval_precision: training: 0.879075 validation: 0.852497
09/16 08:03:02 AM: edges-rel-semeval_recall: training: 0.724688 validation: 0.638816
09/16 08:03:02 AM: edges-rel-semeval_f1: training: 0.794450 validation: 0.730348
09/16 08:03:02 AM: Global learning rate: 1.25e-05
09/16 08:03:02 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:03:08 AM: ***** Step 3500 / Validation 35 *****
09/16 08:03:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:03:08 AM: Validating...
09/16 08:03:09 AM: Evaluate: task edges-rel-semeval, batch 14 (36): mcc: 0.7543, acc: 0.6562, precision: 0.8636, recall: 0.6786, f1: 0.7600, edges-rel-semeval_loss: 0.0619
09/16 08:03:10 AM: Updating LR scheduler:
09/16 08:03:10 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:03:10 AM: 	# validation passes without improvement: 2
09/16 08:03:10 AM: Ran out of early stopping patience. Stopping training.
09/16 08:03:10 AM: edges-rel-semeval_loss: training: 0.055863 validation: 0.068247
09/16 08:03:10 AM: macro_avg: validation: 0.735644
09/16 08:03:10 AM: micro_avg: validation: 0.000000
09/16 08:03:10 AM: edges-rel-semeval_mcc: training: 0.779480 validation: 0.730708
09/16 08:03:10 AM: edges-rel-semeval_acc: training: 0.669505 validation: 0.618799
09/16 08:03:10 AM: edges-rel-semeval_precision: training: 0.872881 validation: 0.853042
09/16 08:03:10 AM: edges-rel-semeval_recall: training: 0.714601 validation: 0.646649
09/16 08:03:10 AM: edges-rel-semeval_f1: training: 0.785851 validation: 0.735644
09/16 08:03:10 AM: Global learning rate: 1.25e-05
09/16 08:03:10 AM: Saving checkpoints to: ./experiments/rel-semeval-mrpc-top/run
09/16 08:03:11 AM: Stopped training after 35 validation checks
09/16 08:03:11 AM: Trained edges-rel-semeval for 3500 batches or 16.279 epochs
09/16 08:03:11 AM: ***** VALIDATION RESULTS *****
09/16 08:03:11 AM: edges-rel-semeval_f1 (for best val pass 25): edges-rel-semeval_loss: 0.06873, macro_avg: 0.74008, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.73569, edges-rel-semeval_acc: 0.62228, edges-rel-semeval_precision: 0.86044, edges-rel-semeval_recall: 0.64926, edges-rel-semeval_f1: 0.74008
09/16 08:03:11 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.18032, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 08:03:11 AM: macro_avg (for best val pass 25): edges-rel-semeval_loss: 0.06873, macro_avg: 0.74008, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.73569, edges-rel-semeval_acc: 0.62228, edges-rel-semeval_precision: 0.86044, edges-rel-semeval_recall: 0.64926, edges-rel-semeval_f1: 0.74008
09/16 08:03:11 AM: Evaluating...
09/16 08:03:11 AM: Loaded model state from ./experiments/rel-semeval-mrpc-top/run/edges-rel-semeval/model_state_target_train_val_25.best.th
09/16 08:03:11 AM: Evaluating on: edges-rel-semeval, split: val
09/16 08:03:13 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:03:13 AM: Finished evaluating on: edges-rel-semeval
09/16 08:03:13 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 08:03:13 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-mrpc-top/run
09/16 08:03:13 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-mrpc-top/run
09/16 08:03:13 AM: Evaluating on: edges-rel-semeval, split: test
09/16 08:03:20 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:03:20 AM: Finished evaluating on: edges-rel-semeval
09/16 08:03:20 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 08:03:20 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-mrpc-top/run
09/16 08:03:20 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-mrpc-top/run
09/16 08:03:20 AM: Writing results for split 'val' to ./experiments/rel-semeval-mrpc-top/results.tsv
09/16 08:03:20 AM: micro_avg: 0.000, macro_avg: 0.740, edges-rel-semeval_mcc: 0.736, edges-rel-semeval_acc: 0.622, edges-rel-semeval_precision: 0.860, edges-rel-semeval_recall: 0.649, edges-rel-semeval_f1: 0.740
09/16 08:03:20 AM: Done!
09/16 08:03:20 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
