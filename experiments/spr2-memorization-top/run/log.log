09/16 08:42:05 AM: Git branch: master
09/16 08:42:05 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:42:06 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-memorization-top/",
  "exp_name": "experiments/spr2-memorization-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-memorization-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/memorization",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/spr2-memorization-top__run",
  "run_dir": "./experiments/spr2-memorization-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:42:06 AM: Saved config to ./experiments/spr2-memorization-top/run/params.conf
09/16 08:42:06 AM: Using random seed 1234
09/16 08:42:07 AM: Using GPU 0
09/16 08:42:07 AM: Loading tasks...
09/16 08:42:07 AM: Writing pre-preprocessed tasks to ./experiments/spr2-memorization-top/
09/16 08:42:07 AM: 	Creating task edges-spr2 from scratch.
09/16 08:42:07 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:42:07 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:42:07 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:42:07 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:42:07 AM: 	Finished loading tasks: edges-spr2.
09/16 08:42:07 AM: 	Building vocab from scratch.
09/16 08:42:07 AM: 	Counting units for task edges-spr2.
09/16 08:42:07 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:42:08 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:08 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:42:09 AM: 	Saved vocab to ./experiments/spr2-memorization-top/vocab
09/16 08:42:09 AM: Loading token dictionary from ./experiments/spr2-memorization-top/vocab.
09/16 08:42:09 AM: 	Loaded vocab from ./experiments/spr2-memorization-top/vocab
09/16 08:42:09 AM: 	Vocab namespace tokens: size 7943
09/16 08:42:09 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:42:09 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:42:09 AM: 	Vocab namespace chars: size 65
09/16 08:42:09 AM: 	Finished building vocab.
09/16 08:42:09 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:42:09 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-memorization-top/preproc/edges-spr2__train_data
09/16 08:42:09 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:42:09 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-memorization-top/preproc/edges-spr2__val_data
09/16 08:42:09 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:42:10 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-memorization-top/preproc/edges-spr2__test_data
09/16 08:42:10 AM: 	Finished indexing tasks
09/16 08:42:10 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:42:10 AM: 	  Training on 
09/16 08:42:10 AM: 	  Evaluating on edges-spr2
09/16 08:42:10 AM: 	Finished loading tasks in 2.505s
09/16 08:42:10 AM: 	 Tasks: ['edges-spr2']
09/16 08:42:10 AM: Building model...
09/16 08:42:10 AM: Using BERT model (bert-base-uncased).
09/16 08:42:10 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:42:10 AM: models/memorization
09/16 08:42:10 AM: loading configuration file models/memorization/config.json
09/16 08:42:10 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "random-memorization",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:42:10 AM: loading weights file models/memorization/pytorch_model.bin
09/16 08:42:20 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpoefawykz
09/16 08:42:22 AM: copying /tmp/tmpoefawykz to cache at ./experiments/spr2-memorization-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:22 AM: creating metadata file for ./experiments/spr2-memorization-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:22 AM: removing temp file /tmp/tmpoefawykz
09/16 08:42:22 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-memorization-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:42:22 AM: Initializing parameters
09/16 08:42:22 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:42:22 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:42:22 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:42:22 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:42:22 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:42:22 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:42:22 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:42:28 AM: Model specification:
09/16 08:42:28 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:42:28 AM: Model parameters:
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:42:28 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:42:28 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:42:28 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:28 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:42:28 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:28 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:42:28 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:28 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:28 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:42:28 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:42:28 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:42:28 AM: Total number of parameters: 110144020 (1.10144e+08)
09/16 08:42:28 AM: Number of trainable parameters: 661780 (661780)
09/16 08:42:28 AM: Finished building model in 18.756s
09/16 08:42:28 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:42:29 AM: patience = 9
09/16 08:42:29 AM: val_interval = 100
09/16 08:42:29 AM: max_vals = 100
09/16 08:42:29 AM: cuda_device = 0
09/16 08:42:29 AM: grad_norm = 5.0
09/16 08:42:29 AM: grad_clipping = None
09/16 08:42:29 AM: lr_decay = 0.99
09/16 08:42:29 AM: min_lr = 1e-06
09/16 08:42:29 AM: keep_all_checkpoints = 0
09/16 08:42:29 AM: val_data_limit = 5000
09/16 08:42:29 AM: max_epochs = -1
09/16 08:42:29 AM: dec_val_scale = 250
09/16 08:42:29 AM: training_data_fraction = 1
09/16 08:42:29 AM: type = adam
09/16 08:42:29 AM: parameter_groups = None
09/16 08:42:29 AM: Number of trainable parameters: 661780
09/16 08:42:29 AM: infer_type_and_cast = True
09/16 08:42:29 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:29 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:29 AM: lr = 0.0001
09/16 08:42:29 AM: amsgrad = True
09/16 08:42:29 AM: type = reduce_on_plateau
09/16 08:42:29 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:29 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:29 AM: mode = max
09/16 08:42:29 AM: factor = 0.5
09/16 08:42:29 AM: patience = 3
09/16 08:42:29 AM: threshold = 0.0001
09/16 08:42:29 AM: threshold_mode = abs
09/16 08:42:29 AM: verbose = True
09/16 08:42:29 AM: type = adam
09/16 08:42:29 AM: parameter_groups = None
09/16 08:42:29 AM: Number of trainable parameters: 661780
09/16 08:42:29 AM: infer_type_and_cast = True
09/16 08:42:29 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:29 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:29 AM: lr = 0.0001
09/16 08:42:29 AM: amsgrad = True
09/16 08:42:29 AM: type = reduce_on_plateau
09/16 08:42:29 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:42:29 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:42:29 AM: mode = max
09/16 08:42:29 AM: factor = 0.5
09/16 08:42:29 AM: patience = 3
09/16 08:42:29 AM: threshold = 0.0001
09/16 08:42:29 AM: threshold_mode = abs
09/16 08:42:29 AM: verbose = True
09/16 08:42:29 AM: Starting training without restoring from a checkpoint.
09/16 08:42:29 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:42:29 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:42:39 AM: ***** Step 100 / Validation 1 *****
09/16 08:42:39 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:42:39 AM: Validating...
09/16 08:42:39 AM: Evaluate: task edges-spr2, batch 6 (10): mcc: 0.7013, acc: 0.0674, precision: 0.8494, recall: 0.7752, f1: 0.8106, edges-spr2_loss: 0.3251
09/16 08:42:40 AM: Best result seen so far for edges-spr2.
09/16 08:42:40 AM: Best result seen so far for micro.
09/16 08:42:40 AM: Best result seen so far for macro.
09/16 08:42:40 AM: Updating LR scheduler:
09/16 08:42:40 AM: 	Best result seen so far for macro_avg: 0.800
09/16 08:42:40 AM: 	# validation passes without improvement: 0
09/16 08:42:40 AM: edges-spr2_loss: training: 0.388360 validation: 0.352613
09/16 08:42:40 AM: macro_avg: validation: 0.799955
09/16 08:42:40 AM: micro_avg: validation: 0.000000
09/16 08:42:40 AM: edges-spr2_mcc: training: 0.604453 validation: 0.692133
09/16 08:42:40 AM: edges-spr2_acc: training: 0.035669 validation: 0.071429
09/16 08:42:40 AM: edges-spr2_precision: training: 0.769343 validation: 0.842068
09/16 08:42:40 AM: edges-spr2_recall: training: 0.720184 validation: 0.761854
09/16 08:42:40 AM: edges-spr2_f1: training: 0.743952 validation: 0.799955
09/16 08:42:40 AM: Global learning rate: 0.0001
09/16 08:42:40 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:42:49 AM: ***** Step 200 / Validation 2 *****
09/16 08:42:49 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:42:49 AM: Validating...
09/16 08:42:49 AM: Evaluate: task edges-spr2, batch 7 (10): mcc: 0.7200, acc: 0.0771, precision: 0.8538, recall: 0.7943, f1: 0.8230, edges-spr2_loss: 0.2947
09/16 08:42:50 AM: Best result seen so far for edges-spr2.
09/16 08:42:50 AM: Best result seen so far for macro.
09/16 08:42:50 AM: Updating LR scheduler:
09/16 08:42:50 AM: 	Best result seen so far for macro_avg: 0.809
09/16 08:42:50 AM: 	# validation passes without improvement: 0
09/16 08:42:50 AM: edges-spr2_loss: training: 0.320392 validation: 0.334977
09/16 08:42:50 AM: macro_avg: validation: 0.809402
09/16 08:42:50 AM: micro_avg: validation: 0.000000
09/16 08:42:50 AM: edges-spr2_mcc: training: 0.687853 validation: 0.705044
09/16 08:42:50 AM: edges-spr2_acc: training: 0.064904 validation: 0.076190
09/16 08:42:50 AM: edges-spr2_precision: training: 0.823063 validation: 0.845690
09/16 08:42:50 AM: edges-spr2_recall: training: 0.774135 validation: 0.776100
09/16 08:42:50 AM: edges-spr2_f1: training: 0.797850 validation: 0.809402
09/16 08:42:50 AM: Global learning rate: 0.0001
09/16 08:42:50 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:42:59 AM: ***** Step 300 / Validation 3 *****
09/16 08:42:59 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:42:59 AM: Validating...
09/16 08:42:59 AM: Evaluate: task edges-spr2, batch 3 (10): mcc: 0.7171, acc: 0.0653, precision: 0.8384, recall: 0.8130, f1: 0.8255, edges-spr2_loss: 0.2939
09/16 08:43:00 AM: Best result seen so far for edges-spr2.
09/16 08:43:00 AM: Best result seen so far for macro.
09/16 08:43:00 AM: Updating LR scheduler:
09/16 08:43:00 AM: 	Best result seen so far for macro_avg: 0.818
09/16 08:43:00 AM: 	# validation passes without improvement: 0
09/16 08:43:00 AM: edges-spr2_loss: training: 0.301089 validation: 0.330152
09/16 08:43:00 AM: macro_avg: validation: 0.817520
09/16 08:43:00 AM: micro_avg: validation: 0.000000
09/16 08:43:00 AM: edges-spr2_mcc: training: 0.702904 validation: 0.713097
09/16 08:43:00 AM: edges-spr2_acc: training: 0.073198 validation: 0.077778
09/16 08:43:00 AM: edges-spr2_precision: training: 0.829401 validation: 0.836149
09/16 08:43:00 AM: edges-spr2_recall: training: 0.788422 validation: 0.799702
09/16 08:43:00 AM: edges-spr2_f1: training: 0.808392 validation: 0.817520
09/16 08:43:00 AM: Global learning rate: 0.0001
09/16 08:43:00 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:43:09 AM: ***** Step 400 / Validation 4 *****
09/16 08:43:09 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:09 AM: Validating...
09/16 08:43:10 AM: Evaluate: task edges-spr2, batch 6 (10): mcc: 0.7271, acc: 0.0814, precision: 0.8624, recall: 0.7956, f1: 0.8277, edges-spr2_loss: 0.2859
09/16 08:43:10 AM: Best result seen so far for edges-spr2.
09/16 08:43:10 AM: Best result seen so far for macro.
09/16 08:43:10 AM: Updating LR scheduler:
09/16 08:43:10 AM: 	Best result seen so far for macro_avg: 0.818
09/16 08:43:10 AM: 	# validation passes without improvement: 0
09/16 08:43:10 AM: edges-spr2_loss: training: 0.292091 validation: 0.325507
09/16 08:43:10 AM: macro_avg: validation: 0.818111
09/16 08:43:10 AM: micro_avg: validation: 0.000000
09/16 08:43:10 AM: edges-spr2_mcc: training: 0.713063 validation: 0.719459
09/16 08:43:10 AM: edges-spr2_acc: training: 0.076130 validation: 0.080952
09/16 08:43:10 AM: edges-spr2_precision: training: 0.833890 validation: 0.857910
09/16 08:43:10 AM: edges-spr2_recall: training: 0.797323 validation: 0.781841
09/16 08:43:10 AM: edges-spr2_f1: training: 0.815196 validation: 0.818111
09/16 08:43:10 AM: Global learning rate: 0.0001
09/16 08:43:10 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:43:20 AM: ***** Step 500 / Validation 5 *****
09/16 08:43:20 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:20 AM: Validating...
09/16 08:43:20 AM: Evaluate: task edges-spr2, batch 1 (10): mcc: 0.7291, acc: 0.0811, precision: 0.8451, recall: 0.8280, f1: 0.8365, edges-spr2_loss: 0.2888
09/16 08:43:21 AM: Best result seen so far for edges-spr2.
09/16 08:43:21 AM: Best result seen so far for macro.
09/16 08:43:21 AM: Updating LR scheduler:
09/16 08:43:21 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:43:21 AM: 	# validation passes without improvement: 0
09/16 08:43:21 AM: edges-spr2_loss: training: 0.285596 validation: 0.322322
09/16 08:43:21 AM: macro_avg: validation: 0.819926
09/16 08:43:21 AM: micro_avg: validation: 0.000000
09/16 08:43:21 AM: edges-spr2_mcc: training: 0.718262 validation: 0.717514
09/16 08:43:21 AM: edges-spr2_acc: training: 0.078660 validation: 0.080952
09/16 08:43:21 AM: edges-spr2_precision: training: 0.837689 validation: 0.841199
09/16 08:43:21 AM: edges-spr2_recall: training: 0.800714 validation: 0.799702
09/16 08:43:21 AM: edges-spr2_f1: training: 0.818784 validation: 0.819926
09/16 08:43:21 AM: Global learning rate: 0.0001
09/16 08:43:21 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:43:29 AM: ***** Step 600 / Validation 6 *****
09/16 08:43:29 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:29 AM: Validating...
09/16 08:43:30 AM: Evaluate: task edges-spr2, batch 3 (10): mcc: 0.7261, acc: 0.0704, precision: 0.8443, recall: 0.8182, f1: 0.8310, edges-spr2_loss: 0.2842
09/16 08:43:30 AM: Best result seen so far for edges-spr2.
09/16 08:43:30 AM: Best result seen so far for macro.
09/16 08:43:30 AM: Updating LR scheduler:
09/16 08:43:30 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:43:30 AM: 	# validation passes without improvement: 0
09/16 08:43:30 AM: edges-spr2_loss: training: 0.279472 validation: 0.320894
09/16 08:43:30 AM: macro_avg: validation: 0.820833
09/16 08:43:30 AM: micro_avg: validation: 0.000000
09/16 08:43:30 AM: edges-spr2_mcc: training: 0.725089 validation: 0.720242
09/16 08:43:30 AM: edges-spr2_acc: training: 0.086926 validation: 0.074603
09/16 08:43:30 AM: edges-spr2_precision: training: 0.840490 validation: 0.847408
09/16 08:43:30 AM: edges-spr2_recall: training: 0.806615 validation: 0.795875
09/16 08:43:30 AM: edges-spr2_f1: training: 0.823204 validation: 0.820833
09/16 08:43:30 AM: Global learning rate: 0.0001
09/16 08:43:30 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:43:39 AM: ***** Step 700 / Validation 7 *****
09/16 08:43:39 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:39 AM: Validating...
09/16 08:43:40 AM: Evaluate: task edges-spr2, batch 5 (10): mcc: 0.7263, acc: 0.0698, precision: 0.8565, recall: 0.8024, f1: 0.8286, edges-spr2_loss: 0.2828
09/16 08:43:40 AM: Updating LR scheduler:
09/16 08:43:40 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:43:40 AM: 	# validation passes without improvement: 1
09/16 08:43:40 AM: edges-spr2_loss: training: 0.274860 validation: 0.320566
09/16 08:43:40 AM: macro_avg: validation: 0.819306
09/16 08:43:40 AM: micro_avg: validation: 0.000000
09/16 08:43:40 AM: edges-spr2_mcc: training: 0.730755 validation: 0.719543
09/16 08:43:40 AM: edges-spr2_acc: training: 0.084763 validation: 0.082540
09/16 08:43:40 AM: edges-spr2_precision: training: 0.844608 validation: 0.852448
09/16 08:43:40 AM: edges-spr2_recall: training: 0.810060 validation: 0.788646
09/16 08:43:40 AM: edges-spr2_f1: training: 0.826974 validation: 0.819306
09/16 08:43:40 AM: Global learning rate: 0.0001
09/16 08:43:40 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:43:50 AM: ***** Step 800 / Validation 8 *****
09/16 08:43:50 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:50 AM: Validating...
09/16 08:43:50 AM: Evaluate: task edges-spr2, batch 2 (10): mcc: 0.7335, acc: 0.0797, precision: 0.8633, recall: 0.8110, f1: 0.8364, edges-spr2_loss: 0.2789
09/16 08:43:51 AM: Updating LR scheduler:
09/16 08:43:51 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:43:51 AM: 	# validation passes without improvement: 2
09/16 08:43:51 AM: edges-spr2_loss: training: 0.272057 validation: 0.320879
09/16 08:43:51 AM: macro_avg: validation: 0.820665
09/16 08:43:51 AM: micro_avg: validation: 0.000000
09/16 08:43:51 AM: edges-spr2_mcc: training: 0.731327 validation: 0.721040
09/16 08:43:51 AM: edges-spr2_acc: training: 0.085698 validation: 0.082540
09/16 08:43:51 AM: edges-spr2_precision: training: 0.844326 validation: 0.851429
09/16 08:43:51 AM: edges-spr2_recall: training: 0.810993 validation: 0.792048
09/16 08:43:51 AM: edges-spr2_f1: training: 0.827324 validation: 0.820665
09/16 08:43:51 AM: Global learning rate: 0.0001
09/16 08:43:51 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:43:59 AM: ***** Step 900 / Validation 9 *****
09/16 08:43:59 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:43:59 AM: Validating...
09/16 08:44:00 AM: Evaluate: task edges-spr2, batch 5 (10): mcc: 0.7246, acc: 0.0642, precision: 0.8540, recall: 0.8031, f1: 0.8278, edges-spr2_loss: 0.2844
09/16 08:44:00 AM: Updating LR scheduler:
09/16 08:44:00 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:44:00 AM: 	# validation passes without improvement: 3
09/16 08:44:00 AM: edges-spr2_loss: training: 0.269007 validation: 0.322510
09/16 08:44:00 AM: macro_avg: validation: 0.820575
09/16 08:44:00 AM: micro_avg: validation: 0.000000
09/16 08:44:00 AM: edges-spr2_mcc: training: 0.734919 validation: 0.720873
09/16 08:44:00 AM: edges-spr2_acc: training: 0.084678 validation: 0.073016
09/16 08:44:00 AM: edges-spr2_precision: training: 0.847013 validation: 0.851234
09/16 08:44:00 AM: edges-spr2_recall: training: 0.812276 validation: 0.792048
09/16 08:44:00 AM: edges-spr2_f1: training: 0.829281 validation: 0.820575
09/16 08:44:00 AM: Global learning rate: 0.0001
09/16 08:44:00 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:44:10 AM: Update 1000: task edges-spr2, batch 100 (1000): mcc: 0.7362, acc: 0.0971, precision: 0.8488, recall: 0.8136, f1: 0.8308, edges-spr2_loss: 0.2673
09/16 08:44:10 AM: ***** Step 1000 / Validation 10 *****
09/16 08:44:10 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:10 AM: Validating...
09/16 08:44:11 AM: Updating LR scheduler:
09/16 08:44:11 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:44:11 AM: 	# validation passes without improvement: 0
09/16 08:44:11 AM: edges-spr2_loss: training: 0.267258 validation: 0.322522
09/16 08:44:11 AM: macro_avg: validation: 0.819618
09/16 08:44:11 AM: micro_avg: validation: 0.000000
09/16 08:44:11 AM: edges-spr2_mcc: training: 0.736184 validation: 0.718486
09/16 08:44:11 AM: edges-spr2_acc: training: 0.097141 validation: 0.068254
09/16 08:44:11 AM: edges-spr2_precision: training: 0.848818 validation: 0.846747
09/16 08:44:11 AM: edges-spr2_recall: training: 0.813557 validation: 0.794174
09/16 08:44:11 AM: edges-spr2_f1: training: 0.830814 validation: 0.819618
09/16 08:44:11 AM: Global learning rate: 5e-05
09/16 08:44:11 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:44:19 AM: ***** Step 1100 / Validation 11 *****
09/16 08:44:19 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:19 AM: Validating...
09/16 08:44:20 AM: Evaluate: task edges-spr2, batch 6 (10): mcc: 0.7304, acc: 0.0628, precision: 0.8530, recall: 0.8118, f1: 0.8319, edges-spr2_loss: 0.2846
09/16 08:44:20 AM: Best result seen so far for edges-spr2.
09/16 08:44:20 AM: Best result seen so far for macro.
09/16 08:44:20 AM: Updating LR scheduler:
09/16 08:44:20 AM: 	Best result seen so far for macro_avg: 0.823
09/16 08:44:20 AM: 	# validation passes without improvement: 0
09/16 08:44:20 AM: edges-spr2_loss: training: 0.262684 validation: 0.321047
09/16 08:44:20 AM: macro_avg: validation: 0.823310
09/16 08:44:20 AM: micro_avg: validation: 0.000000
09/16 08:44:20 AM: edges-spr2_mcc: training: 0.740784 validation: 0.724323
09/16 08:44:20 AM: edges-spr2_acc: training: 0.099680 validation: 0.076190
09/16 08:44:20 AM: edges-spr2_precision: training: 0.849878 validation: 0.850760
09/16 08:44:20 AM: edges-spr2_recall: training: 0.817271 validation: 0.797576
09/16 08:44:20 AM: edges-spr2_f1: training: 0.833255 validation: 0.823310
09/16 08:44:20 AM: Global learning rate: 5e-05
09/16 08:44:20 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:44:30 AM: Update 1200: task edges-spr2, batch 100 (1200): mcc: 0.7401, acc: 0.0928, precision: 0.8498, recall: 0.8170, f1: 0.8330, edges-spr2_loss: 0.2622
09/16 08:44:30 AM: ***** Step 1200 / Validation 12 *****
09/16 08:44:30 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:30 AM: Validating...
09/16 08:44:31 AM: Best result seen so far for edges-spr2.
09/16 08:44:31 AM: Best result seen so far for macro.
09/16 08:44:31 AM: Updating LR scheduler:
09/16 08:44:31 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:44:31 AM: 	# validation passes without improvement: 0
09/16 08:44:31 AM: edges-spr2_loss: training: 0.262248 validation: 0.320735
09/16 08:44:31 AM: macro_avg: validation: 0.825008
09/16 08:44:31 AM: micro_avg: validation: 0.000000
09/16 08:44:31 AM: edges-spr2_mcc: training: 0.740061 validation: 0.726093
09/16 08:44:31 AM: edges-spr2_acc: training: 0.092838 validation: 0.073016
09/16 08:44:31 AM: edges-spr2_precision: training: 0.849767 validation: 0.848853
09/16 08:44:31 AM: edges-spr2_recall: training: 0.816959 validation: 0.802467
09/16 08:44:31 AM: edges-spr2_f1: training: 0.833040 validation: 0.825008
09/16 08:44:31 AM: Global learning rate: 5e-05
09/16 08:44:31 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:44:40 AM: ***** Step 1300 / Validation 13 *****
09/16 08:44:40 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:40 AM: Validating...
09/16 08:44:40 AM: Evaluate: task edges-spr2, batch 5 (10): mcc: 0.7282, acc: 0.0670, precision: 0.8509, recall: 0.8121, f1: 0.8310, edges-spr2_loss: 0.2838
09/16 08:44:41 AM: Updating LR scheduler:
09/16 08:44:41 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:44:41 AM: 	# validation passes without improvement: 1
09/16 08:44:41 AM: edges-spr2_loss: training: 0.259083 validation: 0.321873
09/16 08:44:41 AM: macro_avg: validation: 0.822178
09/16 08:44:41 AM: micro_avg: validation: 0.000000
09/16 08:44:41 AM: edges-spr2_mcc: training: 0.743879 validation: 0.721768
09/16 08:44:41 AM: edges-spr2_acc: training: 0.099568 validation: 0.077778
09/16 08:44:41 AM: edges-spr2_precision: training: 0.851878 validation: 0.846431
09/16 08:44:41 AM: edges-spr2_recall: training: 0.819249 validation: 0.799277
09/16 08:44:41 AM: edges-spr2_f1: training: 0.835245 validation: 0.822178
09/16 08:44:41 AM: Global learning rate: 5e-05
09/16 08:44:41 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:44:50 AM: ***** Step 1400 / Validation 14 *****
09/16 08:44:50 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:44:50 AM: Validating...
09/16 08:44:50 AM: Evaluate: task edges-spr2, batch 6 (10): mcc: 0.7297, acc: 0.0651, precision: 0.8559, recall: 0.8073, f1: 0.8309, edges-spr2_loss: 0.2851
09/16 08:44:51 AM: Updating LR scheduler:
09/16 08:44:51 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:44:51 AM: 	# validation passes without improvement: 2
09/16 08:44:51 AM: edges-spr2_loss: training: 0.257859 validation: 0.320164
09/16 08:44:51 AM: macro_avg: validation: 0.822442
09/16 08:44:51 AM: micro_avg: validation: 0.000000
09/16 08:44:51 AM: edges-spr2_mcc: training: 0.746493 validation: 0.723514
09/16 08:44:51 AM: edges-spr2_acc: training: 0.101235 validation: 0.073016
09/16 08:44:51 AM: edges-spr2_precision: training: 0.852477 validation: 0.852063
09/16 08:44:51 AM: edges-spr2_recall: training: 0.823116 validation: 0.794812
09/16 08:44:51 AM: edges-spr2_f1: training: 0.837539 validation: 0.822442
09/16 08:44:51 AM: Global learning rate: 5e-05
09/16 08:44:51 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:45:00 AM: ***** Step 1500 / Validation 15 *****
09/16 08:45:00 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:45:00 AM: Validating...
09/16 08:45:00 AM: Evaluate: task edges-spr2, batch 6 (10): mcc: 0.7263, acc: 0.0651, precision: 0.8437, recall: 0.8178, f1: 0.8305, edges-spr2_loss: 0.2857
09/16 08:45:01 AM: Updating LR scheduler:
09/16 08:45:01 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:45:01 AM: 	# validation passes without improvement: 3
09/16 08:45:01 AM: edges-spr2_loss: training: 0.255465 validation: 0.320693
09/16 08:45:01 AM: macro_avg: validation: 0.823440
09/16 08:45:01 AM: micro_avg: validation: 0.000000
09/16 08:45:01 AM: edges-spr2_mcc: training: 0.747263 validation: 0.722492
09/16 08:45:01 AM: edges-spr2_acc: training: 0.102417 validation: 0.074603
09/16 08:45:01 AM: edges-spr2_precision: training: 0.854234 validation: 0.842492
09/16 08:45:01 AM: edges-spr2_recall: training: 0.822168 validation: 0.805231
09/16 08:45:01 AM: edges-spr2_f1: training: 0.837894 validation: 0.823440
09/16 08:45:01 AM: Global learning rate: 5e-05
09/16 08:45:01 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:45:09 AM: ***** Step 1600 / Validation 16 *****
09/16 08:45:09 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:45:09 AM: Validating...
09/16 08:45:10 AM: Updating LR scheduler:
09/16 08:45:10 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:45:10 AM: 	# validation passes without improvement: 0
09/16 08:45:10 AM: edges-spr2_loss: training: 0.257107 validation: 0.322621
09/16 08:45:10 AM: macro_avg: validation: 0.820157
09/16 08:45:10 AM: micro_avg: validation: 0.000000
09/16 08:45:10 AM: edges-spr2_mcc: training: 0.746362 validation: 0.720478
09/16 08:45:10 AM: edges-spr2_acc: training: 0.100892 validation: 0.082540
09/16 08:45:10 AM: edges-spr2_precision: training: 0.852148 validation: 0.851809
09/16 08:45:10 AM: edges-spr2_recall: training: 0.822530 validation: 0.790772
09/16 08:45:10 AM: edges-spr2_f1: training: 0.837077 validation: 0.820157
09/16 08:45:10 AM: Global learning rate: 2.5e-05
09/16 08:45:10 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:45:10 AM: Update 1603: task edges-spr2, batch 3 (1603): mcc: 0.7482, acc: 0.1162, precision: 0.8479, recall: 0.8264, f1: 0.8370, edges-spr2_loss: 0.2492
09/16 08:45:19 AM: ***** Step 1700 / Validation 17 *****
09/16 08:45:19 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:45:19 AM: Validating...
09/16 08:45:20 AM: Updating LR scheduler:
09/16 08:45:20 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:45:20 AM: 	# validation passes without improvement: 1
09/16 08:45:20 AM: edges-spr2_loss: training: 0.252822 validation: 0.322294
09/16 08:45:20 AM: macro_avg: validation: 0.820979
09/16 08:45:20 AM: micro_avg: validation: 0.000000
09/16 08:45:20 AM: edges-spr2_mcc: training: 0.748343 validation: 0.720151
09/16 08:45:20 AM: edges-spr2_acc: training: 0.097336 validation: 0.074603
09/16 08:45:20 AM: edges-spr2_precision: training: 0.853564 validation: 0.846275
09/16 08:45:20 AM: edges-spr2_recall: training: 0.823767 validation: 0.797151
09/16 08:45:20 AM: edges-spr2_f1: training: 0.838401 validation: 0.820979
09/16 08:45:20 AM: Global learning rate: 2.5e-05
09/16 08:45:20 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:45:20 AM: Update 1705: task edges-spr2, batch 5 (1705): mcc: 0.7490, acc: 0.0831, precision: 0.8553, recall: 0.8201, f1: 0.8373, edges-spr2_loss: 0.2569
09/16 08:45:28 AM: ***** Step 1800 / Validation 18 *****
09/16 08:45:28 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:45:28 AM: Validating...
09/16 08:45:29 AM: Updating LR scheduler:
09/16 08:45:29 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:45:29 AM: 	# validation passes without improvement: 2
09/16 08:45:29 AM: edges-spr2_loss: training: 0.253629 validation: 0.321479
09/16 08:45:29 AM: macro_avg: validation: 0.823632
09/16 08:45:29 AM: micro_avg: validation: 0.000000
09/16 08:45:29 AM: edges-spr2_mcc: training: 0.750519 validation: 0.723742
09/16 08:45:29 AM: edges-spr2_acc: training: 0.103399 validation: 0.082540
09/16 08:45:29 AM: edges-spr2_precision: training: 0.855352 validation: 0.846655
09/16 08:45:29 AM: edges-spr2_recall: training: 0.824781 validation: 0.801829
09/16 08:45:29 AM: edges-spr2_f1: training: 0.839788 validation: 0.823632
09/16 08:45:29 AM: Global learning rate: 2.5e-05
09/16 08:45:29 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:45:30 AM: Update 1813: task edges-spr2, batch 13 (1813): mcc: 0.7405, acc: 0.0946, precision: 0.8516, recall: 0.8179, f1: 0.8344, edges-spr2_loss: 0.2598
09/16 08:45:39 AM: ***** Step 1900 / Validation 19 *****
09/16 08:45:39 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:45:39 AM: Validating...
09/16 08:45:40 AM: Updating LR scheduler:
09/16 08:45:40 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:45:40 AM: 	# validation passes without improvement: 3
09/16 08:45:40 AM: edges-spr2_loss: training: 0.254643 validation: 0.320659
09/16 08:45:40 AM: macro_avg: validation: 0.824348
09/16 08:45:40 AM: micro_avg: validation: 0.000000
09/16 08:45:40 AM: edges-spr2_mcc: training: 0.747520 validation: 0.723878
09/16 08:45:40 AM: edges-spr2_acc: training: 0.102398 validation: 0.080952
09/16 08:45:40 AM: edges-spr2_precision: training: 0.854106 validation: 0.843229
09/16 08:45:40 AM: edges-spr2_recall: training: 0.822425 validation: 0.806294
09/16 08:45:40 AM: edges-spr2_f1: training: 0.837966 validation: 0.824348
09/16 08:45:40 AM: Global learning rate: 2.5e-05
09/16 08:45:40 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:45:40 AM: Update 1911: task edges-spr2, batch 11 (1911): mcc: 0.7522, acc: 0.0975, precision: 0.8526, recall: 0.8328, f1: 0.8426, edges-spr2_loss: 0.2525
09/16 08:45:48 AM: ***** Step 2000 / Validation 20 *****
09/16 08:45:48 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:45:48 AM: Validating...
09/16 08:45:49 AM: Updating LR scheduler:
09/16 08:45:49 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:45:49 AM: 	# validation passes without improvement: 0
09/16 08:45:49 AM: edges-spr2_loss: training: 0.251092 validation: 0.320783
09/16 08:45:49 AM: macro_avg: validation: 0.823504
09/16 08:45:49 AM: micro_avg: validation: 0.000000
09/16 08:45:49 AM: edges-spr2_mcc: training: 0.752773 validation: 0.723166
09/16 08:45:49 AM: edges-spr2_acc: training: 0.105134 validation: 0.077778
09/16 08:45:49 AM: edges-spr2_precision: training: 0.856511 validation: 0.844966
09/16 08:45:49 AM: edges-spr2_recall: training: 0.826903 validation: 0.803104
09/16 08:45:49 AM: edges-spr2_f1: training: 0.841447 validation: 0.823504
09/16 08:45:49 AM: Global learning rate: 1.25e-05
09/16 08:45:49 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:45:51 AM: Update 2020: task edges-spr2, batch 20 (2020): mcc: 0.7520, acc: 0.1037, precision: 0.8568, recall: 0.8241, f1: 0.8401, edges-spr2_loss: 0.2507
09/16 08:45:57 AM: ***** Step 2100 / Validation 21 *****
09/16 08:45:57 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:45:57 AM: Validating...
09/16 08:45:58 AM: Updating LR scheduler:
09/16 08:45:58 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:45:58 AM: 	# validation passes without improvement: 1
09/16 08:45:58 AM: edges-spr2_loss: training: 0.251131 validation: 0.321461
09/16 08:45:58 AM: macro_avg: validation: 0.821094
09/16 08:45:58 AM: micro_avg: validation: 0.000000
09/16 08:45:58 AM: edges-spr2_mcc: training: 0.750440 validation: 0.721583
09/16 08:45:58 AM: edges-spr2_acc: training: 0.107430 validation: 0.073016
09/16 08:45:58 AM: edges-spr2_precision: training: 0.855090 validation: 0.851370
09/16 08:45:58 AM: edges-spr2_recall: training: 0.825203 validation: 0.792898
09/16 08:45:58 AM: edges-spr2_f1: training: 0.839881 validation: 0.821094
09/16 08:45:58 AM: Global learning rate: 1.25e-05
09/16 08:45:58 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:46:01 AM: Update 2123: task edges-spr2, batch 23 (2123): mcc: 0.7526, acc: 0.1176, precision: 0.8566, recall: 0.8263, f1: 0.8412, edges-spr2_loss: 0.2537
09/16 08:46:07 AM: ***** Step 2200 / Validation 22 *****
09/16 08:46:07 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:46:07 AM: Validating...
09/16 08:46:08 AM: Updating LR scheduler:
09/16 08:46:08 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:46:08 AM: 	# validation passes without improvement: 2
09/16 08:46:08 AM: Ran out of early stopping patience. Stopping training.
09/16 08:46:08 AM: edges-spr2_loss: training: 0.252920 validation: 0.320666
09/16 08:46:08 AM: macro_avg: validation: 0.821018
09/16 08:46:08 AM: micro_avg: validation: 0.000000
09/16 08:46:08 AM: edges-spr2_mcc: training: 0.751052 validation: 0.720164
09/16 08:46:08 AM: edges-spr2_acc: training: 0.106912 validation: 0.077778
09/16 08:46:08 AM: edges-spr2_precision: training: 0.855935 validation: 0.846119
09/16 08:46:08 AM: edges-spr2_recall: training: 0.825017 validation: 0.797363
09/16 08:46:08 AM: edges-spr2_f1: training: 0.840192 validation: 0.821018
09/16 08:46:08 AM: Global learning rate: 1.25e-05
09/16 08:46:08 AM: Saving checkpoints to: ./experiments/spr2-memorization-top/run
09/16 08:46:08 AM: Stopped training after 22 validation checks
09/16 08:46:08 AM: Trained edges-spr2 for 2200 batches or 31.429 epochs
09/16 08:46:08 AM: ***** VALIDATION RESULTS *****
09/16 08:46:08 AM: edges-spr2_f1 (for best val pass 12): edges-spr2_loss: 0.32074, macro_avg: 0.82501, micro_avg: 0.00000, edges-spr2_mcc: 0.72609, edges-spr2_acc: 0.07302, edges-spr2_precision: 0.84885, edges-spr2_recall: 0.80247, edges-spr2_f1: 0.82501
09/16 08:46:08 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.35261, macro_avg: 0.79996, micro_avg: 0.00000, edges-spr2_mcc: 0.69213, edges-spr2_acc: 0.07143, edges-spr2_precision: 0.84207, edges-spr2_recall: 0.76185, edges-spr2_f1: 0.79996
09/16 08:46:08 AM: macro_avg (for best val pass 12): edges-spr2_loss: 0.32074, macro_avg: 0.82501, micro_avg: 0.00000, edges-spr2_mcc: 0.72609, edges-spr2_acc: 0.07302, edges-spr2_precision: 0.84885, edges-spr2_recall: 0.80247, edges-spr2_f1: 0.82501
09/16 08:46:08 AM: Evaluating...
09/16 08:46:08 AM: Loaded model state from ./experiments/spr2-memorization-top/run/edges-spr2/model_state_target_train_val_12.best.th
09/16 08:46:08 AM: Evaluating on: edges-spr2, split: val
09/16 08:46:09 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:46:09 AM: Finished evaluating on: edges-spr2
09/16 08:46:09 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:46:09 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-memorization-top/run
09/16 08:46:09 AM: Wrote all preds for split 'val' to ./experiments/spr2-memorization-top/run
09/16 08:46:09 AM: Evaluating on: edges-spr2, split: test
09/16 08:46:10 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:46:10 AM: Finished evaluating on: edges-spr2
09/16 08:46:10 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:46:10 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-memorization-top/run
09/16 08:46:10 AM: Wrote all preds for split 'test' to ./experiments/spr2-memorization-top/run
09/16 08:46:10 AM: Writing results for split 'val' to ./experiments/spr2-memorization-top/results.tsv
09/16 08:46:10 AM: micro_avg: 0.000, macro_avg: 0.825, edges-spr2_mcc: 0.726, edges-spr2_acc: 0.073, edges-spr2_precision: 0.849, edges-spr2_recall: 0.802, edges-spr2_f1: 0.825
09/16 08:46:10 AM: Done!
09/16 08:46:10 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
