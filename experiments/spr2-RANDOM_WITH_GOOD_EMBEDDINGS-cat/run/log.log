09/16 09:04:54 AM: Git branch: master
09/16 09:04:54 AM: Git SHA: fdac83d3b541d13264763ea9e23a9b6828f6f296
09/16 09:04:55 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/",
  "exp_name": "experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/RANDOM_WITH_GOOD_EMBEDDINGS",
  "pytorch_transformers_output_mode": "cat",
  "remote_log_name": "experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat__run",
  "run_dir": "./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 09:04:55 AM: Saved config to ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run/params.conf
09/16 09:04:55 AM: Using random seed 1234
09/16 09:04:57 AM: Using GPU 0
09/16 09:04:57 AM: Loading tasks...
09/16 09:04:57 AM: Writing pre-preprocessed tasks to ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/
09/16 09:04:57 AM: 	Creating task edges-spr2 from scratch.
09/16 09:04:57 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 09:04:57 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 09:04:57 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 09:04:57 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 09:04:57 AM: 	Finished loading tasks: edges-spr2.
09/16 09:04:57 AM: 	Building vocab from scratch.
09/16 09:04:57 AM: 	Counting units for task edges-spr2.
09/16 09:04:57 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 09:04:58 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:04:58 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 09:04:58 AM: 	Saved vocab to ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/vocab
09/16 09:04:58 AM: Loading token dictionary from ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/vocab.
09/16 09:04:58 AM: 	Loaded vocab from ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/vocab
09/16 09:04:58 AM: 	Vocab namespace tokens: size 7943
09/16 09:04:58 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 09:04:58 AM: 	Vocab namespace bert_uncased: size 30524
09/16 09:04:58 AM: 	Vocab namespace chars: size 65
09/16 09:04:58 AM: 	Finished building vocab.
09/16 09:04:58 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 09:04:59 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/preproc/edges-spr2__train_data
09/16 09:04:59 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 09:04:59 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/preproc/edges-spr2__val_data
09/16 09:04:59 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 09:04:59 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/preproc/edges-spr2__test_data
09/16 09:04:59 AM: 	Finished indexing tasks
09/16 09:04:59 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 09:04:59 AM: 	  Training on 
09/16 09:04:59 AM: 	  Evaluating on edges-spr2
09/16 09:04:59 AM: 	Finished loading tasks in 2.404s
09/16 09:04:59 AM: 	 Tasks: ['edges-spr2']
09/16 09:04:59 AM: Building model...
09/16 09:04:59 AM: Using BERT model (bert-base-uncased).
09/16 09:04:59 AM: LOADING A RANDOMLY WEIGHTS BERT
09/16 09:05:03 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json not found in cache or force_download set to True, downloading to /tmp/tmprx_44chs
09/16 09:05:04 AM: copying /tmp/tmprx_44chs to cache at ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 09:05:04 AM: creating metadata file for ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 09:05:04 AM: removing temp file /tmp/tmprx_44chs
09/16 09:05:04 AM: loading configuration file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json from cache at ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 09:05:04 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 09:05:05 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin not found in cache or force_download set to True, downloading to /tmp/tmpg91nysc0
09/16 09:11:53 AM: copying /tmp/tmpg91nysc0 to cache at ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 09:11:53 AM: creating metadata file for ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 09:11:53 AM: removing temp file /tmp/tmpg91nysc0
09/16 09:11:53 AM: loading weights file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin from cache at ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 09:11:58 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpaypong78
09/16 09:12:02 AM: copying /tmp/tmpaypong78 to cache at ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:12:02 AM: creating metadata file for ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:12:02 AM: removing temp file /tmp/tmpaypong78
09/16 09:12:02 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:12:03 AM: Initializing parameters
09/16 09:12:03 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 09:12:03 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 09:12:03 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 09:12:03 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 09:12:03 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 09:12:03 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 09:12:03 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 09:12:07 AM: Model specification:
09/16 09:12:07 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 09:12:07 AM: Model parameters:
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:07 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:07 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 09:12:07 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:12:07 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 09:12:07 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:12:07 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 09:12:07 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:12:07 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 09:12:07 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:12:07 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 09:12:07 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 09:12:07 AM: Total number of parameters: 110537236 (1.10537e+08)
09/16 09:12:07 AM: Number of trainable parameters: 1054996 (1.055e+06)
09/16 09:12:07 AM: Finished building model in 428.411s
09/16 09:12:07 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 09:12:08 AM: patience = 9
09/16 09:12:08 AM: val_interval = 100
09/16 09:12:08 AM: max_vals = 100
09/16 09:12:08 AM: cuda_device = 0
09/16 09:12:08 AM: grad_norm = 5.0
09/16 09:12:08 AM: grad_clipping = None
09/16 09:12:08 AM: lr_decay = 0.99
09/16 09:12:08 AM: min_lr = 1e-06
09/16 09:12:08 AM: keep_all_checkpoints = 0
09/16 09:12:08 AM: val_data_limit = 5000
09/16 09:12:08 AM: max_epochs = -1
09/16 09:12:08 AM: dec_val_scale = 250
09/16 09:12:08 AM: training_data_fraction = 1
09/16 09:12:08 AM: type = adam
09/16 09:12:08 AM: parameter_groups = None
09/16 09:12:08 AM: Number of trainable parameters: 1054996
09/16 09:12:08 AM: infer_type_and_cast = True
09/16 09:12:08 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:12:08 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:12:08 AM: lr = 0.0001
09/16 09:12:08 AM: amsgrad = True
09/16 09:12:08 AM: type = reduce_on_plateau
09/16 09:12:08 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:12:08 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:12:08 AM: mode = max
09/16 09:12:08 AM: factor = 0.5
09/16 09:12:08 AM: patience = 3
09/16 09:12:08 AM: threshold = 0.0001
09/16 09:12:08 AM: threshold_mode = abs
09/16 09:12:08 AM: verbose = True
09/16 09:12:08 AM: type = adam
09/16 09:12:08 AM: parameter_groups = None
09/16 09:12:08 AM: Number of trainable parameters: 1054996
09/16 09:12:08 AM: infer_type_and_cast = True
09/16 09:12:08 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:12:08 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:12:08 AM: lr = 0.0001
09/16 09:12:08 AM: amsgrad = True
09/16 09:12:08 AM: type = reduce_on_plateau
09/16 09:12:08 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:12:08 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:12:08 AM: mode = max
09/16 09:12:08 AM: factor = 0.5
09/16 09:12:08 AM: patience = 3
09/16 09:12:08 AM: threshold = 0.0001
09/16 09:12:08 AM: threshold_mode = abs
09/16 09:12:08 AM: verbose = True
09/16 09:12:08 AM: Starting training without restoring from a checkpoint.
09/16 09:12:08 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 09:12:08 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 09:12:16 AM: ***** Step 100 / Validation 1 *****
09/16 09:12:16 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 09:12:16 AM: Validating...
09/16 09:12:17 AM: Best result seen so far for edges-spr2.
09/16 09:12:17 AM: Best result seen so far for micro.
09/16 09:12:17 AM: Best result seen so far for macro.
09/16 09:12:17 AM: Updating LR scheduler:
09/16 09:12:17 AM: 	Best result seen so far for macro_avg: 0.770
09/16 09:12:17 AM: 	# validation passes without improvement: 0
09/16 09:12:17 AM: edges-spr2_loss: training: 0.377829 validation: 0.362607
09/16 09:12:17 AM: macro_avg: validation: 0.770290
09/16 09:12:17 AM: micro_avg: validation: 0.000000
09/16 09:12:17 AM: edges-spr2_mcc: training: 0.600641 validation: 0.654968
09/16 09:12:17 AM: edges-spr2_acc: training: 0.030876 validation: 0.063492
09/16 09:12:17 AM: edges-spr2_precision: training: 0.766656 validation: 0.837076
09/16 09:12:17 AM: edges-spr2_recall: training: 0.718008 validation: 0.713374
09/16 09:12:17 AM: edges-spr2_f1: training: 0.741535 validation: 0.770290
09/16 09:12:17 AM: Global learning rate: 0.0001
09/16 09:12:17 AM: Saving checkpoints to: ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:12:18 AM: Update 114: task edges-spr2, batch 14 (114): mcc: 0.6599, acc: 0.0485, precision: 0.8154, recall: 0.7443, f1: 0.7782, edges-spr2_loss: 0.3394
09/16 09:12:25 AM: ***** Step 200 / Validation 2 *****
09/16 09:12:25 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 09:12:25 AM: Validating...
09/16 09:12:26 AM: Best result seen so far for edges-spr2.
09/16 09:12:26 AM: Best result seen so far for macro.
09/16 09:12:26 AM: Updating LR scheduler:
09/16 09:12:26 AM: 	Best result seen so far for macro_avg: 0.778
09/16 09:12:26 AM: 	# validation passes without improvement: 0
09/16 09:12:26 AM: edges-spr2_loss: training: 0.329063 validation: 0.356421
09/16 09:12:26 AM: macro_avg: validation: 0.777979
09/16 09:12:26 AM: micro_avg: validation: 0.000000
09/16 09:12:26 AM: edges-spr2_mcc: training: 0.665640 validation: 0.662407
09/16 09:12:26 AM: edges-spr2_acc: training: 0.058899 validation: 0.061905
09/16 09:12:26 AM: edges-spr2_precision: training: 0.818443 validation: 0.832485
09/16 09:12:26 AM: edges-spr2_recall: training: 0.747025 validation: 0.730172
09/16 09:12:26 AM: edges-spr2_f1: training: 0.781105 validation: 0.777979
09/16 09:12:26 AM: Global learning rate: 0.0001
09/16 09:12:26 AM: Saving checkpoints to: ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:12:28 AM: Update 228: task edges-spr2, batch 28 (228): mcc: 0.6735, acc: 0.0516, precision: 0.8253, recall: 0.7459, f1: 0.7836, edges-spr2_loss: 0.3179
09/16 09:12:34 AM: ***** Step 300 / Validation 3 *****
09/16 09:12:34 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 09:12:34 AM: Validating...
09/16 09:12:35 AM: Best result seen so far for edges-spr2.
09/16 09:12:35 AM: Best result seen so far for macro.
09/16 09:12:35 AM: Updating LR scheduler:
09/16 09:12:35 AM: 	Best result seen so far for macro_avg: 0.787
09/16 09:12:35 AM: 	# validation passes without improvement: 0
09/16 09:12:35 AM: edges-spr2_loss: training: 0.314286 validation: 0.359163
09/16 09:12:35 AM: macro_avg: validation: 0.786628
09/16 09:12:35 AM: micro_avg: validation: 0.000000
09/16 09:12:35 AM: edges-spr2_mcc: training: 0.678362 validation: 0.668198
09/16 09:12:35 AM: edges-spr2_acc: training: 0.059748 validation: 0.063492
09/16 09:12:35 AM: edges-spr2_precision: training: 0.825896 validation: 0.817473
09/16 09:12:35 AM: edges-spr2_recall: training: 0.756697 validation: 0.758027
09/16 09:12:35 AM: edges-spr2_f1: training: 0.789783 validation: 0.786628
09/16 09:12:35 AM: Global learning rate: 0.0001
09/16 09:12:35 AM: Saving checkpoints to: ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:12:39 AM: Update 351: task edges-spr2, batch 51 (351): mcc: 0.6897, acc: 0.0731, precision: 0.8289, recall: 0.7698, f1: 0.7983, edges-spr2_loss: 0.3060
09/16 09:12:42 AM: ***** Step 400 / Validation 4 *****
09/16 09:12:42 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 09:12:42 AM: Validating...
09/16 09:12:43 AM: Updating LR scheduler:
09/16 09:12:43 AM: 	Best result seen so far for macro_avg: 0.787
09/16 09:12:43 AM: 	# validation passes without improvement: 1
09/16 09:12:43 AM: edges-spr2_loss: training: 0.301617 validation: 0.364934
09/16 09:12:43 AM: macro_avg: validation: 0.785113
09/16 09:12:43 AM: micro_avg: validation: 0.000000
09/16 09:12:43 AM: edges-spr2_mcc: training: 0.694610 validation: 0.666898
09/16 09:12:43 AM: edges-spr2_acc: training: 0.074859 validation: 0.057143
09/16 09:12:43 AM: edges-spr2_precision: training: 0.830835 validation: 0.819422
09/16 09:12:43 AM: edges-spr2_recall: training: 0.774169 validation: 0.753562
09/16 09:12:43 AM: edges-spr2_f1: training: 0.801502 validation: 0.785113
09/16 09:12:43 AM: Global learning rate: 0.0001
09/16 09:12:43 AM: Saving checkpoints to: ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:12:49 AM: Update 467: task edges-spr2, batch 67 (467): mcc: 0.7027, acc: 0.0796, precision: 0.8336, recall: 0.7823, f1: 0.8071, edges-spr2_loss: 0.2926
09/16 09:12:52 AM: ***** Step 500 / Validation 5 *****
09/16 09:12:52 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 09:12:52 AM: Validating...
09/16 09:12:52 AM: Updating LR scheduler:
09/16 09:12:52 AM: 	Best result seen so far for macro_avg: 0.787
09/16 09:12:52 AM: 	# validation passes without improvement: 2
09/16 09:12:52 AM: edges-spr2_loss: training: 0.290569 validation: 0.367991
09/16 09:12:52 AM: macro_avg: validation: 0.782264
09/16 09:12:52 AM: micro_avg: validation: 0.000000
09/16 09:12:52 AM: edges-spr2_mcc: training: 0.706937 validation: 0.660645
09/16 09:12:52 AM: edges-spr2_acc: training: 0.078660 validation: 0.053968
09/16 09:12:52 AM: edges-spr2_precision: training: 0.837254 validation: 0.810534
09/16 09:12:52 AM: edges-spr2_recall: training: 0.784792 validation: 0.755901
09/16 09:12:52 AM: edges-spr2_f1: training: 0.810174 validation: 0.782264
09/16 09:12:52 AM: Global learning rate: 0.0001
09/16 09:12:52 AM: Saving checkpoints to: ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:12:59 AM: Update 581: task edges-spr2, batch 81 (581): mcc: 0.7166, acc: 0.0867, precision: 0.8395, recall: 0.7960, f1: 0.8172, edges-spr2_loss: 0.2824
09/16 09:13:00 AM: ***** Step 600 / Validation 6 *****
09/16 09:13:00 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 09:13:00 AM: Validating...
09/16 09:13:01 AM: Updating LR scheduler:
09/16 09:13:01 AM: 	Best result seen so far for macro_avg: 0.787
09/16 09:13:01 AM: 	# validation passes without improvement: 3
09/16 09:13:01 AM: edges-spr2_loss: training: 0.279869 validation: 0.374615
09/16 09:13:01 AM: macro_avg: validation: 0.779755
09/16 09:13:01 AM: micro_avg: validation: 0.000000
09/16 09:13:01 AM: edges-spr2_mcc: training: 0.720452 validation: 0.659720
09/16 09:13:01 AM: edges-spr2_acc: training: 0.089180 validation: 0.053968
09/16 09:13:01 AM: edges-spr2_precision: training: 0.841578 validation: 0.817588
09/16 09:13:01 AM: edges-spr2_recall: training: 0.798554 validation: 0.745269
09/16 09:13:01 AM: edges-spr2_f1: training: 0.819501 validation: 0.779755
09/16 09:13:01 AM: Global learning rate: 0.0001
09/16 09:13:01 AM: Saving checkpoints to: ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:13:09 AM: Update 700: task edges-spr2, batch 100 (700): mcc: 0.7268, acc: 0.0893, precision: 0.8436, recall: 0.8056, f1: 0.8242, edges-spr2_loss: 0.2731
09/16 09:13:09 AM: ***** Step 700 / Validation 7 *****
09/16 09:13:09 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 09:13:09 AM: Validating...
09/16 09:13:10 AM: Updating LR scheduler:
09/16 09:13:10 AM: 	Best result seen so far for macro_avg: 0.787
09/16 09:13:10 AM: 	# validation passes without improvement: 0
09/16 09:13:10 AM: edges-spr2_loss: training: 0.273069 validation: 0.377122
09/16 09:13:10 AM: macro_avg: validation: 0.780206
09/16 09:13:10 AM: micro_avg: validation: 0.000000
09/16 09:13:10 AM: edges-spr2_mcc: training: 0.726797 validation: 0.659705
09/16 09:13:10 AM: edges-spr2_acc: training: 0.089270 validation: 0.060317
09/16 09:13:10 AM: edges-spr2_precision: training: 0.843646 validation: 0.815777
09/16 09:13:10 AM: edges-spr2_recall: training: 0.805551 validation: 0.747608
09/16 09:13:10 AM: edges-spr2_f1: training: 0.824158 validation: 0.780206
09/16 09:13:10 AM: Global learning rate: 5e-05
09/16 09:13:10 AM: Saving checkpoints to: ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:13:18 AM: ***** Step 800 / Validation 8 *****
09/16 09:13:18 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 09:13:18 AM: Validating...
09/16 09:13:19 AM: Evaluate: task edges-spr2, batch 9 (10): mcc: 0.6626, acc: 0.0590, precision: 0.8245, recall: 0.7410, f1: 0.7805, edges-spr2_loss: 0.3499
09/16 09:13:19 AM: Updating LR scheduler:
09/16 09:13:19 AM: 	Best result seen so far for macro_avg: 0.787
09/16 09:13:19 AM: 	# validation passes without improvement: 1
09/16 09:13:19 AM: edges-spr2_loss: training: 0.262093 validation: 0.380368
09/16 09:13:19 AM: macro_avg: validation: 0.779581
09/16 09:13:19 AM: micro_avg: validation: 0.000000
09/16 09:13:19 AM: edges-spr2_mcc: training: 0.739779 validation: 0.661285
09/16 09:13:19 AM: edges-spr2_acc: training: 0.104520 validation: 0.058730
09/16 09:13:19 AM: edges-spr2_precision: training: 0.851189 validation: 0.823168
09/16 09:13:19 AM: edges-spr2_recall: training: 0.814680 validation: 0.740378
09/16 09:13:19 AM: edges-spr2_f1: training: 0.832534 validation: 0.779581
09/16 09:13:19 AM: Global learning rate: 5e-05
09/16 09:13:19 AM: Saving checkpoints to: ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:13:26 AM: ***** Step 900 / Validation 9 *****
09/16 09:13:26 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 09:13:26 AM: Validating...
09/16 09:13:27 AM: Updating LR scheduler:
09/16 09:13:27 AM: 	Best result seen so far for macro_avg: 0.787
09/16 09:13:27 AM: 	# validation passes without improvement: 2
09/16 09:13:27 AM: edges-spr2_loss: training: 0.259288 validation: 0.384270
09/16 09:13:27 AM: macro_avg: validation: 0.779822
09/16 09:13:27 AM: micro_avg: validation: 0.000000
09/16 09:13:27 AM: edges-spr2_mcc: training: 0.742380 validation: 0.664092
09/16 09:13:27 AM: edges-spr2_acc: training: 0.099814 validation: 0.057143
09/16 09:13:27 AM: edges-spr2_precision: training: 0.853176 validation: 0.830928
09/16 09:13:27 AM: edges-spr2_recall: training: 0.815429 validation: 0.734637
09/16 09:13:27 AM: edges-spr2_f1: training: 0.833876 validation: 0.779822
09/16 09:13:27 AM: Global learning rate: 5e-05
09/16 09:13:27 AM: Saving checkpoints to: ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:13:29 AM: Update 912: task edges-spr2, batch 12 (912): mcc: 0.7191, acc: 0.0836, precision: 0.8376, recall: 0.8064, f1: 0.8217, edges-spr2_loss: 0.2735
09/16 09:13:36 AM: ***** Step 1000 / Validation 10 *****
09/16 09:13:36 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 09:13:36 AM: Validating...
09/16 09:13:37 AM: Updating LR scheduler:
09/16 09:13:37 AM: 	Best result seen so far for macro_avg: 0.787
09/16 09:13:37 AM: 	# validation passes without improvement: 3
09/16 09:13:37 AM: edges-spr2_loss: training: 0.256934 validation: 0.385489
09/16 09:13:37 AM: macro_avg: validation: 0.778182
09/16 09:13:37 AM: micro_avg: validation: 0.000000
09/16 09:13:37 AM: edges-spr2_mcc: training: 0.744164 validation: 0.654667
09/16 09:13:37 AM: edges-spr2_acc: training: 0.105190 validation: 0.053968
09/16 09:13:37 AM: edges-spr2_precision: training: 0.853740 validation: 0.807640
09/16 09:13:37 AM: edges-spr2_recall: training: 0.818920 validation: 0.750797
09/16 09:13:37 AM: edges-spr2_f1: training: 0.835968 validation: 0.778182
09/16 09:13:37 AM: Global learning rate: 5e-05
09/16 09:13:37 AM: Saving checkpoints to: ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:13:39 AM: Update 1031: task edges-spr2, batch 31 (1031): mcc: 0.7462, acc: 0.1096, precision: 0.8527, recall: 0.8215, f1: 0.8368, edges-spr2_loss: 0.2567
09/16 09:13:44 AM: ***** Step 1100 / Validation 11 *****
09/16 09:13:44 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 09:13:44 AM: Validating...
09/16 09:13:45 AM: Updating LR scheduler:
09/16 09:13:45 AM: 	Best result seen so far for macro_avg: 0.787
09/16 09:13:45 AM: 	# validation passes without improvement: 0
09/16 09:13:45 AM: edges-spr2_loss: training: 0.251580 validation: 0.387595
09/16 09:13:45 AM: macro_avg: validation: 0.778404
09/16 09:13:45 AM: micro_avg: validation: 0.000000
09/16 09:13:45 AM: edges-spr2_mcc: training: 0.750473 validation: 0.661518
09/16 09:13:45 AM: edges-spr2_acc: training: 0.110288 validation: 0.061905
09/16 09:13:45 AM: edges-spr2_precision: training: 0.857001 validation: 0.828256
09/16 09:13:45 AM: edges-spr2_recall: training: 0.822430 validation: 0.734212
09/16 09:13:45 AM: edges-spr2_f1: training: 0.839360 validation: 0.778404
09/16 09:13:45 AM: Global learning rate: 2.5e-05
09/16 09:13:45 AM: Saving checkpoints to: ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:13:49 AM: Update 1147: task edges-spr2, batch 47 (1147): mcc: 0.7472, acc: 0.1093, precision: 0.8556, recall: 0.8193, f1: 0.8370, edges-spr2_loss: 0.2528
09/16 09:13:53 AM: ***** Step 1200 / Validation 12 *****
09/16 09:13:53 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 09:13:53 AM: Validating...
09/16 09:13:54 AM: Updating LR scheduler:
09/16 09:13:54 AM: 	Best result seen so far for macro_avg: 0.787
09/16 09:13:54 AM: 	# validation passes without improvement: 1
09/16 09:13:54 AM: edges-spr2_loss: training: 0.249715 validation: 0.387181
09/16 09:13:54 AM: macro_avg: validation: 0.779751
09/16 09:13:54 AM: micro_avg: validation: 0.000000
09/16 09:13:54 AM: edges-spr2_mcc: training: 0.752371 validation: 0.657357
09/16 09:13:54 AM: edges-spr2_acc: training: 0.112243 validation: 0.050794
09/16 09:13:54 AM: edges-spr2_precision: training: 0.858316 validation: 0.810037
09/16 09:13:54 AM: edges-spr2_recall: training: 0.824096 validation: 0.751648
09/16 09:13:54 AM: edges-spr2_f1: training: 0.840858 validation: 0.779751
09/16 09:13:54 AM: Global learning rate: 2.5e-05
09/16 09:13:54 AM: Saving checkpoints to: ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:13:59 AM: Update 1264: task edges-spr2, batch 64 (1264): mcc: 0.7542, acc: 0.1115, precision: 0.8578, recall: 0.8270, f1: 0.8421, edges-spr2_loss: 0.2479
09/16 09:14:01 AM: ***** Step 1300 / Validation 13 *****
09/16 09:14:01 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 09:14:01 AM: Validating...
09/16 09:14:02 AM: Updating LR scheduler:
09/16 09:14:02 AM: 	Best result seen so far for macro_avg: 0.787
09/16 09:14:02 AM: 	# validation passes without improvement: 2
09/16 09:14:02 AM: Ran out of early stopping patience. Stopping training.
09/16 09:14:02 AM: edges-spr2_loss: training: 0.246758 validation: 0.391237
09/16 09:14:02 AM: macro_avg: validation: 0.776428
09/16 09:14:02 AM: micro_avg: validation: 0.000000
09/16 09:14:02 AM: edges-spr2_mcc: training: 0.755466 validation: 0.657773
09/16 09:14:02 AM: edges-spr2_acc: training: 0.109078 validation: 0.053968
09/16 09:14:02 AM: edges-spr2_precision: training: 0.858786 validation: 0.824063
09/16 09:14:02 AM: edges-spr2_recall: training: 0.827368 validation: 0.734000
09/16 09:14:02 AM: edges-spr2_f1: training: 0.842784 validation: 0.776428
09/16 09:14:02 AM: Global learning rate: 2.5e-05
09/16 09:14:02 AM: Saving checkpoints to: ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:14:02 AM: Stopped training after 13 validation checks
09/16 09:14:02 AM: Trained edges-spr2 for 1300 batches or 18.571 epochs
09/16 09:14:02 AM: ***** VALIDATION RESULTS *****
09/16 09:14:02 AM: edges-spr2_f1 (for best val pass 3): edges-spr2_loss: 0.35916, macro_avg: 0.78663, micro_avg: 0.00000, edges-spr2_mcc: 0.66820, edges-spr2_acc: 0.06349, edges-spr2_precision: 0.81747, edges-spr2_recall: 0.75803, edges-spr2_f1: 0.78663
09/16 09:14:02 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.36261, macro_avg: 0.77029, micro_avg: 0.00000, edges-spr2_mcc: 0.65497, edges-spr2_acc: 0.06349, edges-spr2_precision: 0.83708, edges-spr2_recall: 0.71337, edges-spr2_f1: 0.77029
09/16 09:14:02 AM: macro_avg (for best val pass 3): edges-spr2_loss: 0.35916, macro_avg: 0.78663, micro_avg: 0.00000, edges-spr2_mcc: 0.66820, edges-spr2_acc: 0.06349, edges-spr2_precision: 0.81747, edges-spr2_recall: 0.75803, edges-spr2_f1: 0.78663
09/16 09:14:02 AM: Evaluating...
09/16 09:14:02 AM: Loaded model state from ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run/edges-spr2/model_state_target_train_val_3.best.th
09/16 09:14:02 AM: Evaluating on: edges-spr2, split: val
09/16 09:14:03 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 09:14:03 AM: Finished evaluating on: edges-spr2
09/16 09:14:03 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 09:14:03 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:14:03 AM: Wrote all preds for split 'val' to ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:14:03 AM: Evaluating on: edges-spr2, split: test
09/16 09:14:04 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 09:14:04 AM: Finished evaluating on: edges-spr2
09/16 09:14:04 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 09:14:04 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:14:04 AM: Wrote all preds for split 'test' to ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/run
09/16 09:14:04 AM: Writing results for split 'val' to ./experiments/spr2-RANDOM_WITH_GOOD_EMBEDDINGS-cat/results.tsv
09/16 09:14:04 AM: micro_avg: 0.000, macro_avg: 0.787, edges-spr2_mcc: 0.668, edges-spr2_acc: 0.063, edges-spr2_precision: 0.817, edges-spr2_recall: 0.758, edges-spr2_f1: 0.787
09/16 09:14:04 AM: Done!
09/16 09:14:04 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
