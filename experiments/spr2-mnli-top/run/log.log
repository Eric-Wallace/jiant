09/16 08:33:50 AM: Git branch: master
09/16 08:33:50 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:33:50 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-mnli-top/",
  "exp_name": "experiments/spr2-mnli-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-mnli-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/mnli",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/spr2-mnli-top__run",
  "run_dir": "./experiments/spr2-mnli-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:33:50 AM: Saved config to ./experiments/spr2-mnli-top/run/params.conf
09/16 08:33:50 AM: Using random seed 1234
09/16 08:33:52 AM: Using GPU 0
09/16 08:33:52 AM: Loading tasks...
09/16 08:33:52 AM: Writing pre-preprocessed tasks to ./experiments/spr2-mnli-top/
09/16 08:33:52 AM: 	Creating task edges-spr2 from scratch.
09/16 08:33:52 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:33:52 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:33:52 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:33:53 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:33:53 AM: 	Finished loading tasks: edges-spr2.
09/16 08:33:53 AM: 	Building vocab from scratch.
09/16 08:33:53 AM: 	Counting units for task edges-spr2.
09/16 08:33:53 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:33:54 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:33:54 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:33:54 AM: 	Saved vocab to ./experiments/spr2-mnli-top/vocab
09/16 08:33:54 AM: Loading token dictionary from ./experiments/spr2-mnli-top/vocab.
09/16 08:33:54 AM: 	Loaded vocab from ./experiments/spr2-mnli-top/vocab
09/16 08:33:54 AM: 	Vocab namespace tokens: size 7943
09/16 08:33:54 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:33:54 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:33:54 AM: 	Vocab namespace chars: size 65
09/16 08:33:54 AM: 	Finished building vocab.
09/16 08:33:54 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:33:54 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-mnli-top/preproc/edges-spr2__train_data
09/16 08:33:54 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:33:54 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-mnli-top/preproc/edges-spr2__val_data
09/16 08:33:54 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:33:55 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-mnli-top/preproc/edges-spr2__test_data
09/16 08:33:55 AM: 	Finished indexing tasks
09/16 08:33:55 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:33:55 AM: 	  Training on 
09/16 08:33:55 AM: 	  Evaluating on edges-spr2
09/16 08:33:55 AM: 	Finished loading tasks in 2.327s
09/16 08:33:55 AM: 	 Tasks: ['edges-spr2']
09/16 08:33:55 AM: Building model...
09/16 08:33:55 AM: Using BERT model (bert-base-uncased).
09/16 08:33:55 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:33:55 AM: models/mnli
09/16 08:33:55 AM: loading configuration file models/mnli/config.json
09/16 08:33:55 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "mnli",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 3,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:33:55 AM: loading weights file models/mnli/pytorch_model.bin
09/16 08:34:05 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpx5548jcx
09/16 08:34:11 AM: copying /tmp/tmpx5548jcx to cache at ./experiments/spr2-mnli-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:34:11 AM: creating metadata file for ./experiments/spr2-mnli-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:34:11 AM: removing temp file /tmp/tmpx5548jcx
09/16 08:34:11 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-mnli-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:34:11 AM: Initializing parameters
09/16 08:34:11 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:34:11 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:34:11 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:34:11 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:34:11 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:34:11 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:34:11 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:34:16 AM: Model specification:
09/16 08:34:16 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:34:16 AM: Model parameters:
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:16 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:16 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:34:16 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:34:16 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:34:16 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:34:16 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:34:16 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:34:16 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:34:16 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:34:16 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:34:16 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:34:16 AM: Total number of parameters: 110144020 (1.10144e+08)
09/16 08:34:16 AM: Number of trainable parameters: 661780 (661780)
09/16 08:34:16 AM: Finished building model in 21.610s
09/16 08:34:16 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:34:17 AM: patience = 9
09/16 08:34:17 AM: val_interval = 100
09/16 08:34:17 AM: max_vals = 100
09/16 08:34:17 AM: cuda_device = 0
09/16 08:34:17 AM: grad_norm = 5.0
09/16 08:34:17 AM: grad_clipping = None
09/16 08:34:17 AM: lr_decay = 0.99
09/16 08:34:17 AM: min_lr = 1e-06
09/16 08:34:17 AM: keep_all_checkpoints = 0
09/16 08:34:17 AM: val_data_limit = 5000
09/16 08:34:17 AM: max_epochs = -1
09/16 08:34:17 AM: dec_val_scale = 250
09/16 08:34:17 AM: training_data_fraction = 1
09/16 08:34:17 AM: type = adam
09/16 08:34:17 AM: parameter_groups = None
09/16 08:34:17 AM: Number of trainable parameters: 661780
09/16 08:34:17 AM: infer_type_and_cast = True
09/16 08:34:17 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:34:17 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:34:17 AM: lr = 0.0001
09/16 08:34:17 AM: amsgrad = True
09/16 08:34:17 AM: type = reduce_on_plateau
09/16 08:34:17 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:34:17 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:34:17 AM: mode = max
09/16 08:34:17 AM: factor = 0.5
09/16 08:34:17 AM: patience = 3
09/16 08:34:17 AM: threshold = 0.0001
09/16 08:34:17 AM: threshold_mode = abs
09/16 08:34:17 AM: verbose = True
09/16 08:34:17 AM: type = adam
09/16 08:34:17 AM: parameter_groups = None
09/16 08:34:17 AM: Number of trainable parameters: 661780
09/16 08:34:17 AM: infer_type_and_cast = True
09/16 08:34:17 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:34:17 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:34:17 AM: lr = 0.0001
09/16 08:34:17 AM: amsgrad = True
09/16 08:34:17 AM: type = reduce_on_plateau
09/16 08:34:17 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:34:17 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:34:17 AM: mode = max
09/16 08:34:17 AM: factor = 0.5
09/16 08:34:17 AM: patience = 3
09/16 08:34:17 AM: threshold = 0.0001
09/16 08:34:17 AM: threshold_mode = abs
09/16 08:34:17 AM: verbose = True
09/16 08:34:17 AM: Starting training without restoring from a checkpoint.
09/16 08:34:17 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:34:17 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:34:26 AM: ***** Step 100 / Validation 1 *****
09/16 08:34:26 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:34:26 AM: Validating...
09/16 08:34:27 AM: Evaluate: task edges-spr2, batch 7 (10): mcc: 0.7089, acc: 0.0850, precision: 0.8407, recall: 0.7951, f1: 0.8172, edges-spr2_loss: 0.3185
09/16 08:34:27 AM: Best result seen so far for edges-spr2.
09/16 08:34:27 AM: Best result seen so far for micro.
09/16 08:34:27 AM: Best result seen so far for macro.
09/16 08:34:27 AM: Updating LR scheduler:
09/16 08:34:27 AM: 	Best result seen so far for macro_avg: 0.803
09/16 08:34:27 AM: 	# validation passes without improvement: 0
09/16 08:34:27 AM: edges-spr2_loss: training: 0.386195 validation: 0.344464
09/16 08:34:27 AM: macro_avg: validation: 0.802808
09/16 08:34:27 AM: micro_avg: validation: 0.000000
09/16 08:34:27 AM: edges-spr2_mcc: training: 0.605260 validation: 0.692027
09/16 08:34:27 AM: edges-spr2_acc: training: 0.032426 validation: 0.071429
09/16 08:34:27 AM: edges-spr2_precision: training: 0.765820 validation: 0.828992
09/16 08:34:27 AM: edges-spr2_recall: training: 0.726443 validation: 0.778227
09/16 08:34:27 AM: edges-spr2_f1: training: 0.745612 validation: 0.802808
09/16 08:34:27 AM: Global learning rate: 0.0001
09/16 08:34:27 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:34:36 AM: ***** Step 200 / Validation 2 *****
09/16 08:34:36 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:34:36 AM: Validating...
09/16 08:34:37 AM: Evaluate: task edges-spr2, batch 9 (10): mcc: 0.7106, acc: 0.0845, precision: 0.8434, recall: 0.7873, f1: 0.8144, edges-spr2_loss: 0.3039
09/16 08:34:37 AM: Best result seen so far for edges-spr2.
09/16 08:34:37 AM: Best result seen so far for macro.
09/16 08:34:37 AM: Updating LR scheduler:
09/16 08:34:37 AM: 	Best result seen so far for macro_avg: 0.813
09/16 08:34:37 AM: 	# validation passes without improvement: 0
09/16 08:34:37 AM: edges-spr2_loss: training: 0.318967 validation: 0.328695
09/16 08:34:37 AM: macro_avg: validation: 0.813373
09/16 08:34:37 AM: micro_avg: validation: 0.000000
09/16 08:34:37 AM: edges-spr2_mcc: training: 0.690135 validation: 0.709238
09/16 08:34:37 AM: edges-spr2_acc: training: 0.063474 validation: 0.084127
09/16 08:34:37 AM: edges-spr2_precision: training: 0.823173 validation: 0.842369
09/16 08:34:37 AM: edges-spr2_recall: training: 0.777365 validation: 0.786307
09/16 08:34:37 AM: edges-spr2_f1: training: 0.799613 validation: 0.813373
09/16 08:34:37 AM: Global learning rate: 0.0001
09/16 08:34:37 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:34:47 AM: Update 291: task edges-spr2, batch 91 (291): mcc: 0.7059, acc: 0.0719, precision: 0.8305, recall: 0.7909, f1: 0.8102, edges-spr2_loss: 0.3002
09/16 08:34:48 AM: ***** Step 300 / Validation 3 *****
09/16 08:34:48 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:34:48 AM: Validating...
09/16 08:34:49 AM: Best result seen so far for edges-spr2.
09/16 08:34:49 AM: Best result seen so far for macro.
09/16 08:34:49 AM: Updating LR scheduler:
09/16 08:34:49 AM: 	Best result seen so far for macro_avg: 0.818
09/16 08:34:49 AM: 	# validation passes without improvement: 0
09/16 08:34:49 AM: edges-spr2_loss: training: 0.299786 validation: 0.326747
09/16 08:34:49 AM: macro_avg: validation: 0.817995
09/16 08:34:49 AM: micro_avg: validation: 0.000000
09/16 08:34:49 AM: edges-spr2_mcc: training: 0.706131 validation: 0.712333
09/16 08:34:49 AM: edges-spr2_acc: training: 0.071499 validation: 0.079365
09/16 08:34:49 AM: edges-spr2_precision: training: 0.831953 validation: 0.830267
09/16 08:34:49 AM: edges-spr2_recall: training: 0.789913 validation: 0.806081
09/16 08:34:49 AM: edges-spr2_f1: training: 0.810388 validation: 0.817995
09/16 08:34:49 AM: Global learning rate: 0.0001
09/16 08:34:49 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:34:57 AM: Update 388: task edges-spr2, batch 88 (388): mcc: 0.7116, acc: 0.0731, precision: 0.8324, recall: 0.7973, f1: 0.8144, edges-spr2_loss: 0.2929
09/16 08:34:58 AM: ***** Step 400 / Validation 4 *****
09/16 08:34:58 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:34:58 AM: Validating...
09/16 08:34:59 AM: Updating LR scheduler:
09/16 08:34:59 AM: 	Best result seen so far for macro_avg: 0.818
09/16 08:34:59 AM: 	# validation passes without improvement: 1
09/16 08:34:59 AM: edges-spr2_loss: training: 0.291381 validation: 0.321538
09/16 08:34:59 AM: macro_avg: validation: 0.816494
09/16 08:34:59 AM: micro_avg: validation: 0.000000
09/16 08:34:59 AM: edges-spr2_mcc: training: 0.713826 validation: 0.716716
09/16 08:34:59 AM: edges-spr2_acc: training: 0.073023 validation: 0.087302
09/16 08:34:59 AM: edges-spr2_precision: training: 0.833619 validation: 0.855380
09/16 08:34:59 AM: edges-spr2_recall: training: 0.798774 validation: 0.780991
09/16 08:34:59 AM: edges-spr2_f1: training: 0.815825 validation: 0.816494
09/16 08:34:59 AM: Global learning rate: 0.0001
09/16 08:34:59 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:35:08 AM: Update 491: task edges-spr2, batch 91 (491): mcc: 0.7176, acc: 0.0758, precision: 0.8371, recall: 0.8006, f1: 0.8184, edges-spr2_loss: 0.2845
09/16 08:35:09 AM: ***** Step 500 / Validation 5 *****
09/16 08:35:09 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:35:09 AM: Validating...
09/16 08:35:10 AM: Best result seen so far for edges-spr2.
09/16 08:35:10 AM: Best result seen so far for macro.
09/16 08:35:10 AM: Updating LR scheduler:
09/16 08:35:10 AM: 	Best result seen so far for macro_avg: 0.819
09/16 08:35:10 AM: 	# validation passes without improvement: 0
09/16 08:35:10 AM: edges-spr2_loss: training: 0.284380 validation: 0.319563
09/16 08:35:10 AM: macro_avg: validation: 0.819127
09/16 08:35:10 AM: micro_avg: validation: 0.000000
09/16 08:35:10 AM: edges-spr2_mcc: training: 0.717605 validation: 0.717098
09/16 08:35:10 AM: edges-spr2_acc: training: 0.076672 validation: 0.084127
09/16 08:35:10 AM: edges-spr2_precision: training: 0.836604 validation: 0.843778
09/16 08:35:10 AM: edges-spr2_recall: training: 0.801121 validation: 0.795875
09/16 08:35:10 AM: edges-spr2_f1: training: 0.818478 validation: 0.819127
09/16 08:35:10 AM: Global learning rate: 0.0001
09/16 08:35:10 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:35:18 AM: Update 592: task edges-spr2, batch 92 (592): mcc: 0.7246, acc: 0.0835, precision: 0.8401, recall: 0.8065, f1: 0.8229, edges-spr2_loss: 0.2782
09/16 08:35:18 AM: ***** Step 600 / Validation 6 *****
09/16 08:35:18 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:35:18 AM: Validating...
09/16 08:35:19 AM: Updating LR scheduler:
09/16 08:35:19 AM: 	Best result seen so far for macro_avg: 0.819
09/16 08:35:19 AM: 	# validation passes without improvement: 1
09/16 08:35:19 AM: edges-spr2_loss: training: 0.278760 validation: 0.320099
09/16 08:35:19 AM: macro_avg: validation: 0.818983
09/16 08:35:19 AM: micro_avg: validation: 0.000000
09/16 08:35:19 AM: edges-spr2_mcc: training: 0.723690 validation: 0.718304
09/16 08:35:19 AM: edges-spr2_acc: training: 0.081150 validation: 0.090476
09/16 08:35:19 AM: edges-spr2_precision: training: 0.837803 validation: 0.849281
09/16 08:35:19 AM: edges-spr2_recall: training: 0.807945 validation: 0.790772
09/16 08:35:19 AM: edges-spr2_f1: training: 0.822603 validation: 0.818983
09/16 08:35:19 AM: Global learning rate: 0.0001
09/16 08:35:19 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:35:28 AM: ***** Step 700 / Validation 7 *****
09/16 08:35:28 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:35:28 AM: Validating...
09/16 08:35:28 AM: Evaluate: task edges-spr2, batch 1 (10): mcc: 0.7161, acc: 0.0541, precision: 0.8403, recall: 0.8162, f1: 0.8281, edges-spr2_loss: 0.2867
09/16 08:35:29 AM: Updating LR scheduler:
09/16 08:35:29 AM: 	Best result seen so far for macro_avg: 0.819
09/16 08:35:29 AM: 	# validation passes without improvement: 2
09/16 08:35:29 AM: edges-spr2_loss: training: 0.274896 validation: 0.322105
09/16 08:35:29 AM: macro_avg: validation: 0.818670
09/16 08:35:29 AM: micro_avg: validation: 0.000000
09/16 08:35:29 AM: edges-spr2_mcc: training: 0.730130 validation: 0.716676
09/16 08:35:29 AM: edges-spr2_acc: training: 0.084763 validation: 0.084127
09/16 08:35:29 AM: edges-spr2_precision: training: 0.844283 validation: 0.844485
09/16 08:35:29 AM: edges-spr2_recall: training: 0.809564 validation: 0.794387
09/16 08:35:29 AM: edges-spr2_f1: training: 0.826559 validation: 0.818670
09/16 08:35:29 AM: Global learning rate: 0.0001
09/16 08:35:29 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:35:37 AM: ***** Step 800 / Validation 8 *****
09/16 08:35:37 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:35:37 AM: Validating...
09/16 08:35:38 AM: Evaluate: task edges-spr2, batch 4 (10): mcc: 0.7212, acc: 0.0469, precision: 0.8511, recall: 0.8031, f1: 0.8264, edges-spr2_loss: 0.2888
09/16 08:35:38 AM: Best result seen so far for edges-spr2.
09/16 08:35:38 AM: Best result seen so far for macro.
09/16 08:35:38 AM: Updating LR scheduler:
09/16 08:35:38 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:35:38 AM: 	# validation passes without improvement: 0
09/16 08:35:38 AM: edges-spr2_loss: training: 0.271744 validation: 0.322005
09/16 08:35:38 AM: macro_avg: validation: 0.820119
09/16 08:35:38 AM: micro_avg: validation: 0.000000
09/16 08:35:38 AM: edges-spr2_mcc: training: 0.732424 validation: 0.719471
09/16 08:35:38 AM: edges-spr2_acc: training: 0.087552 validation: 0.082540
09/16 08:35:38 AM: edges-spr2_precision: training: 0.845082 validation: 0.848058
09/16 08:35:38 AM: edges-spr2_recall: training: 0.811637 validation: 0.793961
09/16 08:35:38 AM: edges-spr2_f1: training: 0.828022 validation: 0.820119
09/16 08:35:38 AM: Global learning rate: 0.0001
09/16 08:35:38 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:35:46 AM: ***** Step 900 / Validation 9 *****
09/16 08:35:46 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:35:46 AM: Validating...
09/16 08:35:47 AM: Updating LR scheduler:
09/16 08:35:47 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:35:47 AM: 	# validation passes without improvement: 1
09/16 08:35:47 AM: edges-spr2_loss: training: 0.268614 validation: 0.322291
09/16 08:35:47 AM: macro_avg: validation: 0.818450
09/16 08:35:47 AM: micro_avg: validation: 0.000000
09/16 08:35:47 AM: edges-spr2_mcc: training: 0.734401 validation: 0.715791
09/16 08:35:47 AM: edges-spr2_acc: training: 0.087820 validation: 0.071429
09/16 08:35:47 AM: edges-spr2_precision: training: 0.846567 validation: 0.842105
09/16 08:35:47 AM: edges-spr2_recall: training: 0.812080 validation: 0.796088
09/16 08:35:47 AM: edges-spr2_f1: training: 0.828965 validation: 0.818450
09/16 08:35:47 AM: Global learning rate: 0.0001
09/16 08:35:47 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:35:48 AM: Update 905: task edges-spr2, batch 5 (905): mcc: 0.7126, acc: 0.0781, precision: 0.8303, recall: 0.8063, f1: 0.8181, edges-spr2_loss: 0.2891
09/16 08:35:56 AM: ***** Step 1000 / Validation 10 *****
09/16 08:35:56 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:35:56 AM: Validating...
09/16 08:35:57 AM: Updating LR scheduler:
09/16 08:35:57 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:35:57 AM: 	# validation passes without improvement: 2
09/16 08:35:57 AM: edges-spr2_loss: training: 0.267647 validation: 0.323072
09/16 08:35:57 AM: macro_avg: validation: 0.815628
09/16 08:35:57 AM: micro_avg: validation: 0.000000
09/16 08:35:57 AM: edges-spr2_mcc: training: 0.737401 validation: 0.712281
09/16 08:35:57 AM: edges-spr2_acc: training: 0.095754 validation: 0.071429
09/16 08:35:57 AM: edges-spr2_precision: training: 0.848377 validation: 0.842821
09/16 08:35:57 AM: edges-spr2_recall: training: 0.815842 validation: 0.790134
09/16 08:35:57 AM: edges-spr2_f1: training: 0.831792 validation: 0.815628
09/16 08:35:57 AM: Global learning rate: 0.0001
09/16 08:35:57 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:35:58 AM: Update 1008: task edges-spr2, batch 8 (1008): mcc: 0.7418, acc: 0.1120, precision: 0.8561, recall: 0.8198, f1: 0.8376, edges-spr2_loss: 0.2652
09/16 08:36:05 AM: ***** Step 1100 / Validation 11 *****
09/16 08:36:05 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:36:05 AM: Validating...
09/16 08:36:06 AM: Updating LR scheduler:
09/16 08:36:06 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:36:06 AM: 	# validation passes without improvement: 3
09/16 08:36:06 AM: edges-spr2_loss: training: 0.263783 validation: 0.324534
09/16 08:36:06 AM: macro_avg: validation: 0.814262
09/16 08:36:06 AM: micro_avg: validation: 0.000000
09/16 08:36:06 AM: edges-spr2_mcc: training: 0.738800 validation: 0.713870
09/16 08:36:06 AM: edges-spr2_acc: training: 0.094740 validation: 0.074603
09/16 08:36:06 AM: edges-spr2_precision: training: 0.848486 validation: 0.855337
09/16 08:36:06 AM: edges-spr2_recall: training: 0.816135 validation: 0.776951
09/16 08:36:06 AM: edges-spr2_f1: training: 0.831996 validation: 0.814262
09/16 08:36:06 AM: Global learning rate: 0.0001
09/16 08:36:06 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:36:08 AM: Update 1121: task edges-spr2, batch 21 (1121): mcc: 0.7334, acc: 0.0873, precision: 0.8457, recall: 0.8125, f1: 0.8288, edges-spr2_loss: 0.2701
09/16 08:36:15 AM: ***** Step 1200 / Validation 12 *****
09/16 08:36:15 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:36:15 AM: Validating...
09/16 08:36:16 AM: Updating LR scheduler:
09/16 08:36:16 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:36:16 AM: 	# validation passes without improvement: 0
09/16 08:36:16 AM: edges-spr2_loss: training: 0.263212 validation: 0.325105
09/16 08:36:16 AM: macro_avg: validation: 0.817085
09/16 08:36:16 AM: micro_avg: validation: 0.000000
09/16 08:36:16 AM: edges-spr2_mcc: training: 0.739205 validation: 0.712412
09/16 08:36:16 AM: edges-spr2_acc: training: 0.096049 validation: 0.073016
09/16 08:36:16 AM: edges-spr2_precision: training: 0.848645 validation: 0.835705
09/16 08:36:16 AM: edges-spr2_recall: training: 0.817111 validation: 0.799277
09/16 08:36:16 AM: edges-spr2_f1: training: 0.832580 validation: 0.817085
09/16 08:36:16 AM: Global learning rate: 5e-05
09/16 08:36:16 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:36:18 AM: Update 1234: task edges-spr2, batch 34 (1234): mcc: 0.7458, acc: 0.0997, precision: 0.8518, recall: 0.8225, f1: 0.8369, edges-spr2_loss: 0.2620
09/16 08:36:24 AM: ***** Step 1300 / Validation 13 *****
09/16 08:36:24 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:36:24 AM: Validating...
09/16 08:36:25 AM: Updating LR scheduler:
09/16 08:36:25 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:36:25 AM: 	# validation passes without improvement: 1
09/16 08:36:25 AM: edges-spr2_loss: training: 0.260205 validation: 0.323873
09/16 08:36:25 AM: macro_avg: validation: 0.820076
09/16 08:36:25 AM: micro_avg: validation: 0.000000
09/16 08:36:25 AM: edges-spr2_mcc: training: 0.743281 validation: 0.717963
09/16 08:36:25 AM: edges-spr2_acc: training: 0.093948 validation: 0.071429
09/16 08:36:25 AM: edges-spr2_precision: training: 0.851517 validation: 0.842223
09/16 08:36:25 AM: edges-spr2_recall: training: 0.818834 validation: 0.799064
09/16 08:36:25 AM: edges-spr2_f1: training: 0.834856 validation: 0.820076
09/16 08:36:25 AM: Global learning rate: 5e-05
09/16 08:36:25 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:36:28 AM: Update 1342: task edges-spr2, batch 42 (1342): mcc: 0.7473, acc: 0.1014, precision: 0.8519, recall: 0.8249, f1: 0.8382, edges-spr2_loss: 0.2576
09/16 08:36:33 AM: ***** Step 1400 / Validation 14 *****
09/16 08:36:33 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:36:33 AM: Validating...
09/16 08:36:34 AM: Updating LR scheduler:
09/16 08:36:34 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:36:34 AM: 	# validation passes without improvement: 2
09/16 08:36:34 AM: edges-spr2_loss: training: 0.257647 validation: 0.322524
09/16 08:36:34 AM: macro_avg: validation: 0.817672
09/16 08:36:34 AM: micro_avg: validation: 0.000000
09/16 08:36:34 AM: edges-spr2_mcc: training: 0.746696 validation: 0.715816
09/16 08:36:34 AM: edges-spr2_acc: training: 0.101661 validation: 0.069841
09/16 08:36:34 AM: edges-spr2_precision: training: 0.851637 validation: 0.846224
09/16 08:36:34 AM: edges-spr2_recall: training: 0.824434 validation: 0.790984
09/16 08:36:34 AM: edges-spr2_f1: training: 0.837814 validation: 0.817672
09/16 08:36:34 AM: Global learning rate: 5e-05
09/16 08:36:34 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:36:39 AM: Update 1456: task edges-spr2, batch 56 (1456): mcc: 0.7472, acc: 0.1027, precision: 0.8554, recall: 0.8209, f1: 0.8378, edges-spr2_loss: 0.2570
09/16 08:36:42 AM: ***** Step 1500 / Validation 15 *****
09/16 08:36:42 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:36:42 AM: Validating...
09/16 08:36:43 AM: Updating LR scheduler:
09/16 08:36:43 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:36:43 AM: 	# validation passes without improvement: 3
09/16 08:36:43 AM: edges-spr2_loss: training: 0.256240 validation: 0.325551
09/16 08:36:43 AM: macro_avg: validation: 0.819978
09/16 08:36:43 AM: micro_avg: validation: 0.000000
09/16 08:36:43 AM: edges-spr2_mcc: training: 0.746300 validation: 0.716765
09/16 08:36:43 AM: edges-spr2_acc: training: 0.098086 validation: 0.066667
09/16 08:36:43 AM: edges-spr2_precision: training: 0.854015 validation: 0.837808
09/16 08:36:43 AM: edges-spr2_recall: training: 0.821062 validation: 0.802892
09/16 08:36:43 AM: edges-spr2_f1: training: 0.837215 validation: 0.819978
09/16 08:36:43 AM: Global learning rate: 5e-05
09/16 08:36:43 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:36:49 AM: Update 1559: task edges-spr2, batch 59 (1559): mcc: 0.7469, acc: 0.1021, precision: 0.8521, recall: 0.8229, f1: 0.8372, edges-spr2_loss: 0.2566
09/16 08:36:52 AM: ***** Step 1600 / Validation 16 *****
09/16 08:36:52 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:36:52 AM: Validating...
09/16 08:36:53 AM: Updating LR scheduler:
09/16 08:36:53 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:36:53 AM: 	# validation passes without improvement: 0
09/16 08:36:53 AM: edges-spr2_loss: training: 0.255882 validation: 0.324802
09/16 08:36:53 AM: macro_avg: validation: 0.814611
09/16 08:36:53 AM: micro_avg: validation: 0.000000
09/16 08:36:53 AM: edges-spr2_mcc: training: 0.749726 validation: 0.711281
09/16 08:36:53 AM: edges-spr2_acc: training: 0.105066 validation: 0.068254
09/16 08:36:53 AM: edges-spr2_precision: training: 0.855017 validation: 0.844049
09/16 08:36:53 AM: edges-spr2_recall: training: 0.823832 validation: 0.787157
09/16 08:36:53 AM: edges-spr2_f1: training: 0.839135 validation: 0.814611
09/16 08:36:53 AM: Global learning rate: 2.5e-05
09/16 08:36:53 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:36:59 AM: Update 1669: task edges-spr2, batch 69 (1669): mcc: 0.7495, acc: 0.1014, precision: 0.8563, recall: 0.8223, f1: 0.8389, edges-spr2_loss: 0.2543
09/16 08:37:01 AM: ***** Step 1700 / Validation 17 *****
09/16 08:37:01 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:37:01 AM: Validating...
09/16 08:37:02 AM: Updating LR scheduler:
09/16 08:37:02 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:37:02 AM: 	# validation passes without improvement: 1
09/16 08:37:02 AM: edges-spr2_loss: training: 0.254652 validation: 0.324178
09/16 08:37:02 AM: macro_avg: validation: 0.817654
09/16 08:37:02 AM: micro_avg: validation: 0.000000
09/16 08:37:02 AM: edges-spr2_mcc: training: 0.748119 validation: 0.714983
09/16 08:37:02 AM: edges-spr2_acc: training: 0.102862 validation: 0.077778
09/16 08:37:03 AM: edges-spr2_precision: training: 0.854831 validation: 0.843044
09/16 08:37:03 AM: edges-spr2_recall: training: 0.821904 validation: 0.793749
09/16 08:37:03 AM: edges-spr2_f1: training: 0.838044 validation: 0.817654
09/16 08:37:03 AM: Global learning rate: 2.5e-05
09/16 08:37:03 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:37:09 AM: Update 1773: task edges-spr2, batch 73 (1773): mcc: 0.7472, acc: 0.0987, precision: 0.8527, recall: 0.8239, f1: 0.8381, edges-spr2_loss: 0.2559
09/16 08:37:11 AM: ***** Step 1800 / Validation 18 *****
09/16 08:37:11 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:37:11 AM: Validating...
09/16 08:37:12 AM: Best result seen so far for edges-spr2.
09/16 08:37:12 AM: Best result seen so far for macro.
09/16 08:37:12 AM: Updating LR scheduler:
09/16 08:37:12 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:37:12 AM: 	# validation passes without improvement: 0
09/16 08:37:12 AM: edges-spr2_loss: training: 0.254044 validation: 0.325081
09/16 08:37:12 AM: macro_avg: validation: 0.821207
09/16 08:37:12 AM: micro_avg: validation: 0.000000
09/16 08:37:12 AM: edges-spr2_mcc: training: 0.748733 validation: 0.719693
09/16 08:37:12 AM: edges-spr2_acc: training: 0.100230 validation: 0.084127
09/16 08:37:12 AM: edges-spr2_precision: training: 0.853539 validation: 0.843190
09/16 08:37:12 AM: edges-spr2_recall: training: 0.824446 validation: 0.800340
09/16 08:37:12 AM: edges-spr2_f1: training: 0.838740 validation: 0.821207
09/16 08:37:12 AM: Global learning rate: 2.5e-05
09/16 08:37:12 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:37:19 AM: Update 1889: task edges-spr2, batch 89 (1889): mcc: 0.7485, acc: 0.1020, precision: 0.8537, recall: 0.8247, f1: 0.8389, edges-spr2_loss: 0.2549
09/16 08:37:20 AM: ***** Step 1900 / Validation 19 *****
09/16 08:37:20 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:37:20 AM: Validating...
09/16 08:37:21 AM: Best result seen so far for edges-spr2.
09/16 08:37:21 AM: Best result seen so far for macro.
09/16 08:37:21 AM: Updating LR scheduler:
09/16 08:37:21 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:37:21 AM: 	# validation passes without improvement: 0
09/16 08:37:21 AM: edges-spr2_loss: training: 0.255932 validation: 0.325226
09/16 08:37:21 AM: macro_avg: validation: 0.821366
09/16 08:37:21 AM: micro_avg: validation: 0.000000
09/16 08:37:21 AM: edges-spr2_mcc: training: 0.746887 validation: 0.719363
09/16 08:37:21 AM: edges-spr2_acc: training: 0.099642 validation: 0.076190
09/16 08:37:21 AM: edges-spr2_precision: training: 0.852473 validation: 0.840945
09/16 08:37:21 AM: edges-spr2_recall: training: 0.823517 validation: 0.802679
09/16 08:37:21 AM: edges-spr2_f1: training: 0.837745 validation: 0.821366
09/16 08:37:21 AM: Global learning rate: 2.5e-05
09/16 08:37:21 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:37:29 AM: Update 1996: task edges-spr2, batch 96 (1996): mcc: 0.7540, acc: 0.1028, precision: 0.8560, recall: 0.8291, f1: 0.8423, edges-spr2_loss: 0.2508
09/16 08:37:29 AM: ***** Step 2000 / Validation 20 *****
09/16 08:37:29 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:37:29 AM: Validating...
09/16 08:37:30 AM: Updating LR scheduler:
09/16 08:37:30 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:37:30 AM: 	# validation passes without improvement: 1
09/16 08:37:30 AM: edges-spr2_loss: training: 0.251140 validation: 0.325819
09/16 08:37:30 AM: macro_avg: validation: 0.817456
09/16 08:37:30 AM: micro_avg: validation: 0.000000
09/16 08:37:30 AM: edges-spr2_mcc: training: 0.753533 validation: 0.714376
09/16 08:37:30 AM: edges-spr2_acc: training: 0.102242 validation: 0.073016
09/16 08:37:30 AM: edges-spr2_precision: training: 0.856098 validation: 0.841667
09/16 08:37:30 AM: edges-spr2_recall: training: 0.828484 validation: 0.794599
09/16 08:37:30 AM: edges-spr2_f1: training: 0.842065 validation: 0.817456
09/16 08:37:30 AM: Global learning rate: 2.5e-05
09/16 08:37:30 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:37:38 AM: ***** Step 2100 / Validation 21 *****
09/16 08:37:38 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:37:38 AM: Validating...
09/16 08:37:39 AM: Evaluate: task edges-spr2, batch 9 (10): mcc: 0.7111, acc: 0.0734, precision: 0.8443, recall: 0.7869, f1: 0.8146, edges-spr2_loss: 0.2955
09/16 08:37:39 AM: Updating LR scheduler:
09/16 08:37:39 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:37:39 AM: 	# validation passes without improvement: 2
09/16 08:37:39 AM: edges-spr2_loss: training: 0.252153 validation: 0.326688
09/16 08:37:39 AM: macro_avg: validation: 0.813518
09/16 08:37:39 AM: micro_avg: validation: 0.000000
09/16 08:37:39 AM: edges-spr2_mcc: training: 0.751396 validation: 0.709701
09/16 08:37:39 AM: edges-spr2_acc: training: 0.100832 validation: 0.073016
09/16 08:37:39 AM: edges-spr2_precision: training: 0.855483 validation: 0.843415
09/16 08:37:39 AM: edges-spr2_recall: training: 0.826086 validation: 0.785669
09/16 08:37:39 AM: edges-spr2_f1: training: 0.840528 validation: 0.813518
09/16 08:37:39 AM: Global learning rate: 2.5e-05
09/16 08:37:39 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:37:47 AM: ***** Step 2200 / Validation 22 *****
09/16 08:37:47 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:37:47 AM: Validating...
09/16 08:37:48 AM: Updating LR scheduler:
09/16 08:37:48 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:37:48 AM: 	# validation passes without improvement: 3
09/16 08:37:48 AM: edges-spr2_loss: training: 0.253116 validation: 0.326323
09/16 08:37:48 AM: macro_avg: validation: 0.818539
09/16 08:37:48 AM: micro_avg: validation: 0.000000
09/16 08:37:48 AM: edges-spr2_mcc: training: 0.748801 validation: 0.715427
09/16 08:37:48 AM: edges-spr2_acc: training: 0.107053 validation: 0.073016
09/16 08:37:48 AM: edges-spr2_precision: training: 0.854045 validation: 0.840161
09/16 08:37:48 AM: edges-spr2_recall: training: 0.824114 validation: 0.798001
09/16 08:37:48 AM: edges-spr2_f1: training: 0.838813 validation: 0.818539
09/16 08:37:48 AM: Global learning rate: 2.5e-05
09/16 08:37:48 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:37:49 AM: Update 2206: task edges-spr2, batch 6 (2206): mcc: 0.7647, acc: 0.1153, precision: 0.8636, recall: 0.8403, f1: 0.8518, edges-spr2_loss: 0.2429
09/16 08:37:56 AM: ***** Step 2300 / Validation 23 *****
09/16 08:37:56 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:37:56 AM: Validating...
09/16 08:37:57 AM: Updating LR scheduler:
09/16 08:37:57 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:37:57 AM: 	# validation passes without improvement: 0
09/16 08:37:57 AM: edges-spr2_loss: training: 0.251094 validation: 0.326938
09/16 08:37:57 AM: macro_avg: validation: 0.818579
09/16 08:37:57 AM: micro_avg: validation: 0.000000
09/16 08:37:57 AM: edges-spr2_mcc: training: 0.751287 validation: 0.715970
09/16 08:37:57 AM: edges-spr2_acc: training: 0.101912 validation: 0.074603
09/16 08:37:57 AM: edges-spr2_precision: training: 0.855838 validation: 0.842141
09/16 08:37:57 AM: edges-spr2_recall: training: 0.825787 validation: 0.796300
09/16 08:37:57 AM: edges-spr2_f1: training: 0.840544 validation: 0.818579
09/16 08:37:57 AM: Global learning rate: 1.25e-05
09/16 08:37:57 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:37:59 AM: Update 2315: task edges-spr2, batch 15 (2315): mcc: 0.7366, acc: 0.0971, precision: 0.8415, recall: 0.8198, f1: 0.8305, edges-spr2_loss: 0.2599
09/16 08:38:05 AM: ***** Step 2400 / Validation 24 *****
09/16 08:38:05 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:38:05 AM: Validating...
09/16 08:38:06 AM: Updating LR scheduler:
09/16 08:38:06 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:38:06 AM: 	# validation passes without improvement: 1
09/16 08:38:06 AM: edges-spr2_loss: training: 0.249441 validation: 0.326374
09/16 08:38:06 AM: macro_avg: validation: 0.818122
09/16 08:38:06 AM: micro_avg: validation: 0.000000
09/16 08:38:06 AM: edges-spr2_mcc: training: 0.753671 validation: 0.715545
09/16 08:38:06 AM: edges-spr2_acc: training: 0.112627 validation: 0.077778
09/16 08:38:06 AM: edges-spr2_precision: training: 0.855339 validation: 0.842841
09/16 08:38:06 AM: edges-spr2_recall: training: 0.829108 validation: 0.794812
09/16 08:38:06 AM: edges-spr2_f1: training: 0.842019 validation: 0.818122
09/16 08:38:06 AM: Global learning rate: 1.25e-05
09/16 08:38:06 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:38:09 AM: Update 2432: task edges-spr2, batch 32 (2432): mcc: 0.7531, acc: 0.1047, precision: 0.8559, recall: 0.8278, f1: 0.8416, edges-spr2_loss: 0.2514
09/16 08:38:15 AM: ***** Step 2500 / Validation 25 *****
09/16 08:38:15 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:38:15 AM: Validating...
09/16 08:38:16 AM: Updating LR scheduler:
09/16 08:38:16 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:38:16 AM: 	# validation passes without improvement: 2
09/16 08:38:16 AM: edges-spr2_loss: training: 0.252035 validation: 0.325741
09/16 08:38:16 AM: macro_avg: validation: 0.817844
09/16 08:38:16 AM: micro_avg: validation: 0.000000
09/16 08:38:16 AM: edges-spr2_mcc: training: 0.751149 validation: 0.714912
09/16 08:38:16 AM: edges-spr2_acc: training: 0.100480 validation: 0.076190
09/16 08:38:16 AM: edges-spr2_precision: training: 0.855437 validation: 0.841774
09/16 08:38:16 AM: edges-spr2_recall: training: 0.826001 validation: 0.795237
09/16 08:38:16 AM: edges-spr2_f1: training: 0.840462 validation: 0.817844
09/16 08:38:16 AM: Global learning rate: 1.25e-05
09/16 08:38:16 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:38:19 AM: Update 2538: task edges-spr2, batch 38 (2538): mcc: 0.7502, acc: 0.1005, precision: 0.8511, recall: 0.8289, f1: 0.8398, edges-spr2_loss: 0.2509
09/16 08:38:24 AM: ***** Step 2600 / Validation 26 *****
09/16 08:38:24 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:38:24 AM: Validating...
09/16 08:38:25 AM: Updating LR scheduler:
09/16 08:38:25 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:38:25 AM: 	# validation passes without improvement: 3
09/16 08:38:25 AM: edges-spr2_loss: training: 0.249583 validation: 0.325958
09/16 08:38:25 AM: macro_avg: validation: 0.819454
09/16 08:38:25 AM: micro_avg: validation: 0.000000
09/16 08:38:25 AM: edges-spr2_mcc: training: 0.752164 validation: 0.717343
09/16 08:38:25 AM: edges-spr2_acc: training: 0.099858 validation: 0.077778
09/16 08:38:25 AM: edges-spr2_precision: training: 0.855568 validation: 0.843040
09/16 08:38:25 AM: edges-spr2_recall: training: 0.827064 validation: 0.797151
09/16 08:38:25 AM: edges-spr2_f1: training: 0.841075 validation: 0.819454
09/16 08:38:25 AM: Global learning rate: 1.25e-05
09/16 08:38:25 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:38:29 AM: Update 2647: task edges-spr2, batch 47 (2647): mcc: 0.7560, acc: 0.1113, precision: 0.8565, recall: 0.8304, f1: 0.8432, edges-spr2_loss: 0.2497
09/16 08:38:34 AM: ***** Step 2700 / Validation 27 *****
09/16 08:38:34 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:38:34 AM: Validating...
09/16 08:38:35 AM: Updating LR scheduler:
09/16 08:38:35 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:38:35 AM: 	# validation passes without improvement: 0
09/16 08:38:35 AM: edges-spr2_loss: training: 0.250166 validation: 0.326658
09/16 08:38:35 AM: macro_avg: validation: 0.817483
09/16 08:38:35 AM: micro_avg: validation: 0.000000
09/16 08:38:35 AM: edges-spr2_mcc: training: 0.752833 validation: 0.715341
09/16 08:38:35 AM: edges-spr2_acc: training: 0.109386 validation: 0.074603
09/16 08:38:35 AM: edges-spr2_precision: training: 0.855872 validation: 0.845333
09/16 08:38:35 AM: edges-spr2_recall: training: 0.827455 validation: 0.791410
09/16 08:38:35 AM: edges-spr2_f1: training: 0.841424 validation: 0.817483
09/16 08:38:35 AM: Global learning rate: 6.25e-06
09/16 08:38:35 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:38:39 AM: Update 2750: task edges-spr2, batch 50 (2750): mcc: 0.7489, acc: 0.1026, precision: 0.8551, recall: 0.8230, f1: 0.8388, edges-spr2_loss: 0.2530
09/16 08:38:43 AM: ***** Step 2800 / Validation 28 *****
09/16 08:38:43 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:38:43 AM: Validating...
09/16 08:38:44 AM: Updating LR scheduler:
09/16 08:38:44 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:38:44 AM: 	# validation passes without improvement: 1
09/16 08:38:44 AM: edges-spr2_loss: training: 0.250507 validation: 0.326288
09/16 08:38:44 AM: macro_avg: validation: 0.818720
09/16 08:38:44 AM: micro_avg: validation: 0.000000
09/16 08:38:44 AM: edges-spr2_mcc: training: 0.752940 validation: 0.716828
09/16 08:38:44 AM: edges-spr2_acc: training: 0.107422 validation: 0.079365
09/16 08:38:44 AM: edges-spr2_precision: training: 0.857068 validation: 0.844831
09/16 08:38:44 AM: edges-spr2_recall: training: 0.826270 validation: 0.794174
09/16 08:38:44 AM: edges-spr2_f1: training: 0.841387 validation: 0.818720
09/16 08:38:44 AM: Global learning rate: 6.25e-06
09/16 08:38:44 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:38:49 AM: Update 2861: task edges-spr2, batch 61 (2861): mcc: 0.7523, acc: 0.1104, precision: 0.8560, recall: 0.8268, f1: 0.8411, edges-spr2_loss: 0.2505
09/16 08:38:52 AM: ***** Step 2900 / Validation 29 *****
09/16 08:38:52 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:38:52 AM: Validating...
09/16 08:38:53 AM: Updating LR scheduler:
09/16 08:38:53 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:38:53 AM: 	# validation passes without improvement: 2
09/16 08:38:53 AM: Ran out of early stopping patience. Stopping training.
09/16 08:38:53 AM: edges-spr2_loss: training: 0.251467 validation: 0.326640
09/16 08:38:53 AM: macro_avg: validation: 0.817665
09/16 08:38:53 AM: micro_avg: validation: 0.000000
09/16 08:38:53 AM: edges-spr2_mcc: training: 0.750633 validation: 0.714583
09/16 08:38:53 AM: edges-spr2_acc: training: 0.110667 validation: 0.074603
09/16 08:38:53 AM: edges-spr2_precision: training: 0.855191 validation: 0.841395
09/16 08:38:53 AM: edges-spr2_recall: training: 0.825079 validation: 0.795237
09/16 08:38:53 AM: edges-spr2_f1: training: 0.839865 validation: 0.817665
09/16 08:38:53 AM: Global learning rate: 6.25e-06
09/16 08:38:53 AM: Saving checkpoints to: ./experiments/spr2-mnli-top/run
09/16 08:38:53 AM: Stopped training after 29 validation checks
09/16 08:38:53 AM: Trained edges-spr2 for 2900 batches or 41.429 epochs
09/16 08:38:53 AM: ***** VALIDATION RESULTS *****
09/16 08:38:53 AM: edges-spr2_f1 (for best val pass 19): edges-spr2_loss: 0.32523, macro_avg: 0.82137, micro_avg: 0.00000, edges-spr2_mcc: 0.71936, edges-spr2_acc: 0.07619, edges-spr2_precision: 0.84094, edges-spr2_recall: 0.80268, edges-spr2_f1: 0.82137
09/16 08:38:53 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.34446, macro_avg: 0.80281, micro_avg: 0.00000, edges-spr2_mcc: 0.69203, edges-spr2_acc: 0.07143, edges-spr2_precision: 0.82899, edges-spr2_recall: 0.77823, edges-spr2_f1: 0.80281
09/16 08:38:53 AM: macro_avg (for best val pass 19): edges-spr2_loss: 0.32523, macro_avg: 0.82137, micro_avg: 0.00000, edges-spr2_mcc: 0.71936, edges-spr2_acc: 0.07619, edges-spr2_precision: 0.84094, edges-spr2_recall: 0.80268, edges-spr2_f1: 0.82137
09/16 08:38:53 AM: Evaluating...
09/16 08:38:53 AM: Loaded model state from ./experiments/spr2-mnli-top/run/edges-spr2/model_state_target_train_val_19.best.th
09/16 08:38:53 AM: Evaluating on: edges-spr2, split: val
09/16 08:38:55 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:38:55 AM: Finished evaluating on: edges-spr2
09/16 08:38:55 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:38:55 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-mnli-top/run
09/16 08:38:55 AM: Wrote all preds for split 'val' to ./experiments/spr2-mnli-top/run
09/16 08:38:55 AM: Evaluating on: edges-spr2, split: test
09/16 08:38:56 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:38:56 AM: Finished evaluating on: edges-spr2
09/16 08:38:56 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:38:56 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-mnli-top/run
09/16 08:38:56 AM: Wrote all preds for split 'test' to ./experiments/spr2-mnli-top/run
09/16 08:38:56 AM: Writing results for split 'val' to ./experiments/spr2-mnli-top/results.tsv
09/16 08:38:56 AM: micro_avg: 0.000, macro_avg: 0.821, edges-spr2_mcc: 0.719, edges-spr2_acc: 0.076, edges-spr2_precision: 0.841, edges-spr2_recall: 0.803, edges-spr2_f1: 0.821
09/16 08:38:56 AM: Done!
09/16 08:38:56 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
