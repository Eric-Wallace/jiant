09/16 08:28:45 AM: Git branch: master
09/16 08:28:45 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:28:46 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-sst-mix/",
  "exp_name": "experiments/spr2-sst-mix",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-sst-mix/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/sst",
  "pytorch_transformers_output_mode": "mix",
  "remote_log_name": "experiments/spr2-sst-mix__run",
  "run_dir": "./experiments/spr2-sst-mix/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:28:46 AM: Saved config to ./experiments/spr2-sst-mix/run/params.conf
09/16 08:28:46 AM: Using random seed 1234
09/16 08:28:48 AM: Using GPU 0
09/16 08:28:48 AM: Loading tasks...
09/16 08:28:48 AM: Writing pre-preprocessed tasks to ./experiments/spr2-sst-mix/
09/16 08:28:48 AM: 	Creating task edges-spr2 from scratch.
09/16 08:28:48 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:28:48 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:28:48 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:28:48 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:28:48 AM: 	Finished loading tasks: edges-spr2.
09/16 08:28:48 AM: 	Building vocab from scratch.
09/16 08:28:48 AM: 	Counting units for task edges-spr2.
09/16 08:28:48 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:28:49 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:28:49 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:28:49 AM: 	Saved vocab to ./experiments/spr2-sst-mix/vocab
09/16 08:28:49 AM: Loading token dictionary from ./experiments/spr2-sst-mix/vocab.
09/16 08:28:49 AM: 	Loaded vocab from ./experiments/spr2-sst-mix/vocab
09/16 08:28:49 AM: 	Vocab namespace tokens: size 7943
09/16 08:28:49 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:28:49 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:28:49 AM: 	Vocab namespace chars: size 65
09/16 08:28:49 AM: 	Finished building vocab.
09/16 08:28:49 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:28:50 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-sst-mix/preproc/edges-spr2__train_data
09/16 08:28:50 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:28:50 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-sst-mix/preproc/edges-spr2__val_data
09/16 08:28:50 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:28:50 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-sst-mix/preproc/edges-spr2__test_data
09/16 08:28:50 AM: 	Finished indexing tasks
09/16 08:28:50 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:28:50 AM: 	  Training on 
09/16 08:28:50 AM: 	  Evaluating on edges-spr2
09/16 08:28:50 AM: 	Finished loading tasks in 2.575s
09/16 08:28:50 AM: 	 Tasks: ['edges-spr2']
09/16 08:28:50 AM: Building model...
09/16 08:28:50 AM: Using BERT model (bert-base-uncased).
09/16 08:28:50 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:28:50 AM: models/sst
09/16 08:28:50 AM: loading configuration file models/sst/config.json
09/16 08:28:50 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "sst-2",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:28:50 AM: loading weights file models/sst/pytorch_model.bin
09/16 08:29:02 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpths0akx2
09/16 08:29:04 AM: copying /tmp/tmpths0akx2 to cache at ./experiments/spr2-sst-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:29:04 AM: creating metadata file for ./experiments/spr2-sst-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:29:04 AM: removing temp file /tmp/tmpths0akx2
09/16 08:29:04 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-sst-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:29:04 AM: NOTE: pytorch_transformers_output_mode='mix', so scalar mixing weights will be fine-tuned even if BERT model is frozen.
09/16 08:29:04 AM: Initializing parameters
09/16 08:29:04 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:29:04 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:29:04 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:29:04 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:29:04 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:29:04 AM:    _text_field_embedder.scalar_mix.gamma
09/16 08:29:04 AM:    _text_field_embedder.scalar_mix.scalar_parameters.0
09/16 08:29:04 AM:    _text_field_embedder.scalar_mix.scalar_parameters.1
09/16 08:29:04 AM:    _text_field_embedder.scalar_mix.scalar_parameters.10
09/16 08:29:04 AM:    _text_field_embedder.scalar_mix.scalar_parameters.11
09/16 08:29:04 AM:    _text_field_embedder.scalar_mix.scalar_parameters.12
09/16 08:29:04 AM:    _text_field_embedder.scalar_mix.scalar_parameters.2
09/16 08:29:04 AM:    _text_field_embedder.scalar_mix.scalar_parameters.3
09/16 08:29:04 AM:    _text_field_embedder.scalar_mix.scalar_parameters.4
09/16 08:29:04 AM:    _text_field_embedder.scalar_mix.scalar_parameters.5
09/16 08:29:04 AM:    _text_field_embedder.scalar_mix.scalar_parameters.6
09/16 08:29:04 AM:    _text_field_embedder.scalar_mix.scalar_parameters.7
09/16 08:29:04 AM:    _text_field_embedder.scalar_mix.scalar_parameters.8
09/16 08:29:04 AM:    _text_field_embedder.scalar_mix.scalar_parameters.9
09/16 08:29:04 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:29:09 AM: Model specification:
09/16 08:29:09 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
      (scalar_mix): ScalarMix(
        (scalar_parameters): ParameterList(
            (0): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (1): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (2): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (3): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (4): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (5): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (6): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (7): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (8): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (9): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (10): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (11): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (12): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:29:09 AM: Model parameters:
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.scalar_mix.gamma: Trainable parameter, count 1 with torch.Size([1])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.0: Trainable parameter, count 1 with torch.Size([1])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.1: Trainable parameter, count 1 with torch.Size([1])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.2: Trainable parameter, count 1 with torch.Size([1])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.3: Trainable parameter, count 1 with torch.Size([1])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.4: Trainable parameter, count 1 with torch.Size([1])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.5: Trainable parameter, count 1 with torch.Size([1])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.6: Trainable parameter, count 1 with torch.Size([1])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.7: Trainable parameter, count 1 with torch.Size([1])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.8: Trainable parameter, count 1 with torch.Size([1])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.9: Trainable parameter, count 1 with torch.Size([1])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.10: Trainable parameter, count 1 with torch.Size([1])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.11: Trainable parameter, count 1 with torch.Size([1])
09/16 08:29:09 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.12: Trainable parameter, count 1 with torch.Size([1])
09/16 08:29:09 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:29:09 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:29:09 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:29:09 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:29:09 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:29:09 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:29:09 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:29:09 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:29:09 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:29:09 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:29:09 AM: Total number of parameters: 110144034 (1.10144e+08)
09/16 08:29:09 AM: Number of trainable parameters: 661794 (661794)
09/16 08:29:09 AM: Finished building model in 18.796s
09/16 08:29:09 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:29:10 AM: patience = 9
09/16 08:29:10 AM: val_interval = 100
09/16 08:29:10 AM: max_vals = 100
09/16 08:29:10 AM: cuda_device = 0
09/16 08:29:10 AM: grad_norm = 5.0
09/16 08:29:10 AM: grad_clipping = None
09/16 08:29:10 AM: lr_decay = 0.99
09/16 08:29:10 AM: min_lr = 1e-06
09/16 08:29:10 AM: keep_all_checkpoints = 0
09/16 08:29:10 AM: val_data_limit = 5000
09/16 08:29:10 AM: max_epochs = -1
09/16 08:29:10 AM: dec_val_scale = 250
09/16 08:29:10 AM: training_data_fraction = 1
09/16 08:29:10 AM: type = adam
09/16 08:29:10 AM: parameter_groups = None
09/16 08:29:10 AM: Number of trainable parameters: 661794
09/16 08:29:10 AM: infer_type_and_cast = True
09/16 08:29:10 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:29:10 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:29:10 AM: lr = 0.0001
09/16 08:29:10 AM: amsgrad = True
09/16 08:29:10 AM: type = reduce_on_plateau
09/16 08:29:10 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:29:10 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:29:10 AM: mode = max
09/16 08:29:10 AM: factor = 0.5
09/16 08:29:10 AM: patience = 3
09/16 08:29:10 AM: threshold = 0.0001
09/16 08:29:10 AM: threshold_mode = abs
09/16 08:29:10 AM: verbose = True
09/16 08:29:10 AM: type = adam
09/16 08:29:10 AM: parameter_groups = None
09/16 08:29:10 AM: Number of trainable parameters: 661794
09/16 08:29:10 AM: infer_type_and_cast = True
09/16 08:29:10 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:29:10 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:29:10 AM: lr = 0.0001
09/16 08:29:10 AM: amsgrad = True
09/16 08:29:10 AM: type = reduce_on_plateau
09/16 08:29:10 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:29:10 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:29:10 AM: mode = max
09/16 08:29:10 AM: factor = 0.5
09/16 08:29:10 AM: patience = 3
09/16 08:29:10 AM: threshold = 0.0001
09/16 08:29:10 AM: threshold_mode = abs
09/16 08:29:10 AM: verbose = True
09/16 08:29:10 AM: Starting training without restoring from a checkpoint.
09/16 08:29:10 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:29:10 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:29:18 AM: ***** Step 100 / Validation 1 *****
09/16 08:29:18 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:29:18 AM: Validating...
09/16 08:29:19 AM: Best result seen so far for edges-spr2.
09/16 08:29:19 AM: Best result seen so far for micro.
09/16 08:29:19 AM: Best result seen so far for macro.
09/16 08:29:19 AM: Updating LR scheduler:
09/16 08:29:19 AM: 	Best result seen so far for macro_avg: 0.803
09/16 08:29:19 AM: 	# validation passes without improvement: 0
09/16 08:29:19 AM: edges-spr2_loss: training: 0.380718 validation: 0.341006
09/16 08:29:19 AM: macro_avg: validation: 0.803323
09/16 08:29:19 AM: micro_avg: validation: 0.000000
09/16 08:29:19 AM: edges-spr2_mcc: training: 0.617495 validation: 0.698913
09/16 08:29:19 AM: edges-spr2_acc: training: 0.043705 validation: 0.084127
09/16 08:29:19 AM: edges-spr2_precision: training: 0.772914 validation: 0.850892
09/16 08:29:19 AM: edges-spr2_recall: training: 0.735494 validation: 0.760791
09/16 08:29:19 AM: edges-spr2_f1: training: 0.753740 validation: 0.803323
09/16 08:29:19 AM: Global learning rate: 0.0001
09/16 08:29:19 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:29:20 AM: Update 104: task edges-spr2, batch 4 (104): mcc: 0.6863, acc: 0.0571, precision: 0.8319, recall: 0.7647, f1: 0.7969, edges-spr2_loss: 0.3199
09/16 08:29:28 AM: ***** Step 200 / Validation 2 *****
09/16 08:29:28 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:29:28 AM: Validating...
09/16 08:29:28 AM: Best result seen so far for edges-spr2.
09/16 08:29:28 AM: Best result seen so far for macro.
09/16 08:29:28 AM: Updating LR scheduler:
09/16 08:29:28 AM: 	Best result seen so far for macro_avg: 0.819
09/16 08:29:28 AM: 	# validation passes without improvement: 0
09/16 08:29:28 AM: edges-spr2_loss: training: 0.307161 validation: 0.323853
09/16 08:29:28 AM: macro_avg: validation: 0.818610
09/16 08:29:28 AM: micro_avg: validation: 0.000000
09/16 08:29:28 AM: edges-spr2_mcc: training: 0.700518 validation: 0.716384
09/16 08:29:28 AM: edges-spr2_acc: training: 0.071480 validation: 0.077778
09/16 08:29:28 AM: edges-spr2_precision: training: 0.830535 validation: 0.843637
09/16 08:29:28 AM: edges-spr2_recall: training: 0.783276 validation: 0.795024
09/16 08:29:28 AM: edges-spr2_f1: training: 0.806213 validation: 0.818610
09/16 08:29:28 AM: Global learning rate: 0.0001
09/16 08:29:28 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:29:30 AM: Update 211: task edges-spr2, batch 11 (211): mcc: 0.7160, acc: 0.0801, precision: 0.8334, recall: 0.8033, f1: 0.8181, edges-spr2_loss: 0.2942
09/16 08:29:37 AM: ***** Step 300 / Validation 3 *****
09/16 08:29:37 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:29:37 AM: Validating...
09/16 08:29:38 AM: Best result seen so far for edges-spr2.
09/16 08:29:38 AM: Best result seen so far for macro.
09/16 08:29:38 AM: Updating LR scheduler:
09/16 08:29:38 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:29:38 AM: 	# validation passes without improvement: 0
09/16 08:29:38 AM: edges-spr2_loss: training: 0.287616 validation: 0.319615
09/16 08:29:38 AM: macro_avg: validation: 0.819892
09/16 08:29:38 AM: micro_avg: validation: 0.000000
09/16 08:29:38 AM: edges-spr2_mcc: training: 0.720882 validation: 0.719548
09/16 08:29:38 AM: edges-spr2_acc: training: 0.082260 validation: 0.084127
09/16 08:29:38 AM: edges-spr2_precision: training: 0.840369 validation: 0.849521
09/16 08:29:38 AM: edges-spr2_recall: training: 0.800817 validation: 0.792260
09/16 08:29:38 AM: edges-spr2_f1: training: 0.820117 validation: 0.819892
09/16 08:29:38 AM: Global learning rate: 0.0001
09/16 08:29:38 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:29:40 AM: Update 324: task edges-spr2, batch 24 (324): mcc: 0.7278, acc: 0.0791, precision: 0.8414, recall: 0.8087, f1: 0.8247, edges-spr2_loss: 0.2794
09/16 08:29:46 AM: ***** Step 400 / Validation 4 *****
09/16 08:29:46 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:29:46 AM: Validating...
09/16 08:29:47 AM: Updating LR scheduler:
09/16 08:29:47 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:29:47 AM: 	# validation passes without improvement: 1
09/16 08:29:47 AM: edges-spr2_loss: training: 0.276591 validation: 0.321300
09/16 08:29:47 AM: macro_avg: validation: 0.818505
09/16 08:29:47 AM: micro_avg: validation: 0.000000
09/16 08:29:47 AM: edges-spr2_mcc: training: 0.731121 validation: 0.719374
09/16 08:29:47 AM: edges-spr2_acc: training: 0.086582 validation: 0.101587
09/16 08:29:47 AM: edges-spr2_precision: training: 0.844413 validation: 0.855718
09/16 08:29:47 AM: edges-spr2_recall: training: 0.810341 validation: 0.784393
09/16 08:29:47 AM: edges-spr2_f1: training: 0.827026 validation: 0.818505
09/16 08:29:47 AM: Global learning rate: 0.0001
09/16 08:29:47 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:29:50 AM: Update 429: task edges-spr2, batch 29 (429): mcc: 0.7283, acc: 0.0848, precision: 0.8460, recall: 0.8050, f1: 0.8250, edges-spr2_loss: 0.2772
09/16 08:29:56 AM: ***** Step 500 / Validation 5 *****
09/16 08:29:56 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:29:56 AM: Validating...
09/16 08:29:57 AM: Best result seen so far for edges-spr2.
09/16 08:29:57 AM: Best result seen so far for macro.
09/16 08:29:57 AM: Updating LR scheduler:
09/16 08:29:57 AM: 	Best result seen so far for macro_avg: 0.823
09/16 08:29:57 AM: 	# validation passes without improvement: 0
09/16 08:29:57 AM: edges-spr2_loss: training: 0.268015 validation: 0.317202
09/16 08:29:57 AM: macro_avg: validation: 0.822690
09/16 08:29:57 AM: micro_avg: validation: 0.000000
09/16 08:29:57 AM: edges-spr2_mcc: training: 0.738271 validation: 0.723302
09/16 08:29:57 AM: edges-spr2_acc: training: 0.094420 validation: 0.080952
09/16 08:29:57 AM: edges-spr2_precision: training: 0.850125 validation: 0.849921
09/16 08:29:57 AM: edges-spr2_recall: training: 0.814134 validation: 0.797151
09/16 08:29:57 AM: edges-spr2_f1: training: 0.831740 validation: 0.822690
09/16 08:29:57 AM: Global learning rate: 0.0001
09/16 08:29:57 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:30:00 AM: Update 544: task edges-spr2, batch 44 (544): mcc: 0.7409, acc: 0.0886, precision: 0.8506, recall: 0.8171, f1: 0.8335, edges-spr2_loss: 0.2636
09/16 08:30:05 AM: ***** Step 600 / Validation 6 *****
09/16 08:30:05 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:30:05 AM: Validating...
09/16 08:30:06 AM: Best result seen so far for edges-spr2.
09/16 08:30:06 AM: Best result seen so far for macro.
09/16 08:30:06 AM: Updating LR scheduler:
09/16 08:30:06 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:30:06 AM: 	# validation passes without improvement: 0
09/16 08:30:06 AM: edges-spr2_loss: training: 0.261791 validation: 0.317564
09/16 08:30:06 AM: macro_avg: validation: 0.824209
09/16 08:30:06 AM: micro_avg: validation: 0.000000
09/16 08:30:06 AM: edges-spr2_mcc: training: 0.741635 validation: 0.724345
09/16 08:30:06 AM: edges-spr2_acc: training: 0.093688 validation: 0.088889
09/16 08:30:06 AM: edges-spr2_precision: training: 0.850163 validation: 0.845982
09/16 08:30:06 AM: edges-spr2_recall: training: 0.818455 validation: 0.803530
09/16 08:30:06 AM: edges-spr2_f1: training: 0.834008 validation: 0.824209
09/16 08:30:06 AM: Global learning rate: 0.0001
09/16 08:30:06 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:30:10 AM: Update 643: task edges-spr2, batch 43 (643): mcc: 0.7483, acc: 0.1024, precision: 0.8537, recall: 0.8234, f1: 0.8383, edges-spr2_loss: 0.2573
09/16 08:30:14 AM: ***** Step 700 / Validation 7 *****
09/16 08:30:14 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:30:14 AM: Validating...
09/16 08:30:15 AM: Updating LR scheduler:
09/16 08:30:15 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:30:15 AM: 	# validation passes without improvement: 1
09/16 08:30:15 AM: edges-spr2_loss: training: 0.255306 validation: 0.316833
09/16 08:30:15 AM: macro_avg: validation: 0.823542
09/16 08:30:15 AM: micro_avg: validation: 0.000000
09/16 08:30:15 AM: edges-spr2_mcc: training: 0.751608 validation: 0.723180
09/16 08:30:15 AM: edges-spr2_acc: training: 0.105118 validation: 0.087302
09/16 08:30:15 AM: edges-spr2_precision: training: 0.857178 validation: 0.844812
09/16 08:30:15 AM: edges-spr2_recall: training: 0.824483 validation: 0.803317
09/16 08:30:15 AM: edges-spr2_f1: training: 0.840513 validation: 0.823542
09/16 08:30:15 AM: Global learning rate: 0.0001
09/16 08:30:15 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:30:20 AM: Update 759: task edges-spr2, batch 59 (759): mcc: 0.7535, acc: 0.1118, precision: 0.8561, recall: 0.8280, f1: 0.8418, edges-spr2_loss: 0.2534
09/16 08:30:24 AM: ***** Step 800 / Validation 8 *****
09/16 08:30:24 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:30:24 AM: Validating...
09/16 08:30:25 AM: Updating LR scheduler:
09/16 08:30:25 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:30:25 AM: 	# validation passes without improvement: 2
09/16 08:30:25 AM: edges-spr2_loss: training: 0.251516 validation: 0.319429
09/16 08:30:25 AM: macro_avg: validation: 0.821217
09/16 08:30:25 AM: micro_avg: validation: 0.000000
09/16 08:30:25 AM: edges-spr2_mcc: training: 0.755232 validation: 0.721192
09/16 08:30:25 AM: edges-spr2_acc: training: 0.110794 validation: 0.082540
09/16 08:30:25 AM: edges-spr2_precision: training: 0.857120 validation: 0.849194
09/16 08:30:25 AM: edges-spr2_recall: training: 0.829484 validation: 0.795024
09/16 08:30:25 AM: edges-spr2_f1: training: 0.843076 validation: 0.821217
09/16 08:30:25 AM: Global learning rate: 0.0001
09/16 08:30:25 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:30:30 AM: Update 867: task edges-spr2, batch 67 (867): mcc: 0.7569, acc: 0.1138, precision: 0.8583, recall: 0.8299, f1: 0.8439, edges-spr2_loss: 0.2483
09/16 08:30:33 AM: ***** Step 900 / Validation 9 *****
09/16 08:30:33 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:30:33 AM: Validating...
09/16 08:30:34 AM: Updating LR scheduler:
09/16 08:30:34 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:30:34 AM: 	# validation passes without improvement: 3
09/16 08:30:34 AM: edges-spr2_loss: training: 0.247415 validation: 0.324088
09/16 08:30:34 AM: macro_avg: validation: 0.822127
09/16 08:30:34 AM: micro_avg: validation: 0.000000
09/16 08:30:34 AM: edges-spr2_mcc: training: 0.757224 validation: 0.721616
09/16 08:30:34 AM: edges-spr2_acc: training: 0.111666 validation: 0.084127
09/16 08:30:34 AM: edges-spr2_precision: training: 0.858619 validation: 0.846085
09/16 08:30:34 AM: edges-spr2_recall: training: 0.829981 validation: 0.799490
09/16 08:30:34 AM: edges-spr2_f1: training: 0.844057 validation: 0.822127
09/16 08:30:34 AM: Global learning rate: 0.0001
09/16 08:30:34 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:30:40 AM: Update 975: task edges-spr2, batch 75 (975): mcc: 0.7612, acc: 0.1152, precision: 0.8608, recall: 0.8340, f1: 0.8472, edges-spr2_loss: 0.2455
09/16 08:30:43 AM: ***** Step 1000 / Validation 10 *****
09/16 08:30:43 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:30:43 AM: Validating...
09/16 08:30:44 AM: Updating LR scheduler:
09/16 08:30:44 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:30:44 AM: 	# validation passes without improvement: 0
09/16 08:30:44 AM: edges-spr2_loss: training: 0.245048 validation: 0.323224
09/16 08:30:44 AM: macro_avg: validation: 0.817223
09/16 08:30:44 AM: micro_avg: validation: 0.000000
09/16 08:30:44 AM: edges-spr2_mcc: training: 0.760507 validation: 0.714985
09/16 08:30:44 AM: edges-spr2_acc: training: 0.114627 validation: 0.085714
09/16 08:30:44 AM: edges-spr2_precision: training: 0.860964 validation: 0.845262
09/16 08:30:44 AM: edges-spr2_recall: training: 0.833327 validation: 0.790984
09/16 08:30:44 AM: edges-spr2_f1: training: 0.846920 validation: 0.817223
09/16 08:30:44 AM: Global learning rate: 5e-05
09/16 08:30:44 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:30:50 AM: Update 1075: task edges-spr2, batch 75 (1075): mcc: 0.7628, acc: 0.1122, precision: 0.8615, recall: 0.8341, f1: 0.8475, edges-spr2_loss: 0.2430
09/16 08:30:52 AM: ***** Step 1100 / Validation 11 *****
09/16 08:30:52 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:30:52 AM: Validating...
09/16 08:30:53 AM: Updating LR scheduler:
09/16 08:30:53 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:30:53 AM: 	# validation passes without improvement: 1
09/16 08:30:53 AM: edges-spr2_loss: training: 0.239844 validation: 0.321926
09/16 08:30:53 AM: macro_avg: validation: 0.823071
09/16 08:30:53 AM: micro_avg: validation: 0.000000
09/16 08:30:53 AM: edges-spr2_mcc: training: 0.766258 validation: 0.720959
09/16 08:30:53 AM: edges-spr2_acc: training: 0.112467 validation: 0.077778
09/16 08:30:53 AM: edges-spr2_precision: training: 0.864304 validation: 0.838034
09/16 08:30:53 AM: edges-spr2_recall: training: 0.836016 validation: 0.808633
09/16 08:30:53 AM: edges-spr2_f1: training: 0.849925 validation: 0.823071
09/16 08:30:53 AM: Global learning rate: 5e-05
09/16 08:30:53 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:31:00 AM: Update 1182: task edges-spr2, batch 82 (1182): mcc: 0.7670, acc: 0.1212, precision: 0.8651, recall: 0.8366, f1: 0.8506, edges-spr2_loss: 0.2375
09/16 08:31:02 AM: ***** Step 1200 / Validation 12 *****
09/16 08:31:02 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:31:02 AM: Validating...
09/16 08:31:03 AM: Updating LR scheduler:
09/16 08:31:03 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:31:03 AM: 	# validation passes without improvement: 2
09/16 08:31:03 AM: edges-spr2_loss: training: 0.238445 validation: 0.323636
09/16 08:31:03 AM: macro_avg: validation: 0.820100
09/16 08:31:03 AM: micro_avg: validation: 0.000000
09/16 08:31:03 AM: edges-spr2_mcc: training: 0.765633 validation: 0.717323
09/16 08:31:03 AM: edges-spr2_acc: training: 0.121457 validation: 0.076190
09/16 08:31:03 AM: edges-spr2_precision: training: 0.863903 validation: 0.839457
09/16 08:31:03 AM: edges-spr2_recall: training: 0.836139 validation: 0.801616
09/16 08:31:03 AM: edges-spr2_f1: training: 0.849794 validation: 0.820100
09/16 08:31:03 AM: Global learning rate: 5e-05
09/16 08:31:03 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:31:10 AM: Update 1284: task edges-spr2, batch 84 (1284): mcc: 0.7723, acc: 0.1265, precision: 0.8674, recall: 0.8408, f1: 0.8539, edges-spr2_loss: 0.2342
09/16 08:31:11 AM: ***** Step 1300 / Validation 13 *****
09/16 08:31:11 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:31:11 AM: Validating...
09/16 08:31:12 AM: Updating LR scheduler:
09/16 08:31:12 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:31:12 AM: 	# validation passes without improvement: 3
09/16 08:31:12 AM: edges-spr2_loss: training: 0.234458 validation: 0.324836
09/16 08:31:12 AM: macro_avg: validation: 0.820829
09/16 08:31:12 AM: micro_avg: validation: 0.000000
09/16 08:31:12 AM: edges-spr2_mcc: training: 0.771424 validation: 0.717506
09/16 08:31:12 AM: edges-spr2_acc: training: 0.124352 validation: 0.077778
09/16 08:31:12 AM: edges-spr2_precision: training: 0.866539 validation: 0.836127
09/16 08:31:12 AM: edges-spr2_recall: training: 0.840623 validation: 0.806081
09/16 08:31:12 AM: edges-spr2_f1: training: 0.853384 validation: 0.820829
09/16 08:31:12 AM: Global learning rate: 5e-05
09/16 08:31:12 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:31:20 AM: Update 1397: task edges-spr2, batch 97 (1397): mcc: 0.7708, acc: 0.1237, precision: 0.8649, recall: 0.8427, f1: 0.8536, edges-spr2_loss: 0.2344
09/16 08:31:20 AM: ***** Step 1400 / Validation 14 *****
09/16 08:31:20 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:31:20 AM: Validating...
09/16 08:31:21 AM: Updating LR scheduler:
09/16 08:31:21 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:31:21 AM: 	# validation passes without improvement: 0
09/16 08:31:21 AM: edges-spr2_loss: training: 0.234462 validation: 0.323484
09/16 08:31:21 AM: macro_avg: validation: 0.819472
09/16 08:31:21 AM: micro_avg: validation: 0.000000
09/16 08:31:21 AM: edges-spr2_mcc: training: 0.770706 validation: 0.717084
09/16 08:31:21 AM: edges-spr2_acc: training: 0.124521 validation: 0.080952
09/16 08:31:21 AM: edges-spr2_precision: training: 0.864760 validation: 0.841893
09/16 08:31:21 AM: edges-spr2_recall: training: 0.842517 validation: 0.798214
09/16 08:31:21 AM: edges-spr2_f1: training: 0.853494 validation: 0.819472
09/16 08:31:21 AM: Global learning rate: 2.5e-05
09/16 08:31:21 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:31:30 AM: ***** Step 1500 / Validation 15 *****
09/16 08:31:30 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:31:30 AM: Validating...
09/16 08:31:30 AM: Evaluate: task edges-spr2, batch 1 (10): mcc: 0.7333, acc: 0.1081, precision: 0.8353, recall: 0.8465, f1: 0.8409, edges-spr2_loss: 0.2900
09/16 08:31:31 AM: Updating LR scheduler:
09/16 08:31:31 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:31:31 AM: 	# validation passes without improvement: 1
09/16 08:31:31 AM: edges-spr2_loss: training: 0.231984 validation: 0.323244
09/16 08:31:31 AM: macro_avg: validation: 0.822755
09/16 08:31:31 AM: micro_avg: validation: 0.000000
09/16 08:31:31 AM: edges-spr2_mcc: training: 0.772929 validation: 0.719967
09/16 08:31:31 AM: edges-spr2_acc: training: 0.129943 validation: 0.084127
09/16 08:31:31 AM: edges-spr2_precision: training: 0.869286 validation: 0.835562
09/16 08:31:31 AM: edges-spr2_recall: training: 0.840317 validation: 0.810334
09/16 08:31:31 AM: edges-spr2_f1: training: 0.854556 validation: 0.822755
09/16 08:31:31 AM: Global learning rate: 2.5e-05
09/16 08:31:31 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:31:39 AM: ***** Step 1600 / Validation 16 *****
09/16 08:31:39 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:31:39 AM: Validating...
09/16 08:31:40 AM: Updating LR scheduler:
09/16 08:31:40 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:31:40 AM: 	# validation passes without improvement: 2
09/16 08:31:40 AM: Ran out of early stopping patience. Stopping training.
09/16 08:31:40 AM: edges-spr2_loss: training: 0.231053 validation: 0.324060
09/16 08:31:40 AM: macro_avg: validation: 0.818764
09/16 08:31:40 AM: micro_avg: validation: 0.000000
09/16 08:31:40 AM: edges-spr2_mcc: training: 0.773617 validation: 0.714874
09/16 08:31:40 AM: edges-spr2_acc: training: 0.129390 validation: 0.080952
09/16 08:31:40 AM: edges-spr2_precision: training: 0.867009 validation: 0.836662
09/16 08:31:40 AM: edges-spr2_recall: training: 0.843203 validation: 0.801616
09/16 08:31:40 AM: edges-spr2_f1: training: 0.854940 validation: 0.818764
09/16 08:31:40 AM: Global learning rate: 2.5e-05
09/16 08:31:40 AM: Saving checkpoints to: ./experiments/spr2-sst-mix/run
09/16 08:31:40 AM: Stopped training after 16 validation checks
09/16 08:31:40 AM: Trained edges-spr2 for 1600 batches or 22.857 epochs
09/16 08:31:40 AM: ***** VALIDATION RESULTS *****
09/16 08:31:40 AM: edges-spr2_f1 (for best val pass 6): edges-spr2_loss: 0.31756, macro_avg: 0.82421, micro_avg: 0.00000, edges-spr2_mcc: 0.72435, edges-spr2_acc: 0.08889, edges-spr2_precision: 0.84598, edges-spr2_recall: 0.80353, edges-spr2_f1: 0.82421
09/16 08:31:40 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.34101, macro_avg: 0.80332, micro_avg: 0.00000, edges-spr2_mcc: 0.69891, edges-spr2_acc: 0.08413, edges-spr2_precision: 0.85089, edges-spr2_recall: 0.76079, edges-spr2_f1: 0.80332
09/16 08:31:40 AM: macro_avg (for best val pass 6): edges-spr2_loss: 0.31756, macro_avg: 0.82421, micro_avg: 0.00000, edges-spr2_mcc: 0.72435, edges-spr2_acc: 0.08889, edges-spr2_precision: 0.84598, edges-spr2_recall: 0.80353, edges-spr2_f1: 0.82421
09/16 08:31:40 AM: Evaluating...
09/16 08:31:40 AM: Loaded model state from ./experiments/spr2-sst-mix/run/edges-spr2/model_state_target_train_val_6.best.th
09/16 08:31:40 AM: Evaluating on: edges-spr2, split: val
09/16 08:31:41 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:31:41 AM: Finished evaluating on: edges-spr2
09/16 08:31:41 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:31:41 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-sst-mix/run
09/16 08:31:41 AM: Wrote all preds for split 'val' to ./experiments/spr2-sst-mix/run
09/16 08:31:41 AM: Evaluating on: edges-spr2, split: test
09/16 08:31:42 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:31:42 AM: Finished evaluating on: edges-spr2
09/16 08:31:42 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:31:42 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-sst-mix/run
09/16 08:31:42 AM: Wrote all preds for split 'test' to ./experiments/spr2-sst-mix/run
09/16 08:31:42 AM: Writing results for split 'val' to ./experiments/spr2-sst-mix/results.tsv
09/16 08:31:42 AM: micro_avg: 0.000, macro_avg: 0.824, edges-spr2_mcc: 0.724, edges-spr2_acc: 0.089, edges-spr2_precision: 0.846, edges-spr2_recall: 0.804, edges-spr2_f1: 0.824
09/16 08:31:42 AM: Done!
09/16 08:31:42 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
