09/16 08:35:00 AM: Git branch: master
09/16 08:35:00 AM: Git SHA: a6b97574b819abe0c17f2f3300d1097e5c87dbde
09/16 08:35:01 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-coref-mix/",
  "exp_name": "experiments/rel-semeval-coref-mix",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-coref-mix/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/coref",
  "pytorch_transformers_output_mode": "mix",
  "remote_log_name": "experiments/rel-semeval-coref-mix__run",
  "run_dir": "./experiments/rel-semeval-coref-mix/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:35:01 AM: Saved config to ./experiments/rel-semeval-coref-mix/run/params.conf
09/16 08:35:01 AM: Using random seed 1234
09/16 08:35:01 AM: Using GPU 0
09/16 08:35:01 AM: Loading tasks...
09/16 08:35:01 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-coref-mix/
09/16 08:35:01 AM: 	Creating task edges-rel-semeval from scratch.
09/16 08:35:01 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 08:35:01 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 08:35:01 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 08:35:01 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 08:35:01 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 08:35:01 AM: 	Building vocab from scratch.
09/16 08:35:01 AM: 	Counting units for task edges-rel-semeval.
09/16 08:35:01 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 08:35:02 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:02 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:35:02 AM: 	Saved vocab to ./experiments/rel-semeval-coref-mix/vocab
09/16 08:35:02 AM: Loading token dictionary from ./experiments/rel-semeval-coref-mix/vocab.
09/16 08:35:02 AM: 	Loaded vocab from ./experiments/rel-semeval-coref-mix/vocab
09/16 08:35:02 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:35:02 AM: 	Vocab namespace tokens: size 16020
09/16 08:35:02 AM: 	Vocab namespace chars: size 59
09/16 08:35:02 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 08:35:02 AM: 	Finished building vocab.
09/16 08:35:02 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 08:35:03 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-coref-mix/preproc/edges-rel-semeval__train_data
09/16 08:35:03 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 08:35:04 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-coref-mix/preproc/edges-rel-semeval__val_data
09/16 08:35:04 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 08:35:04 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-coref-mix/preproc/edges-rel-semeval__test_data
09/16 08:35:04 AM: 	Finished indexing tasks
09/16 08:35:04 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 08:35:04 AM: 	  Training on 
09/16 08:35:04 AM: 	  Evaluating on edges-rel-semeval
09/16 08:35:04 AM: 	Finished loading tasks in 3.186s
09/16 08:35:04 AM: 	 Tasks: ['edges-rel-semeval']
09/16 08:35:04 AM: Building model...
09/16 08:35:04 AM: Using BERT model (bert-base-uncased).
09/16 08:35:04 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:35:04 AM: models/coref
09/16 08:35:04 AM: loading configuration file models/coref/config.json
09/16 08:35:04 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:35:04 AM: loading weights file models/coref/pytorch_model.bin
09/16 08:35:08 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpy9__n1q7
09/16 08:35:10 AM: copying /tmp/tmpy9__n1q7 to cache at ./experiments/rel-semeval-coref-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:10 AM: creating metadata file for ./experiments/rel-semeval-coref-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:10 AM: removing temp file /tmp/tmpy9__n1q7
09/16 08:35:10 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-coref-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:10 AM: NOTE: pytorch_transformers_output_mode='mix', so scalar mixing weights will be fine-tuned even if BERT model is frozen.
09/16 08:35:10 AM: Initializing parameters
09/16 08:35:10 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:35:10 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:35:10 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:35:10 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:35:10 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:35:10 AM:    _text_field_embedder.scalar_mix.gamma
09/16 08:35:10 AM:    _text_field_embedder.scalar_mix.scalar_parameters.0
09/16 08:35:10 AM:    _text_field_embedder.scalar_mix.scalar_parameters.1
09/16 08:35:10 AM:    _text_field_embedder.scalar_mix.scalar_parameters.10
09/16 08:35:10 AM:    _text_field_embedder.scalar_mix.scalar_parameters.11
09/16 08:35:10 AM:    _text_field_embedder.scalar_mix.scalar_parameters.12
09/16 08:35:10 AM:    _text_field_embedder.scalar_mix.scalar_parameters.2
09/16 08:35:10 AM:    _text_field_embedder.scalar_mix.scalar_parameters.3
09/16 08:35:10 AM:    _text_field_embedder.scalar_mix.scalar_parameters.4
09/16 08:35:10 AM:    _text_field_embedder.scalar_mix.scalar_parameters.5
09/16 08:35:10 AM:    _text_field_embedder.scalar_mix.scalar_parameters.6
09/16 08:35:10 AM:    _text_field_embedder.scalar_mix.scalar_parameters.7
09/16 08:35:10 AM:    _text_field_embedder.scalar_mix.scalar_parameters.8
09/16 08:35:10 AM:    _text_field_embedder.scalar_mix.scalar_parameters.9
09/16 08:35:10 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 08:35:13 AM: Model specification:
09/16 08:35:13 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
      (scalar_mix): ScalarMix(
        (scalar_parameters): ParameterList(
            (0): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (1): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (2): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (3): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (4): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (5): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (6): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (7): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (8): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (9): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (10): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (11): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (12): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 08:35:13 AM: Model parameters:
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.scalar_mix.gamma: Trainable parameter, count 1 with torch.Size([1])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.0: Trainable parameter, count 1 with torch.Size([1])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.1: Trainable parameter, count 1 with torch.Size([1])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.2: Trainable parameter, count 1 with torch.Size([1])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.3: Trainable parameter, count 1 with torch.Size([1])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.4: Trainable parameter, count 1 with torch.Size([1])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.5: Trainable parameter, count 1 with torch.Size([1])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.6: Trainable parameter, count 1 with torch.Size([1])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.7: Trainable parameter, count 1 with torch.Size([1])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.8: Trainable parameter, count 1 with torch.Size([1])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.9: Trainable parameter, count 1 with torch.Size([1])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.10: Trainable parameter, count 1 with torch.Size([1])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.11: Trainable parameter, count 1 with torch.Size([1])
09/16 08:35:14 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.12: Trainable parameter, count 1 with torch.Size([1])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 08:35:14 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 08:35:14 AM: Total number of parameters: 110143777 (1.10144e+08)
09/16 08:35:14 AM: Number of trainable parameters: 661537 (661537)
09/16 08:35:14 AM: Finished building model in 9.622s
09/16 08:35:14 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 08:35:14 AM: patience = 9
09/16 08:35:14 AM: val_interval = 100
09/16 08:35:14 AM: max_vals = 100
09/16 08:35:14 AM: cuda_device = 0
09/16 08:35:14 AM: grad_norm = 5.0
09/16 08:35:14 AM: grad_clipping = None
09/16 08:35:14 AM: lr_decay = 0.99
09/16 08:35:14 AM: min_lr = 1e-06
09/16 08:35:14 AM: keep_all_checkpoints = 0
09/16 08:35:14 AM: val_data_limit = 5000
09/16 08:35:14 AM: max_epochs = -1
09/16 08:35:14 AM: dec_val_scale = 250
09/16 08:35:14 AM: training_data_fraction = 1
09/16 08:35:14 AM: type = adam
09/16 08:35:14 AM: parameter_groups = None
09/16 08:35:14 AM: Number of trainable parameters: 661537
09/16 08:35:14 AM: infer_type_and_cast = True
09/16 08:35:14 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:14 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:14 AM: lr = 0.0001
09/16 08:35:14 AM: amsgrad = True
09/16 08:35:14 AM: type = reduce_on_plateau
09/16 08:35:14 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:14 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:14 AM: mode = max
09/16 08:35:14 AM: factor = 0.5
09/16 08:35:14 AM: patience = 3
09/16 08:35:14 AM: threshold = 0.0001
09/16 08:35:14 AM: threshold_mode = abs
09/16 08:35:14 AM: verbose = True
09/16 08:35:14 AM: type = adam
09/16 08:35:14 AM: parameter_groups = None
09/16 08:35:14 AM: Number of trainable parameters: 661537
09/16 08:35:14 AM: infer_type_and_cast = True
09/16 08:35:14 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:14 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:14 AM: lr = 0.0001
09/16 08:35:14 AM: amsgrad = True
09/16 08:35:14 AM: type = reduce_on_plateau
09/16 08:35:14 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:14 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:14 AM: mode = max
09/16 08:35:14 AM: factor = 0.5
09/16 08:35:14 AM: patience = 3
09/16 08:35:14 AM: threshold = 0.0001
09/16 08:35:14 AM: threshold_mode = abs
09/16 08:35:14 AM: verbose = True
09/16 08:35:14 AM: Starting training without restoring from a checkpoint.
09/16 08:35:14 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 08:35:14 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 08:35:20 AM: ***** Step 100 / Validation 1 *****
09/16 08:35:20 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:20 AM: Validating...
09/16 08:35:22 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:22 AM: Best result seen so far for micro.
09/16 08:35:22 AM: Best result seen so far for macro.
09/16 08:35:22 AM: Updating LR scheduler:
09/16 08:35:22 AM: 	Best result seen so far for macro_avg: 0.000
09/16 08:35:22 AM: 	# validation passes without improvement: 0
09/16 08:35:22 AM: edges-rel-semeval_loss: training: 0.248142 validation: 0.174693
09/16 08:35:22 AM: macro_avg: validation: 0.000000
09/16 08:35:22 AM: micro_avg: validation: 0.000000
09/16 08:35:22 AM: edges-rel-semeval_mcc: training: 0.011146 validation: 0.000000
09/16 08:35:22 AM: edges-rel-semeval_acc: training: 0.003154 validation: 0.000000
09/16 08:35:22 AM: edges-rel-semeval_precision: training: 0.069307 validation: 0.000000
09/16 08:35:22 AM: edges-rel-semeval_recall: training: 0.028698 validation: 0.000000
09/16 08:35:22 AM: edges-rel-semeval_f1: training: 0.040589 validation: 0.000000
09/16 08:35:22 AM: Global learning rate: 0.0001
09/16 08:35:22 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:35:25 AM: Update 147: task edges-rel-semeval, batch 47 (147): mcc: 0.0739, acc: 0.0080, precision: 0.7500, recall: 0.0080, f1: 0.0158, edges-rel-semeval_loss: 0.1744
09/16 08:35:27 AM: ***** Step 200 / Validation 2 *****
09/16 08:35:27 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:27 AM: Validating...
09/16 08:35:29 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:29 AM: Best result seen so far for macro.
09/16 08:35:29 AM: Updating LR scheduler:
09/16 08:35:29 AM: 	Best result seen so far for macro_avg: 0.177
09/16 08:35:29 AM: 	# validation passes without improvement: 0
09/16 08:35:29 AM: edges-rel-semeval_loss: training: 0.166190 validation: 0.141169
09/16 08:35:29 AM: macro_avg: validation: 0.176517
09/16 08:35:29 AM: micro_avg: validation: 0.000000
09/16 08:35:29 AM: edges-rel-semeval_mcc: training: 0.147288 validation: 0.293222
09/16 08:35:29 AM: edges-rel-semeval_acc: training: 0.027500 validation: 0.097476
09/16 08:35:29 AM: edges-rel-semeval_precision: training: 0.839623 validation: 0.933333
09/16 08:35:29 AM: edges-rel-semeval_recall: training: 0.027812 validation: 0.097476
09/16 08:35:29 AM: edges-rel-semeval_f1: training: 0.053841 validation: 0.176517
09/16 08:35:29 AM: Global learning rate: 0.0001
09/16 08:35:29 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:35:35 AM: Update 290: task edges-rel-semeval, batch 90 (290): mcc: 0.3412, acc: 0.1470, precision: 0.8229, recall: 0.1515, f1: 0.2559, edges-rel-semeval_loss: 0.1401
09/16 08:35:35 AM: ***** Step 300 / Validation 3 *****
09/16 08:35:35 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:35 AM: Validating...
09/16 08:35:37 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:37 AM: Best result seen so far for macro.
09/16 08:35:37 AM: Updating LR scheduler:
09/16 08:35:37 AM: 	Best result seen so far for macro_avg: 0.338
09/16 08:35:37 AM: 	# validation passes without improvement: 0
09/16 08:35:37 AM: edges-rel-semeval_loss: training: 0.138888 validation: 0.120806
09/16 08:35:37 AM: macro_avg: validation: 0.337828
09/16 08:35:37 AM: micro_avg: validation: 0.000000
09/16 08:35:37 AM: edges-rel-semeval_mcc: training: 0.353775 validation: 0.424185
09/16 08:35:37 AM: edges-rel-semeval_acc: training: 0.157679 validation: 0.206266
09/16 08:35:37 AM: edges-rel-semeval_precision: training: 0.822967 validation: 0.915385
09/16 08:35:37 AM: edges-rel-semeval_recall: training: 0.162725 validation: 0.207137
09/16 08:35:37 AM: edges-rel-semeval_f1: training: 0.271722 validation: 0.337828
09/16 08:35:37 AM: Global learning rate: 0.0001
09/16 08:35:37 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:35:42 AM: ***** Step 400 / Validation 4 *****
09/16 08:35:42 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:42 AM: Validating...
09/16 08:35:44 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:44 AM: Best result seen so far for macro.
09/16 08:35:44 AM: Updating LR scheduler:
09/16 08:35:44 AM: 	Best result seen so far for macro_avg: 0.469
09/16 08:35:44 AM: 	# validation passes without improvement: 0
09/16 08:35:44 AM: edges-rel-semeval_loss: training: 0.120209 validation: 0.107511
09/16 08:35:44 AM: macro_avg: validation: 0.468770
09/16 08:35:44 AM: micro_avg: validation: 0.000000
09/16 08:35:44 AM: edges-rel-semeval_mcc: training: 0.472004 validation: 0.521683
09/16 08:35:44 AM: edges-rel-semeval_acc: training: 0.273750 validation: 0.312446
09/16 08:35:44 AM: edges-rel-semeval_precision: training: 0.829091 validation: 0.900990
09/16 08:35:44 AM: edges-rel-semeval_recall: training: 0.285000 validation: 0.316797
09/16 08:35:44 AM: edges-rel-semeval_f1: training: 0.424186 validation: 0.468770
09/16 08:35:44 AM: Global learning rate: 0.0001
09/16 08:35:44 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:35:45 AM: Update 409: task edges-rel-semeval, batch 9 (409): mcc: 0.4954, acc: 0.2951, precision: 0.8396, recall: 0.3090, f1: 0.4518, edges-rel-semeval_loss: 0.1188
09/16 08:35:49 AM: ***** Step 500 / Validation 5 *****
09/16 08:35:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:49 AM: Validating...
09/16 08:35:52 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:52 AM: Best result seen so far for macro.
09/16 08:35:52 AM: Updating LR scheduler:
09/16 08:35:52 AM: 	Best result seen so far for macro_avg: 0.541
09/16 08:35:52 AM: 	# validation passes without improvement: 0
09/16 08:35:52 AM: edges-rel-semeval_loss: training: 0.109817 validation: 0.098820
09/16 08:35:52 AM: macro_avg: validation: 0.540606
09/16 08:35:52 AM: micro_avg: validation: 0.000000
09/16 08:35:52 AM: edges-rel-semeval_mcc: training: 0.542374 validation: 0.574872
09/16 08:35:52 AM: edges-rel-semeval_acc: training: 0.352886 validation: 0.383812
09/16 08:35:52 AM: edges-rel-semeval_precision: training: 0.852593 validation: 0.890220
09/16 08:35:52 AM: edges-rel-semeval_recall: training: 0.362977 validation: 0.388164
09/16 08:35:52 AM: edges-rel-semeval_f1: training: 0.509179 validation: 0.540606
09/16 08:35:52 AM: Global learning rate: 0.0001
09/16 08:35:52 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:35:55 AM: Update 567: task edges-rel-semeval, batch 67 (567): mcc: 0.5979, acc: 0.4212, precision: 0.8578, recall: 0.4361, f1: 0.5782, edges-rel-semeval_loss: 0.0997
09/16 08:35:56 AM: ***** Step 600 / Validation 6 *****
09/16 08:35:56 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:56 AM: Validating...
09/16 08:35:58 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:58 AM: Best result seen so far for macro.
09/16 08:35:58 AM: Updating LR scheduler:
09/16 08:35:58 AM: 	Best result seen so far for macro_avg: 0.596
09/16 08:35:58 AM: 	# validation passes without improvement: 0
09/16 08:35:58 AM: edges-rel-semeval_loss: training: 0.099434 validation: 0.092334
09/16 08:35:58 AM: macro_avg: validation: 0.596309
09/16 08:35:58 AM: micro_avg: validation: 0.000000
09/16 08:35:58 AM: edges-rel-semeval_mcc: training: 0.593458 validation: 0.617625
09/16 08:35:58 AM: edges-rel-semeval_acc: training: 0.420000 validation: 0.444735
09/16 08:35:58 AM: edges-rel-semeval_precision: training: 0.846061 validation: 0.883761
09/16 08:35:58 AM: edges-rel-semeval_recall: training: 0.436250 validation: 0.449956
09/16 08:35:58 AM: edges-rel-semeval_f1: training: 0.575670 validation: 0.596309
09/16 08:35:58 AM: Global learning rate: 0.0001
09/16 08:35:58 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:36:04 AM: ***** Step 700 / Validation 7 *****
09/16 08:36:04 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:04 AM: Validating...
09/16 08:36:05 AM: Evaluate: task edges-rel-semeval, batch 17 (36): mcc: 0.6557, acc: 0.4945, precision: 0.8867, recall: 0.5037, f1: 0.6424, edges-rel-semeval_loss: 0.0842
09/16 08:36:06 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:06 AM: Best result seen so far for macro.
09/16 08:36:06 AM: Updating LR scheduler:
09/16 08:36:06 AM: 	Best result seen so far for macro_avg: 0.607
09/16 08:36:06 AM: 	# validation passes without improvement: 0
09/16 08:36:06 AM: edges-rel-semeval_loss: training: 0.092265 validation: 0.087807
09/16 08:36:06 AM: macro_avg: validation: 0.606539
09/16 08:36:06 AM: micro_avg: validation: 0.000000
09/16 08:36:06 AM: edges-rel-semeval_mcc: training: 0.629113 validation: 0.621341
09/16 08:36:06 AM: edges-rel-semeval_acc: training: 0.463892 validation: 0.459530
09/16 08:36:06 AM: edges-rel-semeval_precision: training: 0.854515 validation: 0.860800
09/16 08:36:06 AM: edges-rel-semeval_recall: training: 0.483444 validation: 0.468233
09/16 08:36:06 AM: edges-rel-semeval_f1: training: 0.617523 validation: 0.606539
09/16 08:36:06 AM: Global learning rate: 0.0001
09/16 08:36:06 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:36:11 AM: ***** Step 800 / Validation 8 *****
09/16 08:36:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:11 AM: Validating...
09/16 08:36:13 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:13 AM: Best result seen so far for macro.
09/16 08:36:13 AM: Updating LR scheduler:
09/16 08:36:13 AM: 	Best result seen so far for macro_avg: 0.664
09/16 08:36:13 AM: 	# validation passes without improvement: 0
09/16 08:36:13 AM: edges-rel-semeval_loss: training: 0.087609 validation: 0.082818
09/16 08:36:13 AM: macro_avg: validation: 0.663765
09/16 08:36:13 AM: micro_avg: validation: 0.000000
09/16 08:36:13 AM: edges-rel-semeval_mcc: training: 0.650822 validation: 0.673205
09/16 08:36:13 AM: edges-rel-semeval_acc: training: 0.487812 validation: 0.521323
09/16 08:36:13 AM: edges-rel-semeval_precision: training: 0.856549 validation: 0.885341
09/16 08:36:13 AM: edges-rel-semeval_recall: training: 0.515000 validation: 0.530896
09/16 08:36:13 AM: edges-rel-semeval_f1: training: 0.643247 validation: 0.663765
09/16 08:36:13 AM: Global learning rate: 0.0001
09/16 08:36:13 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:36:15 AM: Update 843: task edges-rel-semeval, batch 43 (843): mcc: 0.6619, acc: 0.5058, precision: 0.8545, recall: 0.5334, f1: 0.6568, edges-rel-semeval_loss: 0.0864
09/16 08:36:18 AM: ***** Step 900 / Validation 9 *****
09/16 08:36:18 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:18 AM: Validating...
09/16 08:36:20 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:20 AM: Best result seen so far for macro.
09/16 08:36:20 AM: Updating LR scheduler:
09/16 08:36:20 AM: 	Best result seen so far for macro_avg: 0.674
09/16 08:36:20 AM: 	# validation passes without improvement: 0
09/16 08:36:20 AM: edges-rel-semeval_loss: training: 0.084287 validation: 0.080560
09/16 08:36:20 AM: macro_avg: validation: 0.673502
09/16 08:36:20 AM: micro_avg: validation: 0.000000
09/16 08:36:20 AM: edges-rel-semeval_mcc: training: 0.664433 validation: 0.681571
09/16 08:36:20 AM: edges-rel-semeval_acc: training: 0.513403 validation: 0.535248
09/16 08:36:20 AM: edges-rel-semeval_precision: training: 0.854564 validation: 0.886364
09/16 08:36:20 AM: edges-rel-semeval_recall: training: 0.537370 validation: 0.543081
09/16 08:36:20 AM: edges-rel-semeval_f1: training: 0.659826 validation: 0.673502
09/16 08:36:20 AM: Global learning rate: 0.0001
09/16 08:36:20 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:36:25 AM: Update 990: task edges-rel-semeval, batch 90 (990): mcc: 0.7089, acc: 0.5663, precision: 0.8791, recall: 0.5910, f1: 0.7068, edges-rel-semeval_loss: 0.0775
09/16 08:36:25 AM: ***** Step 1000 / Validation 10 *****
09/16 08:36:25 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:25 AM: Validating...
09/16 08:36:27 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:27 AM: Best result seen so far for macro.
09/16 08:36:27 AM: Updating LR scheduler:
09/16 08:36:27 AM: 	Best result seen so far for macro_avg: 0.678
09/16 08:36:27 AM: 	# validation passes without improvement: 0
09/16 08:36:27 AM: edges-rel-semeval_loss: training: 0.077672 validation: 0.078507
09/16 08:36:27 AM: macro_avg: validation: 0.677859
09/16 08:36:27 AM: micro_avg: validation: 0.000000
09/16 08:36:27 AM: edges-rel-semeval_mcc: training: 0.704769 validation: 0.679644
09/16 08:36:27 AM: edges-rel-semeval_acc: training: 0.561250 validation: 0.540470
09/16 08:36:27 AM: edges-rel-semeval_precision: training: 0.875175 validation: 0.853369
09/16 08:36:27 AM: edges-rel-semeval_recall: training: 0.587188 validation: 0.562228
09/16 08:36:27 AM: edges-rel-semeval_f1: training: 0.702824 validation: 0.677859
09/16 08:36:27 AM: Global learning rate: 0.0001
09/16 08:36:27 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:36:33 AM: ***** Step 1100 / Validation 11 *****
09/16 08:36:33 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:33 AM: Validating...
09/16 08:36:35 AM: Evaluate: task edges-rel-semeval, batch 29 (36): mcc: 0.7218, acc: 0.5927, precision: 0.8878, recall: 0.6056, f1: 0.7201, edges-rel-semeval_loss: 0.0733
09/16 08:36:35 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:35 AM: Best result seen so far for macro.
09/16 08:36:35 AM: Updating LR scheduler:
09/16 08:36:35 AM: 	Best result seen so far for macro_avg: 0.693
09/16 08:36:35 AM: 	# validation passes without improvement: 0
09/16 08:36:35 AM: edges-rel-semeval_loss: training: 0.075828 validation: 0.076902
09/16 08:36:35 AM: macro_avg: validation: 0.693361
09/16 08:36:35 AM: micro_avg: validation: 0.000000
09/16 08:36:35 AM: edges-rel-semeval_mcc: training: 0.697225 validation: 0.697133
09/16 08:36:35 AM: edges-rel-semeval_acc: training: 0.561337 validation: 0.560487
09/16 08:36:35 AM: edges-rel-semeval_precision: training: 0.853303 validation: 0.878505
09/16 08:36:35 AM: edges-rel-semeval_recall: training: 0.590665 validation: 0.572672
09/16 08:36:35 AM: edges-rel-semeval_f1: training: 0.698099 validation: 0.693361
09/16 08:36:35 AM: Global learning rate: 0.0001
09/16 08:36:35 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:36:40 AM: ***** Step 1200 / Validation 12 *****
09/16 08:36:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:40 AM: Validating...
09/16 08:36:42 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:42 AM: Best result seen so far for macro.
09/16 08:36:42 AM: Updating LR scheduler:
09/16 08:36:42 AM: 	Best result seen so far for macro_avg: 0.701
09/16 08:36:42 AM: 	# validation passes without improvement: 0
09/16 08:36:42 AM: edges-rel-semeval_loss: training: 0.073038 validation: 0.075186
09/16 08:36:42 AM: macro_avg: validation: 0.700624
09/16 08:36:42 AM: micro_avg: validation: 0.000000
09/16 08:36:42 AM: edges-rel-semeval_mcc: training: 0.717632 validation: 0.701983
09/16 08:36:42 AM: edges-rel-semeval_acc: training: 0.580937 validation: 0.563098
09/16 08:36:42 AM: edges-rel-semeval_precision: training: 0.869507 validation: 0.869677
09/16 08:36:42 AM: edges-rel-semeval_recall: training: 0.612188 validation: 0.586597
09/16 08:36:42 AM: edges-rel-semeval_f1: training: 0.718504 validation: 0.700624
09/16 08:36:42 AM: Global learning rate: 0.0001
09/16 08:36:42 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:36:45 AM: Update 1258: task edges-rel-semeval, batch 58 (1258): mcc: 0.7031, acc: 0.5668, precision: 0.8378, recall: 0.6121, f1: 0.7073, edges-rel-semeval_loss: 0.0729
09/16 08:36:47 AM: ***** Step 1300 / Validation 13 *****
09/16 08:36:47 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:47 AM: Validating...
09/16 08:36:50 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:50 AM: Best result seen so far for macro.
09/16 08:36:50 AM: Updating LR scheduler:
09/16 08:36:50 AM: 	Best result seen so far for macro_avg: 0.704
09/16 08:36:50 AM: 	# validation passes without improvement: 0
09/16 08:36:50 AM: edges-rel-semeval_loss: training: 0.071988 validation: 0.073144
09/16 08:36:50 AM: macro_avg: validation: 0.704082
09/16 08:36:50 AM: micro_avg: validation: 0.000000
09/16 08:36:50 AM: edges-rel-semeval_mcc: training: 0.707541 validation: 0.702113
09/16 08:36:50 AM: edges-rel-semeval_acc: training: 0.571429 validation: 0.575283
09/16 08:36:50 AM: edges-rel-semeval_precision: training: 0.846925 validation: 0.850801
09/16 08:36:50 AM: edges-rel-semeval_recall: training: 0.612425 validation: 0.600522
09/16 08:36:50 AM: edges-rel-semeval_f1: training: 0.710835 validation: 0.704082
09/16 08:36:50 AM: Global learning rate: 0.0001
09/16 08:36:50 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:36:54 AM: ***** Step 1400 / Validation 14 *****
09/16 08:36:54 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:54 AM: Validating...
09/16 08:36:55 AM: Evaluate: task edges-rel-semeval, batch 9 (36): mcc: 0.7476, acc: 0.6319, precision: 0.8863, recall: 0.6493, f1: 0.7495, edges-rel-semeval_loss: 0.0672
09/16 08:36:57 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:57 AM: Best result seen so far for macro.
09/16 08:36:57 AM: Updating LR scheduler:
09/16 08:36:57 AM: 	Best result seen so far for macro_avg: 0.710
09/16 08:36:57 AM: 	# validation passes without improvement: 0
09/16 08:36:57 AM: edges-rel-semeval_loss: training: 0.067820 validation: 0.073094
09/16 08:36:57 AM: macro_avg: validation: 0.709610
09/16 08:36:57 AM: micro_avg: validation: 0.000000
09/16 08:36:57 AM: edges-rel-semeval_mcc: training: 0.742179 validation: 0.711460
09/16 08:36:57 AM: edges-rel-semeval_acc: training: 0.613750 validation: 0.582245
09/16 08:36:57 AM: edges-rel-semeval_precision: training: 0.870672 validation: 0.880155
09/16 08:36:57 AM: edges-rel-semeval_recall: training: 0.652188 validation: 0.594430
09/16 08:36:57 AM: edges-rel-semeval_f1: training: 0.745757 validation: 0.709610
09/16 08:36:57 AM: Global learning rate: 0.0001
09/16 08:36:57 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:37:01 AM: ***** Step 1500 / Validation 15 *****
09/16 08:37:01 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:01 AM: Validating...
09/16 08:37:03 AM: Best result seen so far for edges-rel-semeval.
09/16 08:37:03 AM: Best result seen so far for macro.
09/16 08:37:03 AM: Updating LR scheduler:
09/16 08:37:03 AM: 	Best result seen so far for macro_avg: 0.715
09/16 08:37:03 AM: 	# validation passes without improvement: 0
09/16 08:37:03 AM: edges-rel-semeval_loss: training: 0.066689 validation: 0.071778
09/16 08:37:03 AM: macro_avg: validation: 0.715164
09/16 08:37:03 AM: micro_avg: validation: 0.000000
09/16 08:37:03 AM: edges-rel-semeval_mcc: training: 0.745724 validation: 0.714645
09/16 08:37:03 AM: edges-rel-semeval_acc: training: 0.615313 validation: 0.582245
09/16 08:37:03 AM: edges-rel-semeval_precision: training: 0.876730 validation: 0.869240
09/16 08:37:03 AM: edges-rel-semeval_recall: training: 0.653437 validation: 0.607485
09/16 08:37:03 AM: edges-rel-semeval_f1: training: 0.748791 validation: 0.715164
09/16 08:37:03 AM: Global learning rate: 0.0001
09/16 08:37:03 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:37:05 AM: Update 1514: task edges-rel-semeval, batch 14 (1514): mcc: 0.7425, acc: 0.6086, precision: 0.8722, recall: 0.6516, f1: 0.7459, edges-rel-semeval_loss: 0.0630
09/16 08:37:09 AM: ***** Step 1600 / Validation 16 *****
09/16 08:37:09 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:09 AM: Validating...
09/16 08:37:11 AM: Best result seen so far for edges-rel-semeval.
09/16 08:37:11 AM: Best result seen so far for macro.
09/16 08:37:11 AM: Updating LR scheduler:
09/16 08:37:11 AM: 	Best result seen so far for macro_avg: 0.715
09/16 08:37:11 AM: 	# validation passes without improvement: 0
09/16 08:37:11 AM: edges-rel-semeval_loss: training: 0.063263 validation: 0.071980
09/16 08:37:11 AM: macro_avg: validation: 0.715397
09/16 08:37:11 AM: micro_avg: validation: 0.000000
09/16 08:37:11 AM: edges-rel-semeval_mcc: training: 0.757717 validation: 0.717205
09/16 08:37:11 AM: edges-rel-semeval_acc: training: 0.634816 validation: 0.585727
09/16 08:37:11 AM: edges-rel-semeval_precision: training: 0.876538 validation: 0.884615
09/16 08:37:11 AM: edges-rel-semeval_recall: training: 0.673920 validation: 0.600522
09/16 08:37:11 AM: edges-rel-semeval_f1: training: 0.761990 validation: 0.715397
09/16 08:37:11 AM: Global learning rate: 0.0001
09/16 08:37:11 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:37:15 AM: Update 1689: task edges-rel-semeval, batch 89 (1689): mcc: 0.7407, acc: 0.6124, precision: 0.8594, recall: 0.6587, f1: 0.7458, edges-rel-semeval_loss: 0.0657
09/16 08:37:15 AM: ***** Step 1700 / Validation 17 *****
09/16 08:37:15 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:15 AM: Validating...
09/16 08:37:17 AM: Updating LR scheduler:
09/16 08:37:17 AM: 	Best result seen so far for macro_avg: 0.715
09/16 08:37:17 AM: 	# validation passes without improvement: 1
09/16 08:37:17 AM: edges-rel-semeval_loss: training: 0.065158 validation: 0.070349
09/16 08:37:17 AM: macro_avg: validation: 0.714571
09/16 08:37:17 AM: micro_avg: validation: 0.000000
09/16 08:37:17 AM: edges-rel-semeval_mcc: training: 0.744676 validation: 0.709570
09/16 08:37:17 AM: edges-rel-semeval_acc: training: 0.615313 validation: 0.592689
09/16 08:37:17 AM: edges-rel-semeval_precision: training: 0.863785 validation: 0.837427
09/16 08:37:17 AM: edges-rel-semeval_recall: training: 0.661875 validation: 0.623151
09/16 08:37:17 AM: edges-rel-semeval_f1: training: 0.749469 validation: 0.714571
09/16 08:37:17 AM: Global learning rate: 0.0001
09/16 08:37:17 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:37:23 AM: ***** Step 1800 / Validation 18 *****
09/16 08:37:23 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:23 AM: Validating...
09/16 08:37:25 AM: Evaluate: task edges-rel-semeval, batch 30 (36): mcc: 0.7427, acc: 0.6260, precision: 0.8719, recall: 0.6521, f1: 0.7461, edges-rel-semeval_loss: 0.0671
09/16 08:37:25 AM: Best result seen so far for edges-rel-semeval.
09/16 08:37:25 AM: Best result seen so far for macro.
09/16 08:37:25 AM: Updating LR scheduler:
09/16 08:37:25 AM: 	Best result seen so far for macro_avg: 0.723
09/16 08:37:25 AM: 	# validation passes without improvement: 0
09/16 08:37:25 AM: edges-rel-semeval_loss: training: 0.061522 validation: 0.070504
09/16 08:37:25 AM: macro_avg: validation: 0.723062
09/16 08:37:25 AM: micro_avg: validation: 0.000000
09/16 08:37:25 AM: edges-rel-semeval_mcc: training: 0.766244 validation: 0.720001
09/16 08:37:25 AM: edges-rel-semeval_acc: training: 0.645538 validation: 0.598782
09/16 08:37:25 AM: edges-rel-semeval_precision: training: 0.872070 validation: 0.857826
09/16 08:37:25 AM: edges-rel-semeval_recall: training: 0.692211 validation: 0.624891
09/16 08:37:25 AM: edges-rel-semeval_f1: training: 0.771800 validation: 0.723062
09/16 08:37:25 AM: Global learning rate: 0.0001
09/16 08:37:25 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:37:30 AM: ***** Step 1900 / Validation 19 *****
09/16 08:37:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:30 AM: Validating...
09/16 08:37:32 AM: Best result seen so far for edges-rel-semeval.
09/16 08:37:32 AM: Best result seen so far for macro.
09/16 08:37:32 AM: Updating LR scheduler:
09/16 08:37:32 AM: 	Best result seen so far for macro_avg: 0.727
09/16 08:37:32 AM: 	# validation passes without improvement: 0
09/16 08:37:32 AM: edges-rel-semeval_loss: training: 0.060733 validation: 0.068688
09/16 08:37:32 AM: macro_avg: validation: 0.726724
09/16 08:37:32 AM: micro_avg: validation: 0.000000
09/16 08:37:32 AM: edges-rel-semeval_mcc: training: 0.766240 validation: 0.723803
09/16 08:37:32 AM: edges-rel-semeval_acc: training: 0.650625 validation: 0.609225
09/16 08:37:32 AM: edges-rel-semeval_precision: training: 0.866071 validation: 0.861575
09/16 08:37:32 AM: edges-rel-semeval_recall: training: 0.697187 validation: 0.628372
09/16 08:37:32 AM: edges-rel-semeval_f1: training: 0.772507 validation: 0.726724
09/16 08:37:32 AM: Global learning rate: 0.0001
09/16 08:37:32 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:37:35 AM: Update 1943: task edges-rel-semeval, batch 43 (1943): mcc: 0.7695, acc: 0.6451, precision: 0.8756, recall: 0.6949, f1: 0.7748, edges-rel-semeval_loss: 0.0596
09/16 08:37:38 AM: ***** Step 2000 / Validation 20 *****
09/16 08:37:38 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:38 AM: Validating...
09/16 08:37:40 AM: Updating LR scheduler:
09/16 08:37:40 AM: 	Best result seen so far for macro_avg: 0.727
09/16 08:37:40 AM: 	# validation passes without improvement: 1
09/16 08:37:40 AM: edges-rel-semeval_loss: training: 0.058045 validation: 0.070015
09/16 08:37:40 AM: macro_avg: validation: 0.726251
09/16 08:37:40 AM: micro_avg: validation: 0.000000
09/16 08:37:40 AM: edges-rel-semeval_mcc: training: 0.782998 validation: 0.725866
09/16 08:37:40 AM: edges-rel-semeval_acc: training: 0.664775 validation: 0.602263
09/16 08:37:40 AM: edges-rel-semeval_precision: training: 0.884314 validation: 0.878863
09/16 08:37:40 AM: edges-rel-semeval_recall: training: 0.711132 validation: 0.618799
09/16 08:37:40 AM: edges-rel-semeval_f1: training: 0.788324 validation: 0.726251
09/16 08:37:40 AM: Global learning rate: 0.0001
09/16 08:37:40 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:37:45 AM: Update 2098: task edges-rel-semeval, batch 98 (2098): mcc: 0.7839, acc: 0.6760, precision: 0.8832, recall: 0.7136, f1: 0.7894, edges-rel-semeval_loss: 0.0582
09/16 08:37:45 AM: ***** Step 2100 / Validation 21 *****
09/16 08:37:45 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:45 AM: Validating...
09/16 08:37:47 AM: Updating LR scheduler:
09/16 08:37:47 AM: 	Best result seen so far for macro_avg: 0.727
09/16 08:37:47 AM: 	# validation passes without improvement: 2
09/16 08:37:47 AM: edges-rel-semeval_loss: training: 0.058160 validation: 0.068561
09/16 08:37:47 AM: macro_avg: validation: 0.723896
09/16 08:37:47 AM: micro_avg: validation: 0.000000
09/16 08:37:47 AM: edges-rel-semeval_mcc: training: 0.784705 validation: 0.720394
09/16 08:37:47 AM: edges-rel-semeval_acc: training: 0.676562 validation: 0.602263
09/16 08:37:47 AM: edges-rel-semeval_precision: training: 0.883991 validation: 0.855279
09/16 08:37:47 AM: edges-rel-semeval_recall: training: 0.714375 validation: 0.627502
09/16 08:37:47 AM: edges-rel-semeval_f1: training: 0.790183 validation: 0.723896
09/16 08:37:47 AM: Global learning rate: 0.0001
09/16 08:37:47 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:37:53 AM: ***** Step 2200 / Validation 22 *****
09/16 08:37:53 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:53 AM: Validating...
09/16 08:37:55 AM: Evaluate: task edges-rel-semeval, batch 35 (36): mcc: 0.7284, acc: 0.6045, precision: 0.8810, recall: 0.6214, f1: 0.7288, edges-rel-semeval_loss: 0.0663
09/16 08:37:55 AM: Updating LR scheduler:
09/16 08:37:55 AM: 	Best result seen so far for macro_avg: 0.727
09/16 08:37:55 AM: 	# validation passes without improvement: 3
09/16 08:37:55 AM: edges-rel-semeval_loss: training: 0.056590 validation: 0.067580
09/16 08:37:55 AM: macro_avg: validation: 0.725691
09/16 08:37:55 AM: micro_avg: validation: 0.000000
09/16 08:37:55 AM: edges-rel-semeval_mcc: training: 0.786216 validation: 0.725650
09/16 08:37:55 AM: edges-rel-semeval_acc: training: 0.676127 validation: 0.600522
09/16 08:37:55 AM: edges-rel-semeval_precision: training: 0.877153 validation: 0.880745
09/16 08:37:55 AM: edges-rel-semeval_recall: training: 0.722800 validation: 0.617058
09/16 08:37:55 AM: edges-rel-semeval_f1: training: 0.792531 validation: 0.725691
09/16 08:37:55 AM: Global learning rate: 0.0001
09/16 08:37:55 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:38:00 AM: ***** Step 2300 / Validation 23 *****
09/16 08:38:00 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:00 AM: Validating...
09/16 08:38:02 AM: Best result seen so far for edges-rel-semeval.
09/16 08:38:02 AM: Best result seen so far for macro.
09/16 08:38:02 AM: Updating LR scheduler:
09/16 08:38:02 AM: 	Best result seen so far for macro_avg: 0.746
09/16 08:38:02 AM: 	# validation passes without improvement: 0
09/16 08:38:02 AM: edges-rel-semeval_loss: training: 0.057479 validation: 0.067016
09/16 08:38:02 AM: macro_avg: validation: 0.745516
09/16 08:38:02 AM: micro_avg: validation: 0.000000
09/16 08:38:02 AM: edges-rel-semeval_mcc: training: 0.784540 validation: 0.738357
09/16 08:38:02 AM: edges-rel-semeval_acc: training: 0.671250 validation: 0.633594
09/16 08:38:02 AM: edges-rel-semeval_precision: training: 0.878823 validation: 0.841357
09/16 08:38:02 AM: edges-rel-semeval_recall: training: 0.718437 validation: 0.669278
09/16 08:38:02 AM: edges-rel-semeval_f1: training: 0.790578 validation: 0.745516
09/16 08:38:02 AM: Global learning rate: 0.0001
09/16 08:38:02 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:38:05 AM: Update 2363: task edges-rel-semeval, batch 63 (2363): mcc: 0.7926, acc: 0.6776, precision: 0.8829, recall: 0.7292, f1: 0.7987, edges-rel-semeval_loss: 0.0550
09/16 08:38:07 AM: ***** Step 2400 / Validation 24 *****
09/16 08:38:07 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:07 AM: Validating...
09/16 08:38:10 AM: Updating LR scheduler:
09/16 08:38:10 AM: 	Best result seen so far for macro_avg: 0.746
09/16 08:38:10 AM: 	# validation passes without improvement: 1
09/16 08:38:10 AM: edges-rel-semeval_loss: training: 0.052787 validation: 0.068203
09/16 08:38:10 AM: macro_avg: validation: 0.722279
09/16 08:38:10 AM: micro_avg: validation: 0.000000
09/16 08:38:10 AM: edges-rel-semeval_mcc: training: 0.801053 validation: 0.720905
09/16 08:38:10 AM: edges-rel-semeval_acc: training: 0.688111 validation: 0.595300
09/16 08:38:10 AM: edges-rel-semeval_precision: training: 0.890369 validation: 0.869033
09/16 08:38:10 AM: edges-rel-semeval_recall: training: 0.737622 validation: 0.617929
09/16 08:38:10 AM: edges-rel-semeval_f1: training: 0.806830 validation: 0.722279
09/16 08:38:10 AM: Global learning rate: 0.0001
09/16 08:38:10 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:38:15 AM: ***** Step 2500 / Validation 25 *****
09/16 08:38:15 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:15 AM: Validating...
09/16 08:38:15 AM: Evaluate: task edges-rel-semeval, batch 6 (36): mcc: 0.7888, acc: 0.7031, precision: 0.8750, recall: 0.7292, f1: 0.7955, edges-rel-semeval_loss: 0.0572
09/16 08:38:17 AM: Best result seen so far for edges-rel-semeval.
09/16 08:38:17 AM: Best result seen so far for macro.
09/16 08:38:17 AM: Updating LR scheduler:
09/16 08:38:17 AM: 	Best result seen so far for macro_avg: 0.753
09/16 08:38:17 AM: 	# validation passes without improvement: 0
09/16 08:38:17 AM: edges-rel-semeval_loss: training: 0.053297 validation: 0.066222
09/16 08:38:17 AM: macro_avg: validation: 0.752699
09/16 08:38:17 AM: micro_avg: validation: 0.000000
09/16 08:38:17 AM: edges-rel-semeval_mcc: training: 0.801474 validation: 0.747510
09/16 08:38:17 AM: edges-rel-semeval_acc: training: 0.695625 validation: 0.641427
09/16 08:38:17 AM: edges-rel-semeval_precision: training: 0.890649 validation: 0.862767
09/16 08:38:17 AM: edges-rel-semeval_recall: training: 0.738125 validation: 0.667537
09/16 08:38:17 AM: edges-rel-semeval_f1: training: 0.807245 validation: 0.752699
09/16 08:38:17 AM: Global learning rate: 0.0001
09/16 08:38:17 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:38:23 AM: ***** Step 2600 / Validation 26 *****
09/16 08:38:23 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:23 AM: Validating...
09/16 08:38:25 AM: Updating LR scheduler:
09/16 08:38:25 AM: 	Best result seen so far for macro_avg: 0.753
09/16 08:38:25 AM: 	# validation passes without improvement: 1
09/16 08:38:25 AM: edges-rel-semeval_loss: training: 0.053693 validation: 0.067189
09/16 08:38:25 AM: macro_avg: validation: 0.743083
09/16 08:38:25 AM: micro_avg: validation: 0.000000
09/16 08:38:25 AM: edges-rel-semeval_mcc: training: 0.793937 validation: 0.738298
09/16 08:38:25 AM: edges-rel-semeval_acc: training: 0.687796 validation: 0.628372
09/16 08:38:25 AM: edges-rel-semeval_precision: training: 0.876877 validation: 0.859429
09/16 08:38:25 AM: edges-rel-semeval_recall: training: 0.736676 validation: 0.654482
09/16 08:38:25 AM: edges-rel-semeval_f1: training: 0.800686 validation: 0.743083
09/16 08:38:25 AM: Global learning rate: 0.0001
09/16 08:38:25 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:38:25 AM: Update 2604: task edges-rel-semeval, batch 4 (2604): mcc: 0.8343, acc: 0.7734, precision: 0.8739, recall: 0.8125, f1: 0.8421, edges-rel-semeval_loss: 0.0504
09/16 08:38:29 AM: ***** Step 2700 / Validation 27 *****
09/16 08:38:29 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:29 AM: Validating...
09/16 08:38:32 AM: Updating LR scheduler:
09/16 08:38:32 AM: 	Best result seen so far for macro_avg: 0.753
09/16 08:38:32 AM: 	# validation passes without improvement: 2
09/16 08:38:32 AM: edges-rel-semeval_loss: training: 0.050450 validation: 0.066840
09/16 08:38:32 AM: macro_avg: validation: 0.738721
09/16 08:38:32 AM: micro_avg: validation: 0.000000
09/16 08:38:32 AM: edges-rel-semeval_mcc: training: 0.817724 validation: 0.734183
09/16 08:38:32 AM: edges-rel-semeval_acc: training: 0.716250 validation: 0.624021
09/16 08:38:32 AM: edges-rel-semeval_precision: training: 0.895742 validation: 0.858295
09/16 08:38:32 AM: edges-rel-semeval_recall: training: 0.762500 validation: 0.648390
09/16 08:38:32 AM: edges-rel-semeval_f1: training: 0.823768 validation: 0.738721
09/16 08:38:32 AM: Global learning rate: 0.0001
09/16 08:38:32 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:38:35 AM: Update 2775: task edges-rel-semeval, batch 75 (2775): mcc: 0.8028, acc: 0.6950, precision: 0.8824, recall: 0.7475, f1: 0.8094, edges-rel-semeval_loss: 0.0530
09/16 08:38:37 AM: ***** Step 2800 / Validation 28 *****
09/16 08:38:37 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:37 AM: Validating...
09/16 08:38:39 AM: Updating LR scheduler:
09/16 08:38:39 AM: 	Best result seen so far for macro_avg: 0.753
09/16 08:38:39 AM: 	# validation passes without improvement: 3
09/16 08:38:39 AM: edges-rel-semeval_loss: training: 0.052729 validation: 0.066963
09/16 08:38:39 AM: macro_avg: validation: 0.737989
09/16 08:38:39 AM: micro_avg: validation: 0.000000
09/16 08:38:39 AM: edges-rel-semeval_mcc: training: 0.801316 validation: 0.733263
09/16 08:38:39 AM: edges-rel-semeval_acc: training: 0.692211 validation: 0.623151
09/16 08:38:39 AM: edges-rel-semeval_precision: training: 0.883234 validation: 0.856322
09/16 08:38:39 AM: edges-rel-semeval_recall: training: 0.744245 validation: 0.648390
09/16 08:38:39 AM: edges-rel-semeval_f1: training: 0.807804 validation: 0.737989
09/16 08:38:39 AM: Global learning rate: 0.0001
09/16 08:38:39 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:38:45 AM: ***** Step 2900 / Validation 29 *****
09/16 08:38:45 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:45 AM: Validating...
09/16 08:38:45 AM: Evaluate: task edges-rel-semeval, batch 6 (36): mcc: 0.7821, acc: 0.6927, precision: 0.8734, recall: 0.7188, f1: 0.7886, edges-rel-semeval_loss: 0.0575
09/16 08:38:47 AM: Updating LR scheduler:
09/16 08:38:47 AM: 	Best result seen so far for macro_avg: 0.753
09/16 08:38:47 AM: 	# validation passes without improvement: 0
09/16 08:38:47 AM: edges-rel-semeval_loss: training: 0.048382 validation: 0.066736
09/16 08:38:47 AM: macro_avg: validation: 0.750969
09/16 08:38:47 AM: micro_avg: validation: 0.000000
09/16 08:38:47 AM: edges-rel-semeval_mcc: training: 0.817277 validation: 0.744059
09/16 08:38:47 AM: edges-rel-semeval_acc: training: 0.713750 validation: 0.644038
09/16 08:38:47 AM: edges-rel-semeval_precision: training: 0.892701 validation: 0.846995
09/16 08:38:47 AM: edges-rel-semeval_recall: training: 0.764375 validation: 0.674500
09/16 08:38:47 AM: edges-rel-semeval_f1: training: 0.823569 validation: 0.750969
09/16 08:38:47 AM: Global learning rate: 5e-05
09/16 08:38:47 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:38:52 AM: ***** Step 3000 / Validation 30 *****
09/16 08:38:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:52 AM: Validating...
09/16 08:38:54 AM: Updating LR scheduler:
09/16 08:38:54 AM: 	Best result seen so far for macro_avg: 0.753
09/16 08:38:54 AM: 	# validation passes without improvement: 1
09/16 08:38:54 AM: edges-rel-semeval_loss: training: 0.052147 validation: 0.066272
09/16 08:38:54 AM: macro_avg: validation: 0.747792
09/16 08:38:54 AM: micro_avg: validation: 0.000000
09/16 08:38:54 AM: edges-rel-semeval_mcc: training: 0.804476 validation: 0.742320
09/16 08:38:54 AM: edges-rel-semeval_acc: training: 0.700937 validation: 0.632724
09/16 08:38:54 AM: edges-rel-semeval_precision: training: 0.882721 validation: 0.857143
09/16 08:38:54 AM: edges-rel-semeval_recall: training: 0.750313 validation: 0.663185
09/16 08:38:54 AM: edges-rel-semeval_f1: training: 0.811149 validation: 0.747792
09/16 08:38:54 AM: Global learning rate: 5e-05
09/16 08:38:54 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:38:55 AM: Update 3011: task edges-rel-semeval, batch 11 (3011): mcc: 0.7935, acc: 0.6873, precision: 0.8723, recall: 0.7399, f1: 0.8007, edges-rel-semeval_loss: 0.0514
09/16 08:38:59 AM: ***** Step 3100 / Validation 31 *****
09/16 08:38:59 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:38:59 AM: Validating...
09/16 08:39:02 AM: Updating LR scheduler:
09/16 08:39:02 AM: 	Best result seen so far for macro_avg: 0.753
09/16 08:39:02 AM: 	# validation passes without improvement: 2
09/16 08:39:02 AM: edges-rel-semeval_loss: training: 0.047635 validation: 0.066629
09/16 08:39:02 AM: macro_avg: validation: 0.744983
09/16 08:39:02 AM: micro_avg: validation: 0.000000
09/16 08:39:02 AM: edges-rel-semeval_mcc: training: 0.818778 validation: 0.739022
09/16 08:39:02 AM: edges-rel-semeval_acc: training: 0.720593 validation: 0.628372
09/16 08:39:02 AM: edges-rel-semeval_precision: training: 0.891042 validation: 0.851230
09/16 08:39:02 AM: edges-rel-semeval_recall: training: 0.768527 validation: 0.662315
09/16 08:39:02 AM: edges-rel-semeval_f1: training: 0.825262 validation: 0.744983
09/16 08:39:02 AM: Global learning rate: 5e-05
09/16 08:39:02 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:39:05 AM: Update 3180: task edges-rel-semeval, batch 80 (3180): mcc: 0.8193, acc: 0.7234, precision: 0.8914, recall: 0.7691, f1: 0.8257, edges-rel-semeval_loss: 0.0493
09/16 08:39:06 AM: ***** Step 3200 / Validation 32 *****
09/16 08:39:06 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:39:06 AM: Validating...
09/16 08:39:09 AM: Updating LR scheduler:
09/16 08:39:09 AM: 	Best result seen so far for macro_avg: 0.753
09/16 08:39:09 AM: 	# validation passes without improvement: 3
09/16 08:39:09 AM: edges-rel-semeval_loss: training: 0.048808 validation: 0.066318
09/16 08:39:09 AM: macro_avg: validation: 0.751219
09/16 08:39:09 AM: micro_avg: validation: 0.000000
09/16 08:39:09 AM: edges-rel-semeval_mcc: training: 0.821315 validation: 0.745170
09/16 08:39:09 AM: edges-rel-semeval_acc: training: 0.724375 validation: 0.638816
09/16 08:39:09 AM: edges-rel-semeval_precision: training: 0.893802 validation: 0.854606
09/16 08:39:09 AM: edges-rel-semeval_recall: training: 0.770625 validation: 0.670148
09/16 08:39:09 AM: edges-rel-semeval_f1: training: 0.827656 validation: 0.751219
09/16 08:39:09 AM: Global learning rate: 5e-05
09/16 08:39:09 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:39:14 AM: ***** Step 3300 / Validation 33 *****
09/16 08:39:14 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:39:14 AM: Validating...
09/16 08:39:16 AM: Evaluate: task edges-rel-semeval, batch 19 (36): mcc: 0.7762, acc: 0.6826, precision: 0.8710, recall: 0.7105, f1: 0.7826, edges-rel-semeval_loss: 0.0602
09/16 08:39:17 AM: Updating LR scheduler:
09/16 08:39:17 AM: 	Best result seen so far for macro_avg: 0.753
09/16 08:39:17 AM: 	# validation passes without improvement: 0
09/16 08:39:17 AM: edges-rel-semeval_loss: training: 0.046159 validation: 0.066045
09/16 08:39:17 AM: macro_avg: validation: 0.752552
09/16 08:39:17 AM: micro_avg: validation: 0.000000
09/16 08:39:17 AM: edges-rel-semeval_mcc: training: 0.828280 validation: 0.746148
09/16 08:39:17 AM: edges-rel-semeval_acc: training: 0.730054 validation: 0.639687
09/16 08:39:17 AM: edges-rel-semeval_precision: training: 0.896739 validation: 0.852423
09/16 08:39:17 AM: edges-rel-semeval_recall: training: 0.780511 validation: 0.673629
09/16 08:39:17 AM: edges-rel-semeval_f1: training: 0.834598 validation: 0.752552
09/16 08:39:17 AM: Global learning rate: 2.5e-05
09/16 08:39:17 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:39:21 AM: ***** Step 3400 / Validation 34 *****
09/16 08:39:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:39:21 AM: Validating...
09/16 08:39:23 AM: Updating LR scheduler:
09/16 08:39:23 AM: 	Best result seen so far for macro_avg: 0.753
09/16 08:39:23 AM: 	# validation passes without improvement: 1
09/16 08:39:23 AM: edges-rel-semeval_loss: training: 0.046567 validation: 0.066571
09/16 08:39:23 AM: macro_avg: validation: 0.745446
09/16 08:39:23 AM: micro_avg: validation: 0.000000
09/16 08:39:23 AM: edges-rel-semeval_mcc: training: 0.828223 validation: 0.740310
09/16 08:39:23 AM: edges-rel-semeval_acc: training: 0.732500 validation: 0.632724
09/16 08:39:23 AM: edges-rel-semeval_precision: training: 0.897196 validation: 0.858277
09/16 08:39:23 AM: edges-rel-semeval_recall: training: 0.780000 validation: 0.658834
09/16 08:39:23 AM: edges-rel-semeval_f1: training: 0.834503 validation: 0.745446
09/16 08:39:23 AM: Global learning rate: 2.5e-05
09/16 08:39:23 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:39:26 AM: Update 3441: task edges-rel-semeval, batch 41 (3441): mcc: 0.8189, acc: 0.7225, precision: 0.8808, recall: 0.7779, f1: 0.8262, edges-rel-semeval_loss: 0.0475
09/16 08:39:29 AM: ***** Step 3500 / Validation 35 *****
09/16 08:39:29 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:39:29 AM: Validating...
09/16 08:39:31 AM: Updating LR scheduler:
09/16 08:39:31 AM: 	Best result seen so far for macro_avg: 0.753
09/16 08:39:31 AM: 	# validation passes without improvement: 2
09/16 08:39:31 AM: Ran out of early stopping patience. Stopping training.
09/16 08:39:31 AM: edges-rel-semeval_loss: training: 0.046143 validation: 0.066099
09/16 08:39:31 AM: macro_avg: validation: 0.748653
09/16 08:39:31 AM: micro_avg: validation: 0.000000
09/16 08:39:31 AM: edges-rel-semeval_mcc: training: 0.824727 validation: 0.743033
09/16 08:39:31 AM: edges-rel-semeval_acc: training: 0.729738 validation: 0.634465
09/16 08:39:31 AM: edges-rel-semeval_precision: training: 0.888212 validation: 0.856502
09/16 08:39:31 AM: edges-rel-semeval_recall: training: 0.781772 validation: 0.664926
09/16 08:39:31 AM: edges-rel-semeval_f1: training: 0.831600 validation: 0.748653
09/16 08:39:31 AM: Global learning rate: 2.5e-05
09/16 08:39:31 AM: Saving checkpoints to: ./experiments/rel-semeval-coref-mix/run
09/16 08:39:31 AM: Stopped training after 35 validation checks
09/16 08:39:31 AM: Trained edges-rel-semeval for 3500 batches or 16.279 epochs
09/16 08:39:31 AM: ***** VALIDATION RESULTS *****
09/16 08:39:31 AM: edges-rel-semeval_f1 (for best val pass 25): edges-rel-semeval_loss: 0.06622, macro_avg: 0.75270, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.74751, edges-rel-semeval_acc: 0.64143, edges-rel-semeval_precision: 0.86277, edges-rel-semeval_recall: 0.66754, edges-rel-semeval_f1: 0.75270
09/16 08:39:31 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.17469, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 08:39:31 AM: macro_avg (for best val pass 25): edges-rel-semeval_loss: 0.06622, macro_avg: 0.75270, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.74751, edges-rel-semeval_acc: 0.64143, edges-rel-semeval_precision: 0.86277, edges-rel-semeval_recall: 0.66754, edges-rel-semeval_f1: 0.75270
09/16 08:39:31 AM: Evaluating...
09/16 08:39:31 AM: Loaded model state from ./experiments/rel-semeval-coref-mix/run/edges-rel-semeval/model_state_target_train_val_25.best.th
09/16 08:39:31 AM: Evaluating on: edges-rel-semeval, split: val
09/16 08:39:34 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:39:34 AM: Finished evaluating on: edges-rel-semeval
09/16 08:39:34 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 08:39:34 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-coref-mix/run
09/16 08:39:34 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-coref-mix/run
09/16 08:39:34 AM: Evaluating on: edges-rel-semeval, split: test
09/16 08:39:39 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:39:39 AM: Finished evaluating on: edges-rel-semeval
09/16 08:39:39 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 08:39:39 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-coref-mix/run
09/16 08:39:39 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-coref-mix/run
09/16 08:39:39 AM: Writing results for split 'val' to ./experiments/rel-semeval-coref-mix/results.tsv
09/16 08:39:39 AM: micro_avg: 0.000, macro_avg: 0.753, edges-rel-semeval_mcc: 0.748, edges-rel-semeval_acc: 0.641, edges-rel-semeval_precision: 0.863, edges-rel-semeval_recall: 0.668, edges-rel-semeval_f1: 0.753
09/16 08:39:39 AM: Done!
09/16 08:39:39 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
