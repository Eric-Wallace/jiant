09/16 09:18:52 AM: Git branch: master
09/16 09:18:52 AM: Git SHA: e62dc9f3b01eb77fa9261a5ff029cc2e417b8272
09/16 09:18:53 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/dep-ud-ewt-coref-top/",
  "exp_name": "experiments/dep-ud-ewt-coref-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/dep-ud-ewt-coref-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/coref",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/dep-ud-ewt-coref-top__run",
  "run_dir": "./experiments/dep-ud-ewt-coref-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-dep-ud-ewt",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 09:18:53 AM: Saved config to ./experiments/dep-ud-ewt-coref-top/run/params.conf
09/16 09:18:53 AM: Using random seed 1234
09/16 09:18:55 AM: Using GPU 0
09/16 09:18:55 AM: Loading tasks...
09/16 09:18:55 AM: Writing pre-preprocessed tasks to ./experiments/dep-ud-ewt-coref-top/
09/16 09:18:55 AM: 	Creating task edges-dep-ud-ewt from scratch.
09/16 09:18:57 AM: Read=12522, Skip=0, Total=12522 from ./probing_data/edges/dep_ewt/en_ewt-ud-train.json.retokenized.bert-base-uncased
09/16 09:18:57 AM: Read=2000, Skip=0, Total=2000 from ./probing_data/edges/dep_ewt/en_ewt-ud-dev.json.retokenized.bert-base-uncased
09/16 09:18:57 AM: Read=2075, Skip=0, Total=2075 from ./probing_data/edges/dep_ewt/en_ewt-ud-test.json.retokenized.bert-base-uncased
09/16 09:18:57 AM: 	Task 'edges-dep-ud-ewt': |train|=12522 |val|=2000 |test|=2075
09/16 09:18:57 AM: 	Finished loading tasks: edges-dep-ud-ewt.
09/16 09:18:57 AM: 	Building vocab from scratch.
09/16 09:18:57 AM: 	Counting units for task edges-dep-ud-ewt.
09/16 09:18:58 AM: 	Task 'edges-dep-ud-ewt': adding vocab namespace 'edges-dep-ud-ewt_labels'
09/16 09:18:59 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:18:59 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 09:18:59 AM: 	Saved vocab to ./experiments/dep-ud-ewt-coref-top/vocab
09/16 09:18:59 AM: Loading token dictionary from ./experiments/dep-ud-ewt-coref-top/vocab.
09/16 09:18:59 AM: 	Loaded vocab from ./experiments/dep-ud-ewt-coref-top/vocab
09/16 09:18:59 AM: 	Vocab namespace tokens: size 14333
09/16 09:18:59 AM: 	Vocab namespace bert_uncased: size 30524
09/16 09:18:59 AM: 	Vocab namespace edges-dep-ud-ewt_labels: size 49
09/16 09:18:59 AM: 	Vocab namespace chars: size 81
09/16 09:18:59 AM: 	Finished building vocab.
09/16 09:18:59 AM: 	Task edges-dep-ud-ewt (train): Indexing from scratch.
09/16 09:19:05 AM: 	Task edges-dep-ud-ewt (train): Saved 12522 instances to ./experiments/dep-ud-ewt-coref-top/preproc/edges-dep-ud-ewt__train_data
09/16 09:19:05 AM: 	Task edges-dep-ud-ewt (val): Indexing from scratch.
09/16 09:19:06 AM: 	Task edges-dep-ud-ewt (val): Saved 2000 instances to ./experiments/dep-ud-ewt-coref-top/preproc/edges-dep-ud-ewt__val_data
09/16 09:19:06 AM: 	Task edges-dep-ud-ewt (test): Indexing from scratch.
09/16 09:19:07 AM: 	Task edges-dep-ud-ewt (test): Saved 2075 instances to ./experiments/dep-ud-ewt-coref-top/preproc/edges-dep-ud-ewt__test_data
09/16 09:19:07 AM: 	Finished indexing tasks
09/16 09:19:07 AM: 	Creating trimmed target-only version of edges-dep-ud-ewt train.
09/16 09:19:07 AM: 	  Training on 
09/16 09:19:07 AM: 	  Evaluating on edges-dep-ud-ewt
09/16 09:19:07 AM: 	Finished loading tasks in 11.348s
09/16 09:19:07 AM: 	 Tasks: ['edges-dep-ud-ewt']
09/16 09:19:07 AM: Building model...
09/16 09:19:07 AM: Using BERT model (bert-base-uncased).
09/16 09:19:07 AM: LOADING A FUNETUNED MODEL from: 
09/16 09:19:07 AM: models/coref
09/16 09:19:07 AM: loading configuration file models/coref/config.json
09/16 09:19:07 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 09:19:07 AM: loading weights file models/coref/pytorch_model.bin
09/16 09:19:11 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmprki2hewc
09/16 09:19:14 AM: copying /tmp/tmprki2hewc to cache at ./experiments/dep-ud-ewt-coref-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:19:14 AM: creating metadata file for ./experiments/dep-ud-ewt-coref-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:19:14 AM: removing temp file /tmp/tmprki2hewc
09/16 09:19:14 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/dep-ud-ewt-coref-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:19:14 AM: Initializing parameters
09/16 09:19:14 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 09:19:14 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 09:19:14 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 09:19:14 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 09:19:14 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 09:19:14 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 09:19:14 AM: 	Task 'edges-dep-ud-ewt' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-dep-ud-ewt"
}
09/16 09:19:19 AM: Model specification:
09/16 09:19:19 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-dep-ud-ewt_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=49, bias=True)
      )
    )
  )
)
09/16 09:19:19 AM: Model parameters:
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:19 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:19 AM: 	edges-dep-ud-ewt_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 09:19:19 AM: 	edges-dep-ud-ewt_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:19 AM: 	edges-dep-ud-ewt_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 09:19:19 AM: 	edges-dep-ud-ewt_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:19 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 09:19:19 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:19 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:19 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:19 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.4.weight: Trainable parameter, count 12544 with torch.Size([49, 256])
09/16 09:19:19 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.4.bias: Trainable parameter, count 49 with torch.Size([49])
09/16 09:19:19 AM: Total number of parameters: 110151473 (1.10151e+08)
09/16 09:19:19 AM: Number of trainable parameters: 669233 (669233)
09/16 09:19:19 AM: Finished building model in 12.684s
09/16 09:19:19 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-dep-ud-ewt 

09/16 09:19:24 AM: patience = 9
09/16 09:19:24 AM: val_interval = 1000
09/16 09:19:24 AM: max_vals = 250
09/16 09:19:24 AM: cuda_device = 0
09/16 09:19:24 AM: grad_norm = 5.0
09/16 09:19:24 AM: grad_clipping = None
09/16 09:19:24 AM: lr_decay = 0.99
09/16 09:19:24 AM: min_lr = 1e-06
09/16 09:19:24 AM: keep_all_checkpoints = 0
09/16 09:19:24 AM: val_data_limit = 5000
09/16 09:19:24 AM: max_epochs = -1
09/16 09:19:24 AM: dec_val_scale = 250
09/16 09:19:24 AM: training_data_fraction = 1
09/16 09:19:24 AM: type = adam
09/16 09:19:24 AM: parameter_groups = None
09/16 09:19:24 AM: Number of trainable parameters: 669233
09/16 09:19:24 AM: infer_type_and_cast = True
09/16 09:19:24 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:24 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:24 AM: lr = 0.0001
09/16 09:19:24 AM: amsgrad = True
09/16 09:19:24 AM: type = reduce_on_plateau
09/16 09:19:24 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:24 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:24 AM: mode = max
09/16 09:19:24 AM: factor = 0.5
09/16 09:19:24 AM: patience = 3
09/16 09:19:24 AM: threshold = 0.0001
09/16 09:19:24 AM: threshold_mode = abs
09/16 09:19:24 AM: verbose = True
09/16 09:19:24 AM: type = adam
09/16 09:19:24 AM: parameter_groups = None
09/16 09:19:24 AM: Number of trainable parameters: 669233
09/16 09:19:24 AM: infer_type_and_cast = True
09/16 09:19:24 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:24 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:24 AM: lr = 0.0001
09/16 09:19:24 AM: amsgrad = True
09/16 09:19:24 AM: type = reduce_on_plateau
09/16 09:19:24 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:24 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:24 AM: mode = max
09/16 09:19:24 AM: factor = 0.5
09/16 09:19:24 AM: patience = 3
09/16 09:19:24 AM: threshold = 0.0001
09/16 09:19:24 AM: threshold_mode = abs
09/16 09:19:24 AM: verbose = True
09/16 09:19:24 AM: Starting training without restoring from a checkpoint.
09/16 09:19:24 AM: Training examples per task, before any subsampling: {'edges-dep-ud-ewt': 12522}
09/16 09:19:24 AM: Beginning training with stopping criteria based on metric: edges-dep-ud-ewt_f1
09/16 09:19:34 AM: Update 24: task edges-dep-ud-ewt, batch 24 (24): mcc: 0.0101, acc: 0.0088, precision: 0.0239, recall: 0.1699, f1: 0.0418, edges-dep-ud-ewt_loss: 0.3790
09/16 09:19:45 AM: Update 87: task edges-dep-ud-ewt, batch 87 (87): mcc: 0.0077, acc: 0.0061, precision: 0.0250, recall: 0.0654, f1: 0.0361, edges-dep-ud-ewt_loss: 0.2231
09/16 09:19:55 AM: Update 142: task edges-dep-ud-ewt, batch 142 (142): mcc: 0.0100, acc: 0.0088, precision: 0.0281, recall: 0.0449, f1: 0.0345, edges-dep-ud-ewt_loss: 0.1779
09/16 09:20:05 AM: Update 188: task edges-dep-ud-ewt, batch 188 (188): mcc: 0.0161, acc: 0.0146, precision: 0.0350, recall: 0.0407, f1: 0.0376, edges-dep-ud-ewt_loss: 0.1566
09/16 09:20:15 AM: Update 237: task edges-dep-ud-ewt, batch 237 (237): mcc: 0.0260, acc: 0.0229, precision: 0.0470, recall: 0.0433, f1: 0.0451, edges-dep-ud-ewt_loss: 0.1415
09/16 09:20:25 AM: Update 289: task edges-dep-ud-ewt, batch 289 (289): mcc: 0.0391, acc: 0.0325, precision: 0.0641, recall: 0.0493, f1: 0.0558, edges-dep-ud-ewt_loss: 0.1298
09/16 09:20:35 AM: Update 328: task edges-dep-ud-ewt, batch 328 (328): mcc: 0.0526, acc: 0.0421, precision: 0.0829, recall: 0.0567, f1: 0.0673, edges-dep-ud-ewt_loss: 0.1231
09/16 09:20:46 AM: Update 380: task edges-dep-ud-ewt, batch 380 (380): mcc: 0.0743, acc: 0.0569, precision: 0.1138, recall: 0.0696, f1: 0.0864, edges-dep-ud-ewt_loss: 0.1157
09/16 09:20:56 AM: Update 411: task edges-dep-ud-ewt, batch 411 (411): mcc: 0.0896, acc: 0.0669, precision: 0.1365, recall: 0.0787, f1: 0.0998, edges-dep-ud-ewt_loss: 0.1119
09/16 09:21:06 AM: Update 463: task edges-dep-ud-ewt, batch 463 (463): mcc: 0.1129, acc: 0.0817, precision: 0.1722, recall: 0.0924, f1: 0.1202, edges-dep-ud-ewt_loss: 0.1063
09/16 09:21:16 AM: Update 514: task edges-dep-ud-ewt, batch 514 (514): mcc: 0.1360, acc: 0.0961, precision: 0.2081, recall: 0.1059, f1: 0.1403, edges-dep-ud-ewt_loss: 0.1016
09/16 09:21:27 AM: Update 563: task edges-dep-ud-ewt, batch 563 (563): mcc: 0.1588, acc: 0.1101, precision: 0.2441, recall: 0.1194, f1: 0.1603, edges-dep-ud-ewt_loss: 0.0977
09/16 09:21:37 AM: Update 621: task edges-dep-ud-ewt, batch 621 (621): mcc: 0.1824, acc: 0.1247, precision: 0.2807, recall: 0.1337, f1: 0.1811, edges-dep-ud-ewt_loss: 0.0932
09/16 09:21:47 AM: Update 670: task edges-dep-ud-ewt, batch 670 (670): mcc: 0.2048, acc: 0.1386, precision: 0.3155, recall: 0.1475, f1: 0.2010, edges-dep-ud-ewt_loss: 0.0900
09/16 09:21:57 AM: Update 711: task edges-dep-ud-ewt, batch 711 (711): mcc: 0.2223, acc: 0.1495, precision: 0.3423, recall: 0.1584, f1: 0.2166, edges-dep-ud-ewt_loss: 0.0876
09/16 09:22:07 AM: Update 761: task edges-dep-ud-ewt, batch 761 (761): mcc: 0.2447, acc: 0.1640, precision: 0.3759, recall: 0.1728, f1: 0.2368, edges-dep-ud-ewt_loss: 0.0850
09/16 09:22:17 AM: Update 793: task edges-dep-ud-ewt, batch 793 (793): mcc: 0.2575, acc: 0.1723, precision: 0.3950, recall: 0.1811, f1: 0.2484, edges-dep-ud-ewt_loss: 0.0834
09/16 09:22:27 AM: Update 850: task edges-dep-ud-ewt, batch 850 (850): mcc: 0.2771, acc: 0.1853, precision: 0.4235, recall: 0.1942, f1: 0.2663, edges-dep-ud-ewt_loss: 0.0807
09/16 09:22:37 AM: Update 904: task edges-dep-ud-ewt, batch 904 (904): mcc: 0.2949, acc: 0.1971, precision: 0.4490, recall: 0.2063, f1: 0.2827, edges-dep-ud-ewt_loss: 0.0784
09/16 09:22:47 AM: Update 954: task edges-dep-ud-ewt, batch 954 (954): mcc: 0.3127, acc: 0.2093, precision: 0.4738, recall: 0.2187, f1: 0.2992, edges-dep-ud-ewt_loss: 0.0764
09/16 09:22:56 AM: ***** Step 1000 / Validation 1 *****
09/16 09:22:56 AM: edges-dep-ud-ewt: trained on 1000 batches, 2.551 epochs
09/16 09:22:56 AM: Validating...
09/16 09:22:57 AM: Evaluate: task edges-dep-ud-ewt, batch 5 (63): mcc: 0.6716, acc: 0.4839, precision: 0.9383, recall: 0.4869, f1: 0.6411, edges-dep-ud-ewt_loss: 0.0364
09/16 09:23:08 AM: Evaluate: task edges-dep-ud-ewt, batch 53 (63): mcc: 0.6682, acc: 0.4805, precision: 0.9348, recall: 0.4838, f1: 0.6376, edges-dep-ud-ewt_loss: 0.0367
09/16 09:23:10 AM: Best result seen so far for edges-dep-ud-ewt.
09/16 09:23:10 AM: Best result seen so far for micro.
09/16 09:23:10 AM: Best result seen so far for macro.
09/16 09:23:10 AM: Updating LR scheduler:
09/16 09:23:10 AM: 	Best result seen so far for macro_avg: 0.643
09/16 09:23:10 AM: 	# validation passes without improvement: 0
09/16 09:23:10 AM: edges-dep-ud-ewt_loss: training: 0.074719 validation: 0.036344
09/16 09:23:10 AM: macro_avg: validation: 0.643229
09/16 09:23:10 AM: micro_avg: validation: 0.000000
09/16 09:23:10 AM: edges-dep-ud-ewt_mcc: training: 0.327608 validation: 0.672891
09/16 09:23:10 AM: edges-dep-ud-ewt_acc: training: 0.219663 validation: 0.486539
09/16 09:23:10 AM: edges-dep-ud-ewt_precision: training: 0.494046 validation: 0.935879
09/16 09:23:10 AM: edges-dep-ud-ewt_recall: training: 0.229348 validation: 0.490004
09/16 09:23:10 AM: edges-dep-ud-ewt_f1: training: 0.313269 validation: 0.643229
09/16 09:23:10 AM: Global learning rate: 0.0001
09/16 09:23:10 AM: Saving checkpoints to: ./experiments/dep-ud-ewt-coref-top/run
09/16 09:23:18 AM: Update 1034: task edges-dep-ud-ewt, batch 34 (1034): mcc: 0.6260, acc: 0.4394, precision: 0.8763, recall: 0.4544, f1: 0.5985, edges-dep-ud-ewt_loss: 0.0396
09/16 09:23:28 AM: Update 1088: task edges-dep-ud-ewt, batch 88 (1088): mcc: 0.6325, acc: 0.4488, precision: 0.8744, recall: 0.4648, f1: 0.6070, edges-dep-ud-ewt_loss: 0.0391
09/16 09:23:38 AM: Update 1129: task edges-dep-ud-ewt, batch 129 (1129): mcc: 0.6390, acc: 0.4579, precision: 0.8737, recall: 0.4747, f1: 0.6152, edges-dep-ud-ewt_loss: 0.0389
09/16 09:23:51 AM: Update 1177: task edges-dep-ud-ewt, batch 177 (1177): mcc: 0.6455, acc: 0.4677, precision: 0.8721, recall: 0.4851, f1: 0.6234, edges-dep-ud-ewt_loss: 0.0383
09/16 09:24:01 AM: Update 1230: task edges-dep-ud-ewt, batch 230 (1230): mcc: 0.6486, acc: 0.4721, precision: 0.8717, recall: 0.4900, f1: 0.6273, edges-dep-ud-ewt_loss: 0.0380
09/16 09:24:11 AM: Update 1285: task edges-dep-ud-ewt, batch 285 (1285): mcc: 0.6524, acc: 0.4777, precision: 0.8716, recall: 0.4957, f1: 0.6320, edges-dep-ud-ewt_loss: 0.0374
09/16 09:24:21 AM: Update 1339: task edges-dep-ud-ewt, batch 339 (1339): mcc: 0.6560, acc: 0.4827, precision: 0.8709, recall: 0.5015, f1: 0.6365, edges-dep-ud-ewt_loss: 0.0369
09/16 09:24:31 AM: Update 1385: task edges-dep-ud-ewt, batch 385 (1385): mcc: 0.6580, acc: 0.4858, precision: 0.8699, recall: 0.5052, f1: 0.6392, edges-dep-ud-ewt_loss: 0.0367
09/16 09:24:42 AM: Update 1432: task edges-dep-ud-ewt, batch 432 (1432): mcc: 0.6609, acc: 0.4897, precision: 0.8699, recall: 0.5096, f1: 0.6427, edges-dep-ud-ewt_loss: 0.0364
09/16 09:24:52 AM: Update 1485: task edges-dep-ud-ewt, batch 485 (1485): mcc: 0.6640, acc: 0.4943, precision: 0.8694, recall: 0.5147, f1: 0.6466, edges-dep-ud-ewt_loss: 0.0359
09/16 09:25:02 AM: Update 1519: task edges-dep-ud-ewt, batch 519 (1519): mcc: 0.6665, acc: 0.4978, precision: 0.8692, recall: 0.5186, f1: 0.6496, edges-dep-ud-ewt_loss: 0.0358
09/16 09:25:15 AM: Update 1569: task edges-dep-ud-ewt, batch 569 (1569): mcc: 0.6700, acc: 0.5027, precision: 0.8690, recall: 0.5241, f1: 0.6539, edges-dep-ud-ewt_loss: 0.0355
09/16 09:25:25 AM: Update 1615: task edges-dep-ud-ewt, batch 615 (1615): mcc: 0.6719, acc: 0.5057, precision: 0.8684, recall: 0.5274, f1: 0.6563, edges-dep-ud-ewt_loss: 0.0354
09/16 09:25:35 AM: Update 1664: task edges-dep-ud-ewt, batch 664 (1664): mcc: 0.6741, acc: 0.5089, precision: 0.8682, recall: 0.5310, f1: 0.6590, edges-dep-ud-ewt_loss: 0.0351
09/16 09:25:45 AM: Update 1709: task edges-dep-ud-ewt, batch 709 (1709): mcc: 0.6757, acc: 0.5111, precision: 0.8679, recall: 0.5337, f1: 0.6610, edges-dep-ud-ewt_loss: 0.0349
09/16 09:25:55 AM: Update 1766: task edges-dep-ud-ewt, batch 766 (1766): mcc: 0.6780, acc: 0.5144, precision: 0.8676, recall: 0.5375, f1: 0.6638, edges-dep-ud-ewt_loss: 0.0345
09/16 09:26:05 AM: Update 1818: task edges-dep-ud-ewt, batch 818 (1818): mcc: 0.6799, acc: 0.5172, precision: 0.8671, recall: 0.5407, f1: 0.6661, edges-dep-ud-ewt_loss: 0.0343
09/16 09:26:15 AM: Update 1874: task edges-dep-ud-ewt, batch 874 (1874): mcc: 0.6821, acc: 0.5203, precision: 0.8669, recall: 0.5443, f1: 0.6687, edges-dep-ud-ewt_loss: 0.0340
09/16 09:26:25 AM: Update 1916: task edges-dep-ud-ewt, batch 916 (1916): mcc: 0.6842, acc: 0.5234, precision: 0.8671, recall: 0.5475, f1: 0.6712, edges-dep-ud-ewt_loss: 0.0338
09/16 09:26:38 AM: Update 1961: task edges-dep-ud-ewt, batch 961 (1961): mcc: 0.6864, acc: 0.5265, precision: 0.8669, recall: 0.5511, f1: 0.6738, edges-dep-ud-ewt_loss: 0.0336
09/16 09:26:45 AM: ***** Step 2000 / Validation 2 *****
09/16 09:26:45 AM: edges-dep-ud-ewt: trained on 1000 batches, 2.551 epochs
09/16 09:26:45 AM: Validating...
09/16 09:26:48 AM: Evaluate: task edges-dep-ud-ewt, batch 12 (63): mcc: 0.7693, acc: 0.6453, precision: 0.9022, recall: 0.6626, f1: 0.7641, edges-dep-ud-ewt_loss: 0.0259
09/16 09:26:58 AM: Evaluate: task edges-dep-ud-ewt, batch 62 (63): mcc: 0.7788, acc: 0.6625, precision: 0.8973, recall: 0.6825, f1: 0.7753, edges-dep-ud-ewt_loss: 0.0254
09/16 09:26:59 AM: Best result seen so far for edges-dep-ud-ewt.
09/16 09:26:59 AM: Best result seen so far for macro.
09/16 09:26:59 AM: Updating LR scheduler:
09/16 09:26:59 AM: 	Best result seen so far for macro_avg: 0.776
09/16 09:26:59 AM: 	# validation passes without improvement: 0
09/16 09:26:59 AM: edges-dep-ud-ewt_loss: training: 0.033389 validation: 0.025409
09/16 09:26:59 AM: macro_avg: validation: 0.775559
09/16 09:26:59 AM: micro_avg: validation: 0.000000
09/16 09:26:59 AM: edges-dep-ud-ewt_mcc: training: 0.687408 validation: 0.778993
09/16 09:26:59 AM: edges-dep-ud-ewt_acc: training: 0.528000 validation: 0.662883
09/16 09:26:59 AM: edges-dep-ud-ewt_precision: training: 0.866816 validation: 0.897284
09/16 09:26:59 AM: edges-dep-ud-ewt_recall: training: 0.552781 validation: 0.682915
09/16 09:26:59 AM: edges-dep-ud-ewt_f1: training: 0.675064 validation: 0.775559
09/16 09:26:59 AM: Global learning rate: 0.0001
09/16 09:26:59 AM: Saving checkpoints to: ./experiments/dep-ud-ewt-coref-top/run
09/16 09:27:09 AM: Update 2047: task edges-dep-ud-ewt, batch 47 (2047): mcc: 0.7183, acc: 0.5751, precision: 0.8597, recall: 0.6080, f1: 0.7123, edges-dep-ud-ewt_loss: 0.0301
09/16 09:27:19 AM: Update 2099: task edges-dep-ud-ewt, batch 99 (2099): mcc: 0.7195, acc: 0.5769, precision: 0.8603, recall: 0.6095, f1: 0.7135, edges-dep-ud-ewt_loss: 0.0301
09/16 09:27:29 AM: Update 2145: task edges-dep-ud-ewt, batch 145 (2145): mcc: 0.7202, acc: 0.5775, precision: 0.8597, recall: 0.6112, f1: 0.7145, edges-dep-ud-ewt_loss: 0.0298
09/16 09:27:39 AM: Update 2193: task edges-dep-ud-ewt, batch 193 (2193): mcc: 0.7216, acc: 0.5790, precision: 0.8610, recall: 0.6126, f1: 0.7159, edges-dep-ud-ewt_loss: 0.0293
09/16 09:27:49 AM: Update 2248: task edges-dep-ud-ewt, batch 248 (2248): mcc: 0.7228, acc: 0.5808, precision: 0.8608, recall: 0.6147, f1: 0.7173, edges-dep-ud-ewt_loss: 0.0292
09/16 09:27:59 AM: Update 2296: task edges-dep-ud-ewt, batch 296 (2296): mcc: 0.7248, acc: 0.5837, precision: 0.8610, recall: 0.6179, f1: 0.7195, edges-dep-ud-ewt_loss: 0.0290
09/16 09:28:09 AM: Update 2350: task edges-dep-ud-ewt, batch 350 (2350): mcc: 0.7284, acc: 0.5885, precision: 0.8627, recall: 0.6226, f1: 0.7232, edges-dep-ud-ewt_loss: 0.0288
09/16 09:28:19 AM: Update 2379: task edges-dep-ud-ewt, batch 379 (2379): mcc: 0.7288, acc: 0.5892, precision: 0.8626, recall: 0.6235, f1: 0.7238, edges-dep-ud-ewt_loss: 0.0288
09/16 09:28:29 AM: Update 2428: task edges-dep-ud-ewt, batch 428 (2428): mcc: 0.7296, acc: 0.5904, precision: 0.8620, recall: 0.6252, f1: 0.7247, edges-dep-ud-ewt_loss: 0.0288
09/16 09:28:40 AM: Update 2481: task edges-dep-ud-ewt, batch 481 (2481): mcc: 0.7301, acc: 0.5913, precision: 0.8618, recall: 0.6263, f1: 0.7254, edges-dep-ud-ewt_loss: 0.0286
09/16 09:28:50 AM: Update 2534: task edges-dep-ud-ewt, batch 534 (2534): mcc: 0.7307, acc: 0.5922, precision: 0.8615, recall: 0.6275, f1: 0.7261, edges-dep-ud-ewt_loss: 0.0285
09/16 09:29:00 AM: Update 2590: task edges-dep-ud-ewt, batch 590 (2590): mcc: 0.7317, acc: 0.5935, precision: 0.8615, recall: 0.6292, f1: 0.7272, edges-dep-ud-ewt_loss: 0.0283
09/16 09:29:11 AM: Update 2643: task edges-dep-ud-ewt, batch 643 (2643): mcc: 0.7320, acc: 0.5939, precision: 0.8610, recall: 0.6300, f1: 0.7276, edges-dep-ud-ewt_loss: 0.0282
09/16 09:29:21 AM: Update 2680: task edges-dep-ud-ewt, batch 680 (2680): mcc: 0.7329, acc: 0.5953, precision: 0.8611, recall: 0.6314, f1: 0.7286, edges-dep-ud-ewt_loss: 0.0281
09/16 09:29:31 AM: Update 2730: task edges-dep-ud-ewt, batch 730 (2730): mcc: 0.7341, acc: 0.5971, precision: 0.8614, recall: 0.6333, f1: 0.7299, edges-dep-ud-ewt_loss: 0.0280
09/16 09:29:41 AM: Update 2768: task edges-dep-ud-ewt, batch 768 (2768): mcc: 0.7345, acc: 0.5978, precision: 0.8610, recall: 0.6342, f1: 0.7304, edges-dep-ud-ewt_loss: 0.0279
09/16 09:29:51 AM: Update 2815: task edges-dep-ud-ewt, batch 815 (2815): mcc: 0.7350, acc: 0.5984, precision: 0.8608, recall: 0.6352, f1: 0.7310, edges-dep-ud-ewt_loss: 0.0279
09/16 09:30:01 AM: Update 2863: task edges-dep-ud-ewt, batch 863 (2863): mcc: 0.7357, acc: 0.5993, precision: 0.8609, recall: 0.6364, f1: 0.7318, edges-dep-ud-ewt_loss: 0.0278
09/16 09:30:11 AM: Update 2916: task edges-dep-ud-ewt, batch 916 (2916): mcc: 0.7363, acc: 0.6002, precision: 0.8608, recall: 0.6375, f1: 0.7325, edges-dep-ud-ewt_loss: 0.0277
09/16 09:30:21 AM: Update 2963: task edges-dep-ud-ewt, batch 963 (2963): mcc: 0.7369, acc: 0.6013, precision: 0.8607, recall: 0.6386, f1: 0.7332, edges-dep-ud-ewt_loss: 0.0277
09/16 09:30:28 AM: ***** Step 3000 / Validation 3 *****
09/16 09:30:28 AM: edges-dep-ud-ewt: trained on 1000 batches, 2.551 epochs
09/16 09:30:28 AM: Validating...
09/16 09:30:31 AM: Evaluate: task edges-dep-ud-ewt, batch 12 (63): mcc: 0.8071, acc: 0.6958, precision: 0.9194, recall: 0.7145, f1: 0.8041, edges-dep-ud-ewt_loss: 0.0217
09/16 09:30:41 AM: Evaluate: task edges-dep-ud-ewt, batch 62 (63): mcc: 0.8100, acc: 0.7012, precision: 0.9230, recall: 0.7166, f1: 0.8068, edges-dep-ud-ewt_loss: 0.0216
09/16 09:30:41 AM: Best result seen so far for edges-dep-ud-ewt.
09/16 09:30:41 AM: Best result seen so far for macro.
09/16 09:30:41 AM: Updating LR scheduler:
09/16 09:30:41 AM: 	Best result seen so far for macro_avg: 0.807
09/16 09:30:41 AM: 	# validation passes without improvement: 0
09/16 09:30:41 AM: edges-dep-ud-ewt_loss: training: 0.027649 validation: 0.021518
09/16 09:30:41 AM: macro_avg: validation: 0.807100
09/16 09:30:41 AM: micro_avg: validation: 0.000000
09/16 09:30:41 AM: edges-dep-ud-ewt_mcc: training: 0.737326 validation: 0.810240
09/16 09:30:41 AM: edges-dep-ud-ewt_acc: training: 0.601828 validation: 0.701633
09/16 09:30:41 AM: edges-dep-ud-ewt_precision: training: 0.860719 validation: 0.922959
09/16 09:30:41 AM: edges-dep-ud-ewt_recall: training: 0.639311 validation: 0.717085
09/16 09:30:41 AM: edges-dep-ud-ewt_f1: training: 0.733675 validation: 0.807100
09/16 09:30:41 AM: Global learning rate: 0.0001
09/16 09:30:41 AM: Saving checkpoints to: ./experiments/dep-ud-ewt-coref-top/run
09/16 09:30:52 AM: Update 3050: task edges-dep-ud-ewt, batch 50 (3050): mcc: 0.7490, acc: 0.6191, precision: 0.8589, recall: 0.6607, f1: 0.7469, edges-dep-ud-ewt_loss: 0.0248
09/16 09:31:02 AM: Update 3095: task edges-dep-ud-ewt, batch 95 (3095): mcc: 0.7519, acc: 0.6238, precision: 0.8606, recall: 0.6645, f1: 0.7499, edges-dep-ud-ewt_loss: 0.0254
