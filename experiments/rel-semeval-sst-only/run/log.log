09/16 07:56:40 AM: Git branch: master
09/16 07:56:40 AM: Git SHA: 4d3ecf773e1c64dc339b7f0f66408105deba8209
09/16 07:56:40 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-sst-only/",
  "exp_name": "experiments/rel-semeval-sst-only",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-sst-only/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/sst",
  "pytorch_transformers_output_mode": "only",
  "remote_log_name": "experiments/rel-semeval-sst-only__run",
  "run_dir": "./experiments/rel-semeval-sst-only/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 07:56:40 AM: Saved config to ./experiments/rel-semeval-sst-only/run/params.conf
09/16 07:56:40 AM: Using random seed 1234
09/16 07:56:41 AM: Using GPU 0
09/16 07:56:41 AM: Loading tasks...
09/16 07:56:41 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-sst-only/
09/16 07:56:41 AM: 	Creating task edges-rel-semeval from scratch.
09/16 07:56:41 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 07:56:41 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 07:56:41 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 07:56:41 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 07:56:41 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 07:56:41 AM: 	Building vocab from scratch.
09/16 07:56:41 AM: 	Counting units for task edges-rel-semeval.
09/16 07:56:41 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 07:56:42 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:56:42 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 07:56:42 AM: 	Saved vocab to ./experiments/rel-semeval-sst-only/vocab
09/16 07:56:42 AM: Loading token dictionary from ./experiments/rel-semeval-sst-only/vocab.
09/16 07:56:43 AM: 	Loaded vocab from ./experiments/rel-semeval-sst-only/vocab
09/16 07:56:43 AM: 	Vocab namespace bert_uncased: size 30524
09/16 07:56:43 AM: 	Vocab namespace tokens: size 16020
09/16 07:56:43 AM: 	Vocab namespace chars: size 59
09/16 07:56:43 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 07:56:43 AM: 	Finished building vocab.
09/16 07:56:43 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 07:56:43 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-sst-only/preproc/edges-rel-semeval__train_data
09/16 07:56:43 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 07:56:43 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-sst-only/preproc/edges-rel-semeval__val_data
09/16 07:56:43 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 07:56:44 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-sst-only/preproc/edges-rel-semeval__test_data
09/16 07:56:44 AM: 	Finished indexing tasks
09/16 07:56:44 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 07:56:44 AM: 	  Training on 
09/16 07:56:44 AM: 	  Evaluating on edges-rel-semeval
09/16 07:56:44 AM: 	Finished loading tasks in 2.808s
09/16 07:56:44 AM: 	 Tasks: ['edges-rel-semeval']
09/16 07:56:44 AM: Building model...
09/16 07:56:44 AM: Using BERT model (bert-base-uncased).
09/16 07:56:44 AM: LOADING A FUNETUNED MODEL from: 
09/16 07:56:44 AM: models/sst
09/16 07:56:44 AM: loading configuration file models/sst/config.json
09/16 07:56:44 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "sst-2",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 07:56:44 AM: loading weights file models/sst/pytorch_model.bin
09/16 07:56:47 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmp1h60uyzs
09/16 07:56:49 AM: copying /tmp/tmp1h60uyzs to cache at ./experiments/rel-semeval-sst-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:56:49 AM: creating metadata file for ./experiments/rel-semeval-sst-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:56:49 AM: removing temp file /tmp/tmp1h60uyzs
09/16 07:56:49 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-sst-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:56:49 AM: Initializing parameters
09/16 07:56:49 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 07:56:49 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 07:56:49 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 07:56:49 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 07:56:49 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 07:56:49 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 07:56:49 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 07:56:53 AM: Model specification:
09/16 07:56:53 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 07:56:53 AM: Model parameters:
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:53 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:53 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 07:56:53 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:56:53 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 07:56:53 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:56:53 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 07:56:53 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:56:53 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 07:56:53 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:56:53 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 07:56:53 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 07:56:53 AM: Total number of parameters: 110143763 (1.10144e+08)
09/16 07:56:53 AM: Number of trainable parameters: 661523 (661523)
09/16 07:56:53 AM: Finished building model in 8.863s
09/16 07:56:53 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 07:56:53 AM: patience = 9
09/16 07:56:53 AM: val_interval = 100
09/16 07:56:53 AM: max_vals = 100
09/16 07:56:53 AM: cuda_device = 0
09/16 07:56:53 AM: grad_norm = 5.0
09/16 07:56:53 AM: grad_clipping = None
09/16 07:56:53 AM: lr_decay = 0.99
09/16 07:56:53 AM: min_lr = 1e-06
09/16 07:56:53 AM: keep_all_checkpoints = 0
09/16 07:56:53 AM: val_data_limit = 5000
09/16 07:56:53 AM: max_epochs = -1
09/16 07:56:53 AM: dec_val_scale = 250
09/16 07:56:53 AM: training_data_fraction = 1
09/16 07:56:53 AM: type = adam
09/16 07:56:53 AM: parameter_groups = None
09/16 07:56:53 AM: Number of trainable parameters: 661523
09/16 07:56:53 AM: infer_type_and_cast = True
09/16 07:56:53 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:56:53 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:56:53 AM: lr = 0.0001
09/16 07:56:53 AM: amsgrad = True
09/16 07:56:53 AM: type = reduce_on_plateau
09/16 07:56:53 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:56:53 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:56:53 AM: mode = max
09/16 07:56:53 AM: factor = 0.5
09/16 07:56:53 AM: patience = 3
09/16 07:56:53 AM: threshold = 0.0001
09/16 07:56:53 AM: threshold_mode = abs
09/16 07:56:53 AM: verbose = True
09/16 07:56:53 AM: type = adam
09/16 07:56:53 AM: parameter_groups = None
09/16 07:56:53 AM: Number of trainable parameters: 661523
09/16 07:56:53 AM: infer_type_and_cast = True
09/16 07:56:53 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:56:53 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:56:53 AM: lr = 0.0001
09/16 07:56:53 AM: amsgrad = True
09/16 07:56:53 AM: type = reduce_on_plateau
09/16 07:56:53 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:56:53 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:56:53 AM: mode = max
09/16 07:56:53 AM: factor = 0.5
09/16 07:56:53 AM: patience = 3
09/16 07:56:53 AM: threshold = 0.0001
09/16 07:56:53 AM: threshold_mode = abs
09/16 07:56:53 AM: verbose = True
09/16 07:56:53 AM: Starting training without restoring from a checkpoint.
09/16 07:56:53 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 07:56:53 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 07:56:56 AM: ***** Step 100 / Validation 1 *****
09/16 07:56:56 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:56:56 AM: Validating...
09/16 07:56:56 AM: Best result seen so far for edges-rel-semeval.
09/16 07:56:56 AM: Best result seen so far for micro.
09/16 07:56:56 AM: Best result seen so far for macro.
09/16 07:56:56 AM: Updating LR scheduler:
09/16 07:56:56 AM: 	Best result seen so far for macro_avg: 0.000
09/16 07:56:56 AM: 	# validation passes without improvement: 0
09/16 07:56:56 AM: edges-rel-semeval_loss: training: 0.283135 validation: 0.187415
09/16 07:56:56 AM: macro_avg: validation: 0.000000
09/16 07:56:56 AM: micro_avg: validation: 0.000000
09/16 07:56:56 AM: edges-rel-semeval_mcc: training: 0.009230 validation: 0.000000
09/16 07:56:56 AM: edges-rel-semeval_acc: training: 0.005676 validation: 0.000000
09/16 07:56:56 AM: edges-rel-semeval_precision: training: 0.062550 validation: 0.000000
09/16 07:56:56 AM: edges-rel-semeval_recall: training: 0.049196 validation: 0.000000
09/16 07:56:56 AM: edges-rel-semeval_f1: training: 0.055075 validation: 0.000000
09/16 07:56:56 AM: Global learning rate: 0.0001
09/16 07:56:56 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:56:58 AM: ***** Step 200 / Validation 2 *****
09/16 07:56:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:56:58 AM: Validating...
09/16 07:56:58 AM: Updating LR scheduler:
09/16 07:56:58 AM: 	Best result seen so far for macro_avg: 0.000
09/16 07:56:58 AM: 	# validation passes without improvement: 1
09/16 07:56:58 AM: edges-rel-semeval_loss: training: 0.186115 validation: 0.174136
09/16 07:56:58 AM: macro_avg: validation: 0.000000
09/16 07:56:58 AM: micro_avg: validation: 0.000000
09/16 07:56:58 AM: edges-rel-semeval_mcc: training: 0.011201 validation: 0.000000
09/16 07:56:58 AM: edges-rel-semeval_acc: training: 0.000625 validation: 0.000000
09/16 07:56:58 AM: edges-rel-semeval_precision: training: 0.285714 validation: 0.000000
09/16 07:56:58 AM: edges-rel-semeval_recall: training: 0.000625 validation: 0.000000
09/16 07:56:58 AM: edges-rel-semeval_f1: training: 0.001247 validation: 0.000000
09/16 07:56:58 AM: Global learning rate: 0.0001
09/16 07:56:58 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:01 AM: ***** Step 300 / Validation 3 *****
09/16 07:57:01 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:01 AM: Validating...
09/16 07:57:01 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:01 AM: Best result seen so far for macro.
09/16 07:57:01 AM: Updating LR scheduler:
09/16 07:57:01 AM: 	Best result seen so far for macro_avg: 0.047
09/16 07:57:01 AM: 	# validation passes without improvement: 0
09/16 07:57:01 AM: edges-rel-semeval_loss: training: 0.170688 validation: 0.158692
09/16 07:57:01 AM: macro_avg: validation: 0.047458
09/16 07:57:01 AM: micro_avg: validation: 0.000000
09/16 07:57:01 AM: edges-rel-semeval_mcc: training: 0.091326 validation: 0.143646
09/16 07:57:01 AM: edges-rel-semeval_acc: training: 0.012614 validation: 0.024369
09/16 07:57:01 AM: edges-rel-semeval_precision: training: 0.727273 validation: 0.903226
09/16 07:57:01 AM: edges-rel-semeval_recall: training: 0.012614 validation: 0.024369
09/16 07:57:01 AM: edges-rel-semeval_f1: training: 0.024799 validation: 0.047458
09/16 07:57:01 AM: Global learning rate: 0.0001
09/16 07:57:01 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:03 AM: ***** Step 400 / Validation 4 *****
09/16 07:57:03 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:03 AM: Validating...
09/16 07:57:03 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:03 AM: Best result seen so far for macro.
09/16 07:57:03 AM: Updating LR scheduler:
09/16 07:57:03 AM: 	Best result seen so far for macro_avg: 0.130
09/16 07:57:03 AM: 	# validation passes without improvement: 0
09/16 07:57:03 AM: edges-rel-semeval_loss: training: 0.154137 validation: 0.145586
09/16 07:57:03 AM: macro_avg: validation: 0.130225
09/16 07:57:03 AM: micro_avg: validation: 0.000000
09/16 07:57:03 AM: edges-rel-semeval_mcc: training: 0.235034 validation: 0.236853
09/16 07:57:03 AM: edges-rel-semeval_acc: training: 0.076250 validation: 0.069626
09/16 07:57:03 AM: edges-rel-semeval_precision: training: 0.765244 validation: 0.852632
09/16 07:57:03 AM: edges-rel-semeval_recall: training: 0.078437 validation: 0.070496
09/16 07:57:03 AM: edges-rel-semeval_f1: training: 0.142290 validation: 0.130225
09/16 07:57:03 AM: Global learning rate: 0.0001
09/16 07:57:03 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:03 AM: Update 409: task edges-rel-semeval, batch 9 (409): mcc: 0.2221, acc: 0.0694, precision: 0.7097, recall: 0.0764, f1: 0.1379, edges-rel-semeval_loss: 0.1558
09/16 07:57:06 AM: ***** Step 500 / Validation 5 *****
09/16 07:57:06 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:06 AM: Validating...
09/16 07:57:06 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:06 AM: Best result seen so far for macro.
09/16 07:57:06 AM: Updating LR scheduler:
09/16 07:57:06 AM: 	Best result seen so far for macro_avg: 0.206
09/16 07:57:06 AM: 	# validation passes without improvement: 0
09/16 07:57:06 AM: edges-rel-semeval_loss: training: 0.143595 validation: 0.136935
09/16 07:57:06 AM: macro_avg: validation: 0.205793
09/16 07:57:06 AM: micro_avg: validation: 0.000000
09/16 07:57:06 AM: edges-rel-semeval_mcc: training: 0.302354 validation: 0.301254
09/16 07:57:06 AM: edges-rel-semeval_acc: training: 0.125828 validation: 0.116623
09/16 07:57:06 AM: edges-rel-semeval_precision: training: 0.760589 validation: 0.828221
09/16 07:57:06 AM: edges-rel-semeval_recall: training: 0.130243 validation: 0.117493
09/16 07:57:06 AM: edges-rel-semeval_f1: training: 0.222402 validation: 0.205793
09/16 07:57:06 AM: Global learning rate: 0.0001
09/16 07:57:06 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:08 AM: ***** Step 600 / Validation 6 *****
09/16 07:57:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:08 AM: Validating...
09/16 07:57:08 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:08 AM: Best result seen so far for macro.
09/16 07:57:08 AM: Updating LR scheduler:
09/16 07:57:08 AM: 	Best result seen so far for macro_avg: 0.274
09/16 07:57:08 AM: 	# validation passes without improvement: 0
09/16 07:57:08 AM: edges-rel-semeval_loss: training: 0.134337 validation: 0.130478
09/16 07:57:08 AM: macro_avg: validation: 0.274112
09/16 07:57:08 AM: micro_avg: validation: 0.000000
09/16 07:57:08 AM: edges-rel-semeval_mcc: training: 0.366562 validation: 0.355411
09/16 07:57:08 AM: edges-rel-semeval_acc: training: 0.186562 validation: 0.158399
09/16 07:57:08 AM: edges-rel-semeval_precision: training: 0.753978 validation: 0.821739
09/16 07:57:08 AM: edges-rel-semeval_recall: training: 0.192500 validation: 0.164491
09/16 07:57:08 AM: edges-rel-semeval_f1: training: 0.306697 validation: 0.274112
09/16 07:57:08 AM: Global learning rate: 0.0001
09/16 07:57:08 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:11 AM: ***** Step 700 / Validation 7 *****
09/16 07:57:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:11 AM: Validating...
09/16 07:57:11 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:11 AM: Best result seen so far for macro.
09/16 07:57:11 AM: Updating LR scheduler:
09/16 07:57:11 AM: 	Best result seen so far for macro_avg: 0.329
09/16 07:57:11 AM: 	# validation passes without improvement: 0
09/16 07:57:11 AM: edges-rel-semeval_loss: training: 0.125177 validation: 0.126259
09/16 07:57:11 AM: macro_avg: validation: 0.328691
09/16 07:57:11 AM: micro_avg: validation: 0.000000
09/16 07:57:11 AM: edges-rel-semeval_mcc: training: 0.413784 validation: 0.397831
09/16 07:57:11 AM: edges-rel-semeval_acc: training: 0.229265 validation: 0.202785
09/16 07:57:11 AM: edges-rel-semeval_precision: training: 0.768219 validation: 0.822300
09/16 07:57:11 AM: edges-rel-semeval_recall: training: 0.239357 validation: 0.205396
09/16 07:57:11 AM: edges-rel-semeval_f1: training: 0.364992 validation: 0.328691
09/16 07:57:11 AM: Global learning rate: 0.0001
09/16 07:57:11 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:13 AM: ***** Step 800 / Validation 8 *****
09/16 07:57:13 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:13 AM: Validating...
09/16 07:57:13 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:13 AM: Best result seen so far for macro.
09/16 07:57:13 AM: Updating LR scheduler:
09/16 07:57:13 AM: 	Best result seen so far for macro_avg: 0.372
09/16 07:57:13 AM: 	# validation passes without improvement: 0
09/16 07:57:13 AM: edges-rel-semeval_loss: training: 0.121075 validation: 0.121989
09/16 07:57:13 AM: macro_avg: validation: 0.371968
09/16 07:57:13 AM: micro_avg: validation: 0.000000
09/16 07:57:13 AM: edges-rel-semeval_mcc: training: 0.455984 validation: 0.431177
09/16 07:57:13 AM: edges-rel-semeval_acc: training: 0.270000 validation: 0.238468
09/16 07:57:13 AM: edges-rel-semeval_precision: training: 0.781116 validation: 0.823881
09/16 07:57:13 AM: edges-rel-semeval_recall: training: 0.284375 validation: 0.240209
09/16 07:57:13 AM: edges-rel-semeval_f1: training: 0.416953 validation: 0.371968
09/16 07:57:13 AM: Global learning rate: 0.0001
09/16 07:57:13 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:13 AM: Update 803: task edges-rel-semeval, batch 3 (803): mcc: 0.4213, acc: 0.2292, precision: 0.7353, recall: 0.2604, f1: 0.3846, edges-rel-semeval_loss: 0.1192
09/16 07:57:16 AM: ***** Step 900 / Validation 9 *****
09/16 07:57:16 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:16 AM: Validating...
09/16 07:57:16 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:16 AM: Best result seen so far for macro.
09/16 07:57:16 AM: Updating LR scheduler:
09/16 07:57:16 AM: 	Best result seen so far for macro_avg: 0.387
09/16 07:57:16 AM: 	# validation passes without improvement: 0
09/16 07:57:16 AM: edges-rel-semeval_loss: training: 0.115110 validation: 0.120288
09/16 07:57:16 AM: macro_avg: validation: 0.386588
09/16 07:57:16 AM: micro_avg: validation: 0.000000
09/16 07:57:16 AM: edges-rel-semeval_mcc: training: 0.464854 validation: 0.434969
09/16 07:57:16 AM: edges-rel-semeval_acc: training: 0.286030 validation: 0.252393
09/16 07:57:16 AM: edges-rel-semeval_precision: training: 0.765176 validation: 0.790323
09/16 07:57:16 AM: edges-rel-semeval_recall: training: 0.302113 validation: 0.255875
09/16 07:57:16 AM: edges-rel-semeval_f1: training: 0.433190 validation: 0.386588
09/16 07:57:16 AM: Global learning rate: 0.0001
09/16 07:57:16 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:18 AM: ***** Step 1000 / Validation 10 *****
09/16 07:57:18 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:18 AM: Validating...
09/16 07:57:18 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:18 AM: Best result seen so far for macro.
09/16 07:57:18 AM: Updating LR scheduler:
09/16 07:57:18 AM: 	Best result seen so far for macro_avg: 0.410
09/16 07:57:18 AM: 	# validation passes without improvement: 0
09/16 07:57:18 AM: edges-rel-semeval_loss: training: 0.109013 validation: 0.118607
09/16 07:57:18 AM: macro_avg: validation: 0.409561
09/16 07:57:18 AM: micro_avg: validation: 0.000000
09/16 07:57:18 AM: edges-rel-semeval_mcc: training: 0.522815 validation: 0.453306
09/16 07:57:18 AM: edges-rel-semeval_acc: training: 0.337813 validation: 0.270670
09/16 07:57:18 AM: edges-rel-semeval_precision: training: 0.806746 validation: 0.794486
09/16 07:57:18 AM: edges-rel-semeval_recall: training: 0.358750 validation: 0.275892
09/16 07:57:18 AM: edges-rel-semeval_f1: training: 0.496647 validation: 0.409561
09/16 07:57:18 AM: Global learning rate: 0.0001
09/16 07:57:18 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:21 AM: ***** Step 1100 / Validation 11 *****
09/16 07:57:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:21 AM: Validating...
09/16 07:57:21 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:21 AM: Best result seen so far for macro.
09/16 07:57:21 AM: Updating LR scheduler:
09/16 07:57:21 AM: 	Best result seen so far for macro_avg: 0.458
09/16 07:57:21 AM: 	# validation passes without improvement: 0
09/16 07:57:21 AM: edges-rel-semeval_loss: training: 0.107084 validation: 0.116525
09/16 07:57:21 AM: macro_avg: validation: 0.457950
09/16 07:57:21 AM: micro_avg: validation: 0.000000
09/16 07:57:21 AM: edges-rel-semeval_mcc: training: 0.522440 validation: 0.486450
09/16 07:57:21 AM: edges-rel-semeval_acc: training: 0.351939 validation: 0.314186
09/16 07:57:21 AM: edges-rel-semeval_precision: training: 0.778510 validation: 0.777083
09/16 07:57:21 AM: edges-rel-semeval_recall: training: 0.372438 validation: 0.324630
09/16 07:57:21 AM: edges-rel-semeval_f1: training: 0.503840 validation: 0.457950
09/16 07:57:21 AM: Global learning rate: 0.0001
09/16 07:57:21 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:23 AM: ***** Step 1200 / Validation 12 *****
09/16 07:57:23 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:23 AM: Validating...
09/16 07:57:23 AM: Updating LR scheduler:
09/16 07:57:23 AM: 	Best result seen so far for macro_avg: 0.458
09/16 07:57:23 AM: 	# validation passes without improvement: 1
09/16 07:57:23 AM: edges-rel-semeval_loss: training: 0.102405 validation: 0.116016
09/16 07:57:23 AM: macro_avg: validation: 0.439547
09/16 07:57:23 AM: micro_avg: validation: 0.000000
09/16 07:57:23 AM: edges-rel-semeval_mcc: training: 0.556319 validation: 0.476252
09/16 07:57:23 AM: edges-rel-semeval_acc: training: 0.380000 validation: 0.294169
09/16 07:57:23 AM: edges-rel-semeval_precision: training: 0.797568 validation: 0.794989
09/16 07:57:23 AM: edges-rel-semeval_recall: training: 0.410000 validation: 0.303742
09/16 07:57:23 AM: edges-rel-semeval_f1: training: 0.541589 validation: 0.439547
09/16 07:57:23 AM: Global learning rate: 0.0001
09/16 07:57:23 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:23 AM: Update 1201: task edges-rel-semeval, batch 1 (1201): mcc: 0.7466, acc: 0.6250, precision: 0.8750, recall: 0.6562, f1: 0.7500, edges-rel-semeval_loss: 0.0720
09/16 07:57:26 AM: ***** Step 1300 / Validation 13 *****
09/16 07:57:26 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:26 AM: Validating...
09/16 07:57:26 AM: Updating LR scheduler:
09/16 07:57:26 AM: 	Best result seen so far for macro_avg: 0.458
09/16 07:57:26 AM: 	# validation passes without improvement: 2
09/16 07:57:26 AM: edges-rel-semeval_loss: training: 0.099620 validation: 0.114859
09/16 07:57:26 AM: macro_avg: validation: 0.449057
09/16 07:57:26 AM: micro_avg: validation: 0.000000
09/16 07:57:26 AM: edges-rel-semeval_mcc: training: 0.555336 validation: 0.486704
09/16 07:57:26 AM: edges-rel-semeval_acc: training: 0.387260 validation: 0.301131
09/16 07:57:26 AM: edges-rel-semeval_precision: training: 0.781250 validation: 0.809524
09/16 07:57:26 AM: edges-rel-semeval_recall: training: 0.417849 validation: 0.310705
09/16 07:57:26 AM: edges-rel-semeval_f1: training: 0.544483 validation: 0.449057
09/16 07:57:26 AM: Global learning rate: 0.0001
09/16 07:57:26 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:28 AM: ***** Step 1400 / Validation 14 *****
09/16 07:57:28 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:28 AM: Validating...
09/16 07:57:28 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:28 AM: Best result seen so far for macro.
09/16 07:57:28 AM: Updating LR scheduler:
09/16 07:57:28 AM: 	Best result seen so far for macro_avg: 0.470
09/16 07:57:28 AM: 	# validation passes without improvement: 0
09/16 07:57:28 AM: edges-rel-semeval_loss: training: 0.095257 validation: 0.114075
09/16 07:57:28 AM: macro_avg: validation: 0.470375
09/16 07:57:28 AM: micro_avg: validation: 0.000000
09/16 07:57:28 AM: edges-rel-semeval_mcc: training: 0.590356 validation: 0.494573
09/16 07:57:28 AM: edges-rel-semeval_acc: training: 0.419063 validation: 0.327241
09/16 07:57:28 AM: edges-rel-semeval_precision: training: 0.812148 validation: 0.770297
09/16 07:57:28 AM: edges-rel-semeval_recall: training: 0.451250 validation: 0.338555
09/16 07:57:28 AM: edges-rel-semeval_f1: training: 0.580153 validation: 0.470375
09/16 07:57:28 AM: Global learning rate: 0.0001
09/16 07:57:28 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:30 AM: ***** Step 1500 / Validation 15 *****
09/16 07:57:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:30 AM: Validating...
09/16 07:57:31 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:31 AM: Best result seen so far for macro.
09/16 07:57:31 AM: Updating LR scheduler:
09/16 07:57:31 AM: 	Best result seen so far for macro_avg: 0.471
09/16 07:57:31 AM: 	# validation passes without improvement: 0
09/16 07:57:31 AM: edges-rel-semeval_loss: training: 0.097300 validation: 0.113183
09/16 07:57:31 AM: macro_avg: validation: 0.470588
09/16 07:57:31 AM: micro_avg: validation: 0.000000
09/16 07:57:31 AM: edges-rel-semeval_mcc: training: 0.578777 validation: 0.500092
09/16 07:57:31 AM: edges-rel-semeval_acc: training: 0.416875 validation: 0.325500
09/16 07:57:31 AM: edges-rel-semeval_precision: training: 0.792338 validation: 0.795031
09/16 07:57:31 AM: edges-rel-semeval_recall: training: 0.445938 validation: 0.334204
09/16 07:57:31 AM: edges-rel-semeval_f1: training: 0.570686 validation: 0.470588
09/16 07:57:31 AM: Global learning rate: 0.0001
09/16 07:57:31 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:33 AM: ***** Step 1600 / Validation 16 *****
09/16 07:57:33 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:33 AM: Validating...
09/16 07:57:33 AM: Evaluate: task edges-rel-semeval, batch 31 (36): mcc: 0.5277, acc: 0.3730, precision: 0.7762, recall: 0.3810, f1: 0.5112, edges-rel-semeval_loss: 0.1102
09/16 07:57:33 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:33 AM: Best result seen so far for macro.
09/16 07:57:33 AM: Updating LR scheduler:
09/16 07:57:33 AM: 	Best result seen so far for macro_avg: 0.492
09/16 07:57:33 AM: 	# validation passes without improvement: 0
09/16 07:57:33 AM: edges-rel-semeval_loss: training: 0.089207 validation: 0.113094
09/16 07:57:33 AM: macro_avg: validation: 0.492344
09/16 07:57:33 AM: micro_avg: validation: 0.000000
09/16 07:57:33 AM: edges-rel-semeval_mcc: training: 0.610128 validation: 0.509791
09/16 07:57:33 AM: edges-rel-semeval_acc: training: 0.442447 validation: 0.352480
09/16 07:57:33 AM: edges-rel-semeval_precision: training: 0.816810 validation: 0.761384
09/16 07:57:33 AM: edges-rel-semeval_recall: training: 0.478083 validation: 0.363795
09/16 07:57:33 AM: edges-rel-semeval_f1: training: 0.603143 validation: 0.492344
09/16 07:57:33 AM: Global learning rate: 0.0001
09/16 07:57:33 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:35 AM: ***** Step 1700 / Validation 17 *****
09/16 07:57:35 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:35 AM: Validating...
09/16 07:57:35 AM: Updating LR scheduler:
09/16 07:57:35 AM: 	Best result seen so far for macro_avg: 0.492
09/16 07:57:35 AM: 	# validation passes without improvement: 1
09/16 07:57:35 AM: edges-rel-semeval_loss: training: 0.091751 validation: 0.114027
09/16 07:57:35 AM: macro_avg: validation: 0.468865
09/16 07:57:35 AM: micro_avg: validation: 0.000000
09/16 07:57:35 AM: edges-rel-semeval_mcc: training: 0.611483 validation: 0.496647
09/16 07:57:35 AM: edges-rel-semeval_acc: training: 0.459062 validation: 0.327241
09/16 07:57:35 AM: edges-rel-semeval_precision: training: 0.801945 validation: 0.785276
09/16 07:57:35 AM: edges-rel-semeval_recall: training: 0.489688 validation: 0.334204
09/16 07:57:35 AM: edges-rel-semeval_f1: training: 0.608071 validation: 0.468865
09/16 07:57:35 AM: Global learning rate: 0.0001
09/16 07:57:35 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:38 AM: ***** Step 1800 / Validation 18 *****
09/16 07:57:38 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:38 AM: Validating...
09/16 07:57:38 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:38 AM: Best result seen so far for macro.
09/16 07:57:38 AM: Updating LR scheduler:
09/16 07:57:38 AM: 	Best result seen so far for macro_avg: 0.492
09/16 07:57:38 AM: 	# validation passes without improvement: 2
09/16 07:57:38 AM: edges-rel-semeval_loss: training: 0.086138 validation: 0.113481
09/16 07:57:38 AM: macro_avg: validation: 0.492433
09/16 07:57:38 AM: micro_avg: validation: 0.000000
09/16 07:57:38 AM: edges-rel-semeval_mcc: training: 0.642715 validation: 0.506069
09/16 07:57:38 AM: edges-rel-semeval_acc: training: 0.487859 validation: 0.356832
09/16 07:57:38 AM: edges-rel-semeval_precision: training: 0.826347 validation: 0.743410
09/16 07:57:38 AM: edges-rel-semeval_recall: training: 0.522233 validation: 0.368146
09/16 07:57:38 AM: edges-rel-semeval_f1: training: 0.640000 validation: 0.492433
09/16 07:57:38 AM: Global learning rate: 0.0001
09/16 07:57:38 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:40 AM: ***** Step 1900 / Validation 19 *****
09/16 07:57:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:40 AM: Validating...
09/16 07:57:40 AM: Updating LR scheduler:
09/16 07:57:40 AM: 	Best result seen so far for macro_avg: 0.492
09/16 07:57:40 AM: 	# validation passes without improvement: 3
09/16 07:57:40 AM: edges-rel-semeval_loss: training: 0.087744 validation: 0.113453
09/16 07:57:40 AM: macro_avg: validation: 0.480907
09/16 07:57:40 AM: micro_avg: validation: 0.000000
09/16 07:57:40 AM: edges-rel-semeval_mcc: training: 0.623506 validation: 0.501554
09/16 07:57:40 AM: edges-rel-semeval_acc: training: 0.466562 validation: 0.340296
09/16 07:57:40 AM: edges-rel-semeval_precision: training: 0.795157 validation: 0.764706
09/16 07:57:40 AM: edges-rel-semeval_recall: training: 0.513125 validation: 0.350740
09/16 07:57:40 AM: edges-rel-semeval_f1: training: 0.623742 validation: 0.480907
09/16 07:57:40 AM: Global learning rate: 0.0001
09/16 07:57:40 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:43 AM: ***** Step 2000 / Validation 20 *****
09/16 07:57:43 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:43 AM: Validating...
09/16 07:57:43 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:43 AM: Best result seen so far for macro.
09/16 07:57:43 AM: Updating LR scheduler:
09/16 07:57:43 AM: 	Best result seen so far for macro_avg: 0.496
09/16 07:57:43 AM: 	# validation passes without improvement: 0
09/16 07:57:43 AM: edges-rel-semeval_loss: training: 0.082098 validation: 0.113960
09/16 07:57:43 AM: macro_avg: validation: 0.495935
09/16 07:57:43 AM: micro_avg: validation: 0.000000
09/16 07:57:43 AM: edges-rel-semeval_mcc: training: 0.659973 validation: 0.509210
09/16 07:57:43 AM: edges-rel-semeval_acc: training: 0.506465 validation: 0.357702
09/16 07:57:43 AM: edges-rel-semeval_precision: training: 0.839041 validation: 0.745201
09/16 07:57:43 AM: edges-rel-semeval_recall: training: 0.540839 validation: 0.371628
09/16 07:57:43 AM: edges-rel-semeval_f1: training: 0.657718 validation: 0.495935
09/16 07:57:43 AM: Global learning rate: 0.0001
09/16 07:57:43 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:43 AM: Update 2004: task edges-rel-semeval, batch 4 (2004): mcc: 0.6387, acc: 0.5000, precision: 0.7931, recall: 0.5391, f1: 0.6419, edges-rel-semeval_loss: 0.0778
09/16 07:57:45 AM: ***** Step 2100 / Validation 21 *****
09/16 07:57:45 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:45 AM: Validating...
09/16 07:57:45 AM: Updating LR scheduler:
09/16 07:57:45 AM: 	Best result seen so far for macro_avg: 0.496
09/16 07:57:45 AM: 	# validation passes without improvement: 1
09/16 07:57:45 AM: edges-rel-semeval_loss: training: 0.082861 validation: 0.114231
09/16 07:57:45 AM: macro_avg: validation: 0.486615
09/16 07:57:45 AM: micro_avg: validation: 0.000000
09/16 07:57:45 AM: edges-rel-semeval_mcc: training: 0.646938 validation: 0.506882
09/16 07:57:45 AM: edges-rel-semeval_acc: training: 0.498750 validation: 0.348129
09/16 07:57:45 AM: edges-rel-semeval_precision: training: 0.806407 validation: 0.768797
09/16 07:57:45 AM: edges-rel-semeval_recall: training: 0.542813 validation: 0.355962
09/16 07:57:45 AM: edges-rel-semeval_f1: training: 0.648861 validation: 0.486615
09/16 07:57:45 AM: Global learning rate: 0.0001
09/16 07:57:45 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:48 AM: ***** Step 2200 / Validation 22 *****
09/16 07:57:48 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:48 AM: Validating...
09/16 07:57:48 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:48 AM: Best result seen so far for macro.
09/16 07:57:48 AM: Updating LR scheduler:
09/16 07:57:48 AM: 	Best result seen so far for macro_avg: 0.498
09/16 07:57:48 AM: 	# validation passes without improvement: 0
09/16 07:57:48 AM: edges-rel-semeval_loss: training: 0.080310 validation: 0.114258
09/16 07:57:48 AM: macro_avg: validation: 0.497674
09/16 07:57:48 AM: micro_avg: validation: 0.000000
09/16 07:57:48 AM: edges-rel-semeval_mcc: training: 0.653135 validation: 0.511497
09/16 07:57:48 AM: edges-rel-semeval_acc: training: 0.507096 validation: 0.359443
09/16 07:57:48 AM: edges-rel-semeval_precision: training: 0.810409 validation: 0.749562
09/16 07:57:48 AM: edges-rel-semeval_recall: training: 0.549984 validation: 0.372498
09/16 07:57:48 AM: edges-rel-semeval_f1: training: 0.655270 validation: 0.497674
09/16 07:57:48 AM: Global learning rate: 0.0001
09/16 07:57:48 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:50 AM: ***** Step 2300 / Validation 23 *****
09/16 07:57:50 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:50 AM: Validating...
09/16 07:57:51 AM: Updating LR scheduler:
09/16 07:57:51 AM: 	Best result seen so far for macro_avg: 0.498
09/16 07:57:51 AM: 	# validation passes without improvement: 1
09/16 07:57:51 AM: edges-rel-semeval_loss: training: 0.079799 validation: 0.115468
09/16 07:57:51 AM: macro_avg: validation: 0.493627
09/16 07:57:51 AM: micro_avg: validation: 0.000000
09/16 07:57:51 AM: edges-rel-semeval_mcc: training: 0.661498 validation: 0.505941
09/16 07:57:51 AM: edges-rel-semeval_acc: training: 0.511563 validation: 0.355962
09/16 07:57:51 AM: edges-rel-semeval_precision: training: 0.819687 validation: 0.738302
09/16 07:57:51 AM: edges-rel-semeval_recall: training: 0.556875 validation: 0.370757
09/16 07:57:51 AM: edges-rel-semeval_f1: training: 0.663193 validation: 0.493627
09/16 07:57:51 AM: Global learning rate: 0.0001
09/16 07:57:51 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:53 AM: ***** Step 2400 / Validation 24 *****
09/16 07:57:53 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:53 AM: Validating...
09/16 07:57:53 AM: Evaluate: task edges-rel-semeval, batch 28 (36): mcc: 0.5312, acc: 0.3761, precision: 0.7758, recall: 0.3862, f1: 0.5156, edges-rel-semeval_loss: 0.1119
09/16 07:57:53 AM: Updating LR scheduler:
09/16 07:57:53 AM: 	Best result seen so far for macro_avg: 0.498
09/16 07:57:53 AM: 	# validation passes without improvement: 2
09/16 07:57:53 AM: edges-rel-semeval_loss: training: 0.076265 validation: 0.114826
09/16 07:57:53 AM: macro_avg: validation: 0.494725
09/16 07:57:53 AM: micro_avg: validation: 0.000000
09/16 07:57:53 AM: edges-rel-semeval_mcc: training: 0.679249 validation: 0.510868
09/16 07:57:53 AM: edges-rel-semeval_acc: training: 0.532324 validation: 0.355091
09/16 07:57:53 AM: edges-rel-semeval_precision: training: 0.824844 validation: 0.757630
09/16 07:57:53 AM: edges-rel-semeval_recall: training: 0.582151 validation: 0.367276
09/16 07:57:53 AM: edges-rel-semeval_f1: training: 0.682566 validation: 0.494725
09/16 07:57:53 AM: Global learning rate: 0.0001
09/16 07:57:53 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:55 AM: ***** Step 2500 / Validation 25 *****
09/16 07:57:55 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:55 AM: Validating...
09/16 07:57:56 AM: Updating LR scheduler:
09/16 07:57:56 AM: 	Best result seen so far for macro_avg: 0.498
09/16 07:57:56 AM: 	# validation passes without improvement: 3
09/16 07:57:56 AM: edges-rel-semeval_loss: training: 0.076422 validation: 0.114240
09/16 07:57:56 AM: macro_avg: validation: 0.495349
09/16 07:57:56 AM: micro_avg: validation: 0.000000
09/16 07:57:56 AM: edges-rel-semeval_mcc: training: 0.682273 validation: 0.508927
09/16 07:57:56 AM: edges-rel-semeval_acc: training: 0.541875 validation: 0.356832
09/16 07:57:56 AM: edges-rel-semeval_precision: training: 0.827297 validation: 0.746060
09/16 07:57:56 AM: edges-rel-semeval_recall: training: 0.585312 validation: 0.370757
09/16 07:57:56 AM: edges-rel-semeval_f1: training: 0.685578 validation: 0.495349
09/16 07:57:56 AM: Global learning rate: 0.0001
09/16 07:57:56 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:57:58 AM: ***** Step 2600 / Validation 26 *****
09/16 07:57:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:58 AM: Validating...
09/16 07:57:59 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:59 AM: Best result seen so far for macro.
09/16 07:57:59 AM: Updating LR scheduler:
09/16 07:57:59 AM: 	Best result seen so far for macro_avg: 0.499
09/16 07:57:59 AM: 	# validation passes without improvement: 0
09/16 07:57:59 AM: edges-rel-semeval_loss: training: 0.077687 validation: 0.116318
09/16 07:57:59 AM: macro_avg: validation: 0.499133
09/16 07:57:59 AM: micro_avg: validation: 0.000000
09/16 07:57:59 AM: edges-rel-semeval_mcc: training: 0.667622 validation: 0.511128
09/16 07:57:59 AM: edges-rel-semeval_acc: training: 0.518764 validation: 0.356832
09/16 07:57:59 AM: edges-rel-semeval_precision: training: 0.811801 validation: 0.742268
09/16 07:57:59 AM: edges-rel-semeval_recall: training: 0.572690 validation: 0.375979
09/16 07:57:59 AM: edges-rel-semeval_f1: training: 0.671598 validation: 0.499133
09/16 07:57:59 AM: Global learning rate: 0.0001
09/16 07:57:59 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:58:00 AM: ***** Step 2700 / Validation 27 *****
09/16 07:58:00 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:00 AM: Validating...
09/16 07:58:01 AM: Updating LR scheduler:
09/16 07:58:01 AM: 	Best result seen so far for macro_avg: 0.499
09/16 07:58:01 AM: 	# validation passes without improvement: 1
09/16 07:58:01 AM: edges-rel-semeval_loss: training: 0.073544 validation: 0.116014
09/16 07:58:01 AM: macro_avg: validation: 0.495627
09/16 07:58:01 AM: micro_avg: validation: 0.000000
09/16 07:58:01 AM: edges-rel-semeval_mcc: training: 0.695141 validation: 0.510158
09/16 07:58:01 AM: edges-rel-semeval_acc: training: 0.550625 validation: 0.360313
09/16 07:58:01 AM: edges-rel-semeval_precision: training: 0.835289 validation: 0.750883
09/16 07:58:01 AM: edges-rel-semeval_recall: training: 0.600625 validation: 0.369887
09/16 07:58:01 AM: edges-rel-semeval_f1: training: 0.698782 validation: 0.495627
09/16 07:58:01 AM: Global learning rate: 0.0001
09/16 07:58:01 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:58:03 AM: ***** Step 2800 / Validation 28 *****
09/16 07:58:03 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:03 AM: Validating...
09/16 07:58:03 AM: Evaluate: task edges-rel-semeval, batch 7 (36): mcc: 0.5690, acc: 0.4107, precision: 0.8051, recall: 0.4241, f1: 0.5556, edges-rel-semeval_loss: 0.1035
09/16 07:58:04 AM: Updating LR scheduler:
09/16 07:58:04 AM: 	Best result seen so far for macro_avg: 0.499
09/16 07:58:04 AM: 	# validation passes without improvement: 2
09/16 07:58:04 AM: edges-rel-semeval_loss: training: 0.076647 validation: 0.117765
09/16 07:58:04 AM: macro_avg: validation: 0.478286
09/16 07:58:04 AM: micro_avg: validation: 0.000000
09/16 07:58:04 AM: edges-rel-semeval_mcc: training: 0.669908 validation: 0.488837
09/16 07:58:04 AM: edges-rel-semeval_acc: training: 0.528855 validation: 0.346388
09/16 07:58:04 AM: edges-rel-semeval_precision: training: 0.812639 validation: 0.714533
09/16 07:58:04 AM: edges-rel-semeval_recall: training: 0.575844 validation: 0.359443
09/16 07:58:04 AM: edges-rel-semeval_f1: training: 0.674049 validation: 0.478286
09/16 07:58:04 AM: Global learning rate: 0.0001
09/16 07:58:04 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:58:05 AM: ***** Step 2900 / Validation 29 *****
09/16 07:58:05 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:05 AM: Validating...
09/16 07:58:06 AM: Updating LR scheduler:
09/16 07:58:06 AM: 	Best result seen so far for macro_avg: 0.499
09/16 07:58:06 AM: 	# validation passes without improvement: 3
09/16 07:58:06 AM: edges-rel-semeval_loss: training: 0.070612 validation: 0.118168
09/16 07:58:06 AM: macro_avg: validation: 0.496258
09/16 07:58:06 AM: micro_avg: validation: 0.000000
09/16 07:58:06 AM: edges-rel-semeval_mcc: training: 0.708706 validation: 0.506918
09/16 07:58:06 AM: edges-rel-semeval_acc: training: 0.571250 validation: 0.359443
09/16 07:58:06 AM: edges-rel-semeval_precision: training: 0.838397 validation: 0.732993
09/16 07:58:06 AM: edges-rel-semeval_recall: training: 0.620938 validation: 0.375109
09/16 07:58:06 AM: edges-rel-semeval_f1: training: 0.713465 validation: 0.496258
09/16 07:58:06 AM: Global learning rate: 0.0001
09/16 07:58:06 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:58:08 AM: ***** Step 3000 / Validation 30 *****
09/16 07:58:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:08 AM: Validating...
09/16 07:58:08 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:08 AM: Best result seen so far for macro.
09/16 07:58:08 AM: Updating LR scheduler:
09/16 07:58:08 AM: 	Best result seen so far for macro_avg: 0.523
09/16 07:58:08 AM: 	# validation passes without improvement: 0
09/16 07:58:08 AM: edges-rel-semeval_loss: training: 0.073273 validation: 0.115708
09/16 07:58:08 AM: macro_avg: validation: 0.523179
09/16 07:58:08 AM: micro_avg: validation: 0.000000
09/16 07:58:08 AM: edges-rel-semeval_mcc: training: 0.699489 validation: 0.524915
09/16 07:58:08 AM: edges-rel-semeval_acc: training: 0.555937 validation: 0.384682
09/16 07:58:08 AM: edges-rel-semeval_precision: training: 0.833333 validation: 0.714932
09/16 07:58:08 AM: edges-rel-semeval_recall: training: 0.609375 validation: 0.412533
09/16 07:58:08 AM: edges-rel-semeval_f1: training: 0.703971 validation: 0.523179
09/16 07:58:08 AM: Global learning rate: 0.0001
09/16 07:58:08 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:58:11 AM: ***** Step 3100 / Validation 31 *****
09/16 07:58:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:11 AM: Validating...
09/16 07:58:11 AM: Updating LR scheduler:
09/16 07:58:11 AM: 	Best result seen so far for macro_avg: 0.523
09/16 07:58:11 AM: 	# validation passes without improvement: 1
09/16 07:58:11 AM: edges-rel-semeval_loss: training: 0.068461 validation: 0.118430
09/16 07:58:11 AM: macro_avg: validation: 0.511706
09/16 07:58:11 AM: micro_avg: validation: 0.000000
09/16 07:58:11 AM: edges-rel-semeval_mcc: training: 0.721984 validation: 0.514939
09/16 07:58:11 AM: edges-rel-semeval_acc: training: 0.584043 validation: 0.375979
09/16 07:58:11 AM: edges-rel-semeval_precision: training: 0.846896 validation: 0.711628
09/16 07:58:11 AM: edges-rel-semeval_recall: training: 0.636708 validation: 0.399478
09/16 07:58:11 AM: edges-rel-semeval_f1: training: 0.726913 validation: 0.511706
09/16 07:58:11 AM: Global learning rate: 0.0001
09/16 07:58:11 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:58:13 AM: ***** Step 3200 / Validation 32 *****
09/16 07:58:13 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:13 AM: Validating...
09/16 07:58:13 AM: Updating LR scheduler:
09/16 07:58:13 AM: 	Best result seen so far for macro_avg: 0.523
09/16 07:58:13 AM: 	# validation passes without improvement: 2
09/16 07:58:13 AM: edges-rel-semeval_loss: training: 0.070161 validation: 0.117473
09/16 07:58:13 AM: macro_avg: validation: 0.513423
09/16 07:58:13 AM: micro_avg: validation: 0.000000
09/16 07:58:13 AM: edges-rel-semeval_mcc: training: 0.706798 validation: 0.517662
09/16 07:58:13 AM: edges-rel-semeval_acc: training: 0.570312 validation: 0.373368
09/16 07:58:13 AM: edges-rel-semeval_precision: training: 0.827145 validation: 0.718310
09/16 07:58:13 AM: edges-rel-semeval_recall: training: 0.626562 validation: 0.399478
09/16 07:58:13 AM: edges-rel-semeval_f1: training: 0.713016 validation: 0.513423
09/16 07:58:13 AM: Global learning rate: 0.0001
09/16 07:58:13 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:58:13 AM: Update 3223: task edges-rel-semeval, batch 23 (3223): mcc: 0.7061, acc: 0.5734, precision: 0.8175, recall: 0.6332, f1: 0.7136, edges-rel-semeval_loss: 0.0728
09/16 07:58:15 AM: ***** Step 3300 / Validation 33 *****
09/16 07:58:15 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:15 AM: Validating...
09/16 07:58:16 AM: Updating LR scheduler:
09/16 07:58:16 AM: 	Best result seen so far for macro_avg: 0.523
09/16 07:58:16 AM: 	# validation passes without improvement: 3
09/16 07:58:16 AM: edges-rel-semeval_loss: training: 0.067376 validation: 0.118985
09/16 07:58:16 AM: macro_avg: validation: 0.523179
09/16 07:58:16 AM: micro_avg: validation: 0.000000
09/16 07:58:16 AM: edges-rel-semeval_mcc: training: 0.724518 validation: 0.524915
09/16 07:58:16 AM: edges-rel-semeval_acc: training: 0.591611 validation: 0.388164
09/16 07:58:16 AM: edges-rel-semeval_precision: training: 0.838091 validation: 0.714932
09/16 07:58:16 AM: edges-rel-semeval_recall: training: 0.648061 validation: 0.412533
09/16 07:58:16 AM: edges-rel-semeval_f1: training: 0.730927 validation: 0.523179
09/16 07:58:16 AM: Global learning rate: 0.0001
09/16 07:58:16 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-only/run
09/16 07:58:17 AM: ***** Step 3400 / Validation 34 *****
09/16 07:58:17 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:17 AM: Validating...
09/16 07:58:18 AM: Updating LR scheduler:
09/16 07:58:18 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 589, in main
    phase="target_train",
  File "/srv/home/ericwallace/jiant/jiant/trainer.py", line 682, in train
    all_val_metrics, should_save, new_best = self._validate(n_val, tasks, batch_size)
  File "/srv/home/ericwallace/jiant/jiant/trainer.py", line 985, in _validate
    scheduler.step(this_val_metric, val_pass)
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/site-packages/allennlp/training/learning_rate_schedulers/learning_rate_scheduler.py", line 65, in step
    self.lr_scheduler.step(metric, epoch)
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/site-packages/torch/optim/lr_scheduler.py", line 364, in step
    self._reduce_lr(epoch)
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/site-packages/torch/optim/lr_scheduler.py", line 376, in _reduce_lr
    ' of group {} to {:.4e}.'.format(epoch, i, new_lr))
OSError: [Errno 5] Input/output error
