09/16 08:09:30 AM: Git branch: master
09/16 08:09:30 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:09:31 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-None-top/",
  "exp_name": "experiments/spr2-None-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-None-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/None",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/spr2-None-top__run",
  "run_dir": "./experiments/spr2-None-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:09:31 AM: Saved config to ./experiments/spr2-None-top/run/params.conf
09/16 08:09:31 AM: Using random seed 1234
09/16 08:09:32 AM: Using GPU 0
09/16 08:09:32 AM: Loading tasks...
09/16 08:09:32 AM: Writing pre-preprocessed tasks to ./experiments/spr2-None-top/
09/16 08:09:32 AM: 	Creating task edges-spr2 from scratch.
09/16 08:09:32 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:09:32 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:09:33 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:09:33 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:09:33 AM: 	Finished loading tasks: edges-spr2.
09/16 08:09:33 AM: 	Building vocab from scratch.
09/16 08:09:33 AM: 	Counting units for task edges-spr2.
09/16 08:09:33 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:09:34 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:09:34 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:09:34 AM: 	Saved vocab to ./experiments/spr2-None-top/vocab
09/16 08:09:34 AM: Loading token dictionary from ./experiments/spr2-None-top/vocab.
09/16 08:09:34 AM: 	Loaded vocab from ./experiments/spr2-None-top/vocab
09/16 08:09:34 AM: 	Vocab namespace tokens: size 7943
09/16 08:09:34 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:09:34 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:09:34 AM: 	Vocab namespace chars: size 65
09/16 08:09:34 AM: 	Finished building vocab.
09/16 08:09:34 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:09:35 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-None-top/preproc/edges-spr2__train_data
09/16 08:09:35 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:09:35 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-None-top/preproc/edges-spr2__val_data
09/16 08:09:35 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:09:35 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-None-top/preproc/edges-spr2__test_data
09/16 08:09:35 AM: 	Finished indexing tasks
09/16 08:09:35 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:09:35 AM: 	  Training on 
09/16 08:09:35 AM: 	  Evaluating on edges-spr2
09/16 08:09:35 AM: 	Finished loading tasks in 2.846s
09/16 08:09:35 AM: 	 Tasks: ['edges-spr2']
09/16 08:09:35 AM: Building model...
09/16 08:09:35 AM: Using BERT model (bert-base-uncased).
09/16 08:09:35 AM: LOADING A PRETRAINED MODEL
09/16 08:09:36 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json not found in cache or force_download set to True, downloading to /tmp/tmp4jthnsms
09/16 08:09:37 AM: copying /tmp/tmp4jthnsms to cache at ./experiments/spr2-None-top/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 08:09:37 AM: creating metadata file for ./experiments/spr2-None-top/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 08:09:37 AM: removing temp file /tmp/tmp4jthnsms
09/16 08:09:37 AM: loading configuration file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json from cache at ./experiments/spr2-None-top/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 08:09:37 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:09:38 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin not found in cache or force_download set to True, downloading to /tmp/tmpyf01180h
09/16 08:18:56 AM: copying /tmp/tmpyf01180h to cache at ./experiments/spr2-None-top/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 08:18:57 AM: creating metadata file for ./experiments/spr2-None-top/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 08:18:57 AM: removing temp file /tmp/tmpyf01180h
09/16 08:18:57 AM: loading weights file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin from cache at ./experiments/spr2-None-top/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 08:19:02 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpahw4upl1
09/16 08:19:04 AM: copying /tmp/tmpahw4upl1 to cache at ./experiments/spr2-None-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:19:04 AM: creating metadata file for ./experiments/spr2-None-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:19:04 AM: removing temp file /tmp/tmpahw4upl1
09/16 08:19:04 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-None-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:19:04 AM: Initializing parameters
09/16 08:19:04 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:19:04 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:19:04 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:19:04 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:19:04 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:19:04 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:19:04 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:19:09 AM: Model specification:
09/16 08:19:09 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:19:09 AM: Model parameters:
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:09 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:09 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:19:09 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:19:09 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:19:09 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:19:09 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:19:09 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:19:09 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:19:09 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:19:09 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:19:09 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:19:09 AM: Total number of parameters: 110144020 (1.10144e+08)
09/16 08:19:09 AM: Number of trainable parameters: 661780 (661780)
09/16 08:19:09 AM: Finished building model in 574.107s
09/16 08:19:09 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:19:10 AM: patience = 9
09/16 08:19:10 AM: val_interval = 100
09/16 08:19:10 AM: max_vals = 100
09/16 08:19:10 AM: cuda_device = 0
09/16 08:19:10 AM: grad_norm = 5.0
09/16 08:19:10 AM: grad_clipping = None
09/16 08:19:10 AM: lr_decay = 0.99
09/16 08:19:10 AM: min_lr = 1e-06
09/16 08:19:10 AM: keep_all_checkpoints = 0
09/16 08:19:10 AM: val_data_limit = 5000
09/16 08:19:10 AM: max_epochs = -1
09/16 08:19:10 AM: dec_val_scale = 250
09/16 08:19:10 AM: training_data_fraction = 1
09/16 08:19:10 AM: type = adam
09/16 08:19:10 AM: parameter_groups = None
09/16 08:19:10 AM: Number of trainable parameters: 661780
09/16 08:19:10 AM: infer_type_and_cast = True
09/16 08:19:10 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:19:10 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:19:10 AM: lr = 0.0001
09/16 08:19:10 AM: amsgrad = True
09/16 08:19:10 AM: type = reduce_on_plateau
09/16 08:19:10 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:19:10 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:19:10 AM: mode = max
09/16 08:19:10 AM: factor = 0.5
09/16 08:19:10 AM: patience = 3
09/16 08:19:10 AM: threshold = 0.0001
09/16 08:19:10 AM: threshold_mode = abs
09/16 08:19:10 AM: verbose = True
09/16 08:19:10 AM: type = adam
09/16 08:19:10 AM: parameter_groups = None
09/16 08:19:10 AM: Number of trainable parameters: 661780
09/16 08:19:10 AM: infer_type_and_cast = True
09/16 08:19:10 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:19:10 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:19:10 AM: lr = 0.0001
09/16 08:19:10 AM: amsgrad = True
09/16 08:19:10 AM: type = reduce_on_plateau
09/16 08:19:10 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:19:10 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:19:10 AM: mode = max
09/16 08:19:10 AM: factor = 0.5
09/16 08:19:10 AM: patience = 3
09/16 08:19:10 AM: threshold = 0.0001
09/16 08:19:10 AM: threshold_mode = abs
09/16 08:19:10 AM: verbose = True
09/16 08:19:10 AM: Starting training without restoring from a checkpoint.
09/16 08:19:10 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:19:10 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:19:19 AM: ***** Step 100 / Validation 1 *****
09/16 08:19:19 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:19:19 AM: Validating...
09/16 08:19:20 AM: Best result seen so far for edges-spr2.
09/16 08:19:20 AM: Best result seen so far for micro.
09/16 08:19:20 AM: Best result seen so far for macro.
09/16 08:19:20 AM: Updating LR scheduler:
09/16 08:19:20 AM: 	Best result seen so far for macro_avg: 0.796
09/16 08:19:20 AM: 	# validation passes without improvement: 0
09/16 08:19:20 AM: edges-spr2_loss: training: 0.385876 validation: 0.348093
09/16 08:19:20 AM: macro_avg: validation: 0.796022
09/16 08:19:20 AM: micro_avg: validation: 0.000000
09/16 08:19:20 AM: edges-spr2_mcc: training: 0.608278 validation: 0.689542
09/16 08:19:20 AM: edges-spr2_acc: training: 0.039335 validation: 0.071429
09/16 08:19:20 AM: edges-spr2_precision: training: 0.771457 validation: 0.849494
09/16 08:19:20 AM: edges-spr2_recall: training: 0.723188 validation: 0.748884
09/16 08:19:20 AM: edges-spr2_f1: training: 0.746543 validation: 0.796022
09/16 08:19:20 AM: Global learning rate: 0.0001
09/16 08:19:20 AM: Saving checkpoints to: ./experiments/spr2-None-top/run
09/16 08:19:20 AM: Update 108: task edges-spr2, batch 8 (108): mcc: 0.6790, acc: 0.0583, precision: 0.8266, recall: 0.7600, f1: 0.7919, edges-spr2_loss: 0.3285
09/16 08:19:27 AM: ***** Step 200 / Validation 2 *****
09/16 08:19:27 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:19:27 AM: Validating...
09/16 08:19:28 AM: Best result seen so far for edges-spr2.
09/16 08:19:28 AM: Best result seen so far for macro.
09/16 08:19:28 AM: Updating LR scheduler:
09/16 08:19:28 AM: 	Best result seen so far for macro_avg: 0.813
09/16 08:19:28 AM: 	# validation passes without improvement: 0
09/16 08:19:28 AM: edges-spr2_loss: training: 0.315581 validation: 0.327606
09/16 08:19:28 AM: macro_avg: validation: 0.812847
09/16 08:19:28 AM: micro_avg: validation: 0.000000
09/16 08:19:28 AM: edges-spr2_mcc: training: 0.692855 validation: 0.711008
09/16 08:19:28 AM: edges-spr2_acc: training: 0.069764 validation: 0.085714
09/16 08:19:28 AM: edges-spr2_precision: training: 0.825102 validation: 0.851455
09/16 08:19:28 AM: edges-spr2_recall: training: 0.778911 validation: 0.777589
09/16 08:19:28 AM: edges-spr2_f1: training: 0.801341 validation: 0.812847
09/16 08:19:28 AM: Global learning rate: 0.0001
09/16 08:19:28 AM: Saving checkpoints to: ./experiments/spr2-None-top/run
09/16 08:19:30 AM: Update 217: task edges-spr2, batch 17 (217): mcc: 0.7030, acc: 0.0784, precision: 0.8297, recall: 0.7853, f1: 0.8069, edges-spr2_loss: 0.3015
09/16 08:19:37 AM: ***** Step 300 / Validation 3 *****
09/16 08:19:37 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:19:37 AM: Validating...
09/16 08:19:38 AM: Best result seen so far for edges-spr2.
09/16 08:19:38 AM: Best result seen so far for macro.
09/16 08:19:38 AM: Updating LR scheduler:
09/16 08:19:38 AM: 	Best result seen so far for macro_avg: 0.819
09/16 08:19:38 AM: 	# validation passes without improvement: 0
09/16 08:19:38 AM: edges-spr2_loss: training: 0.295551 validation: 0.322036
09/16 08:19:38 AM: macro_avg: validation: 0.818989
09/16 08:19:38 AM: micro_avg: validation: 0.000000
09/16 08:19:38 AM: edges-spr2_mcc: training: 0.712066 validation: 0.717325
09/16 08:19:38 AM: edges-spr2_acc: training: 0.078012 validation: 0.082540
09/16 08:19:38 AM: edges-spr2_precision: training: 0.835367 validation: 0.845405
09/16 08:19:38 AM: edges-spr2_recall: training: 0.794271 validation: 0.794174
09/16 08:19:38 AM: edges-spr2_f1: training: 0.814301 validation: 0.818989
09/16 08:19:38 AM: Global learning rate: 0.0001
09/16 08:19:38 AM: Saving checkpoints to: ./experiments/spr2-None-top/run
09/16 08:19:40 AM: Update 332: task edges-spr2, batch 32 (332): mcc: 0.7222, acc: 0.0736, precision: 0.8372, recall: 0.8052, f1: 0.8209, edges-spr2_loss: 0.2855
09/16 08:19:46 AM: ***** Step 400 / Validation 4 *****
09/16 08:19:46 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:19:46 AM: Validating...
09/16 08:19:47 AM: Updating LR scheduler:
09/16 08:19:47 AM: 	Best result seen so far for macro_avg: 0.819
09/16 08:19:47 AM: 	# validation passes without improvement: 1
09/16 08:19:47 AM: edges-spr2_loss: training: 0.285973 validation: 0.320152
09/16 08:19:47 AM: macro_avg: validation: 0.817574
09/16 08:19:47 AM: micro_avg: validation: 0.000000
09/16 08:19:47 AM: edges-spr2_mcc: training: 0.721378 validation: 0.719223
09/16 08:19:47 AM: edges-spr2_acc: training: 0.080085 validation: 0.074603
09/16 08:19:47 AM: edges-spr2_precision: training: 0.837996 validation: 0.859555
09/16 08:19:47 AM: edges-spr2_recall: training: 0.804248 validation: 0.779502
09/16 08:19:47 AM: edges-spr2_f1: training: 0.820775 validation: 0.817574
09/16 08:19:47 AM: Global learning rate: 0.0001
09/16 08:19:47 AM: Saving checkpoints to: ./experiments/spr2-None-top/run
09/16 08:19:50 AM: Update 438: task edges-spr2, batch 38 (438): mcc: 0.7210, acc: 0.0836, precision: 0.8409, recall: 0.8012, f1: 0.8206, edges-spr2_loss: 0.2844
09/16 08:19:55 AM: ***** Step 500 / Validation 5 *****
09/16 08:19:55 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:19:55 AM: Validating...
09/16 08:19:56 AM: Best result seen so far for edges-spr2.
09/16 08:19:56 AM: Best result seen so far for macro.
09/16 08:19:56 AM: Updating LR scheduler:
09/16 08:19:56 AM: 	Best result seen so far for macro_avg: 0.823
09/16 08:19:56 AM: 	# validation passes without improvement: 0
09/16 08:19:56 AM: edges-spr2_loss: training: 0.279099 validation: 0.314292
09/16 08:19:56 AM: macro_avg: validation: 0.822586
09/16 08:19:56 AM: micro_avg: validation: 0.000000
09/16 08:19:56 AM: edges-spr2_mcc: training: 0.726966 validation: 0.723412
09/16 08:19:56 AM: edges-spr2_acc: training: 0.085901 validation: 0.082540
09/16 08:19:56 AM: edges-spr2_precision: training: 0.843025 validation: 0.850909
09/16 08:19:56 AM: edges-spr2_recall: training: 0.806648 validation: 0.796088
09/16 08:19:56 AM: edges-spr2_f1: training: 0.824435 validation: 0.822586
09/16 08:19:56 AM: Global learning rate: 0.0001
09/16 08:19:56 AM: Saving checkpoints to: ./experiments/spr2-None-top/run
09/16 08:20:00 AM: Update 559: task edges-spr2, batch 59 (559): mcc: 0.7336, acc: 0.0861, precision: 0.8463, recall: 0.8116, f1: 0.8286, edges-spr2_loss: 0.2735
09/16 08:20:04 AM: ***** Step 600 / Validation 6 *****
09/16 08:20:04 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:04 AM: Validating...
09/16 08:20:05 AM: Updating LR scheduler:
09/16 08:20:05 AM: 	Best result seen so far for macro_avg: 0.823
09/16 08:20:05 AM: 	# validation passes without improvement: 1
09/16 08:20:05 AM: edges-spr2_loss: training: 0.272987 validation: 0.316277
09/16 08:20:05 AM: macro_avg: validation: 0.821374
09/16 08:20:05 AM: micro_avg: validation: 0.000000
09/16 08:20:05 AM: edges-spr2_mcc: training: 0.732683 validation: 0.721238
09/16 08:20:05 AM: edges-spr2_acc: training: 0.086926 validation: 0.085714
09/16 08:20:05 AM: edges-spr2_precision: training: 0.845259 validation: 0.848560
09/16 08:20:05 AM: edges-spr2_recall: training: 0.811648 validation: 0.795875
09/16 08:20:05 AM: edges-spr2_f1: training: 0.828113 validation: 0.821374
09/16 08:20:05 AM: Global learning rate: 0.0001
09/16 08:20:05 AM: Saving checkpoints to: ./experiments/spr2-None-top/run
09/16 08:20:10 AM: Update 668: task edges-spr2, batch 68 (668): mcc: 0.7372, acc: 0.0925, precision: 0.8485, recall: 0.8151, f1: 0.8314, edges-spr2_loss: 0.2686
09/16 08:20:13 AM: ***** Step 700 / Validation 7 *****
09/16 08:20:13 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:13 AM: Validating...
09/16 08:20:14 AM: Updating LR scheduler:
09/16 08:20:14 AM: 	Best result seen so far for macro_avg: 0.823
09/16 08:20:14 AM: 	# validation passes without improvement: 2
09/16 08:20:14 AM: edges-spr2_loss: training: 0.267928 validation: 0.317422
09/16 08:20:14 AM: macro_avg: validation: 0.820721
09/16 08:20:14 AM: micro_avg: validation: 0.000000
09/16 08:20:14 AM: edges-spr2_mcc: training: 0.738408 validation: 0.719795
09/16 08:20:14 AM: edges-spr2_acc: training: 0.091742 validation: 0.082540
09/16 08:20:14 AM: edges-spr2_precision: training: 0.849282 validation: 0.846206
09/16 08:20:14 AM: edges-spr2_recall: training: 0.815285 validation: 0.796726
09/16 08:20:14 AM: edges-spr2_f1: training: 0.831936 validation: 0.820721
09/16 08:20:14 AM: Global learning rate: 0.0001
09/16 08:20:14 AM: Saving checkpoints to: ./experiments/spr2-None-top/run
09/16 08:20:20 AM: Update 775: task edges-spr2, batch 75 (775): mcc: 0.7371, acc: 0.0946, precision: 0.8459, recall: 0.8171, f1: 0.8313, edges-spr2_loss: 0.2665
09/16 08:20:22 AM: ***** Step 800 / Validation 8 *****
09/16 08:20:22 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:22 AM: Validating...
09/16 08:20:23 AM: Updating LR scheduler:
09/16 08:20:23 AM: 	Best result seen so far for macro_avg: 0.823
09/16 08:20:23 AM: 	# validation passes without improvement: 3
09/16 08:20:23 AM: edges-spr2_loss: training: 0.264755 validation: 0.319402
09/16 08:20:23 AM: macro_avg: validation: 0.820101
09/16 08:20:23 AM: micro_avg: validation: 0.000000
09/16 08:20:23 AM: edges-spr2_mcc: training: 0.739092 validation: 0.719747
09/16 08:20:23 AM: edges-spr2_acc: training: 0.098389 validation: 0.087302
09/16 08:20:23 AM: edges-spr2_precision: training: 0.847734 validation: 0.849237
09/16 08:20:23 AM: edges-spr2_recall: training: 0.817937 validation: 0.792898
09/16 08:20:23 AM: edges-spr2_f1: training: 0.832569 validation: 0.820101
09/16 08:20:23 AM: Global learning rate: 0.0001
09/16 08:20:23 AM: Saving checkpoints to: ./experiments/spr2-None-top/run
09/16 08:20:30 AM: Update 890: task edges-spr2, batch 90 (890): mcc: 0.7448, acc: 0.0987, precision: 0.8526, recall: 0.8198, f1: 0.8358, edges-spr2_loss: 0.2616
09/16 08:20:31 AM: ***** Step 900 / Validation 9 *****
09/16 08:20:31 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:31 AM: Validating...
09/16 08:20:32 AM: Updating LR scheduler:
09/16 08:20:32 AM: 	Best result seen so far for macro_avg: 0.823
09/16 08:20:32 AM: 	# validation passes without improvement: 0
09/16 08:20:32 AM: edges-spr2_loss: training: 0.261626 validation: 0.322098
09/16 08:20:32 AM: macro_avg: validation: 0.819795
09/16 08:20:32 AM: micro_avg: validation: 0.000000
09/16 08:20:32 AM: edges-spr2_mcc: training: 0.744864 validation: 0.719808
09/16 08:20:32 AM: edges-spr2_acc: training: 0.099957 validation: 0.077778
09/16 08:20:32 AM: edges-spr2_precision: training: 0.852974 validation: 0.851030
09/16 08:20:32 AM: edges-spr2_recall: training: 0.819229 validation: 0.790772
09/16 08:20:32 AM: edges-spr2_f1: training: 0.835761 validation: 0.819795
09/16 08:20:32 AM: Global learning rate: 5e-05
09/16 08:20:32 AM: Saving checkpoints to: ./experiments/spr2-None-top/run
09/16 08:20:40 AM: Update 984: task edges-spr2, batch 84 (984): mcc: 0.7443, acc: 0.1030, precision: 0.8524, recall: 0.8206, f1: 0.8362, edges-spr2_loss: 0.2603
09/16 08:20:42 AM: ***** Step 1000 / Validation 10 *****
09/16 08:20:42 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:42 AM: Validating...
09/16 08:20:43 AM: Updating LR scheduler:
09/16 08:20:43 AM: 	Best result seen so far for macro_avg: 0.823
09/16 08:20:43 AM: 	# validation passes without improvement: 1
09/16 08:20:43 AM: edges-spr2_loss: training: 0.258595 validation: 0.321253
09/16 08:20:43 AM: macro_avg: validation: 0.817820
09/16 08:20:43 AM: micro_avg: validation: 0.000000
09/16 08:20:43 AM: edges-spr2_mcc: training: 0.746404 validation: 0.717435
09/16 08:20:43 AM: edges-spr2_acc: training: 0.104219 validation: 0.079365
09/16 08:20:43 AM: edges-spr2_precision: training: 0.853415 validation: 0.851715
09/16 08:20:43 AM: edges-spr2_recall: training: 0.822508 validation: 0.786519
09/16 08:20:43 AM: edges-spr2_f1: training: 0.837676 validation: 0.817820
09/16 08:20:43 AM: Global learning rate: 5e-05
09/16 08:20:43 AM: Saving checkpoints to: ./experiments/spr2-None-top/run
09/16 08:20:50 AM: Update 1098: task edges-spr2, batch 98 (1098): mcc: 0.7495, acc: 0.1039, precision: 0.8546, recall: 0.8239, f1: 0.8390, edges-spr2_loss: 0.2553
09/16 08:20:51 AM: ***** Step 1100 / Validation 11 *****
09/16 08:20:51 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:51 AM: Validating...
09/16 08:20:52 AM: Updating LR scheduler:
09/16 08:20:52 AM: 	Best result seen so far for macro_avg: 0.823
09/16 08:20:52 AM: 	# validation passes without improvement: 2
09/16 08:20:52 AM: edges-spr2_loss: training: 0.255184 validation: 0.319596
09/16 08:20:52 AM: macro_avg: validation: 0.821738
09/16 08:20:52 AM: micro_avg: validation: 0.000000
09/16 08:20:52 AM: edges-spr2_mcc: training: 0.749392 validation: 0.721488
09/16 08:20:52 AM: edges-spr2_acc: training: 0.103458 validation: 0.074603
09/16 08:20:52 AM: edges-spr2_precision: training: 0.854780 validation: 0.847649
09/16 08:20:52 AM: edges-spr2_recall: training: 0.823586 validation: 0.797363
09/16 08:20:52 AM: edges-spr2_f1: training: 0.838893 validation: 0.821738
09/16 08:20:52 AM: Global learning rate: 5e-05
09/16 08:20:52 AM: Saving checkpoints to: ./experiments/spr2-None-top/run
09/16 08:21:01 AM: Update 1172: task edges-spr2, batch 72 (1172): mcc: 0.7495, acc: 0.1064, precision: 0.8568, recall: 0.8216, f1: 0.8388, edges-spr2_loss: 0.2542
09/16 08:21:03 AM: ***** Step 1200 / Validation 12 *****
09/16 08:21:03 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:03 AM: Validating...
09/16 08:21:04 AM: Updating LR scheduler:
09/16 08:21:04 AM: 	Best result seen so far for macro_avg: 0.823
09/16 08:21:04 AM: 	# validation passes without improvement: 3
09/16 08:21:04 AM: edges-spr2_loss: training: 0.254592 validation: 0.321309
09/16 08:21:04 AM: macro_avg: validation: 0.819676
09/16 08:21:04 AM: micro_avg: validation: 0.000000
09/16 08:21:04 AM: edges-spr2_mcc: training: 0.748759 validation: 0.718229
09/16 08:21:04 AM: edges-spr2_acc: training: 0.105403 validation: 0.074603
09/16 08:21:04 AM: edges-spr2_precision: training: 0.855605 validation: 0.845424
09/16 08:21:04 AM: edges-spr2_recall: training: 0.822245 validation: 0.795450
09/16 08:21:04 AM: edges-spr2_f1: training: 0.838594 validation: 0.819676
09/16 08:21:04 AM: Global learning rate: 5e-05
09/16 08:21:04 AM: Saving checkpoints to: ./experiments/spr2-None-top/run
09/16 08:21:11 AM: Update 1273: task edges-spr2, batch 73 (1273): mcc: 0.7517, acc: 0.1077, precision: 0.8552, recall: 0.8262, f1: 0.8404, edges-spr2_loss: 0.2535
09/16 08:21:13 AM: ***** Step 1300 / Validation 13 *****
09/16 08:21:13 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:13 AM: Validating...
09/16 08:21:14 AM: Updating LR scheduler:
09/16 08:21:14 AM: 	Best result seen so far for macro_avg: 0.823
09/16 08:21:14 AM: 	# validation passes without improvement: 0
09/16 08:21:14 AM: edges-spr2_loss: training: 0.252460 validation: 0.321587
09/16 08:21:14 AM: macro_avg: validation: 0.819769
09/16 08:21:14 AM: micro_avg: validation: 0.000000
09/16 08:21:14 AM: edges-spr2_mcc: training: 0.752405 validation: 0.717456
09/16 08:21:14 AM: edges-spr2_acc: training: 0.106196 validation: 0.071429
09/16 08:21:14 AM: edges-spr2_precision: training: 0.856318 validation: 0.841810
09/16 08:21:14 AM: edges-spr2_recall: training: 0.826005 validation: 0.798852
09/16 08:21:14 AM: edges-spr2_f1: training: 0.840888 validation: 0.819769
09/16 08:21:14 AM: Global learning rate: 2.5e-05
09/16 08:21:14 AM: Saving checkpoints to: ./experiments/spr2-None-top/run
09/16 08:21:21 AM: Update 1381: task edges-spr2, batch 81 (1381): mcc: 0.7549, acc: 0.1059, precision: 0.8580, recall: 0.8289, f1: 0.8432, edges-spr2_loss: 0.2505
09/16 08:21:22 AM: ***** Step 1400 / Validation 14 *****
09/16 08:21:22 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:22 AM: Validating...
09/16 08:21:23 AM: Updating LR scheduler:
09/16 08:21:23 AM: 	Best result seen so far for macro_avg: 0.823
09/16 08:21:23 AM: 	# validation passes without improvement: 1
09/16 08:21:23 AM: edges-spr2_loss: training: 0.250177 validation: 0.320610
09/16 08:21:23 AM: macro_avg: validation: 0.821417
09/16 08:21:23 AM: micro_avg: validation: 0.000000
09/16 08:21:23 AM: edges-spr2_mcc: training: 0.754266 validation: 0.720838
09/16 08:21:23 AM: edges-spr2_acc: training: 0.106205 validation: 0.079365
09/16 08:21:23 AM: edges-spr2_precision: training: 0.856314 validation: 0.846727
09/16 08:21:23 AM: edges-spr2_recall: training: 0.829492 validation: 0.797576
09/16 08:21:23 AM: edges-spr2_f1: training: 0.842690 validation: 0.821417
09/16 08:21:23 AM: Global learning rate: 2.5e-05
09/16 08:21:23 AM: Saving checkpoints to: ./experiments/spr2-None-top/run
09/16 08:21:31 AM: Update 1476: task edges-spr2, batch 76 (1476): mcc: 0.7539, acc: 0.1108, precision: 0.8573, recall: 0.8270, f1: 0.8419, edges-spr2_loss: 0.2504
09/16 08:21:32 AM: ***** Step 1500 / Validation 15 *****
09/16 08:21:32 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:32 AM: Validating...
09/16 08:21:33 AM: Updating LR scheduler:
09/16 08:21:33 AM: 	Best result seen so far for macro_avg: 0.823
09/16 08:21:33 AM: 	# validation passes without improvement: 2
09/16 08:21:33 AM: Ran out of early stopping patience. Stopping training.
09/16 08:21:33 AM: edges-spr2_loss: training: 0.248496 validation: 0.319810
09/16 08:21:33 AM: macro_avg: validation: 0.821425
09/16 08:21:33 AM: micro_avg: validation: 0.000000
09/16 08:21:33 AM: edges-spr2_mcc: training: 0.756654 validation: 0.718755
09/16 08:21:33 AM: edges-spr2_acc: training: 0.111080 validation: 0.068254
09/16 08:21:33 AM: edges-spr2_precision: training: 0.859850 validation: 0.838053
09/16 08:21:33 AM: edges-spr2_recall: training: 0.828688 validation: 0.805443
09/16 08:21:33 AM: edges-spr2_f1: training: 0.843981 validation: 0.821425
09/16 08:21:33 AM: Global learning rate: 2.5e-05
09/16 08:21:33 AM: Saving checkpoints to: ./experiments/spr2-None-top/run
09/16 08:21:33 AM: Stopped training after 15 validation checks
09/16 08:21:33 AM: Trained edges-spr2 for 1500 batches or 21.429 epochs
09/16 08:21:33 AM: ***** VALIDATION RESULTS *****
09/16 08:21:33 AM: edges-spr2_f1 (for best val pass 5): edges-spr2_loss: 0.31429, macro_avg: 0.82259, micro_avg: 0.00000, edges-spr2_mcc: 0.72341, edges-spr2_acc: 0.08254, edges-spr2_precision: 0.85091, edges-spr2_recall: 0.79609, edges-spr2_f1: 0.82259
09/16 08:21:33 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.34809, macro_avg: 0.79602, micro_avg: 0.00000, edges-spr2_mcc: 0.68954, edges-spr2_acc: 0.07143, edges-spr2_precision: 0.84949, edges-spr2_recall: 0.74888, edges-spr2_f1: 0.79602
09/16 08:21:33 AM: macro_avg (for best val pass 5): edges-spr2_loss: 0.31429, macro_avg: 0.82259, micro_avg: 0.00000, edges-spr2_mcc: 0.72341, edges-spr2_acc: 0.08254, edges-spr2_precision: 0.85091, edges-spr2_recall: 0.79609, edges-spr2_f1: 0.82259
09/16 08:21:33 AM: Evaluating...
09/16 08:21:33 AM: Loaded model state from ./experiments/spr2-None-top/run/edges-spr2/model_state_target_train_val_5.best.th
09/16 08:21:33 AM: Evaluating on: edges-spr2, split: val
09/16 08:21:34 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:21:34 AM: Finished evaluating on: edges-spr2
09/16 08:21:34 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:21:34 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-None-top/run
09/16 08:21:34 AM: Wrote all preds for split 'val' to ./experiments/spr2-None-top/run
09/16 08:21:34 AM: Evaluating on: edges-spr2, split: test
09/16 08:21:35 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:21:35 AM: Finished evaluating on: edges-spr2
09/16 08:21:35 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:21:35 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-None-top/run
09/16 08:21:35 AM: Wrote all preds for split 'test' to ./experiments/spr2-None-top/run
09/16 08:21:35 AM: Writing results for split 'val' to ./experiments/spr2-None-top/results.tsv
09/16 08:21:35 AM: micro_avg: 0.000, macro_avg: 0.823, edges-spr2_mcc: 0.723, edges-spr2_acc: 0.083, edges-spr2_precision: 0.851, edges-spr2_recall: 0.796, edges-spr2_f1: 0.823
09/16 08:21:35 AM: Done!
09/16 08:21:35 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
