09/16 08:09:31 AM: Git branch: master
09/16 08:09:31 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:09:31 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-RANDOM-top/",
  "exp_name": "experiments/spr2-RANDOM-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-RANDOM-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/RANDOM",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/spr2-RANDOM-top__run",
  "run_dir": "./experiments/spr2-RANDOM-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:09:31 AM: Saved config to ./experiments/spr2-RANDOM-top/run/params.conf
09/16 08:09:31 AM: Using random seed 1234
09/16 08:09:32 AM: Using GPU 0
09/16 08:09:32 AM: Loading tasks...
09/16 08:09:32 AM: Writing pre-preprocessed tasks to ./experiments/spr2-RANDOM-top/
09/16 08:09:32 AM: 	Creating task edges-spr2 from scratch.
09/16 08:09:32 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:09:33 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:09:33 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:09:33 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:09:33 AM: 	Finished loading tasks: edges-spr2.
09/16 08:09:33 AM: 	Building vocab from scratch.
09/16 08:09:33 AM: 	Counting units for task edges-spr2.
09/16 08:09:33 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:09:34 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:09:34 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:09:34 AM: 	Saved vocab to ./experiments/spr2-RANDOM-top/vocab
09/16 08:09:34 AM: Loading token dictionary from ./experiments/spr2-RANDOM-top/vocab.
09/16 08:09:34 AM: 	Loaded vocab from ./experiments/spr2-RANDOM-top/vocab
09/16 08:09:34 AM: 	Vocab namespace tokens: size 7943
09/16 08:09:34 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:09:34 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:09:34 AM: 	Vocab namespace chars: size 65
09/16 08:09:34 AM: 	Finished building vocab.
09/16 08:09:34 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:09:35 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-RANDOM-top/preproc/edges-spr2__train_data
09/16 08:09:35 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:09:35 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-RANDOM-top/preproc/edges-spr2__val_data
09/16 08:09:35 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:09:35 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-RANDOM-top/preproc/edges-spr2__test_data
09/16 08:09:35 AM: 	Finished indexing tasks
09/16 08:09:35 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:09:35 AM: 	  Training on 
09/16 08:09:35 AM: 	  Evaluating on edges-spr2
09/16 08:09:35 AM: 	Finished loading tasks in 2.446s
09/16 08:09:35 AM: 	 Tasks: ['edges-spr2']
09/16 08:09:35 AM: Building model...
09/16 08:09:35 AM: Using BERT model (bert-base-uncased).
09/16 08:09:35 AM: LOADING A RANDOMLY WEIGHTS BERT
09/16 08:09:39 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json not found in cache or force_download set to True, downloading to /tmp/tmprx0jm9n9
09/16 08:09:40 AM: copying /tmp/tmprx0jm9n9 to cache at ./experiments/spr2-RANDOM-top/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 08:09:40 AM: creating metadata file for ./experiments/spr2-RANDOM-top/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 08:09:40 AM: removing temp file /tmp/tmprx0jm9n9
09/16 08:09:40 AM: loading configuration file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json from cache at ./experiments/spr2-RANDOM-top/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 08:09:40 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:09:41 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin not found in cache or force_download set to True, downloading to /tmp/tmpnk0km3dk
09/16 08:18:59 AM: copying /tmp/tmpnk0km3dk to cache at ./experiments/spr2-RANDOM-top/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 08:19:00 AM: creating metadata file for ./experiments/spr2-RANDOM-top/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 08:19:00 AM: removing temp file /tmp/tmpnk0km3dk
09/16 08:19:00 AM: loading weights file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin from cache at ./experiments/spr2-RANDOM-top/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 08:19:05 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmp7muu2vnv
09/16 08:19:08 AM: copying /tmp/tmp7muu2vnv to cache at ./experiments/spr2-RANDOM-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:19:08 AM: creating metadata file for ./experiments/spr2-RANDOM-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:19:08 AM: removing temp file /tmp/tmp7muu2vnv
09/16 08:19:08 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-RANDOM-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:19:08 AM: Initializing parameters
09/16 08:19:08 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:19:08 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:19:08 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:19:08 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:19:08 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:19:08 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:19:08 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:19:13 AM: Model specification:
09/16 08:19:13 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:19:13 AM: Model parameters:
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:19:13 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:19:13 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:19:13 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:19:13 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:19:13 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:19:13 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:19:13 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:19:13 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:19:13 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:19:13 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:19:13 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:19:13 AM: Total number of parameters: 110144020 (1.10144e+08)
09/16 08:19:13 AM: Number of trainable parameters: 661780 (661780)
09/16 08:19:13 AM: Finished building model in 577.739s
09/16 08:19:13 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:19:13 AM: patience = 9
09/16 08:19:13 AM: val_interval = 100
09/16 08:19:13 AM: max_vals = 100
09/16 08:19:13 AM: cuda_device = 0
09/16 08:19:13 AM: grad_norm = 5.0
09/16 08:19:13 AM: grad_clipping = None
09/16 08:19:13 AM: lr_decay = 0.99
09/16 08:19:13 AM: min_lr = 1e-06
09/16 08:19:13 AM: keep_all_checkpoints = 0
09/16 08:19:13 AM: val_data_limit = 5000
09/16 08:19:13 AM: max_epochs = -1
09/16 08:19:13 AM: dec_val_scale = 250
09/16 08:19:13 AM: training_data_fraction = 1
09/16 08:19:13 AM: type = adam
09/16 08:19:13 AM: parameter_groups = None
09/16 08:19:13 AM: Number of trainable parameters: 661780
09/16 08:19:13 AM: infer_type_and_cast = True
09/16 08:19:13 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:19:13 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:19:13 AM: lr = 0.0001
09/16 08:19:13 AM: amsgrad = True
09/16 08:19:13 AM: type = reduce_on_plateau
09/16 08:19:13 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:19:13 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:19:13 AM: mode = max
09/16 08:19:13 AM: factor = 0.5
09/16 08:19:13 AM: patience = 3
09/16 08:19:13 AM: threshold = 0.0001
09/16 08:19:13 AM: threshold_mode = abs
09/16 08:19:13 AM: verbose = True
09/16 08:19:13 AM: type = adam
09/16 08:19:13 AM: parameter_groups = None
09/16 08:19:13 AM: Number of trainable parameters: 661780
09/16 08:19:13 AM: infer_type_and_cast = True
09/16 08:19:13 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:19:13 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:19:13 AM: lr = 0.0001
09/16 08:19:13 AM: amsgrad = True
09/16 08:19:13 AM: type = reduce_on_plateau
09/16 08:19:13 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:19:13 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:19:13 AM: mode = max
09/16 08:19:13 AM: factor = 0.5
09/16 08:19:13 AM: patience = 3
09/16 08:19:13 AM: threshold = 0.0001
09/16 08:19:13 AM: threshold_mode = abs
09/16 08:19:13 AM: verbose = True
09/16 08:19:13 AM: Starting training without restoring from a checkpoint.
09/16 08:19:13 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:19:13 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:19:22 AM: ***** Step 100 / Validation 1 *****
09/16 08:19:22 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:19:22 AM: Validating...
09/16 08:19:23 AM: Evaluate: task edges-spr2, batch 8 (10): mcc: 0.6341, acc: 0.0499, precision: 0.8398, recall: 0.6841, f1: 0.7540, edges-spr2_loss: 0.3558
09/16 08:19:24 AM: Best result seen so far for edges-spr2.
09/16 08:19:24 AM: Best result seen so far for micro.
09/16 08:19:24 AM: Best result seen so far for macro.
09/16 08:19:24 AM: Updating LR scheduler:
09/16 08:19:24 AM: 	Best result seen so far for macro_avg: 0.749
09/16 08:19:24 AM: 	# validation passes without improvement: 0
09/16 08:19:24 AM: edges-spr2_loss: training: 0.395172 validation: 0.372752
09/16 08:19:24 AM: macro_avg: validation: 0.749328
09/16 08:19:24 AM: micro_avg: validation: 0.000000
09/16 08:19:24 AM: edges-spr2_mcc: training: 0.575176 validation: 0.629427
09/16 08:19:24 AM: edges-spr2_acc: training: 0.021712 validation: 0.049206
09/16 08:19:24 AM: edges-spr2_precision: training: 0.743931 validation: 0.831863
09/16 08:19:24 AM: edges-spr2_recall: training: 0.710594 validation: 0.681693
09/16 08:19:24 AM: edges-spr2_f1: training: 0.726880 validation: 0.749328
09/16 08:19:24 AM: Global learning rate: 0.0001
09/16 08:19:24 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:19:32 AM: ***** Step 200 / Validation 2 *****
09/16 08:19:32 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:19:32 AM: Validating...
09/16 08:19:33 AM: Best result seen so far for edges-spr2.
09/16 08:19:33 AM: Best result seen so far for macro.
09/16 08:19:33 AM: Updating LR scheduler:
09/16 08:19:33 AM: 	Best result seen so far for macro_avg: 0.770
09/16 08:19:33 AM: 	# validation passes without improvement: 0
09/16 08:19:33 AM: edges-spr2_loss: training: 0.352059 validation: 0.358740
09/16 08:19:33 AM: macro_avg: validation: 0.769529
09/16 08:19:33 AM: micro_avg: validation: 0.000000
09/16 08:19:33 AM: edges-spr2_mcc: training: 0.630750 validation: 0.651556
09/16 08:19:33 AM: edges-spr2_acc: training: 0.036312 validation: 0.065079
09/16 08:19:33 AM: edges-spr2_precision: training: 0.796327 validation: 0.829808
09/16 08:19:33 AM: edges-spr2_recall: training: 0.723144 validation: 0.717414
09/16 08:19:33 AM: edges-spr2_f1: training: 0.757973 validation: 0.769529
09/16 08:19:33 AM: Global learning rate: 0.0001
09/16 08:19:33 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:19:33 AM: Update 208: task edges-spr2, batch 8 (208): mcc: 0.6566, acc: 0.0404, precision: 0.8186, recall: 0.7352, f1: 0.7747, edges-spr2_loss: 0.3348
09/16 08:19:42 AM: ***** Step 300 / Validation 3 *****
09/16 08:19:42 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:19:42 AM: Validating...
09/16 08:19:43 AM: Updating LR scheduler:
09/16 08:19:43 AM: 	Best result seen so far for macro_avg: 0.770
09/16 08:19:43 AM: 	# validation passes without improvement: 1
09/16 08:19:43 AM: edges-spr2_loss: training: 0.340809 validation: 0.356496
09/16 08:19:43 AM: macro_avg: validation: 0.768263
09/16 08:19:43 AM: micro_avg: validation: 0.000000
09/16 08:19:43 AM: edges-spr2_mcc: training: 0.646259 validation: 0.650451
09/16 08:19:43 AM: edges-spr2_acc: training: 0.047855 validation: 0.074603
09/16 08:19:43 AM: edges-spr2_precision: training: 0.807623 validation: 0.830861
09/16 08:19:43 AM: edges-spr2_recall: training: 0.732118 validation: 0.714438
09/16 08:19:43 AM: edges-spr2_f1: training: 0.768019 validation: 0.768263
09/16 08:19:43 AM: Global learning rate: 0.0001
09/16 08:19:43 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:19:44 AM: Update 309: task edges-spr2, batch 9 (309): mcc: 0.6414, acc: 0.0411, precision: 0.8023, recall: 0.7326, f1: 0.7659, edges-spr2_loss: 0.3365
09/16 08:19:51 AM: ***** Step 400 / Validation 4 *****
09/16 08:19:51 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:19:51 AM: Validating...
09/16 08:19:52 AM: Best result seen so far for edges-spr2.
09/16 08:19:52 AM: Best result seen so far for macro.
09/16 08:19:52 AM: Updating LR scheduler:
09/16 08:19:52 AM: 	Best result seen so far for macro_avg: 0.774
09/16 08:19:52 AM: 	# validation passes without improvement: 0
09/16 08:19:52 AM: edges-spr2_loss: training: 0.334966 validation: 0.355294
09/16 08:19:52 AM: macro_avg: validation: 0.773521
09/16 08:19:52 AM: micro_avg: validation: 0.000000
09/16 08:19:52 AM: edges-spr2_mcc: training: 0.652138 validation: 0.655743
09/16 08:19:52 AM: edges-spr2_acc: training: 0.048588 validation: 0.076190
09/16 08:19:52 AM: edges-spr2_precision: training: 0.809009 validation: 0.828356
09/16 08:19:52 AM: edges-spr2_recall: training: 0.738887 validation: 0.725494
09/16 08:19:52 AM: edges-spr2_f1: training: 0.772360 validation: 0.773521
09/16 08:19:52 AM: Global learning rate: 0.0001
09/16 08:19:52 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:19:55 AM: Update 401: task edges-spr2, batch 1 (401): mcc: 0.6543, acc: 0.0781, precision: 0.8234, recall: 0.7357, f1: 0.7771, edges-spr2_loss: 0.3334
09/16 08:20:04 AM: ***** Step 500 / Validation 5 *****
09/16 08:20:04 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:04 AM: Validating...
09/16 08:20:05 AM: Best result seen so far for edges-spr2.
09/16 08:20:05 AM: Best result seen so far for macro.
09/16 08:20:05 AM: Updating LR scheduler:
09/16 08:20:05 AM: 	Best result seen so far for macro_avg: 0.777
09/16 08:20:05 AM: 	# validation passes without improvement: 0
09/16 08:20:05 AM: edges-spr2_loss: training: 0.330542 validation: 0.354840
09/16 08:20:05 AM: macro_avg: validation: 0.776521
09/16 08:20:05 AM: micro_avg: validation: 0.000000
09/16 08:20:05 AM: edges-spr2_mcc: training: 0.654197 validation: 0.656735
09/16 08:20:05 AM: edges-spr2_acc: training: 0.052392 validation: 0.065079
09/16 08:20:05 AM: edges-spr2_precision: training: 0.811096 validation: 0.820549
09/16 08:20:05 AM: edges-spr2_recall: training: 0.740012 validation: 0.736976
09/16 08:20:05 AM: edges-spr2_f1: training: 0.773925 validation: 0.776521
09/16 08:20:05 AM: Global learning rate: 0.0001
09/16 08:20:05 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:20:05 AM: Update 504: task edges-spr2, batch 4 (504): mcc: 0.6523, acc: 0.0510, precision: 0.8089, recall: 0.7436, f1: 0.7748, edges-spr2_loss: 0.3279
09/16 08:20:13 AM: ***** Step 600 / Validation 6 *****
09/16 08:20:13 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:13 AM: Validating...
09/16 08:20:14 AM: Best result seen so far for edges-spr2.
09/16 08:20:14 AM: Best result seen so far for macro.
09/16 08:20:14 AM: Updating LR scheduler:
09/16 08:20:14 AM: 	Best result seen so far for macro_avg: 0.780
09/16 08:20:14 AM: 	# validation passes without improvement: 0
09/16 08:20:14 AM: edges-spr2_loss: training: 0.328912 validation: 0.355818
09/16 08:20:14 AM: macro_avg: validation: 0.780206
09/16 08:20:14 AM: micro_avg: validation: 0.000000
09/16 08:20:14 AM: edges-spr2_mcc: training: 0.656698 validation: 0.659705
09/16 08:20:14 AM: edges-spr2_acc: training: 0.054804 validation: 0.065079
09/16 08:20:14 AM: edges-spr2_precision: training: 0.810765 validation: 0.815777
09/16 08:20:14 AM: edges-spr2_recall: training: 0.743612 validation: 0.747608
09/16 08:20:14 AM: edges-spr2_f1: training: 0.775738 validation: 0.780206
09/16 08:20:14 AM: Global learning rate: 0.0001
09/16 08:20:14 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:20:15 AM: Update 616: task edges-spr2, batch 16 (616): mcc: 0.6697, acc: 0.0553, precision: 0.8195, recall: 0.7555, f1: 0.7862, edges-spr2_loss: 0.3223
09/16 08:20:22 AM: ***** Step 700 / Validation 7 *****
09/16 08:20:22 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:22 AM: Validating...
09/16 08:20:23 AM: Updating LR scheduler:
09/16 08:20:23 AM: 	Best result seen so far for macro_avg: 0.780
09/16 08:20:23 AM: 	# validation passes without improvement: 1
09/16 08:20:23 AM: edges-spr2_loss: training: 0.324742 validation: 0.355767
09/16 08:20:23 AM: macro_avg: validation: 0.774368
09/16 08:20:23 AM: micro_avg: validation: 0.000000
09/16 08:20:23 AM: edges-spr2_mcc: training: 0.664123 validation: 0.654479
09/16 08:20:23 AM: edges-spr2_acc: training: 0.055685 validation: 0.077778
09/16 08:20:23 AM: edges-spr2_precision: training: 0.816539 validation: 0.821565
09/16 08:20:23 AM: edges-spr2_recall: training: 0.747760 validation: 0.732299
09/16 08:20:23 AM: edges-spr2_f1: training: 0.780638 validation: 0.774368
09/16 08:20:23 AM: Global learning rate: 0.0001
09/16 08:20:23 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:20:25 AM: Update 722: task edges-spr2, batch 22 (722): mcc: 0.6534, acc: 0.0591, precision: 0.8128, recall: 0.7389, f1: 0.7741, edges-spr2_loss: 0.3322
09/16 08:20:31 AM: ***** Step 800 / Validation 8 *****
09/16 08:20:31 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:31 AM: Validating...
09/16 08:20:32 AM: Updating LR scheduler:
09/16 08:20:32 AM: 	Best result seen so far for macro_avg: 0.780
09/16 08:20:32 AM: 	# validation passes without improvement: 2
09/16 08:20:32 AM: edges-spr2_loss: training: 0.322767 validation: 0.357996
09/16 08:20:32 AM: macro_avg: validation: 0.776113
09/16 08:20:32 AM: micro_avg: validation: 0.000000
09/16 08:20:32 AM: edges-spr2_mcc: training: 0.666190 validation: 0.657870
09/16 08:20:32 AM: edges-spr2_acc: training: 0.056467 validation: 0.071429
09/16 08:20:32 AM: edges-spr2_precision: training: 0.817362 validation: 0.825503
09/16 08:20:32 AM: edges-spr2_recall: training: 0.749493 validation: 0.732299
09/16 08:20:32 AM: edges-spr2_f1: training: 0.781958 validation: 0.776113
09/16 08:20:32 AM: Global learning rate: 0.0001
09/16 08:20:32 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:20:35 AM: Update 839: task edges-spr2, batch 39 (839): mcc: 0.6624, acc: 0.0585, precision: 0.8154, recall: 0.7465, f1: 0.7794, edges-spr2_loss: 0.3242
09/16 08:20:40 AM: ***** Step 900 / Validation 9 *****
09/16 08:20:40 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:40 AM: Validating...
09/16 08:20:41 AM: Updating LR scheduler:
09/16 08:20:41 AM: 	Best result seen so far for macro_avg: 0.780
09/16 08:20:41 AM: 	# validation passes without improvement: 3
09/16 08:20:41 AM: edges-spr2_loss: training: 0.321594 validation: 0.359522
09/16 08:20:41 AM: macro_avg: validation: 0.772027
09/16 08:20:41 AM: micro_avg: validation: 0.000000
09/16 08:20:41 AM: edges-spr2_mcc: training: 0.664729 validation: 0.658304
09/16 08:20:41 AM: edges-spr2_acc: training: 0.056404 validation: 0.061905
09/16 08:20:41 AM: edges-spr2_precision: training: 0.815088 validation: 0.840892
09/16 08:20:41 AM: edges-spr2_recall: training: 0.749525 validation: 0.713587
09/16 08:20:41 AM: edges-spr2_f1: training: 0.780933 validation: 0.772027
09/16 08:20:41 AM: Global learning rate: 0.0001
09/16 08:20:41 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:20:45 AM: Update 947: task edges-spr2, batch 47 (947): mcc: 0.6614, acc: 0.0517, precision: 0.8134, recall: 0.7487, f1: 0.7797, edges-spr2_loss: 0.3233
09/16 08:20:49 AM: ***** Step 1000 / Validation 10 *****
09/16 08:20:49 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:49 AM: Validating...
09/16 08:20:50 AM: Updating LR scheduler:
09/16 08:20:50 AM: 	Best result seen so far for macro_avg: 0.780
09/16 08:20:50 AM: 	# validation passes without improvement: 0
09/16 08:20:50 AM: edges-spr2_loss: training: 0.320101 validation: 0.362372
09/16 08:20:50 AM: macro_avg: validation: 0.774673
09/16 08:20:50 AM: micro_avg: validation: 0.000000
09/16 08:20:50 AM: edges-spr2_mcc: training: 0.664339 validation: 0.650923
09/16 08:20:50 AM: edges-spr2_acc: training: 0.054954 validation: 0.076190
09/16 08:20:50 AM: edges-spr2_precision: training: 0.815648 validation: 0.809502
09/16 08:20:50 AM: edges-spr2_recall: training: 0.750378 validation: 0.742717
09/16 08:20:50 AM: edges-spr2_f1: training: 0.781653 validation: 0.774673
09/16 08:20:50 AM: Global learning rate: 5e-05
09/16 08:20:50 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:20:55 AM: Update 1008: task edges-spr2, batch 8 (1008): mcc: 0.6687, acc: 0.0772, precision: 0.8229, recall: 0.7569, f1: 0.7885, edges-spr2_loss: 0.3212
09/16 08:21:02 AM: ***** Step 1100 / Validation 11 *****
09/16 08:21:02 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:02 AM: Validating...
09/16 08:21:03 AM: Updating LR scheduler:
09/16 08:21:03 AM: 	Best result seen so far for macro_avg: 0.780
09/16 08:21:03 AM: 	# validation passes without improvement: 1
09/16 08:21:03 AM: edges-spr2_loss: training: 0.317178 validation: 0.357814
09/16 08:21:03 AM: macro_avg: validation: 0.774935
09/16 08:21:03 AM: micro_avg: validation: 0.000000
09/16 08:21:03 AM: edges-spr2_mcc: training: 0.669149 validation: 0.658982
09/16 08:21:03 AM: edges-spr2_acc: training: 0.060302 validation: 0.063492
09/16 08:21:03 AM: edges-spr2_precision: training: 0.816130 validation: 0.833007
09/16 08:21:03 AM: edges-spr2_recall: training: 0.754920 validation: 0.724431
09/16 08:21:03 AM: edges-spr2_f1: training: 0.784333 validation: 0.774935
09/16 08:21:03 AM: Global learning rate: 5e-05
09/16 08:21:03 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:21:05 AM: Update 1121: task edges-spr2, batch 21 (1121): mcc: 0.6708, acc: 0.0634, precision: 0.8240, recall: 0.7484, f1: 0.7844, edges-spr2_loss: 0.3194
09/16 08:21:12 AM: ***** Step 1200 / Validation 12 *****
09/16 08:21:12 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:12 AM: Validating...
09/16 08:21:13 AM: Updating LR scheduler:
09/16 08:21:13 AM: 	Best result seen so far for macro_avg: 0.780
09/16 08:21:13 AM: 	# validation passes without improvement: 2
09/16 08:21:13 AM: edges-spr2_loss: training: 0.315398 validation: 0.358167
09/16 08:21:13 AM: macro_avg: validation: 0.775584
09/16 08:21:13 AM: micro_avg: validation: 0.000000
09/16 08:21:13 AM: edges-spr2_mcc: training: 0.671476 validation: 0.657470
09/16 08:21:13 AM: edges-spr2_acc: training: 0.061008 validation: 0.050794
09/16 08:21:13 AM: edges-spr2_precision: training: 0.820932 validation: 0.826202
09/16 08:21:13 AM: edges-spr2_recall: training: 0.752968 validation: 0.730810
09/16 08:21:13 AM: edges-spr2_f1: training: 0.785482 validation: 0.775584
09/16 08:21:13 AM: Global learning rate: 5e-05
09/16 08:21:13 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:21:15 AM: Update 1232: task edges-spr2, batch 32 (1232): mcc: 0.6721, acc: 0.0609, precision: 0.8181, recall: 0.7581, f1: 0.7869, edges-spr2_loss: 0.3155
09/16 08:21:21 AM: ***** Step 1300 / Validation 13 *****
09/16 08:21:21 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:21 AM: Validating...
09/16 08:21:22 AM: Updating LR scheduler:
09/16 08:21:22 AM: 	Best result seen so far for macro_avg: 0.780
09/16 08:21:22 AM: 	# validation passes without improvement: 3
09/16 08:21:22 AM: edges-spr2_loss: training: 0.315040 validation: 0.356639
09/16 08:21:22 AM: macro_avg: validation: 0.771137
09/16 08:21:22 AM: micro_avg: validation: 0.000000
09/16 08:21:22 AM: edges-spr2_mcc: training: 0.673899 validation: 0.656031
09/16 08:21:22 AM: edges-spr2_acc: training: 0.062680 validation: 0.060317
09/16 08:21:22 AM: edges-spr2_precision: training: 0.820171 validation: 0.837319
09/16 08:21:22 AM: edges-spr2_recall: training: 0.756805 validation: 0.714650
09/16 08:21:22 AM: edges-spr2_f1: training: 0.787215 validation: 0.771137
09/16 08:21:22 AM: Global learning rate: 5e-05
09/16 08:21:22 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:21:26 AM: Update 1339: task edges-spr2, batch 39 (1339): mcc: 0.6759, acc: 0.0667, precision: 0.8238, recall: 0.7564, f1: 0.7886, edges-spr2_loss: 0.3145
09/16 08:21:30 AM: ***** Step 1400 / Validation 14 *****
09/16 08:21:30 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:30 AM: Validating...
09/16 08:21:31 AM: Updating LR scheduler:
09/16 08:21:31 AM: 	Best result seen so far for macro_avg: 0.780
09/16 08:21:31 AM: 	# validation passes without improvement: 0
09/16 08:21:31 AM: edges-spr2_loss: training: 0.312964 validation: 0.357778
09/16 08:21:31 AM: macro_avg: validation: 0.773044
09/16 08:21:31 AM: micro_avg: validation: 0.000000
09/16 08:21:31 AM: edges-spr2_mcc: training: 0.676477 validation: 0.657495
09/16 08:21:31 AM: edges-spr2_acc: training: 0.065455 validation: 0.069841
09/16 08:21:31 AM: edges-spr2_precision: training: 0.822669 validation: 0.835143
09/16 08:21:31 AM: edges-spr2_recall: training: 0.758552 validation: 0.719541
09/16 08:21:31 AM: edges-spr2_f1: training: 0.789311 validation: 0.773044
09/16 08:21:31 AM: Global learning rate: 2.5e-05
09/16 08:21:31 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:21:36 AM: Update 1451: task edges-spr2, batch 51 (1451): mcc: 0.6783, acc: 0.0652, precision: 0.8262, recall: 0.7566, f1: 0.7899, edges-spr2_loss: 0.3115
09/16 08:21:40 AM: ***** Step 1500 / Validation 15 *****
09/16 08:21:40 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:40 AM: Validating...
09/16 08:21:41 AM: Updating LR scheduler:
09/16 08:21:41 AM: 	Best result seen so far for macro_avg: 0.780
09/16 08:21:41 AM: 	# validation passes without improvement: 1
09/16 08:21:41 AM: edges-spr2_loss: training: 0.311878 validation: 0.357203
09/16 08:21:41 AM: macro_avg: validation: 0.779509
09/16 08:21:41 AM: micro_avg: validation: 0.000000
09/16 08:21:41 AM: edges-spr2_mcc: training: 0.677089 validation: 0.661570
09/16 08:21:41 AM: edges-spr2_acc: training: 0.063015 validation: 0.060317
09/16 08:21:41 AM: edges-spr2_precision: training: 0.823646 validation: 0.824324
09/16 08:21:41 AM: edges-spr2_recall: training: 0.758341 validation: 0.739315
09/16 08:21:41 AM: edges-spr2_f1: training: 0.789646 validation: 0.779509
09/16 08:21:41 AM: Global learning rate: 2.5e-05
09/16 08:21:41 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:21:46 AM: Update 1557: task edges-spr2, batch 57 (1557): mcc: 0.6760, acc: 0.0661, precision: 0.8205, recall: 0.7592, f1: 0.7887, edges-spr2_loss: 0.3119
09/16 08:21:49 AM: ***** Step 1600 / Validation 16 *****
09/16 08:21:49 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:49 AM: Validating...
09/16 08:21:50 AM: Updating LR scheduler:
09/16 08:21:50 AM: 	Best result seen so far for macro_avg: 0.780
09/16 08:21:50 AM: 	# validation passes without improvement: 2
09/16 08:21:50 AM: Ran out of early stopping patience. Stopping training.
09/16 08:21:50 AM: edges-spr2_loss: training: 0.311577 validation: 0.358322
09/16 08:21:50 AM: macro_avg: validation: 0.777266
09/16 08:21:50 AM: micro_avg: validation: 0.000000
09/16 08:21:50 AM: edges-spr2_mcc: training: 0.678864 validation: 0.658696
09/16 08:21:50 AM: edges-spr2_acc: training: 0.066206 validation: 0.069841
09/16 08:21:50 AM: edges-spr2_precision: training: 0.821782 validation: 0.823810
09/16 08:21:50 AM: edges-spr2_recall: training: 0.762210 validation: 0.735701
09/16 08:21:50 AM: edges-spr2_f1: training: 0.790876 validation: 0.777266
09/16 08:21:50 AM: Global learning rate: 2.5e-05
09/16 08:21:50 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-top/run
09/16 08:21:50 AM: Stopped training after 16 validation checks
09/16 08:21:50 AM: Trained edges-spr2 for 1600 batches or 22.857 epochs
09/16 08:21:50 AM: ***** VALIDATION RESULTS *****
09/16 08:21:50 AM: edges-spr2_f1 (for best val pass 6): edges-spr2_loss: 0.35582, macro_avg: 0.78021, micro_avg: 0.00000, edges-spr2_mcc: 0.65970, edges-spr2_acc: 0.06508, edges-spr2_precision: 0.81578, edges-spr2_recall: 0.74761, edges-spr2_f1: 0.78021
09/16 08:21:50 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.37275, macro_avg: 0.74933, micro_avg: 0.00000, edges-spr2_mcc: 0.62943, edges-spr2_acc: 0.04921, edges-spr2_precision: 0.83186, edges-spr2_recall: 0.68169, edges-spr2_f1: 0.74933
09/16 08:21:50 AM: macro_avg (for best val pass 6): edges-spr2_loss: 0.35582, macro_avg: 0.78021, micro_avg: 0.00000, edges-spr2_mcc: 0.65970, edges-spr2_acc: 0.06508, edges-spr2_precision: 0.81578, edges-spr2_recall: 0.74761, edges-spr2_f1: 0.78021
09/16 08:21:50 AM: Evaluating...
09/16 08:21:50 AM: Loaded model state from ./experiments/spr2-RANDOM-top/run/edges-spr2/model_state_target_train_val_6.best.th
09/16 08:21:50 AM: Evaluating on: edges-spr2, split: val
09/16 08:21:51 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:21:51 AM: Finished evaluating on: edges-spr2
09/16 08:21:51 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:21:51 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-RANDOM-top/run
09/16 08:21:51 AM: Wrote all preds for split 'val' to ./experiments/spr2-RANDOM-top/run
09/16 08:21:51 AM: Evaluating on: edges-spr2, split: test
09/16 08:21:52 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:21:52 AM: Finished evaluating on: edges-spr2
09/16 08:21:52 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:21:52 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-RANDOM-top/run
09/16 08:21:52 AM: Wrote all preds for split 'test' to ./experiments/spr2-RANDOM-top/run
09/16 08:21:52 AM: Writing results for split 'val' to ./experiments/spr2-RANDOM-top/results.tsv
09/16 08:21:52 AM: micro_avg: 0.000, macro_avg: 0.780, edges-spr2_mcc: 0.660, edges-spr2_acc: 0.065, edges-spr2_precision: 0.816, edges-spr2_recall: 0.748, edges-spr2_f1: 0.780
09/16 08:21:52 AM: Done!
09/16 08:21:52 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
