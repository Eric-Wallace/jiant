09/16 09:10:58 AM: Git branch: master
09/16 09:10:58 AM: Git SHA: 1a42459c6cbb693793b9c0d01bca567d99b0baac
09/16 09:10:58 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/srl-ontonotes-rte-mix/",
  "exp_name": "experiments/srl-ontonotes-rte-mix",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/srl-ontonotes-rte-mix/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/rte",
  "pytorch_transformers_output_mode": "mix",
  "remote_log_name": "experiments/srl-ontonotes-rte-mix__run",
  "run_dir": "./experiments/srl-ontonotes-rte-mix/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-srl-ontonotes",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 09:10:58 AM: Saved config to ./experiments/srl-ontonotes-rte-mix/run/params.conf
09/16 09:10:58 AM: Using random seed 1234
09/16 09:10:59 AM: Using GPU 0
09/16 09:10:59 AM: Loading tasks...
09/16 09:10:59 AM: Writing pre-preprocessed tasks to ./experiments/srl-ontonotes-rte-mix/
09/16 09:10:59 AM: 	Creating task edges-srl-ontonotes from scratch.
09/16 09:11:04 AM: Read=231480, Skip=21590, Total=253070 from ./probing_data/edges/ontonotes/srl/train.json.retokenized.bert-base-uncased
09/16 09:11:04 AM: Read=32486, Skip=2811, Total=35297 from ./probing_data/edges/ontonotes/srl/development.json.retokenized.bert-base-uncased
09/16 09:11:05 AM: Read=23800, Skip=2915, Total=26715 from ./probing_data/edges/ontonotes/srl/test.json.retokenized.bert-base-uncased
09/16 09:11:07 AM: 	Task 'edges-srl-ontonotes': |train|=231480 |val|=32486 |test|=23800
09/16 09:11:07 AM: 	Finished loading tasks: edges-srl-ontonotes.
09/16 09:11:07 AM: 	Building vocab from scratch.
09/16 09:11:07 AM: 	Counting units for task edges-srl-ontonotes.
09/16 09:11:13 AM: 	Task 'edges-srl-ontonotes': adding vocab namespace 'edges-srl-ontonotes_labels'
09/16 09:11:14 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:11:14 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 09:11:14 AM: 	Saved vocab to ./experiments/srl-ontonotes-rte-mix/vocab
09/16 09:11:14 AM: Loading token dictionary from ./experiments/srl-ontonotes-rte-mix/vocab.
09/16 09:11:14 AM: 	Loaded vocab from ./experiments/srl-ontonotes-rte-mix/vocab
09/16 09:11:14 AM: 	Vocab namespace bert_uncased: size 30524
09/16 09:11:14 AM: 	Vocab namespace tokens: size 23662
09/16 09:11:14 AM: 	Vocab namespace edges-srl-ontonotes_labels: size 66
09/16 09:11:14 AM: 	Vocab namespace chars: size 76
09/16 09:11:14 AM: 	Finished building vocab.
09/16 09:11:14 AM: 	Task edges-srl-ontonotes (train): Indexing from scratch.
09/16 09:11:46 AM: 	Task edges-srl-ontonotes (train): Saved 231480 instances to ./experiments/srl-ontonotes-rte-mix/preproc/edges-srl-ontonotes__train_data
09/16 09:11:46 AM: 	Task edges-srl-ontonotes (val): Indexing from scratch.
09/16 09:11:51 AM: 	Task edges-srl-ontonotes (val): Saved 32486 instances to ./experiments/srl-ontonotes-rte-mix/preproc/edges-srl-ontonotes__val_data
09/16 09:11:51 AM: 	Task edges-srl-ontonotes (test): Indexing from scratch.
09/16 09:11:54 AM: 	Task edges-srl-ontonotes (test): Saved 23800 instances to ./experiments/srl-ontonotes-rte-mix/preproc/edges-srl-ontonotes__test_data
09/16 09:11:54 AM: 	Finished indexing tasks
09/16 09:11:54 AM: 	Creating trimmed target-only version of edges-srl-ontonotes train.
09/16 09:11:54 AM: 	  Training on 
09/16 09:11:54 AM: 	  Evaluating on edges-srl-ontonotes
09/16 09:11:54 AM: 	Finished loading tasks in 54.879s
09/16 09:11:54 AM: 	 Tasks: ['edges-srl-ontonotes']
09/16 09:11:54 AM: Building model...
09/16 09:11:54 AM: Using BERT model (bert-base-uncased).
09/16 09:11:54 AM: LOADING A FUNETUNED MODEL from: 
09/16 09:11:54 AM: models/rte
09/16 09:11:54 AM: loading configuration file models/rte/config.json
09/16 09:11:54 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "rte",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 09:11:54 AM: loading weights file models/rte/pytorch_model.bin
09/16 09:11:57 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpfb1x88vk
09/16 09:11:59 AM: copying /tmp/tmpfb1x88vk to cache at ./experiments/srl-ontonotes-rte-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:11:59 AM: creating metadata file for ./experiments/srl-ontonotes-rte-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:11:59 AM: removing temp file /tmp/tmpfb1x88vk
09/16 09:11:59 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/srl-ontonotes-rte-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:11:59 AM: NOTE: pytorch_transformers_output_mode='mix', so scalar mixing weights will be fine-tuned even if BERT model is frozen.
09/16 09:11:59 AM: Initializing parameters
09/16 09:11:59 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 09:11:59 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 09:11:59 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 09:11:59 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 09:11:59 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 09:11:59 AM:    _text_field_embedder.scalar_mix.gamma
09/16 09:11:59 AM:    _text_field_embedder.scalar_mix.scalar_parameters.0
09/16 09:11:59 AM:    _text_field_embedder.scalar_mix.scalar_parameters.1
09/16 09:11:59 AM:    _text_field_embedder.scalar_mix.scalar_parameters.10
09/16 09:11:59 AM:    _text_field_embedder.scalar_mix.scalar_parameters.11
09/16 09:11:59 AM:    _text_field_embedder.scalar_mix.scalar_parameters.12
09/16 09:11:59 AM:    _text_field_embedder.scalar_mix.scalar_parameters.2
09/16 09:11:59 AM:    _text_field_embedder.scalar_mix.scalar_parameters.3
09/16 09:11:59 AM:    _text_field_embedder.scalar_mix.scalar_parameters.4
09/16 09:11:59 AM:    _text_field_embedder.scalar_mix.scalar_parameters.5
09/16 09:11:59 AM:    _text_field_embedder.scalar_mix.scalar_parameters.6
09/16 09:11:59 AM:    _text_field_embedder.scalar_mix.scalar_parameters.7
09/16 09:11:59 AM:    _text_field_embedder.scalar_mix.scalar_parameters.8
09/16 09:11:59 AM:    _text_field_embedder.scalar_mix.scalar_parameters.9
09/16 09:11:59 AM: 	Task 'edges-srl-ontonotes' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-srl-ontonotes"
}
09/16 09:12:03 AM: Model specification:
09/16 09:12:03 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
      (scalar_mix): ScalarMix(
        (scalar_parameters): ParameterList(
            (0): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (1): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (2): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (3): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (4): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (5): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (6): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (7): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (8): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (9): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (10): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (11): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (12): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-srl-ontonotes_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=66, bias=True)
      )
    )
  )
)
09/16 09:12:03 AM: Model parameters:
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.scalar_mix.gamma: Trainable parameter, count 1 with torch.Size([1])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.0: Trainable parameter, count 1 with torch.Size([1])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.1: Trainable parameter, count 1 with torch.Size([1])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.2: Trainable parameter, count 1 with torch.Size([1])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.3: Trainable parameter, count 1 with torch.Size([1])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.4: Trainable parameter, count 1 with torch.Size([1])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.5: Trainable parameter, count 1 with torch.Size([1])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.6: Trainable parameter, count 1 with torch.Size([1])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.7: Trainable parameter, count 1 with torch.Size([1])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.8: Trainable parameter, count 1 with torch.Size([1])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.9: Trainable parameter, count 1 with torch.Size([1])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.10: Trainable parameter, count 1 with torch.Size([1])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.11: Trainable parameter, count 1 with torch.Size([1])
09/16 09:12:03 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.12: Trainable parameter, count 1 with torch.Size([1])
09/16 09:12:03 AM: 	edges-srl-ontonotes_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 09:12:03 AM: 	edges-srl-ontonotes_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:12:03 AM: 	edges-srl-ontonotes_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 09:12:03 AM: 	edges-srl-ontonotes_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:12:03 AM: 	edges-srl-ontonotes_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 09:12:03 AM: 	edges-srl-ontonotes_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:12:03 AM: 	edges-srl-ontonotes_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 09:12:03 AM: 	edges-srl-ontonotes_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:12:03 AM: 	edges-srl-ontonotes_mdl.classifier.classifier.4.weight: Trainable parameter, count 16896 with torch.Size([66, 256])
09/16 09:12:03 AM: 	edges-srl-ontonotes_mdl.classifier.classifier.4.bias: Trainable parameter, count 66 with torch.Size([66])
09/16 09:12:03 AM: Total number of parameters: 110155856 (1.10156e+08)
09/16 09:12:03 AM: Number of trainable parameters: 673616 (673616)
09/16 09:12:03 AM: Finished building model in 8.921s
09/16 09:12:03 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-srl-ontonotes 

09/16 09:12:17 AM: patience = 9
09/16 09:12:17 AM: val_interval = 1000
09/16 09:12:17 AM: max_vals = 250
09/16 09:12:17 AM: cuda_device = 0
09/16 09:12:17 AM: grad_norm = 5.0
09/16 09:12:17 AM: grad_clipping = None
09/16 09:12:17 AM: lr_decay = 0.99
09/16 09:12:17 AM: min_lr = 1e-06
09/16 09:12:17 AM: keep_all_checkpoints = 0
09/16 09:12:17 AM: val_data_limit = 5000
09/16 09:12:17 AM: max_epochs = -1
09/16 09:12:17 AM: dec_val_scale = 250
09/16 09:12:17 AM: training_data_fraction = 1
09/16 09:12:17 AM: type = adam
09/16 09:12:17 AM: parameter_groups = None
09/16 09:12:17 AM: Number of trainable parameters: 673616
09/16 09:12:17 AM: infer_type_and_cast = True
09/16 09:12:17 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:12:17 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:12:17 AM: lr = 0.0001
09/16 09:12:17 AM: amsgrad = True
09/16 09:12:17 AM: type = reduce_on_plateau
09/16 09:12:17 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:12:17 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:12:17 AM: mode = max
09/16 09:12:17 AM: factor = 0.5
09/16 09:12:17 AM: patience = 3
09/16 09:12:17 AM: threshold = 0.0001
09/16 09:12:17 AM: threshold_mode = abs
09/16 09:12:17 AM: verbose = True
09/16 09:12:17 AM: type = adam
09/16 09:12:17 AM: parameter_groups = None
09/16 09:12:17 AM: Number of trainable parameters: 673616
09/16 09:12:17 AM: infer_type_and_cast = True
09/16 09:12:17 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:12:17 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:12:17 AM: lr = 0.0001
09/16 09:12:17 AM: amsgrad = True
09/16 09:12:17 AM: type = reduce_on_plateau
09/16 09:12:17 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:12:17 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:12:17 AM: mode = max
09/16 09:12:17 AM: factor = 0.5
09/16 09:12:17 AM: patience = 3
09/16 09:12:17 AM: threshold = 0.0001
09/16 09:12:17 AM: threshold_mode = abs
09/16 09:12:17 AM: verbose = True
09/16 09:12:17 AM: Starting training without restoring from a checkpoint.
09/16 09:12:17 AM: Training examples per task, before any subsampling: {'edges-srl-ontonotes': 231480}
09/16 09:12:17 AM: Beginning training with stopping criteria based on metric: edges-srl-ontonotes_f1
09/16 09:12:27 AM: Update 98: task edges-srl-ontonotes, batch 98 (98): mcc: 0.0743, acc: 0.0582, precision: 0.0640, recall: 0.1411, f1: 0.0880, edges-srl-ontonotes_loss: 0.2305
09/16 09:12:37 AM: Update 212: task edges-srl-ontonotes, batch 212 (212): mcc: 0.0737, acc: 0.0520, precision: 0.0862, recall: 0.0898, f1: 0.0880, edges-srl-ontonotes_loss: 0.1481
09/16 09:12:47 AM: Update 314: task edges-srl-ontonotes, batch 314 (314): mcc: 0.1330, acc: 0.1017, precision: 0.1630, recall: 0.1283, f1: 0.1436, edges-srl-ontonotes_loss: 0.1170
09/16 09:12:57 AM: Update 424: task edges-srl-ontonotes, batch 424 (424): mcc: 0.2188, acc: 0.1695, precision: 0.2727, recall: 0.1918, f1: 0.2252, edges-srl-ontonotes_loss: 0.0975
09/16 09:13:07 AM: Update 546: task edges-srl-ontonotes, batch 546 (546): mcc: 0.3109, acc: 0.2425, precision: 0.3870, recall: 0.2637, f1: 0.3137, edges-srl-ontonotes_loss: 0.0833
09/16 09:13:17 AM: Update 635: task edges-srl-ontonotes, batch 635 (635): mcc: 0.3656, acc: 0.2870, precision: 0.4528, recall: 0.3081, f1: 0.3667, edges-srl-ontonotes_loss: 0.0759
09/16 09:13:27 AM: Update 749: task edges-srl-ontonotes, batch 749 (749): mcc: 0.4166, acc: 0.3287, precision: 0.5135, recall: 0.3498, f1: 0.4161, edges-srl-ontonotes_loss: 0.0687
09/16 09:13:37 AM: Update 857: task edges-srl-ontonotes, batch 857 (857): mcc: 0.4569, acc: 0.3636, precision: 0.5589, recall: 0.3846, f1: 0.4557, edges-srl-ontonotes_loss: 0.0633
09/16 09:13:48 AM: Update 962: task edges-srl-ontonotes, batch 962 (962): mcc: 0.4891, acc: 0.3918, precision: 0.5938, recall: 0.4133, f1: 0.4874, edges-srl-ontonotes_loss: 0.0590
09/16 09:13:51 AM: ***** Step 1000 / Validation 1 *****
09/16 09:13:51 AM: edges-srl-ontonotes: trained on 1000 batches, 0.138 epochs
09/16 09:13:51 AM: Validating...
09/16 09:13:58 AM: Evaluate: task edges-srl-ontonotes, batch 87 (157): mcc: 0.7711, acc: 0.6570, precision: 0.9007, recall: 0.6650, f1: 0.7651, edges-srl-ontonotes_loss: 0.0216
09/16 09:14:04 AM: Best result seen so far for edges-srl-ontonotes.
09/16 09:14:04 AM: Best result seen so far for micro.
09/16 09:14:04 AM: Best result seen so far for macro.
09/16 09:14:04 AM: Updating LR scheduler:
09/16 09:14:04 AM: 	Best result seen so far for macro_avg: 0.779
09/16 09:14:04 AM: 	# validation passes without improvement: 0
09/16 09:14:04 AM: edges-srl-ontonotes_loss: training: 0.057699 validation: 0.021027
09/16 09:14:04 AM: macro_avg: validation: 0.778761
09/16 09:14:04 AM: micro_avg: validation: 0.000000
09/16 09:14:04 AM: edges-srl-ontonotes_mcc: training: 0.498826 validation: 0.783561
09/16 09:14:04 AM: edges-srl-ontonotes_acc: training: 0.400528 validation: 0.674775
09/16 09:14:04 AM: edges-srl-ontonotes_precision: training: 0.604249 validation: 0.903711
09/16 09:14:04 AM: edges-srl-ontonotes_recall: training: 0.422170 validation: 0.684166
09/16 09:14:04 AM: edges-srl-ontonotes_f1: training: 0.497060 validation: 0.778761
09/16 09:14:04 AM: Global learning rate: 0.0001
09/16 09:14:04 AM: Saving checkpoints to: ./experiments/srl-ontonotes-rte-mix/run
09/16 09:14:08 AM: Update 1040: task edges-srl-ontonotes, batch 40 (1040): mcc: 0.7331, acc: 0.6155, precision: 0.8474, recall: 0.6402, f1: 0.7294, edges-srl-ontonotes_loss: 0.0245
09/16 09:14:18 AM: Update 1147: task edges-srl-ontonotes, batch 147 (1147): mcc: 0.7535, acc: 0.6396, precision: 0.8583, recall: 0.6671, f1: 0.7507, edges-srl-ontonotes_loss: 0.0232
09/16 09:14:28 AM: Update 1251: task edges-srl-ontonotes, batch 251 (1251): mcc: 0.7578, acc: 0.6474, precision: 0.8575, recall: 0.6753, f1: 0.7556, edges-srl-ontonotes_loss: 0.0227
09/16 09:14:38 AM: Update 1341: task edges-srl-ontonotes, batch 341 (1341): mcc: 0.7559, acc: 0.6468, precision: 0.8534, recall: 0.6753, f1: 0.7540, edges-srl-ontonotes_loss: 0.0224
09/16 09:14:48 AM: Update 1455: task edges-srl-ontonotes, batch 455 (1455): mcc: 0.7615, acc: 0.6544, precision: 0.8558, recall: 0.6832, f1: 0.7598, edges-srl-ontonotes_loss: 0.0218
09/16 09:14:58 AM: Update 1566: task edges-srl-ontonotes, batch 566 (1566): mcc: 0.7676, acc: 0.6626, precision: 0.8583, recall: 0.6919, f1: 0.7662, edges-srl-ontonotes_loss: 0.0212
09/16 09:15:08 AM: Update 1668: task edges-srl-ontonotes, batch 668 (1668): mcc: 0.7660, acc: 0.6609, precision: 0.8562, recall: 0.6910, f1: 0.7648, edges-srl-ontonotes_loss: 0.0212
09/16 09:15:18 AM: Update 1778: task edges-srl-ontonotes, batch 778 (1778): mcc: 0.7659, acc: 0.6612, precision: 0.8554, recall: 0.6914, f1: 0.7647, edges-srl-ontonotes_loss: 0.0211
09/16 09:15:30 AM: Update 1879: task edges-srl-ontonotes, batch 879 (1879): mcc: 0.7656, acc: 0.6612, precision: 0.8543, recall: 0.6917, f1: 0.7645, edges-srl-ontonotes_loss: 0.0210
09/16 09:15:40 AM: Update 1978: task edges-srl-ontonotes, batch 978 (1978): mcc: 0.7673, acc: 0.6637, precision: 0.8546, recall: 0.6944, f1: 0.7662, edges-srl-ontonotes_loss: 0.0208
09/16 09:15:42 AM: ***** Step 2000 / Validation 2 *****
09/16 09:15:42 AM: edges-srl-ontonotes: trained on 1000 batches, 0.138 epochs
09/16 09:15:42 AM: Validating...
09/16 09:15:50 AM: Evaluate: task edges-srl-ontonotes, batch 77 (157): mcc: 0.8101, acc: 0.7245, precision: 0.8938, recall: 0.7390, f1: 0.8090, edges-srl-ontonotes_loss: 0.0166
09/16 09:15:58 AM: Best result seen so far for edges-srl-ontonotes.
09/16 09:15:58 AM: Best result seen so far for macro.
09/16 09:15:58 AM: Updating LR scheduler:
09/16 09:15:58 AM: 	Best result seen so far for macro_avg: 0.825
09/16 09:15:58 AM: 	# validation passes without improvement: 0
09/16 09:15:58 AM: edges-srl-ontonotes_loss: training: 0.020791 validation: 0.015816
09/16 09:15:58 AM: macro_avg: validation: 0.824586
09/16 09:15:58 AM: micro_avg: validation: 0.000000
09/16 09:15:58 AM: edges-srl-ontonotes_mcc: training: 0.767719 validation: 0.825241
09/16 09:15:58 AM: edges-srl-ontonotes_acc: training: 0.664208 validation: 0.744746
09/16 09:15:58 AM: edges-srl-ontonotes_precision: training: 0.854812 validation: 0.901837
09/16 09:15:58 AM: edges-srl-ontonotes_recall: training: 0.695109 validation: 0.759526
09/16 09:15:58 AM: edges-srl-ontonotes_f1: training: 0.766733 validation: 0.824586
09/16 09:15:58 AM: Global learning rate: 0.0001
09/16 09:15:58 AM: Saving checkpoints to: ./experiments/srl-ontonotes-rte-mix/run
09/16 09:16:00 AM: Update 2021: task edges-srl-ontonotes, batch 21 (2021): mcc: 0.7716, acc: 0.6665, precision: 0.8643, recall: 0.6943, f1: 0.7700, edges-srl-ontonotes_loss: 0.0198
09/16 09:16:10 AM: Update 2100: task edges-srl-ontonotes, batch 100 (2100): mcc: 0.7738, acc: 0.6755, precision: 0.8541, recall: 0.7066, f1: 0.7734, edges-srl-ontonotes_loss: 0.0195
09/16 09:16:20 AM: Update 2189: task edges-srl-ontonotes, batch 189 (2189): mcc: 0.7744, acc: 0.6763, precision: 0.8527, recall: 0.7090, f1: 0.7742, edges-srl-ontonotes_loss: 0.0194
09/16 09:16:30 AM: Update 2257: task edges-srl-ontonotes, batch 257 (2257): mcc: 0.7788, acc: 0.6825, precision: 0.8541, recall: 0.7157, f1: 0.7788, edges-srl-ontonotes_loss: 0.0192
09/16 09:16:40 AM: Update 2348: task edges-srl-ontonotes, batch 348 (2348): mcc: 0.7852, acc: 0.6904, precision: 0.8574, recall: 0.7244, f1: 0.7853, edges-srl-ontonotes_loss: 0.0186
09/16 09:16:50 AM: Update 2449: task edges-srl-ontonotes, batch 449 (2449): mcc: 0.7895, acc: 0.6967, precision: 0.8597, recall: 0.7304, f1: 0.7898, edges-srl-ontonotes_loss: 0.0183
09/16 09:17:00 AM: Update 2544: task edges-srl-ontonotes, batch 544 (2544): mcc: 0.7933, acc: 0.7015, precision: 0.8620, recall: 0.7353, f1: 0.7936, edges-srl-ontonotes_loss: 0.0180
09/16 09:17:11 AM: Update 2646: task edges-srl-ontonotes, batch 646 (2646): mcc: 0.7945, acc: 0.7041, precision: 0.8620, recall: 0.7375, f1: 0.7949, edges-srl-ontonotes_loss: 0.0178
09/16 09:17:21 AM: Update 2747: task edges-srl-ontonotes, batch 747 (2747): mcc: 0.7963, acc: 0.7069, precision: 0.8628, recall: 0.7400, f1: 0.7967, edges-srl-ontonotes_loss: 0.0177
09/16 09:17:31 AM: Update 2818: task edges-srl-ontonotes, batch 818 (2818): mcc: 0.7981, acc: 0.7099, precision: 0.8637, recall: 0.7427, f1: 0.7986, edges-srl-ontonotes_loss: 0.0175
09/16 09:17:41 AM: Update 2919: task edges-srl-ontonotes, batch 919 (2919): mcc: 0.8004, acc: 0.7130, precision: 0.8649, recall: 0.7458, f1: 0.8009, edges-srl-ontonotes_loss: 0.0174
09/16 09:17:49 AM: ***** Step 3000 / Validation 3 *****
09/16 09:17:49 AM: edges-srl-ontonotes: trained on 1000 batches, 0.138 epochs
09/16 09:17:49 AM: Validating...
09/16 09:17:51 AM: Evaluate: task edges-srl-ontonotes, batch 20 (157): mcc: 0.8369, acc: 0.7653, precision: 0.9003, recall: 0.7821, f1: 0.8371, edges-srl-ontonotes_loss: 0.0141
09/16 09:18:01 AM: Evaluate: task edges-srl-ontonotes, batch 131 (157): mcc: 0.8366, acc: 0.7661, precision: 0.8981, recall: 0.7835, f1: 0.8369, edges-srl-ontonotes_loss: 0.0144
09/16 09:18:03 AM: Best result seen so far for edges-srl-ontonotes.
09/16 09:18:03 AM: Best result seen so far for macro.
09/16 09:18:03 AM: Updating LR scheduler:
09/16 09:18:03 AM: 	Best result seen so far for macro_avg: 0.834
09/16 09:18:03 AM: 	# validation passes without improvement: 0
09/16 09:18:03 AM: edges-srl-ontonotes_loss: training: 0.017281 validation: 0.014627
09/16 09:18:03 AM: macro_avg: validation: 0.834484
09/16 09:18:03 AM: micro_avg: validation: 0.000000
09/16 09:18:03 AM: edges-srl-ontonotes_mcc: training: 0.801608 validation: 0.834110
09/16 09:18:03 AM: edges-srl-ontonotes_acc: training: 0.714799 validation: 0.763760
09/16 09:18:03 AM: edges-srl-ontonotes_precision: training: 0.865594 validation: 0.895526
09/16 09:18:03 AM: edges-srl-ontonotes_recall: training: 0.747479 validation: 0.781233
09/16 09:18:03 AM: edges-srl-ontonotes_f1: training: 0.802212 validation: 0.834484
09/16 09:18:03 AM: Global learning rate: 0.0001
09/16 09:18:03 AM: Saving checkpoints to: ./experiments/srl-ontonotes-rte-mix/run
09/16 09:18:11 AM: Update 3073: task edges-srl-ontonotes, batch 73 (3073): mcc: 0.8268, acc: 0.7505, precision: 0.8792, recall: 0.7822, f1: 0.8278, edges-srl-ontonotes_loss: 0.0153
09/16 09:18:21 AM: Update 3162: task edges-srl-ontonotes, batch 162 (3162): mcc: 0.8218, acc: 0.7432, precision: 0.8756, recall: 0.7761, f1: 0.8228, edges-srl-ontonotes_loss: 0.0155
09/16 09:18:31 AM: Update 3268: task edges-srl-ontonotes, batch 268 (3268): mcc: 0.8179, acc: 0.7391, precision: 0.8740, recall: 0.7703, f1: 0.8189, edges-srl-ontonotes_loss: 0.0159
09/16 09:18:41 AM: Update 3372: task edges-srl-ontonotes, batch 372 (3372): mcc: 0.8157, acc: 0.7365, precision: 0.8722, recall: 0.7678, f1: 0.8167, edges-srl-ontonotes_loss: 0.0160
09/16 09:18:51 AM: Update 3466: task edges-srl-ontonotes, batch 466 (3466): mcc: 0.8153, acc: 0.7359, precision: 0.8721, recall: 0.7671, f1: 0.8162, edges-srl-ontonotes_loss: 0.0160
09/16 09:19:01 AM: Update 3564: task edges-srl-ontonotes, batch 564 (3564): mcc: 0.8153, acc: 0.7359, precision: 0.8719, recall: 0.7671, f1: 0.8162, edges-srl-ontonotes_loss: 0.0160
09/16 09:19:11 AM: Update 3654: task edges-srl-ontonotes, batch 654 (3654): mcc: 0.8148, acc: 0.7347, precision: 0.8721, recall: 0.7662, f1: 0.8157, edges-srl-ontonotes_loss: 0.0160
09/16 09:19:21 AM: Update 3749: task edges-srl-ontonotes, batch 749 (3749): mcc: 0.8158, acc: 0.7360, precision: 0.8732, recall: 0.7671, f1: 0.8167, edges-srl-ontonotes_loss: 0.0159
09/16 09:19:32 AM: Update 3833: task edges-srl-ontonotes, batch 833 (3833): mcc: 0.8155, acc: 0.7360, precision: 0.8727, recall: 0.7669, f1: 0.8164, edges-srl-ontonotes_loss: 0.0159
09/16 09:19:42 AM: Update 3926: task edges-srl-ontonotes, batch 926 (3926): mcc: 0.8159, acc: 0.7367, precision: 0.8727, recall: 0.7676, f1: 0.8168, edges-srl-ontonotes_loss: 0.0159
09/16 09:19:49 AM: ***** Step 4000 / Validation 4 *****
09/16 09:19:49 AM: edges-srl-ontonotes: trained on 1000 batches, 0.138 epochs
09/16 09:19:49 AM: Validating...
09/16 09:19:52 AM: Evaluate: task edges-srl-ontonotes, batch 22 (157): mcc: 0.8344, acc: 0.7644, precision: 0.9007, recall: 0.7771, f1: 0.8344, edges-srl-ontonotes_loss: 0.0142
09/16 09:20:02 AM: Evaluate: task edges-srl-ontonotes, batch 114 (157): mcc: 0.8297, acc: 0.7589, precision: 0.8950, recall: 0.7736, f1: 0.8299, edges-srl-ontonotes_loss: 0.0144
09/16 09:20:05 AM: Best result seen so far for edges-srl-ontonotes.
09/16 09:20:05 AM: Best result seen so far for macro.
09/16 09:20:05 AM: Updating LR scheduler:
09/16 09:20:05 AM: 	Best result seen so far for macro_avg: 0.835
09/16 09:20:05 AM: 	# validation passes without improvement: 0
09/16 09:20:05 AM: edges-srl-ontonotes_loss: training: 0.015862 validation: 0.014116
09/16 09:20:05 AM: macro_avg: validation: 0.834787
09/16 09:20:05 AM: micro_avg: validation: 0.000000
09/16 09:20:05 AM: edges-srl-ontonotes_mcc: training: 0.815462 validation: 0.834461
09/16 09:20:05 AM: edges-srl-ontonotes_acc: training: 0.736456 validation: 0.767300
09/16 09:20:05 AM: edges-srl-ontonotes_precision: training: 0.872367 validation: 0.896527
09/16 09:20:05 AM: edges-srl-ontonotes_recall: training: 0.767134 validation: 0.781002
09/16 09:20:05 AM: edges-srl-ontonotes_f1: training: 0.816373 validation: 0.834787
09/16 09:20:05 AM: Global learning rate: 0.0001
09/16 09:20:05 AM: Saving checkpoints to: ./experiments/srl-ontonotes-rte-mix/run
09/16 09:20:12 AM: Update 4062: task edges-srl-ontonotes, batch 62 (4062): mcc: 0.8144, acc: 0.7343, precision: 0.8705, recall: 0.7669, f1: 0.8154, edges-srl-ontonotes_loss: 0.0156
09/16 09:20:22 AM: Update 4142: task edges-srl-ontonotes, batch 142 (4142): mcc: 0.8167, acc: 0.7417, precision: 0.8681, recall: 0.7732, f1: 0.8179, edges-srl-ontonotes_loss: 0.0156
09/16 09:20:32 AM: Update 4230: task edges-srl-ontonotes, batch 230 (4230): mcc: 0.8214, acc: 0.7482, precision: 0.8730, recall: 0.7777, f1: 0.8226, edges-srl-ontonotes_loss: 0.0153
09/16 09:20:42 AM: Update 4326: task edges-srl-ontonotes, batch 326 (4326): mcc: 0.8240, acc: 0.7511, precision: 0.8751, recall: 0.7806, f1: 0.8251, edges-srl-ontonotes_loss: 0.0151
09/16 09:20:52 AM: Update 4419: task edges-srl-ontonotes, batch 419 (4419): mcc: 0.8253, acc: 0.7528, precision: 0.8763, recall: 0.7819, f1: 0.8264, edges-srl-ontonotes_loss: 0.0150
09/16 09:21:02 AM: Update 4511: task edges-srl-ontonotes, batch 511 (4511): mcc: 0.8274, acc: 0.7557, precision: 0.8785, recall: 0.7839, f1: 0.8285, edges-srl-ontonotes_loss: 0.0148
09/16 09:21:12 AM: Update 4611: task edges-srl-ontonotes, batch 611 (4611): mcc: 0.8282, acc: 0.7571, precision: 0.8787, recall: 0.7853, f1: 0.8294, edges-srl-ontonotes_loss: 0.0148
09/16 09:21:22 AM: Update 4699: task edges-srl-ontonotes, batch 699 (4699): mcc: 0.8279, acc: 0.7569, precision: 0.8782, recall: 0.7850, f1: 0.8290, edges-srl-ontonotes_loss: 0.0148
09/16 09:21:33 AM: Update 4796: task edges-srl-ontonotes, batch 796 (4796): mcc: 0.8248, acc: 0.7531, precision: 0.8760, recall: 0.7813, f1: 0.8259, edges-srl-ontonotes_loss: 0.0150
09/16 09:21:43 AM: Update 4891: task edges-srl-ontonotes, batch 891 (4891): mcc: 0.8236, acc: 0.7513, precision: 0.8754, recall: 0.7795, f1: 0.8247, edges-srl-ontonotes_loss: 0.0151
09/16 09:21:53 AM: Update 4987: task edges-srl-ontonotes, batch 987 (4987): mcc: 0.8233, acc: 0.7507, precision: 0.8756, recall: 0.7787, f1: 0.8243, edges-srl-ontonotes_loss: 0.0151
09/16 09:21:54 AM: ***** Step 5000 / Validation 5 *****
09/16 09:21:54 AM: edges-srl-ontonotes: trained on 1000 batches, 0.138 epochs
09/16 09:21:54 AM: Validating...
09/16 09:22:03 AM: Evaluate: task edges-srl-ontonotes, batch 92 (157): mcc: 0.8360, acc: 0.7665, precision: 0.8997, recall: 0.7810, f1: 0.8362, edges-srl-ontonotes_loss: 0.0140
09/16 09:22:09 AM: Best result seen so far for edges-srl-ontonotes.
09/16 09:22:09 AM: Best result seen so far for macro.
09/16 09:22:09 AM: Updating LR scheduler:
09/16 09:22:09 AM: 	Best result seen so far for macro_avg: 0.845
09/16 09:22:09 AM: 	# validation passes without improvement: 0
09/16 09:22:09 AM: edges-srl-ontonotes_loss: training: 0.015124 validation: 0.013421
09/16 09:22:09 AM: macro_avg: validation: 0.844984
09/16 09:22:09 AM: micro_avg: validation: 0.000000
09/16 09:22:09 AM: edges-srl-ontonotes_mcc: training: 0.822963 validation: 0.844429
09/16 09:22:09 AM: edges-srl-ontonotes_acc: training: 0.750398 validation: 0.780617
09/16 09:22:09 AM: edges-srl-ontonotes_precision: training: 0.875361 validation: 0.900968
09/16 09:22:09 AM: edges-srl-ontonotes_recall: training: 0.778425 validation: 0.795551
09/16 09:22:09 AM: edges-srl-ontonotes_f1: training: 0.824052 validation: 0.844984
09/16 09:22:09 AM: Global learning rate: 0.0001
09/16 09:22:09 AM: Saving checkpoints to: ./experiments/srl-ontonotes-rte-mix/run
09/16 09:22:13 AM: Update 5010: task edges-srl-ontonotes, batch 10 (5010): mcc: 0.8151, acc: 0.7398, precision: 0.8758, recall: 0.7635, f1: 0.8158, edges-srl-ontonotes_loss: 0.0162
09/16 09:22:23 AM: Update 5129: task edges-srl-ontonotes, batch 129 (5129): mcc: 0.8419, acc: 0.7728, precision: 0.8867, recall: 0.8036, f1: 0.8431, edges-srl-ontonotes_loss: 0.0137
09/16 09:22:33 AM: Update 5241: task edges-srl-ontonotes, batch 241 (5241): mcc: 0.8466, acc: 0.7801, precision: 0.8897, recall: 0.8098, f1: 0.8479, edges-srl-ontonotes_loss: 0.0134
09/16 09:22:43 AM: Update 5333: task edges-srl-ontonotes, batch 333 (5333): mcc: 0.8517, acc: 0.7877, precision: 0.8943, recall: 0.8152, f1: 0.8530, edges-srl-ontonotes_loss: 0.0130
09/16 09:22:53 AM: Update 5440: task edges-srl-ontonotes, batch 440 (5440): mcc: 0.8601, acc: 0.7988, precision: 0.9008, recall: 0.8251, f1: 0.8613, edges-srl-ontonotes_loss: 0.0124
09/16 09:23:03 AM: Update 5550: task edges-srl-ontonotes, batch 550 (5550): mcc: 0.8668, acc: 0.8077, precision: 0.9058, recall: 0.8332, f1: 0.8680, edges-srl-ontonotes_loss: 0.0120
09/16 09:23:13 AM: Update 5661: task edges-srl-ontonotes, batch 661 (5661): mcc: 0.8714, acc: 0.8140, precision: 0.9093, recall: 0.8386, f1: 0.8725, edges-srl-ontonotes_loss: 0.0116
09/16 09:23:23 AM: Update 5798: task edges-srl-ontonotes, batch 798 (5798): mcc: 0.8746, acc: 0.8181, precision: 0.9120, recall: 0.8423, f1: 0.8758, edges-srl-ontonotes_loss: 0.0114
09/16 09:23:33 AM: Update 5940: task edges-srl-ontonotes, batch 940 (5940): mcc: 0.8781, acc: 0.8226, precision: 0.9146, recall: 0.8464, f1: 0.8792, edges-srl-ontonotes_loss: 0.0112
09/16 09:23:41 AM: ***** Step 6000 / Validation 6 *****
09/16 09:23:41 AM: edges-srl-ontonotes: trained on 1000 batches, 0.138 epochs
09/16 09:23:41 AM: Validating...
09/16 09:23:43 AM: Evaluate: task edges-srl-ontonotes, batch 25 (157): mcc: 0.8676, acc: 0.8109, precision: 0.9242, recall: 0.8179, f1: 0.8678, edges-srl-ontonotes_loss: 0.0119
09/16 09:23:53 AM: Evaluate: task edges-srl-ontonotes, batch 145 (157): mcc: 0.8638, acc: 0.8113, precision: 0.9133, recall: 0.8207, f1: 0.8645, edges-srl-ontonotes_loss: 0.0121
09/16 09:23:54 AM: Best result seen so far for edges-srl-ontonotes.
09/16 09:23:54 AM: Best result seen so far for macro.
09/16 09:23:54 AM: Updating LR scheduler:
09/16 09:23:54 AM: 	Best result seen so far for macro_avg: 0.862
09/16 09:23:54 AM: 	# validation passes without improvement: 0
09/16 09:23:54 AM: edges-srl-ontonotes_loss: training: 0.011101 validation: 0.012319
09/16 09:23:54 AM: macro_avg: validation: 0.862171
09/16 09:23:54 AM: micro_avg: validation: 0.000000
09/16 09:23:54 AM: edges-srl-ontonotes_mcc: training: 0.879035 validation: 0.861439
09/16 09:23:54 AM: edges-srl-ontonotes_acc: training: 0.823966 validation: 0.809022
09/16 09:23:54 AM: edges-srl-ontonotes_precision: training: 0.915146 validation: 0.910968
09/16 09:23:54 AM: edges-srl-ontonotes_recall: training: 0.847723 validation: 0.818336
09/16 09:23:54 AM: edges-srl-ontonotes_f1: training: 0.880145 validation: 0.862171
09/16 09:23:54 AM: Global learning rate: 0.0001
09/16 09:23:54 AM: Saving checkpoints to: ./experiments/srl-ontonotes-rte-mix/run
09/16 09:24:03 AM: Update 6125: task edges-srl-ontonotes, batch 125 (6125): mcc: 0.8927, acc: 0.8452, precision: 0.9222, recall: 0.8672, f1: 0.8938, edges-srl-ontonotes_loss: 0.0101
09/16 09:24:13 AM: Update 6249: task edges-srl-ontonotes, batch 249 (6249): mcc: 0.8949, acc: 0.8481, precision: 0.9247, recall: 0.8690, f1: 0.8960, edges-srl-ontonotes_loss: 0.0098
09/16 09:24:23 AM: Update 6364: task edges-srl-ontonotes, batch 364 (6364): mcc: 0.8932, acc: 0.8461, precision: 0.9224, recall: 0.8679, f1: 0.8943, edges-srl-ontonotes_loss: 0.0099
09/16 09:24:34 AM: Update 6495: task edges-srl-ontonotes, batch 495 (6495): mcc: 0.8924, acc: 0.8457, precision: 0.9210, recall: 0.8677, f1: 0.8936, edges-srl-ontonotes_loss: 0.0099
09/16 09:24:44 AM: Update 6598: task edges-srl-ontonotes, batch 598 (6598): mcc: 0.8906, acc: 0.8435, precision: 0.9201, recall: 0.8652, f1: 0.8918, edges-srl-ontonotes_loss: 0.0101
09/16 09:24:54 AM: Update 6696: task edges-srl-ontonotes, batch 696 (6696): mcc: 0.8862, acc: 0.8377, precision: 0.9169, recall: 0.8597, f1: 0.8874, edges-srl-ontonotes_loss: 0.0104
09/16 09:25:04 AM: Update 6803: task edges-srl-ontonotes, batch 803 (6803): mcc: 0.8831, acc: 0.8338, precision: 0.9145, recall: 0.8561, f1: 0.8843, edges-srl-ontonotes_loss: 0.0107
09/16 09:25:14 AM: Update 6887: task edges-srl-ontonotes, batch 887 (6887): mcc: 0.8811, acc: 0.8311, precision: 0.9129, recall: 0.8537, f1: 0.8823, edges-srl-ontonotes_loss: 0.0108
09/16 09:25:24 AM: Update 6977: task edges-srl-ontonotes, batch 977 (6977): mcc: 0.8769, acc: 0.8259, precision: 0.9098, recall: 0.8486, f1: 0.8781, edges-srl-ontonotes_loss: 0.0112
09/16 09:25:26 AM: ***** Step 7000 / Validation 7 *****
09/16 09:25:26 AM: edges-srl-ontonotes: trained on 1000 batches, 0.138 epochs
09/16 09:25:26 AM: Validating...
09/16 09:25:34 AM: Evaluate: task edges-srl-ontonotes, batch 92 (157): mcc: 0.8670, acc: 0.8166, precision: 0.9168, recall: 0.8235, f1: 0.8677, edges-srl-ontonotes_loss: 0.0116
09/16 09:25:42 AM: Best result seen so far for edges-srl-ontonotes.
09/16 09:25:42 AM: Best result seen so far for macro.
09/16 09:25:42 AM: Updating LR scheduler:
09/16 09:25:42 AM: 	Best result seen so far for macro_avg: 0.871
09/16 09:25:42 AM: 	# validation passes without improvement: 0
09/16 09:25:42 AM: edges-srl-ontonotes_loss: training: 0.011230 validation: 0.011455
09/16 09:25:42 AM: macro_avg: validation: 0.870789
09/16 09:25:42 AM: micro_avg: validation: 0.000000
09/16 09:25:42 AM: edges-srl-ontonotes_mcc: training: 0.875669 validation: 0.869936
09/16 09:25:42 AM: edges-srl-ontonotes_acc: training: 0.824400 validation: 0.823878
09/16 09:25:42 AM: edges-srl-ontonotes_precision: training: 0.908841 validation: 0.914816
09/16 09:25:42 AM: edges-srl-ontonotes_recall: training: 0.847202 validation: 0.830806
09/16 09:25:42 AM: edges-srl-ontonotes_f1: training: 0.876939 validation: 0.870789
09/16 09:25:42 AM: Global learning rate: 0.0001
09/16 09:25:42 AM: Saving checkpoints to: ./experiments/srl-ontonotes-rte-mix/run
09/16 09:25:44 AM: Update 7025: task edges-srl-ontonotes, batch 25 (7025): mcc: 0.8316, acc: 0.7708, precision: 0.8770, recall: 0.7932, f1: 0.8330, edges-srl-ontonotes_loss: 0.0143
09/16 09:25:54 AM: Update 7133: task edges-srl-ontonotes, batch 133 (7133): mcc: 0.8443, acc: 0.7875, precision: 0.8827, recall: 0.8118, f1: 0.8458, edges-srl-ontonotes_loss: 0.0134
09/16 09:26:04 AM: Update 7231: task edges-srl-ontonotes, batch 231 (7231): mcc: 0.8426, acc: 0.7836, precision: 0.8832, recall: 0.8083, f1: 0.8441, edges-srl-ontonotes_loss: 0.0136
09/16 09:26:15 AM: Update 7345: task edges-srl-ontonotes, batch 345 (7345): mcc: 0.8488, acc: 0.7904, precision: 0.8889, recall: 0.8147, f1: 0.8502, edges-srl-ontonotes_loss: 0.0132
09/16 09:26:25 AM: Update 7453: task edges-srl-ontonotes, batch 453 (7453): mcc: 0.8535, acc: 0.7961, precision: 0.8928, recall: 0.8201, f1: 0.8549, edges-srl-ontonotes_loss: 0.0128
09/16 09:26:35 AM: Update 7560: task edges-srl-ontonotes, batch 560 (7560): mcc: 0.8576, acc: 0.8015, precision: 0.8963, recall: 0.8246, f1: 0.8590, edges-srl-ontonotes_loss: 0.0126
09/16 09:26:46 AM: Update 7659: task edges-srl-ontonotes, batch 659 (7659): mcc: 0.8595, acc: 0.8039, precision: 0.8972, recall: 0.8272, f1: 0.8608, edges-srl-ontonotes_loss: 0.0124
09/16 09:26:56 AM: Update 7769: task edges-srl-ontonotes, batch 769 (7769): mcc: 0.8605, acc: 0.8055, precision: 0.8978, recall: 0.8285, f1: 0.8618, edges-srl-ontonotes_loss: 0.0123
09/16 09:27:06 AM: Update 7873: task edges-srl-ontonotes, batch 873 (7873): mcc: 0.8632, acc: 0.8093, precision: 0.8998, recall: 0.8320, f1: 0.8646, edges-srl-ontonotes_loss: 0.0121
09/16 09:27:16 AM: Update 7983: task edges-srl-ontonotes, batch 983 (7983): mcc: 0.8632, acc: 0.8090, precision: 0.8998, recall: 0.8318, f1: 0.8645, edges-srl-ontonotes_loss: 0.0121
09/16 09:27:18 AM: ***** Step 8000 / Validation 8 *****
09/16 09:27:18 AM: edges-srl-ontonotes: trained on 1000 batches, 0.138 epochs
09/16 09:27:18 AM: Validating...
09/16 09:27:26 AM: Evaluate: task edges-srl-ontonotes, batch 95 (157): mcc: 0.8785, acc: 0.8352, precision: 0.9172, recall: 0.8448, f1: 0.8795, edges-srl-ontonotes_loss: 0.0104
09/16 09:27:32 AM: Best result seen so far for edges-srl-ontonotes.
09/16 09:27:32 AM: Best result seen so far for macro.
09/16 09:27:32 AM: Updating LR scheduler:
09/16 09:27:32 AM: 	Best result seen so far for macro_avg: 0.879
09/16 09:27:32 AM: 	# validation passes without improvement: 0
09/16 09:27:32 AM: edges-srl-ontonotes_loss: training: 0.012113 validation: 0.010520
09/16 09:27:32 AM: macro_avg: validation: 0.878862
09/16 09:27:32 AM: micro_avg: validation: 0.000000
09/16 09:27:32 AM: edges-srl-ontonotes_mcc: training: 0.863067 validation: 0.877738
09/16 09:27:32 AM: edges-srl-ontonotes_acc: training: 0.809055 validation: 0.837349
09/16 09:27:32 AM: edges-srl-ontonotes_precision: training: 0.899736 validation: 0.913965
09/16 09:27:32 AM: edges-srl-ontonotes_recall: training: 0.831704 validation: 0.846355
09/16 09:27:32 AM: edges-srl-ontonotes_f1: training: 0.864384 validation: 0.878862
09/16 09:27:32 AM: Global learning rate: 0.0001
09/16 09:27:32 AM: Saving checkpoints to: ./experiments/srl-ontonotes-rte-mix/run
09/16 09:27:36 AM: Update 8040: task edges-srl-ontonotes, batch 40 (8040): mcc: 0.8533, acc: 0.7998, precision: 0.8907, recall: 0.8216, f1: 0.8547, edges-srl-ontonotes_loss: 0.0125
09/16 09:27:46 AM: Update 8141: task edges-srl-ontonotes, batch 141 (8141): mcc: 0.8587, acc: 0.8045, precision: 0.8959, recall: 0.8270, f1: 0.8601, edges-srl-ontonotes_loss: 0.0121
09/16 09:27:56 AM: Update 8210: task edges-srl-ontonotes, batch 210 (8210): mcc: 0.8533, acc: 0.7968, precision: 0.8906, recall: 0.8217, f1: 0.8548, edges-srl-ontonotes_loss: 0.0126
09/16 09:28:06 AM: Update 8319: task edges-srl-ontonotes, batch 319 (8319): mcc: 0.8514, acc: 0.7936, precision: 0.8895, recall: 0.8189, f1: 0.8528, edges-srl-ontonotes_loss: 0.0127
09/16 09:28:16 AM: Update 8430: task edges-srl-ontonotes, batch 430 (8430): mcc: 0.8488, acc: 0.7899, precision: 0.8879, recall: 0.8156, f1: 0.8502, edges-srl-ontonotes_loss: 0.0129
09/16 09:28:26 AM: Update 8525: task edges-srl-ontonotes, batch 525 (8525): mcc: 0.8484, acc: 0.7892, precision: 0.8878, recall: 0.8150, f1: 0.8499, edges-srl-ontonotes_loss: 0.0129
09/16 09:28:36 AM: Update 8621: task edges-srl-ontonotes, batch 621 (8621): mcc: 0.8478, acc: 0.7885, precision: 0.8872, recall: 0.8142, f1: 0.8492, edges-srl-ontonotes_loss: 0.0129
09/16 09:28:46 AM: Update 8731: task edges-srl-ontonotes, batch 731 (8731): mcc: 0.8485, acc: 0.7893, precision: 0.8880, recall: 0.8148, f1: 0.8499, edges-srl-ontonotes_loss: 0.0129
09/16 09:28:57 AM: Update 8830: task edges-srl-ontonotes, batch 830 (8830): mcc: 0.8484, acc: 0.7895, precision: 0.8874, recall: 0.8153, f1: 0.8498, edges-srl-ontonotes_loss: 0.0128
09/16 09:29:07 AM: Update 8928: task edges-srl-ontonotes, batch 928 (8928): mcc: 0.8453, acc: 0.7857, precision: 0.8849, recall: 0.8117, f1: 0.8467, edges-srl-ontonotes_loss: 0.0130
09/16 09:29:14 AM: ***** Step 9000 / Validation 9 *****
09/16 09:29:14 AM: edges-srl-ontonotes: trained on 1000 batches, 0.138 epochs
09/16 09:29:14 AM: Validating...
09/16 09:29:17 AM: Evaluate: task edges-srl-ontonotes, batch 37 (157): mcc: 0.8668, acc: 0.8181, precision: 0.9168, recall: 0.8232, f1: 0.8675, edges-srl-ontonotes_loss: 0.0112
09/16 09:29:27 AM: Evaluate: task edges-srl-ontonotes, batch 156 (157): mcc: 0.8769, acc: 0.8329, precision: 0.9186, recall: 0.8405, f1: 0.8778, edges-srl-ontonotes_loss: 0.0104
09/16 09:29:27 AM: Updating LR scheduler:
09/16 09:29:27 AM: 	Best result seen so far for macro_avg: 0.879
09/16 09:29:27 AM: 	# validation passes without improvement: 1
09/16 09:29:27 AM: edges-srl-ontonotes_loss: training: 0.013177 validation: 0.010449
09/16 09:29:27 AM: macro_avg: validation: 0.877759
09/16 09:29:27 AM: micro_avg: validation: 0.000000
09/16 09:29:27 AM: edges-srl-ontonotes_mcc: training: 0.843289 validation: 0.876854
09/16 09:29:27 AM: edges-srl-ontonotes_acc: training: 0.783084 validation: 0.832884
09/16 09:29:27 AM: edges-srl-ontonotes_precision: training: 0.883628 validation: 0.918560
09/16 09:29:27 AM: edges-srl-ontonotes_recall: training: 0.809111 validation: 0.840428
09/16 09:29:27 AM: edges-srl-ontonotes_f1: training: 0.844729 validation: 0.877759
09/16 09:29:27 AM: Global learning rate: 0.0001
09/16 09:29:27 AM: Saving checkpoints to: ./experiments/srl-ontonotes-rte-mix/run
09/16 09:29:37 AM: Update 9101: task edges-srl-ontonotes, batch 101 (9101): mcc: 0.8347, acc: 0.7717, precision: 0.8777, recall: 0.7983, f1: 0.8361, edges-srl-ontonotes_loss: 0.0139
09/16 09:29:47 AM: Update 9174: task edges-srl-ontonotes, batch 174 (9174): mcc: 0.8342, acc: 0.7721, precision: 0.8777, recall: 0.7974, f1: 0.8357, edges-srl-ontonotes_loss: 0.0140
09/16 09:29:57 AM: Update 9280: task edges-srl-ontonotes, batch 280 (9280): mcc: 0.8327, acc: 0.7691, precision: 0.8777, recall: 0.7945, f1: 0.8340, edges-srl-ontonotes_loss: 0.0140
09/16 09:30:07 AM: Update 9388: task edges-srl-ontonotes, batch 388 (9388): mcc: 0.8346, acc: 0.7719, precision: 0.8789, recall: 0.7969, f1: 0.8359, edges-srl-ontonotes_loss: 0.0139
09/16 09:30:17 AM: Update 9485: task edges-srl-ontonotes, batch 485 (9485): mcc: 0.8358, acc: 0.7731, precision: 0.8803, recall: 0.7981, f1: 0.8372, edges-srl-ontonotes_loss: 0.0138
09/16 09:30:27 AM: Update 9587: task edges-srl-ontonotes, batch 587 (9587): mcc: 0.8402, acc: 0.7789, precision: 0.8831, recall: 0.8037, f1: 0.8415, edges-srl-ontonotes_loss: 0.0134
09/16 09:30:37 AM: Update 9690: task edges-srl-ontonotes, batch 690 (9690): mcc: 0.8419, acc: 0.7815, precision: 0.8841, recall: 0.8061, f1: 0.8433, edges-srl-ontonotes_loss: 0.0133
09/16 09:30:47 AM: Update 9787: task edges-srl-ontonotes, batch 787 (9787): mcc: 0.8431, acc: 0.7834, precision: 0.8850, recall: 0.8075, f1: 0.8445, edges-srl-ontonotes_loss: 0.0132
09/16 09:30:57 AM: Update 9896: task edges-srl-ontonotes, batch 896 (9896): mcc: 0.8451, acc: 0.7859, precision: 0.8865, recall: 0.8099, f1: 0.8464, edges-srl-ontonotes_loss: 0.0130
09/16 09:31:07 AM: Update 9993: task edges-srl-ontonotes, batch 993 (9993): mcc: 0.8459, acc: 0.7867, precision: 0.8874, recall: 0.8107, f1: 0.8473, edges-srl-ontonotes_loss: 0.0130
09/16 09:31:08 AM: ***** Step 10000 / Validation 10 *****
09/16 09:31:08 AM: edges-srl-ontonotes: trained on 1000 batches, 0.138 epochs
09/16 09:31:08 AM: Validating...
09/16 09:31:17 AM: Evaluate: task edges-srl-ontonotes, batch 109 (157): mcc: 0.8746, acc: 0.8323, precision: 0.9140, recall: 0.8404, f1: 0.8757, edges-srl-ontonotes_loss: 0.0105
09/16 09:31:21 AM: Updating LR scheduler:
09/16 09:31:21 AM: 	Best result seen so far for macro_avg: 0.879
09/16 09:31:21 AM: 	# validation passes without improvement: 2
09/16 09:31:21 AM: edges-srl-ontonotes_loss: training: 0.012981 validation: 0.010417
09/16 09:31:21 AM: macro_avg: validation: 0.878078
09/16 09:31:21 AM: micro_avg: validation: 0.000000
09/16 09:31:21 AM: edges-srl-ontonotes_mcc: training: 0.845884 validation: 0.876949
09/16 09:31:21 AM: edges-srl-ontonotes_acc: training: 0.786668 validation: 0.837272
09/16 09:31:21 AM: edges-srl-ontonotes_precision: training: 0.887331 validation: 0.913347
09/16 09:31:21 AM: edges-srl-ontonotes_recall: training: 0.810609 validation: 0.845431
09/16 09:31:21 AM: edges-srl-ontonotes_f1: training: 0.847237 validation: 0.878078
09/16 09:31:21 AM: Global learning rate: 0.0001
09/16 09:31:21 AM: Saving checkpoints to: ./experiments/srl-ontonotes-rte-mix/run
09/16 09:31:27 AM: Update 10063: task edges-srl-ontonotes, batch 63 (10063): mcc: 0.8567, acc: 0.8030, precision: 0.8949, recall: 0.8240, f1: 0.8580, edges-srl-ontonotes_loss: 0.0125
09/16 09:31:37 AM: Update 10135: task edges-srl-ontonotes, batch 135 (10135): mcc: 0.8603, acc: 0.8072, precision: 0.8976, recall: 0.8284, f1: 0.8616, edges-srl-ontonotes_loss: 0.0120
09/16 09:31:47 AM: Update 10242: task edges-srl-ontonotes, batch 242 (10242): mcc: 0.8614, acc: 0.8078, precision: 0.8994, recall: 0.8288, f1: 0.8627, edges-srl-ontonotes_loss: 0.0119
09/16 09:31:58 AM: Update 10337: task edges-srl-ontonotes, batch 337 (10337): mcc: 0.8617, acc: 0.8082, precision: 0.8991, recall: 0.8297, f1: 0.8630, edges-srl-ontonotes_loss: 0.0119
09/16 09:32:08 AM: Update 10421: task edges-srl-ontonotes, batch 421 (10421): mcc: 0.8608, acc: 0.8080, precision: 0.8975, recall: 0.8295, f1: 0.8622, edges-srl-ontonotes_loss: 0.0120
09/16 09:32:18 AM: Update 10534: task edges-srl-ontonotes, batch 534 (10534): mcc: 0.8583, acc: 0.8043, precision: 0.8963, recall: 0.8259, f1: 0.8597, edges-srl-ontonotes_loss: 0.0121
09/16 09:32:28 AM: Update 10627: task edges-srl-ontonotes, batch 627 (10627): mcc: 0.8573, acc: 0.8025, precision: 0.8960, recall: 0.8242, f1: 0.8586, edges-srl-ontonotes_loss: 0.0122
09/16 09:32:38 AM: Update 10719: task edges-srl-ontonotes, batch 719 (10719): mcc: 0.8559, acc: 0.8007, precision: 0.8950, recall: 0.8225, f1: 0.8572, edges-srl-ontonotes_loss: 0.0123
09/16 09:32:48 AM: Update 10826: task edges-srl-ontonotes, batch 826 (10826): mcc: 0.8554, acc: 0.8000, precision: 0.8946, recall: 0.8218, f1: 0.8567, edges-srl-ontonotes_loss: 0.0123
09/16 09:32:58 AM: Update 10931: task edges-srl-ontonotes, batch 931 (10931): mcc: 0.8558, acc: 0.7999, precision: 0.8955, recall: 0.8218, f1: 0.8571, edges-srl-ontonotes_loss: 0.0123
09/16 09:33:04 AM: ***** Step 11000 / Validation 11 *****
09/16 09:33:04 AM: edges-srl-ontonotes: trained on 1000 batches, 0.138 epochs
09/16 09:33:04 AM: Validating...
09/16 09:33:08 AM: Evaluate: task edges-srl-ontonotes, batch 43 (157): mcc: 0.8576, acc: 0.8097, precision: 0.9057, recall: 0.8158, f1: 0.8584, edges-srl-ontonotes_loss: 0.0118
09/16 09:33:17 AM: Updating LR scheduler:
09/16 09:33:17 AM: 	Best result seen so far for macro_avg: 0.879
09/16 09:33:17 AM: 	# validation passes without improvement: 3
09/16 09:33:17 AM: edges-srl-ontonotes_loss: training: 0.012312 validation: 0.010841
09/16 09:33:17 AM: macro_avg: validation: 0.872812
09/16 09:33:17 AM: micro_avg: validation: 0.000000
09/16 09:33:17 AM: edges-srl-ontonotes_mcc: training: 0.855403 validation: 0.871872
09/16 09:33:17 AM: edges-srl-ontonotes_acc: training: 0.799404 validation: 0.828035
09/16 09:33:17 AM: edges-srl-ontonotes_precision: training: 0.895215 validation: 0.914348
09/16 09:33:17 AM: edges-srl-ontonotes_recall: training: 0.821353 validation: 0.834886
09/16 09:33:17 AM: edges-srl-ontonotes_f1: training: 0.856695 validation: 0.872812
09/16 09:33:17 AM: Global learning rate: 0.0001
09/16 09:33:17 AM: Saving checkpoints to: ./experiments/srl-ontonotes-rte-mix/run
09/16 09:33:18 AM: Update 11003: task edges-srl-ontonotes, batch 3 (11003): mcc: 0.8812, acc: 0.8308, precision: 0.9058, recall: 0.8607, f1: 0.8827, edges-srl-ontonotes_loss: 0.0105
09/16 09:33:28 AM: Update 11111: task edges-srl-ontonotes, batch 111 (11111): mcc: 0.8530, acc: 0.7965, precision: 0.8925, recall: 0.8194, f1: 0.8544, edges-srl-ontonotes_loss: 0.0125
09/16 09:33:38 AM: Update 11222: task edges-srl-ontonotes, batch 222 (11222): mcc: 0.8502, acc: 0.7932, precision: 0.8906, recall: 0.8158, f1: 0.8516, edges-srl-ontonotes_loss: 0.0126
09/16 09:33:51 AM: Update 11316: task edges-srl-ontonotes, batch 316 (11316): mcc: 0.8494, acc: 0.7913, precision: 0.8895, recall: 0.8153, f1: 0.8508, edges-srl-ontonotes_loss: 0.0125
09/16 09:34:01 AM: Update 11408: task edges-srl-ontonotes, batch 408 (11408): mcc: 0.8512, acc: 0.7943, precision: 0.8908, recall: 0.8174, f1: 0.8526, edges-srl-ontonotes_loss: 0.0124
09/16 09:34:11 AM: Update 11506: task edges-srl-ontonotes, batch 506 (11506): mcc: 0.8523, acc: 0.7960, precision: 0.8920, recall: 0.8184, f1: 0.8536, edges-srl-ontonotes_loss: 0.0124
09/16 09:34:21 AM: Update 11602: task edges-srl-ontonotes, batch 602 (11602): mcc: 0.8540, acc: 0.7986, precision: 0.8929, recall: 0.8209, f1: 0.8554, edges-srl-ontonotes_loss: 0.0123
09/16 09:34:31 AM: Update 11695: task edges-srl-ontonotes, batch 695 (11695): mcc: 0.8555, acc: 0.8002, precision: 0.8942, recall: 0.8225, f1: 0.8569, edges-srl-ontonotes_loss: 0.0122
09/16 09:34:41 AM: Update 11785: task edges-srl-ontonotes, batch 785 (11785): mcc: 0.8570, acc: 0.8019, precision: 0.8956, recall: 0.8240, f1: 0.8583, edges-srl-ontonotes_loss: 0.0121
09/16 09:34:51 AM: Update 11887: task edges-srl-ontonotes, batch 887 (11887): mcc: 0.8585, acc: 0.8039, precision: 0.8965, recall: 0.8260, f1: 0.8598, edges-srl-ontonotes_loss: 0.0120
09/16 09:35:02 AM: Update 11974: task edges-srl-ontonotes, batch 974 (11974): mcc: 0.8571, acc: 0.8020, precision: 0.8956, recall: 0.8243, f1: 0.8584, edges-srl-ontonotes_loss: 0.0121
09/16 09:35:04 AM: ***** Step 12000 / Validation 12 *****
09/16 09:35:04 AM: edges-srl-ontonotes: trained on 1000 batches, 0.138 epochs
09/16 09:35:04 AM: Validating...
09/16 09:35:12 AM: Evaluate: task edges-srl-ontonotes, batch 76 (157): mcc: 0.8665, acc: 0.8197, precision: 0.9152, recall: 0.8240, f1: 0.8672, edges-srl-ontonotes_loss: 0.0112
09/16 09:35:20 AM: Updating LR scheduler:
09/16 09:35:20 AM: 	Best result seen so far for macro_avg: 0.879
09/16 09:35:20 AM: 	# validation passes without improvement: 0
09/16 09:35:20 AM: edges-srl-ontonotes_loss: training: 0.012140 validation: 0.010591
09/16 09:35:20 AM: macro_avg: validation: 0.876338
09/16 09:35:20 AM: micro_avg: validation: 0.000000
09/16 09:35:20 AM: edges-srl-ontonotes_mcc: training: 0.856503 validation: 0.875474
09/16 09:35:20 AM: edges-srl-ontonotes_acc: training: 0.801097 validation: 0.832807
09/16 09:35:20 AM: edges-srl-ontonotes_precision: training: 0.895089 validation: 0.918488
09/16 09:35:20 AM: edges-srl-ontonotes_recall: training: 0.823556 validation: 0.837888
09/16 09:35:20 AM: edges-srl-ontonotes_f1: training: 0.857834 validation: 0.876338
09/16 09:35:20 AM: Global learning rate: 5e-05
09/16 09:35:20 AM: Saving checkpoints to: ./experiments/srl-ontonotes-rte-mix/run
09/16 09:35:22 AM: Update 12017: task edges-srl-ontonotes, batch 17 (12017): mcc: 0.8416, acc: 0.7738, precision: 0.8927, recall: 0.7976, f1: 0.8425, edges-srl-ontonotes_loss: 0.0130
09/16 09:35:32 AM: Update 12100: task edges-srl-ontonotes, batch 100 (12100): mcc: 0.8364, acc: 0.7738, precision: 0.8859, recall: 0.7942, f1: 0.8375, edges-srl-ontonotes_loss: 0.0136
09/16 09:35:42 AM: Update 12180: task edges-srl-ontonotes, batch 180 (12180): mcc: 0.8378, acc: 0.7757, precision: 0.8851, recall: 0.7974, f1: 0.8390, edges-srl-ontonotes_loss: 0.0134
09/16 09:35:54 AM: Update 12255: task edges-srl-ontonotes, batch 255 (12255): mcc: 0.8402, acc: 0.7782, precision: 0.8867, recall: 0.8004, f1: 0.8414, edges-srl-ontonotes_loss: 0.0133
09/16 09:36:04 AM: Update 12363: task edges-srl-ontonotes, batch 363 (12363): mcc: 0.8488, acc: 0.7908, precision: 0.8911, recall: 0.8126, f1: 0.8500, edges-srl-ontonotes_loss: 0.0127
09/16 09:36:14 AM: Update 12478: task edges-srl-ontonotes, batch 478 (12478): mcc: 0.8554, acc: 0.7990, precision: 0.8960, recall: 0.8205, f1: 0.8566, edges-srl-ontonotes_loss: 0.0122
09/16 09:36:24 AM: Update 12580: task edges-srl-ontonotes, batch 580 (12580): mcc: 0.8610, acc: 0.8062, precision: 0.8998, recall: 0.8276, f1: 0.8622, edges-srl-ontonotes_loss: 0.0118
09/16 09:36:34 AM: Update 12694: task edges-srl-ontonotes, batch 694 (12694): mcc: 0.8685, acc: 0.8158, precision: 0.9053, recall: 0.8369, f1: 0.8697, edges-srl-ontonotes_loss: 0.0112
