09/16 08:09:30 AM: Git branch: master
09/16 08:09:30 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:09:31 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-RANDOM-only/",
  "exp_name": "experiments/spr2-RANDOM-only",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-RANDOM-only/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/RANDOM",
  "pytorch_transformers_output_mode": "only",
  "remote_log_name": "experiments/spr2-RANDOM-only__run",
  "run_dir": "./experiments/spr2-RANDOM-only/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:09:31 AM: Saved config to ./experiments/spr2-RANDOM-only/run/params.conf
09/16 08:09:31 AM: Using random seed 1234
09/16 08:09:32 AM: Using GPU 0
09/16 08:09:32 AM: Loading tasks...
09/16 08:09:32 AM: Writing pre-preprocessed tasks to ./experiments/spr2-RANDOM-only/
09/16 08:09:32 AM: 	Creating task edges-spr2 from scratch.
09/16 08:09:32 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:09:32 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:09:33 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:09:33 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:09:33 AM: 	Finished loading tasks: edges-spr2.
09/16 08:09:33 AM: 	Building vocab from scratch.
09/16 08:09:33 AM: 	Counting units for task edges-spr2.
09/16 08:09:33 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:09:34 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:09:34 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:09:34 AM: 	Saved vocab to ./experiments/spr2-RANDOM-only/vocab
09/16 08:09:34 AM: Loading token dictionary from ./experiments/spr2-RANDOM-only/vocab.
09/16 08:09:34 AM: 	Loaded vocab from ./experiments/spr2-RANDOM-only/vocab
09/16 08:09:34 AM: 	Vocab namespace tokens: size 7943
09/16 08:09:34 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:09:34 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:09:34 AM: 	Vocab namespace chars: size 65
09/16 08:09:34 AM: 	Finished building vocab.
09/16 08:09:34 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:09:35 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-RANDOM-only/preproc/edges-spr2__train_data
09/16 08:09:35 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:09:35 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-RANDOM-only/preproc/edges-spr2__val_data
09/16 08:09:35 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:09:35 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-RANDOM-only/preproc/edges-spr2__test_data
09/16 08:09:35 AM: 	Finished indexing tasks
09/16 08:09:35 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:09:35 AM: 	  Training on 
09/16 08:09:35 AM: 	  Evaluating on edges-spr2
09/16 08:09:35 AM: 	Finished loading tasks in 2.500s
09/16 08:09:35 AM: 	 Tasks: ['edges-spr2']
09/16 08:09:35 AM: Building model...
09/16 08:09:35 AM: Using BERT model (bert-base-uncased).
09/16 08:09:35 AM: LOADING A RANDOMLY WEIGHTS BERT
09/16 08:09:39 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json not found in cache or force_download set to True, downloading to /tmp/tmpnmz4ku4c
09/16 08:09:40 AM: copying /tmp/tmpnmz4ku4c to cache at ./experiments/spr2-RANDOM-only/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 08:09:40 AM: creating metadata file for ./experiments/spr2-RANDOM-only/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 08:09:40 AM: removing temp file /tmp/tmpnmz4ku4c
09/16 08:09:40 AM: loading configuration file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json from cache at ./experiments/spr2-RANDOM-only/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 08:09:40 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:09:41 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin not found in cache or force_download set to True, downloading to /tmp/tmppjj3hsbn
09/16 08:20:08 AM: copying /tmp/tmppjj3hsbn to cache at ./experiments/spr2-RANDOM-only/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 08:20:09 AM: creating metadata file for ./experiments/spr2-RANDOM-only/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 08:20:09 AM: removing temp file /tmp/tmppjj3hsbn
09/16 08:20:09 AM: loading weights file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin from cache at ./experiments/spr2-RANDOM-only/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 08:20:14 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmp64knodf2
09/16 08:20:16 AM: copying /tmp/tmp64knodf2 to cache at ./experiments/spr2-RANDOM-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:20:16 AM: creating metadata file for ./experiments/spr2-RANDOM-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:20:16 AM: removing temp file /tmp/tmp64knodf2
09/16 08:20:16 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-RANDOM-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:20:16 AM: Initializing parameters
09/16 08:20:16 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:20:16 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:20:16 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:20:16 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:20:16 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:20:16 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:20:16 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:20:22 AM: Model specification:
09/16 08:20:22 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:20:22 AM: Model parameters:
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:22 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:22 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:20:22 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:20:22 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:20:22 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:20:22 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:20:22 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:20:22 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:20:22 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:20:22 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:20:22 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:20:22 AM: Total number of parameters: 110144020 (1.10144e+08)
09/16 08:20:22 AM: Number of trainable parameters: 661780 (661780)
09/16 08:20:22 AM: Finished building model in 647.077s
09/16 08:20:22 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:20:23 AM: patience = 9
09/16 08:20:23 AM: val_interval = 100
09/16 08:20:23 AM: max_vals = 100
09/16 08:20:23 AM: cuda_device = 0
09/16 08:20:23 AM: grad_norm = 5.0
09/16 08:20:23 AM: grad_clipping = None
09/16 08:20:23 AM: lr_decay = 0.99
09/16 08:20:23 AM: min_lr = 1e-06
09/16 08:20:23 AM: keep_all_checkpoints = 0
09/16 08:20:23 AM: val_data_limit = 5000
09/16 08:20:23 AM: max_epochs = -1
09/16 08:20:23 AM: dec_val_scale = 250
09/16 08:20:23 AM: training_data_fraction = 1
09/16 08:20:23 AM: type = adam
09/16 08:20:23 AM: parameter_groups = None
09/16 08:20:23 AM: Number of trainable parameters: 661780
09/16 08:20:23 AM: infer_type_and_cast = True
09/16 08:20:23 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:20:23 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:20:23 AM: lr = 0.0001
09/16 08:20:23 AM: amsgrad = True
09/16 08:20:23 AM: type = reduce_on_plateau
09/16 08:20:23 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:20:23 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:20:23 AM: mode = max
09/16 08:20:23 AM: factor = 0.5
09/16 08:20:23 AM: patience = 3
09/16 08:20:23 AM: threshold = 0.0001
09/16 08:20:23 AM: threshold_mode = abs
09/16 08:20:23 AM: verbose = True
09/16 08:20:23 AM: type = adam
09/16 08:20:23 AM: parameter_groups = None
09/16 08:20:23 AM: Number of trainable parameters: 661780
09/16 08:20:23 AM: infer_type_and_cast = True
09/16 08:20:23 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:20:23 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:20:23 AM: lr = 0.0001
09/16 08:20:23 AM: amsgrad = True
09/16 08:20:23 AM: type = reduce_on_plateau
09/16 08:20:23 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:20:23 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:20:23 AM: mode = max
09/16 08:20:23 AM: factor = 0.5
09/16 08:20:23 AM: patience = 3
09/16 08:20:23 AM: threshold = 0.0001
09/16 08:20:23 AM: threshold_mode = abs
09/16 08:20:23 AM: verbose = True
09/16 08:20:23 AM: Starting training without restoring from a checkpoint.
09/16 08:20:23 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:20:23 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:20:27 AM: ***** Step 100 / Validation 1 *****
09/16 08:20:27 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:27 AM: Validating...
09/16 08:20:27 AM: Best result seen so far for edges-spr2.
09/16 08:20:27 AM: Best result seen so far for micro.
09/16 08:20:27 AM: Best result seen so far for macro.
09/16 08:20:27 AM: Updating LR scheduler:
09/16 08:20:27 AM: 	Best result seen so far for macro_avg: 0.731
09/16 08:20:27 AM: 	# validation passes without improvement: 0
09/16 08:20:27 AM: edges-spr2_loss: training: 0.486320 validation: 0.411128
09/16 08:20:27 AM: macro_avg: validation: 0.730858
09/16 08:20:27 AM: micro_avg: validation: 0.000000
09/16 08:20:27 AM: edges-spr2_mcc: training: 0.463758 validation: 0.580577
09/16 08:20:27 AM: edges-spr2_acc: training: 0.031862 validation: 0.050794
09/16 08:20:27 AM: edges-spr2_precision: training: 0.642484 validation: 0.758345
09/16 08:20:27 AM: edges-spr2_recall: training: 0.693435 validation: 0.705294
09/16 08:20:27 AM: edges-spr2_f1: training: 0.666988 validation: 0.730858
09/16 08:20:27 AM: Global learning rate: 0.0001
09/16 08:20:27 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:20:31 AM: ***** Step 200 / Validation 2 *****
09/16 08:20:31 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:31 AM: Validating...
09/16 08:20:31 AM: Best result seen so far for edges-spr2.
09/16 08:20:31 AM: Best result seen so far for macro.
09/16 08:20:31 AM: Updating LR scheduler:
09/16 08:20:31 AM: 	Best result seen so far for macro_avg: 0.749
09/16 08:20:31 AM: 	# validation passes without improvement: 0
09/16 08:20:31 AM: edges-spr2_loss: training: 0.360465 validation: 0.387077
09/16 08:20:31 AM: macro_avg: validation: 0.748942
09/16 08:20:31 AM: micro_avg: validation: 0.000000
09/16 08:20:31 AM: edges-spr2_mcc: training: 0.630333 validation: 0.612161
09/16 08:20:31 AM: edges-spr2_acc: training: 0.054039 validation: 0.057143
09/16 08:20:31 AM: edges-spr2_precision: training: 0.781273 validation: 0.786433
09/16 08:20:31 AM: edges-spr2_recall: training: 0.742934 validation: 0.714863
09/16 08:20:31 AM: edges-spr2_f1: training: 0.761621 validation: 0.748942
09/16 08:20:31 AM: Global learning rate: 0.0001
09/16 08:20:31 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:20:33 AM: Update 241: task edges-spr2, batch 41 (241): mcc: 0.6557, acc: 0.0624, precision: 0.8003, recall: 0.7514, f1: 0.7751, edges-spr2_loss: 0.3379
09/16 08:20:35 AM: ***** Step 300 / Validation 3 *****
09/16 08:20:35 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:35 AM: Validating...
09/16 08:20:35 AM: Best result seen so far for edges-spr2.
09/16 08:20:35 AM: Best result seen so far for macro.
09/16 08:20:35 AM: Updating LR scheduler:
09/16 08:20:35 AM: 	Best result seen so far for macro_avg: 0.758
09/16 08:20:35 AM: 	# validation passes without improvement: 0
09/16 08:20:35 AM: edges-spr2_loss: training: 0.329419 validation: 0.381631
09/16 08:20:35 AM: macro_avg: validation: 0.758458
09/16 08:20:35 AM: micro_avg: validation: 0.000000
09/16 08:20:35 AM: edges-spr2_mcc: training: 0.666696 validation: 0.628746
09/16 08:20:35 AM: edges-spr2_acc: training: 0.060173 validation: 0.052381
09/16 08:20:35 AM: edges-spr2_precision: training: 0.812018 validation: 0.801563
09/16 08:20:35 AM: edges-spr2_recall: training: 0.757161 validation: 0.719753
09/16 08:20:35 AM: edges-spr2_f1: training: 0.783631 validation: 0.758458
09/16 08:20:35 AM: Global learning rate: 0.0001
09/16 08:20:35 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:20:39 AM: ***** Step 400 / Validation 4 *****
09/16 08:20:39 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:39 AM: Validating...
09/16 08:20:39 AM: Updating LR scheduler:
09/16 08:20:39 AM: 	Best result seen so far for macro_avg: 0.758
09/16 08:20:39 AM: 	# validation passes without improvement: 1
09/16 08:20:39 AM: edges-spr2_loss: training: 0.312419 validation: 0.382698
09/16 08:20:39 AM: macro_avg: validation: 0.757848
09/16 08:20:39 AM: micro_avg: validation: 0.000000
09/16 08:20:39 AM: edges-spr2_mcc: training: 0.687078 validation: 0.628008
09/16 08:20:39 AM: edges-spr2_acc: training: 0.071469 validation: 0.053968
09/16 08:20:39 AM: edges-spr2_precision: training: 0.825554 validation: 0.801518
09/16 08:20:39 AM: edges-spr2_recall: training: 0.769759 validation: 0.718690
09/16 08:20:39 AM: edges-spr2_f1: training: 0.796681 validation: 0.757848
09/16 08:20:39 AM: Global learning rate: 0.0001
09/16 08:20:39 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:20:43 AM: Update 485: task edges-spr2, batch 85 (485): mcc: 0.6960, acc: 0.0759, precision: 0.8343, recall: 0.7725, f1: 0.8022, edges-spr2_loss: 0.3025
09/16 08:20:44 AM: ***** Step 500 / Validation 5 *****
09/16 08:20:44 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:44 AM: Validating...
09/16 08:20:44 AM: Best result seen so far for edges-spr2.
09/16 08:20:44 AM: Best result seen so far for macro.
09/16 08:20:44 AM: Updating LR scheduler:
09/16 08:20:44 AM: 	Best result seen so far for macro_avg: 0.760
09/16 08:20:44 AM: 	# validation passes without improvement: 0
09/16 08:20:44 AM: edges-spr2_loss: training: 0.302134 validation: 0.383663
09/16 08:20:44 AM: macro_avg: validation: 0.759674
09/16 08:20:44 AM: micro_avg: validation: 0.000000
09/16 08:20:44 AM: edges-spr2_mcc: training: 0.695472 validation: 0.629228
09/16 08:20:44 AM: edges-spr2_acc: training: 0.075252 validation: 0.044444
09/16 08:20:44 AM: edges-spr2_precision: training: 0.833804 validation: 0.798781
09/16 08:20:44 AM: edges-spr2_recall: training: 0.772341 validation: 0.724219
09/16 08:20:44 AM: edges-spr2_f1: training: 0.801897 validation: 0.759674
09/16 08:20:44 AM: Global learning rate: 0.0001
09/16 08:20:44 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:20:48 AM: ***** Step 600 / Validation 6 *****
09/16 08:20:48 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:48 AM: Validating...
09/16 08:20:49 AM: Updating LR scheduler:
09/16 08:20:49 AM: 	Best result seen so far for macro_avg: 0.760
09/16 08:20:49 AM: 	# validation passes without improvement: 1
09/16 08:20:49 AM: edges-spr2_loss: training: 0.291497 validation: 0.385253
09/16 08:20:49 AM: macro_avg: validation: 0.759633
09/16 08:20:49 AM: micro_avg: validation: 0.000000
09/16 08:20:49 AM: edges-spr2_mcc: training: 0.708978 validation: 0.630498
09/16 08:20:49 AM: edges-spr2_acc: training: 0.082981 validation: 0.055556
09/16 08:20:49 AM: edges-spr2_precision: training: 0.837188 validation: 0.802604
09/16 08:20:49 AM: edges-spr2_recall: training: 0.787349 validation: 0.721029
09/16 08:20:49 AM: edges-spr2_f1: training: 0.811504 validation: 0.759633
09/16 08:20:49 AM: Global learning rate: 0.0001
09/16 08:20:49 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:20:53 AM: ***** Step 700 / Validation 7 *****
09/16 08:20:53 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:53 AM: Validating...
09/16 08:20:53 AM: Evaluate: task edges-spr2, batch 2 (10): mcc: 0.6401, acc: 0.0435, precision: 0.8228, recall: 0.7306, f1: 0.7739, edges-spr2_loss: 0.3610
09/16 08:20:53 AM: Best result seen so far for edges-spr2.
09/16 08:20:53 AM: Best result seen so far for macro.
09/16 08:20:53 AM: Updating LR scheduler:
09/16 08:20:53 AM: 	Best result seen so far for macro_avg: 0.762
09/16 08:20:53 AM: 	# validation passes without improvement: 0
09/16 08:20:53 AM: edges-spr2_loss: training: 0.284939 validation: 0.387044
09/16 08:20:53 AM: macro_avg: validation: 0.762140
09/16 08:20:53 AM: micro_avg: validation: 0.000000
09/16 08:20:53 AM: edges-spr2_mcc: training: 0.715573 validation: 0.634769
09/16 08:20:53 AM: edges-spr2_acc: training: 0.078220 validation: 0.055556
09/16 08:20:53 AM: edges-spr2_precision: training: 0.839612 validation: 0.806360
09/16 08:20:53 AM: edges-spr2_recall: training: 0.794326 validation: 0.722518
09/16 08:20:53 AM: edges-spr2_f1: training: 0.816342 validation: 0.762140
09/16 08:20:53 AM: Global learning rate: 0.0001
09/16 08:20:53 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:20:59 AM: ***** Step 800 / Validation 8 *****
09/16 08:20:59 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:59 AM: Validating...
09/16 08:20:59 AM: Best result seen so far for edges-spr2.
09/16 08:20:59 AM: Best result seen so far for macro.
09/16 08:20:59 AM: Updating LR scheduler:
09/16 08:20:59 AM: 	Best result seen so far for macro_avg: 0.763
09/16 08:20:59 AM: 	# validation passes without improvement: 0
09/16 08:20:59 AM: edges-spr2_loss: training: 0.277420 validation: 0.391628
09/16 08:20:59 AM: macro_avg: validation: 0.762933
09/16 08:20:59 AM: micro_avg: validation: 0.000000
09/16 08:20:59 AM: edges-spr2_mcc: training: 0.720625 validation: 0.633563
09/16 08:20:59 AM: edges-spr2_acc: training: 0.084700 validation: 0.052381
09/16 08:20:59 AM: edges-spr2_precision: training: 0.841243 validation: 0.800047
09/16 08:20:59 AM: edges-spr2_recall: training: 0.799368 validation: 0.729109
09/16 08:20:59 AM: edges-spr2_f1: training: 0.819771 validation: 0.762933
09/16 08:20:59 AM: Global learning rate: 0.0001
09/16 08:20:59 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:21:03 AM: Update 897: task edges-spr2, batch 97 (897): mcc: 0.7278, acc: 0.1010, precision: 0.8448, recall: 0.8048, f1: 0.8243, edges-spr2_loss: 0.2728
09/16 08:21:03 AM: ***** Step 900 / Validation 9 *****
09/16 08:21:03 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:03 AM: Validating...
09/16 08:21:03 AM: Best result seen so far for edges-spr2.
09/16 08:21:03 AM: Best result seen so far for macro.
09/16 08:21:03 AM: Updating LR scheduler:
09/16 08:21:03 AM: 	Best result seen so far for macro_avg: 0.763
09/16 08:21:03 AM: 	# validation passes without improvement: 0
09/16 08:21:03 AM: edges-spr2_loss: training: 0.273170 validation: 0.392911
09/16 08:21:03 AM: macro_avg: validation: 0.763170
09/16 08:21:03 AM: micro_avg: validation: 0.000000
09/16 08:21:03 AM: edges-spr2_mcc: training: 0.727197 validation: 0.634898
09/16 08:21:03 AM: edges-spr2_acc: training: 0.099243 validation: 0.049206
09/16 08:21:03 AM: edges-spr2_precision: training: 0.844518 validation: 0.803148
09/16 08:21:03 AM: edges-spr2_recall: training: 0.804226 validation: 0.726983
09/16 08:21:03 AM: edges-spr2_f1: training: 0.823880 validation: 0.763170
09/16 08:21:03 AM: Global learning rate: 0.0001
09/16 08:21:03 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:21:07 AM: ***** Step 1000 / Validation 10 *****
09/16 08:21:07 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:07 AM: Validating...
09/16 08:21:08 AM: Best result seen so far for edges-spr2.
09/16 08:21:08 AM: Best result seen so far for macro.
09/16 08:21:08 AM: Updating LR scheduler:
09/16 08:21:08 AM: 	Best result seen so far for macro_avg: 0.763
09/16 08:21:08 AM: 	# validation passes without improvement: 0
09/16 08:21:08 AM: edges-spr2_loss: training: 0.269013 validation: 0.394066
09/16 08:21:08 AM: macro_avg: validation: 0.763333
09/16 08:21:08 AM: micro_avg: validation: 0.000000
09/16 08:21:08 AM: edges-spr2_mcc: training: 0.729246 validation: 0.633827
09/16 08:21:08 AM: edges-spr2_acc: training: 0.094505 validation: 0.049206
09/16 08:21:08 AM: edges-spr2_precision: training: 0.846428 validation: 0.799395
09/16 08:21:08 AM: edges-spr2_recall: training: 0.806552 validation: 0.730385
09/16 08:21:08 AM: edges-spr2_f1: training: 0.826009 validation: 0.763333
09/16 08:21:08 AM: Global learning rate: 0.0001
09/16 08:21:08 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:21:11 AM: ***** Step 1100 / Validation 11 *****
09/16 08:21:11 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:11 AM: Validating...
09/16 08:21:11 AM: Best result seen so far for edges-spr2.
09/16 08:21:11 AM: Best result seen so far for macro.
09/16 08:21:11 AM: Updating LR scheduler:
09/16 08:21:11 AM: 	Best result seen so far for macro_avg: 0.767
09/16 08:21:11 AM: 	# validation passes without improvement: 0
09/16 08:21:11 AM: edges-spr2_loss: training: 0.263728 validation: 0.397086
09/16 08:21:11 AM: macro_avg: validation: 0.766792
09/16 08:21:11 AM: micro_avg: validation: 0.000000
09/16 08:21:11 AM: edges-spr2_mcc: training: 0.738387 validation: 0.638508
09/16 08:21:11 AM: edges-spr2_acc: training: 0.104040 validation: 0.047619
09/16 08:21:11 AM: edges-spr2_precision: training: 0.849886 validation: 0.800880
09/16 08:21:11 AM: edges-spr2_recall: training: 0.813825 validation: 0.735488
09/16 08:21:11 AM: edges-spr2_f1: training: 0.831464 validation: 0.766792
09/16 08:21:11 AM: Global learning rate: 0.0001
09/16 08:21:11 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:21:13 AM: Update 1123: task edges-spr2, batch 23 (1123): mcc: 0.7281, acc: 0.0918, precision: 0.8465, recall: 0.8037, f1: 0.8246, edges-spr2_loss: 0.2718
09/16 08:21:16 AM: ***** Step 1200 / Validation 12 *****
09/16 08:21:16 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:16 AM: Validating...
09/16 08:21:16 AM: Updating LR scheduler:
09/16 08:21:16 AM: 	Best result seen so far for macro_avg: 0.767
09/16 08:21:16 AM: 	# validation passes without improvement: 1
09/16 08:21:16 AM: edges-spr2_loss: training: 0.261639 validation: 0.398324
09/16 08:21:16 AM: macro_avg: validation: 0.764244
09/16 08:21:16 AM: micro_avg: validation: 0.000000
09/16 08:21:16 AM: edges-spr2_mcc: training: 0.738205 validation: 0.633991
09/16 08:21:16 AM: edges-spr2_acc: training: 0.100237 validation: 0.046032
09/16 08:21:16 AM: edges-spr2_precision: training: 0.849715 validation: 0.796587
09/16 08:21:16 AM: edges-spr2_recall: training: 0.814363 validation: 0.734425
09/16 08:21:16 AM: edges-spr2_f1: training: 0.831664 validation: 0.764244
09/16 08:21:16 AM: Global learning rate: 0.0001
09/16 08:21:16 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:21:20 AM: ***** Step 1300 / Validation 13 *****
09/16 08:21:20 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:20 AM: Validating...
09/16 08:21:20 AM: Updating LR scheduler:
09/16 08:21:20 AM: 	Best result seen so far for macro_avg: 0.767
09/16 08:21:20 AM: 	# validation passes without improvement: 2
09/16 08:21:20 AM: edges-spr2_loss: training: 0.255814 validation: 0.402994
09/16 08:21:20 AM: macro_avg: validation: 0.763231
09/16 08:21:20 AM: micro_avg: validation: 0.000000
09/16 08:21:20 AM: edges-spr2_mcc: training: 0.747967 validation: 0.632030
09/16 08:21:20 AM: edges-spr2_acc: training: 0.119597 validation: 0.050794
09/16 08:21:20 AM: edges-spr2_precision: training: 0.855487 validation: 0.794388
09/16 08:21:20 AM: edges-spr2_recall: training: 0.820691 validation: 0.734425
09/16 08:21:20 AM: edges-spr2_f1: training: 0.837727 validation: 0.763231
09/16 08:21:20 AM: Global learning rate: 0.0001
09/16 08:21:20 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:21:23 AM: Update 1342: task edges-spr2, batch 42 (1342): mcc: 0.7432, acc: 0.1156, precision: 0.8490, recall: 0.8226, f1: 0.8356, edges-spr2_loss: 0.2577
09/16 08:21:25 AM: ***** Step 1400 / Validation 14 *****
09/16 08:21:25 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:25 AM: Validating...
09/16 08:21:25 AM: Updating LR scheduler:
09/16 08:21:25 AM: 	Best result seen so far for macro_avg: 0.767
09/16 08:21:25 AM: 	# validation passes without improvement: 3
09/16 08:21:25 AM: edges-spr2_loss: training: 0.254530 validation: 0.401707
09/16 08:21:25 AM: macro_avg: validation: 0.764420
09/16 08:21:25 AM: micro_avg: validation: 0.000000
09/16 08:21:25 AM: edges-spr2_mcc: training: 0.746876 validation: 0.633919
09/16 08:21:25 AM: edges-spr2_acc: training: 0.112594 validation: 0.049206
09/16 08:21:25 AM: edges-spr2_precision: training: 0.852591 validation: 0.795721
09/16 08:21:25 AM: edges-spr2_recall: training: 0.823523 validation: 0.735488
09/16 08:21:25 AM: edges-spr2_f1: training: 0.837805 validation: 0.764420
09/16 08:21:25 AM: Global learning rate: 0.0001
09/16 08:21:25 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:21:29 AM: ***** Step 1500 / Validation 15 *****
09/16 08:21:29 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:29 AM: Validating...
09/16 08:21:30 AM: Best result seen so far for edges-spr2.
09/16 08:21:30 AM: Best result seen so far for macro.
09/16 08:21:30 AM: Updating LR scheduler:
09/16 08:21:30 AM: 	Best result seen so far for macro_avg: 0.770
09/16 08:21:30 AM: 	# validation passes without improvement: 0
09/16 08:21:30 AM: edges-spr2_loss: training: 0.250262 validation: 0.402103
09/16 08:21:30 AM: macro_avg: validation: 0.769901
09/16 08:21:30 AM: micro_avg: validation: 0.000000
09/16 08:21:30 AM: edges-spr2_mcc: training: 0.752896 validation: 0.638567
09/16 08:21:30 AM: edges-spr2_acc: training: 0.120442 validation: 0.046032
09/16 08:21:30 AM: edges-spr2_precision: training: 0.857873 validation: 0.789062
09/16 08:21:30 AM: edges-spr2_recall: training: 0.825752 validation: 0.751648
09/16 08:21:30 AM: edges-spr2_f1: training: 0.841506 validation: 0.769901
09/16 08:21:30 AM: Global learning rate: 0.0001
09/16 08:21:30 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:21:33 AM: Update 1572: task edges-spr2, batch 72 (1572): mcc: 0.7562, acc: 0.1156, precision: 0.8597, recall: 0.8272, f1: 0.8432, edges-spr2_loss: 0.2475
09/16 08:21:34 AM: ***** Step 1600 / Validation 16 *****
09/16 08:21:34 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:34 AM: Validating...
09/16 08:21:34 AM: Updating LR scheduler:
09/16 08:21:34 AM: 	Best result seen so far for macro_avg: 0.770
09/16 08:21:34 AM: 	# validation passes without improvement: 1
09/16 08:21:34 AM: edges-spr2_loss: training: 0.247871 validation: 0.409079
09/16 08:21:34 AM: macro_avg: validation: 0.762703
09/16 08:21:34 AM: micro_avg: validation: 0.000000
09/16 08:21:34 AM: edges-spr2_mcc: training: 0.755504 validation: 0.630517
09/16 08:21:34 AM: edges-spr2_acc: training: 0.120754 validation: 0.049206
09/16 08:21:34 AM: edges-spr2_precision: training: 0.859145 validation: 0.791762
09/16 08:21:34 AM: edges-spr2_recall: training: 0.827048 validation: 0.735701
09/16 08:21:34 AM: edges-spr2_f1: training: 0.842791 validation: 0.762703
09/16 08:21:34 AM: Global learning rate: 0.0001
09/16 08:21:34 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:21:38 AM: ***** Step 1700 / Validation 17 *****
09/16 08:21:38 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:38 AM: Validating...
09/16 08:21:38 AM: Updating LR scheduler:
09/16 08:21:39 AM: 	Best result seen so far for macro_avg: 0.770
09/16 08:21:39 AM: 	# validation passes without improvement: 2
09/16 08:21:39 AM: edges-spr2_loss: training: 0.243333 validation: 0.408850
09/16 08:21:39 AM: macro_avg: validation: 0.764997
09/16 08:21:39 AM: micro_avg: validation: 0.000000
09/16 08:21:39 AM: edges-spr2_mcc: training: 0.758309 validation: 0.633737
09/16 08:21:39 AM: edges-spr2_acc: training: 0.122839 validation: 0.050794
09/16 08:21:39 AM: edges-spr2_precision: training: 0.859885 validation: 0.793017
09/16 08:21:39 AM: edges-spr2_recall: training: 0.830267 validation: 0.738890
09/16 08:21:39 AM: edges-spr2_f1: training: 0.844817 validation: 0.764997
09/16 08:21:39 AM: Global learning rate: 0.0001
09/16 08:21:39 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:21:42 AM: ***** Step 1800 / Validation 18 *****
09/16 08:21:42 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:42 AM: Validating...
09/16 08:21:42 AM: Updating LR scheduler:
09/16 08:21:42 AM: 	Best result seen so far for macro_avg: 0.770
09/16 08:21:42 AM: 	# validation passes without improvement: 3
09/16 08:21:42 AM: edges-spr2_loss: training: 0.241458 validation: 0.414269
09/16 08:21:42 AM: macro_avg: validation: 0.763680
09/16 08:21:42 AM: micro_avg: validation: 0.000000
09/16 08:21:42 AM: edges-spr2_mcc: training: 0.762787 validation: 0.632326
09/16 08:21:42 AM: edges-spr2_acc: training: 0.124280 validation: 0.041270
09/16 08:21:42 AM: edges-spr2_precision: training: 0.861100 validation: 0.793625
09/16 08:21:42 AM: edges-spr2_recall: training: 0.835229 validation: 0.735913
09/16 08:21:42 AM: edges-spr2_f1: training: 0.847968 validation: 0.763680
09/16 08:21:42 AM: Global learning rate: 0.0001
09/16 08:21:42 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:21:43 AM: Update 1818: task edges-spr2, batch 18 (1818): mcc: 0.7467, acc: 0.1086, precision: 0.8577, recall: 0.8192, f1: 0.8380, edges-spr2_loss: 0.2513
09/16 08:21:46 AM: ***** Step 1900 / Validation 19 *****
09/16 08:21:46 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:46 AM: Validating...
09/16 08:21:47 AM: Updating LR scheduler:
09/16 08:21:47 AM: 	Best result seen so far for macro_avg: 0.770
09/16 08:21:47 AM: 	# validation passes without improvement: 0
09/16 08:21:47 AM: edges-spr2_loss: training: 0.244928 validation: 0.411040
09/16 08:21:47 AM: macro_avg: validation: 0.764167
09/16 08:21:47 AM: micro_avg: validation: 0.000000
09/16 08:21:47 AM: edges-spr2_mcc: training: 0.755786 validation: 0.633429
09/16 08:21:47 AM: edges-spr2_acc: training: 0.123208 validation: 0.041270
09/16 08:21:47 AM: edges-spr2_precision: training: 0.858805 validation: 0.795172
09/16 08:21:47 AM: edges-spr2_recall: training: 0.828469 validation: 0.735488
09/16 08:21:47 AM: edges-spr2_f1: training: 0.843364 validation: 0.764167
09/16 08:21:47 AM: Global learning rate: 5e-05
09/16 08:21:47 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:21:50 AM: ***** Step 2000 / Validation 20 *****
09/16 08:21:50 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:50 AM: Validating...
09/16 08:21:50 AM: Updating LR scheduler:
09/16 08:21:50 AM: 	Best result seen so far for macro_avg: 0.770
09/16 08:21:50 AM: 	# validation passes without improvement: 1
09/16 08:21:50 AM: edges-spr2_loss: training: 0.234930 validation: 0.410407
09/16 08:21:50 AM: macro_avg: validation: 0.764777
09/16 08:21:50 AM: micro_avg: validation: 0.000000
09/16 08:21:50 AM: edges-spr2_mcc: training: 0.770416 validation: 0.633393
09/16 08:21:50 AM: edges-spr2_acc: training: 0.141432 validation: 0.044444
09/16 08:21:50 AM: edges-spr2_precision: training: 0.867923 validation: 0.792789
09/16 08:21:50 AM: edges-spr2_recall: training: 0.838110 validation: 0.738677
09/16 08:21:50 AM: edges-spr2_f1: training: 0.852756 validation: 0.764777
09/16 08:21:50 AM: Global learning rate: 5e-05
09/16 08:21:50 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:21:53 AM: Update 2083: task edges-spr2, batch 83 (2083): mcc: 0.7703, acc: 0.1364, precision: 0.8679, recall: 0.8382, f1: 0.8528, edges-spr2_loss: 0.2326
09/16 08:21:53 AM: ***** Step 2100 / Validation 21 *****
09/16 08:21:53 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:53 AM: Validating...
09/16 08:21:54 AM: Updating LR scheduler:
09/16 08:21:54 AM: 	Best result seen so far for macro_avg: 0.770
09/16 08:21:54 AM: 	# validation passes without improvement: 2
09/16 08:21:54 AM: edges-spr2_loss: training: 0.233251 validation: 0.414552
09/16 08:21:54 AM: macro_avg: validation: 0.764065
09/16 08:21:54 AM: micro_avg: validation: 0.000000
09/16 08:21:54 AM: edges-spr2_mcc: training: 0.770725 validation: 0.632339
09/16 08:21:54 AM: edges-spr2_acc: training: 0.136403 validation: 0.046032
09/16 08:21:54 AM: edges-spr2_precision: training: 0.867745 validation: 0.792237
09/16 08:21:54 AM: edges-spr2_recall: training: 0.838658 validation: 0.737827
09/16 08:21:54 AM: edges-spr2_f1: training: 0.852954 validation: 0.764065
09/16 08:21:54 AM: Global learning rate: 5e-05
09/16 08:21:54 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:21:57 AM: ***** Step 2200 / Validation 22 *****
09/16 08:21:57 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:57 AM: Validating...
09/16 08:21:58 AM: Updating LR scheduler:
09/16 08:21:58 AM: 	Best result seen so far for macro_avg: 0.770
09/16 08:21:58 AM: 	# validation passes without improvement: 3
09/16 08:21:58 AM: edges-spr2_loss: training: 0.233641 validation: 0.416229
09/16 08:21:58 AM: macro_avg: validation: 0.765307
09/16 08:21:58 AM: micro_avg: validation: 0.000000
09/16 08:21:58 AM: edges-spr2_mcc: training: 0.769011 validation: 0.633857
09/16 08:21:58 AM: edges-spr2_acc: training: 0.140910 validation: 0.047619
09/16 08:21:58 AM: edges-spr2_precision: training: 0.866635 validation: 0.792217
09/16 08:21:58 AM: edges-spr2_recall: training: 0.837544 validation: 0.740166
09/16 08:21:58 AM: edges-spr2_f1: training: 0.851841 validation: 0.765307
09/16 08:21:58 AM: Global learning rate: 5e-05
09/16 08:21:58 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:22:01 AM: ***** Step 2300 / Validation 23 *****
09/16 08:22:01 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:22:01 AM: Validating...
09/16 08:22:01 AM: Updating LR scheduler:
09/16 08:22:01 AM: 	Best result seen so far for macro_avg: 0.770
09/16 08:22:01 AM: 	# validation passes without improvement: 0
09/16 08:22:01 AM: edges-spr2_loss: training: 0.230908 validation: 0.415819
09/16 08:22:01 AM: macro_avg: validation: 0.764107
09/16 08:22:01 AM: micro_avg: validation: 0.000000
09/16 08:22:01 AM: edges-spr2_mcc: training: 0.773177 validation: 0.631076
09/16 08:22:01 AM: edges-spr2_acc: training: 0.150352 validation: 0.044444
09/16 08:22:01 AM: edges-spr2_precision: training: 0.868398 validation: 0.788201
09/16 08:22:01 AM: edges-spr2_recall: training: 0.841587 validation: 0.741442
09/16 08:22:01 AM: edges-spr2_f1: training: 0.854782 validation: 0.764107
09/16 08:22:01 AM: Global learning rate: 2.5e-05
09/16 08:22:01 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:22:03 AM: Update 2359: task edges-spr2, batch 59 (2359): mcc: 0.7711, acc: 0.1471, precision: 0.8657, recall: 0.8408, f1: 0.8530, edges-spr2_loss: 0.2300
09/16 08:22:04 AM: ***** Step 2400 / Validation 24 *****
09/16 08:22:04 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:22:04 AM: Validating...
09/16 08:22:05 AM: Updating LR scheduler:
09/16 08:22:05 AM: 	Best result seen so far for macro_avg: 0.770
09/16 08:22:05 AM: 	# validation passes without improvement: 1
09/16 08:22:05 AM: edges-spr2_loss: training: 0.228538 validation: 0.417166
09/16 08:22:05 AM: macro_avg: validation: 0.764745
09/16 08:22:05 AM: micro_avg: validation: 0.000000
09/16 08:22:05 AM: edges-spr2_mcc: training: 0.774206 validation: 0.633250
09/16 08:22:05 AM: edges-spr2_acc: training: 0.144232 validation: 0.042857
09/16 08:22:05 AM: edges-spr2_precision: training: 0.868139 validation: 0.792474
09/16 08:22:05 AM: edges-spr2_recall: training: 0.842729 validation: 0.738890
09/16 08:22:05 AM: edges-spr2_f1: training: 0.855245 validation: 0.764745
09/16 08:22:05 AM: Global learning rate: 2.5e-05
09/16 08:22:05 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:22:08 AM: ***** Step 2500 / Validation 25 *****
09/16 08:22:08 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:22:08 AM: Validating...
09/16 08:22:08 AM: Updating LR scheduler:
09/16 08:22:08 AM: 	Best result seen so far for macro_avg: 0.770
09/16 08:22:08 AM: 	# validation passes without improvement: 2
09/16 08:22:08 AM: Ran out of early stopping patience. Stopping training.
09/16 08:22:08 AM: edges-spr2_loss: training: 0.230086 validation: 0.418293
09/16 08:22:08 AM: macro_avg: validation: 0.762347
09/16 08:22:08 AM: micro_avg: validation: 0.000000
09/16 08:22:08 AM: edges-spr2_mcc: training: 0.772855 validation: 0.630649
09/16 08:22:08 AM: edges-spr2_acc: training: 0.142958 validation: 0.042857
09/16 08:22:08 AM: edges-spr2_precision: training: 0.869036 validation: 0.793468
09/16 08:22:08 AM: edges-spr2_recall: training: 0.840305 validation: 0.733574
09/16 08:22:08 AM: edges-spr2_f1: training: 0.854429 validation: 0.762347
09/16 08:22:08 AM: Global learning rate: 2.5e-05
09/16 08:22:08 AM: Saving checkpoints to: ./experiments/spr2-RANDOM-only/run
09/16 08:22:08 AM: Stopped training after 25 validation checks
09/16 08:22:08 AM: Trained edges-spr2 for 2500 batches or 35.714 epochs
09/16 08:22:08 AM: ***** VALIDATION RESULTS *****
09/16 08:22:08 AM: edges-spr2_f1 (for best val pass 15): edges-spr2_loss: 0.40210, macro_avg: 0.76990, micro_avg: 0.00000, edges-spr2_mcc: 0.63857, edges-spr2_acc: 0.04603, edges-spr2_precision: 0.78906, edges-spr2_recall: 0.75165, edges-spr2_f1: 0.76990
09/16 08:22:08 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.41113, macro_avg: 0.73086, micro_avg: 0.00000, edges-spr2_mcc: 0.58058, edges-spr2_acc: 0.05079, edges-spr2_precision: 0.75834, edges-spr2_recall: 0.70529, edges-spr2_f1: 0.73086
09/16 08:22:08 AM: macro_avg (for best val pass 15): edges-spr2_loss: 0.40210, macro_avg: 0.76990, micro_avg: 0.00000, edges-spr2_mcc: 0.63857, edges-spr2_acc: 0.04603, edges-spr2_precision: 0.78906, edges-spr2_recall: 0.75165, edges-spr2_f1: 0.76990
09/16 08:22:08 AM: Evaluating...
09/16 08:22:08 AM: Loaded model state from ./experiments/spr2-RANDOM-only/run/edges-spr2/model_state_target_train_val_15.best.th
09/16 08:22:08 AM: Evaluating on: edges-spr2, split: val
09/16 08:22:09 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:22:09 AM: Finished evaluating on: edges-spr2
09/16 08:22:09 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:22:09 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-RANDOM-only/run
09/16 08:22:09 AM: Wrote all preds for split 'val' to ./experiments/spr2-RANDOM-only/run
09/16 08:22:09 AM: Evaluating on: edges-spr2, split: test
09/16 08:22:09 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:22:09 AM: Finished evaluating on: edges-spr2
09/16 08:22:09 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:22:09 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-RANDOM-only/run
09/16 08:22:09 AM: Wrote all preds for split 'test' to ./experiments/spr2-RANDOM-only/run
09/16 08:22:09 AM: Writing results for split 'val' to ./experiments/spr2-RANDOM-only/results.tsv
09/16 08:22:09 AM: micro_avg: 0.000, macro_avg: 0.770, edges-spr2_mcc: 0.639, edges-spr2_acc: 0.046, edges-spr2_precision: 0.789, edges-spr2_recall: 0.752, edges-spr2_f1: 0.770
09/16 08:22:09 AM: Done!
09/16 08:22:09 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
