09/16 08:24:41 AM: Git branch: master
09/16 08:24:41 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:24:42 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-sts-mix/",
  "exp_name": "experiments/spr2-sts-mix",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-sts-mix/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/sts",
  "pytorch_transformers_output_mode": "mix",
  "remote_log_name": "experiments/spr2-sts-mix__run",
  "run_dir": "./experiments/spr2-sts-mix/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:24:42 AM: Saved config to ./experiments/spr2-sts-mix/run/params.conf
09/16 08:24:42 AM: Using random seed 1234
09/16 08:24:44 AM: Using GPU 0
09/16 08:24:44 AM: Loading tasks...
09/16 08:24:44 AM: Writing pre-preprocessed tasks to ./experiments/spr2-sts-mix/
09/16 08:24:44 AM: 	Creating task edges-spr2 from scratch.
09/16 08:24:44 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:24:44 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:24:44 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:24:44 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:24:44 AM: 	Finished loading tasks: edges-spr2.
09/16 08:24:44 AM: 	Building vocab from scratch.
09/16 08:24:44 AM: 	Counting units for task edges-spr2.
09/16 08:24:44 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:24:45 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:24:45 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:24:46 AM: 	Saved vocab to ./experiments/spr2-sts-mix/vocab
09/16 08:24:46 AM: Loading token dictionary from ./experiments/spr2-sts-mix/vocab.
09/16 08:24:46 AM: 	Loaded vocab from ./experiments/spr2-sts-mix/vocab
09/16 08:24:46 AM: 	Vocab namespace tokens: size 7943
09/16 08:24:46 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:24:46 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:24:46 AM: 	Vocab namespace chars: size 65
09/16 08:24:46 AM: 	Finished building vocab.
09/16 08:24:46 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:24:46 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-sts-mix/preproc/edges-spr2__train_data
09/16 08:24:46 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:24:46 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-sts-mix/preproc/edges-spr2__val_data
09/16 08:24:46 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:24:46 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-sts-mix/preproc/edges-spr2__test_data
09/16 08:24:46 AM: 	Finished indexing tasks
09/16 08:24:46 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:24:46 AM: 	  Training on 
09/16 08:24:46 AM: 	  Evaluating on edges-spr2
09/16 08:24:46 AM: 	Finished loading tasks in 2.339s
09/16 08:24:46 AM: 	 Tasks: ['edges-spr2']
09/16 08:24:46 AM: Building model...
09/16 08:24:46 AM: Using BERT model (bert-base-uncased).
09/16 08:24:46 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:24:46 AM: models/sts
09/16 08:24:46 AM: loading configuration file models/sts/config.json
09/16 08:24:46 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "sts-b",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 1,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:24:46 AM: loading weights file models/sts/pytorch_model.bin
09/16 08:24:56 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpysjyjeqr
09/16 08:24:57 AM: copying /tmp/tmpysjyjeqr to cache at ./experiments/spr2-sts-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:24:57 AM: creating metadata file for ./experiments/spr2-sts-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:24:57 AM: removing temp file /tmp/tmpysjyjeqr
09/16 08:24:57 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-sts-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:24:57 AM: NOTE: pytorch_transformers_output_mode='mix', so scalar mixing weights will be fine-tuned even if BERT model is frozen.
09/16 08:24:57 AM: Initializing parameters
09/16 08:24:57 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:24:57 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:24:57 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:24:57 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.scalar_mix.gamma
09/16 08:24:57 AM:    _text_field_embedder.scalar_mix.scalar_parameters.0
09/16 08:24:57 AM:    _text_field_embedder.scalar_mix.scalar_parameters.1
09/16 08:24:57 AM:    _text_field_embedder.scalar_mix.scalar_parameters.10
09/16 08:24:57 AM:    _text_field_embedder.scalar_mix.scalar_parameters.11
09/16 08:24:57 AM:    _text_field_embedder.scalar_mix.scalar_parameters.12
09/16 08:24:57 AM:    _text_field_embedder.scalar_mix.scalar_parameters.2
09/16 08:24:57 AM:    _text_field_embedder.scalar_mix.scalar_parameters.3
09/16 08:24:57 AM:    _text_field_embedder.scalar_mix.scalar_parameters.4
09/16 08:24:57 AM:    _text_field_embedder.scalar_mix.scalar_parameters.5
09/16 08:24:57 AM:    _text_field_embedder.scalar_mix.scalar_parameters.6
09/16 08:24:57 AM:    _text_field_embedder.scalar_mix.scalar_parameters.7
09/16 08:24:57 AM:    _text_field_embedder.scalar_mix.scalar_parameters.8
09/16 08:24:57 AM:    _text_field_embedder.scalar_mix.scalar_parameters.9
09/16 08:24:57 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:25:03 AM: Model specification:
09/16 08:25:03 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
      (scalar_mix): ScalarMix(
        (scalar_parameters): ParameterList(
            (0): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (1): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (2): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (3): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (4): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (5): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (6): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (7): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (8): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (9): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (10): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (11): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (12): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:25:03 AM: Model parameters:
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.scalar_mix.gamma: Trainable parameter, count 1 with torch.Size([1])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.0: Trainable parameter, count 1 with torch.Size([1])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.1: Trainable parameter, count 1 with torch.Size([1])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.2: Trainable parameter, count 1 with torch.Size([1])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.3: Trainable parameter, count 1 with torch.Size([1])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.4: Trainable parameter, count 1 with torch.Size([1])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.5: Trainable parameter, count 1 with torch.Size([1])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.6: Trainable parameter, count 1 with torch.Size([1])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.7: Trainable parameter, count 1 with torch.Size([1])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.8: Trainable parameter, count 1 with torch.Size([1])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.9: Trainable parameter, count 1 with torch.Size([1])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.10: Trainable parameter, count 1 with torch.Size([1])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.11: Trainable parameter, count 1 with torch.Size([1])
09/16 08:25:04 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.12: Trainable parameter, count 1 with torch.Size([1])
09/16 08:25:04 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:25:04 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:25:04 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:25:04 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:25:04 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:25:04 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:25:04 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:25:04 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:25:04 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:25:04 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:25:04 AM: Total number of parameters: 110144034 (1.10144e+08)
09/16 08:25:04 AM: Number of trainable parameters: 661794 (661794)
09/16 08:25:04 AM: Finished building model in 17.226s
09/16 08:25:04 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:25:04 AM: patience = 9
09/16 08:25:04 AM: val_interval = 100
09/16 08:25:04 AM: max_vals = 100
09/16 08:25:04 AM: cuda_device = 0
09/16 08:25:04 AM: grad_norm = 5.0
09/16 08:25:04 AM: grad_clipping = None
09/16 08:25:04 AM: lr_decay = 0.99
09/16 08:25:04 AM: min_lr = 1e-06
09/16 08:25:04 AM: keep_all_checkpoints = 0
09/16 08:25:04 AM: val_data_limit = 5000
09/16 08:25:04 AM: max_epochs = -1
09/16 08:25:04 AM: dec_val_scale = 250
09/16 08:25:04 AM: training_data_fraction = 1
09/16 08:25:04 AM: type = adam
09/16 08:25:04 AM: parameter_groups = None
09/16 08:25:04 AM: Number of trainable parameters: 661794
09/16 08:25:04 AM: infer_type_and_cast = True
09/16 08:25:04 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:25:04 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:25:04 AM: lr = 0.0001
09/16 08:25:04 AM: amsgrad = True
09/16 08:25:04 AM: type = reduce_on_plateau
09/16 08:25:04 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:25:04 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:25:04 AM: mode = max
09/16 08:25:04 AM: factor = 0.5
09/16 08:25:04 AM: patience = 3
09/16 08:25:04 AM: threshold = 0.0001
09/16 08:25:04 AM: threshold_mode = abs
09/16 08:25:04 AM: verbose = True
09/16 08:25:04 AM: type = adam
09/16 08:25:04 AM: parameter_groups = None
09/16 08:25:04 AM: Number of trainable parameters: 661794
09/16 08:25:04 AM: infer_type_and_cast = True
09/16 08:25:04 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:25:04 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:25:04 AM: lr = 0.0001
09/16 08:25:04 AM: amsgrad = True
09/16 08:25:04 AM: type = reduce_on_plateau
09/16 08:25:04 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:25:04 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:25:04 AM: mode = max
09/16 08:25:04 AM: factor = 0.5
09/16 08:25:04 AM: patience = 3
09/16 08:25:04 AM: threshold = 0.0001
09/16 08:25:04 AM: threshold_mode = abs
09/16 08:25:04 AM: verbose = True
09/16 08:25:04 AM: Starting training without restoring from a checkpoint.
09/16 08:25:04 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:25:04 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:25:14 AM: ***** Step 100 / Validation 1 *****
09/16 08:25:14 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:25:14 AM: Validating...
09/16 08:25:14 AM: Evaluate: task edges-spr2, batch 5 (10): mcc: 0.6982, acc: 0.0698, precision: 0.8567, recall: 0.7625, f1: 0.8068, edges-spr2_loss: 0.3139
09/16 08:25:15 AM: Best result seen so far for edges-spr2.
09/16 08:25:15 AM: Best result seen so far for micro.
09/16 08:25:15 AM: Best result seen so far for macro.
09/16 08:25:15 AM: Updating LR scheduler:
09/16 08:25:15 AM: 	Best result seen so far for macro_avg: 0.801
09/16 08:25:15 AM: 	# validation passes without improvement: 0
09/16 08:25:15 AM: edges-spr2_loss: training: 0.375847 validation: 0.340561
09/16 08:25:15 AM: macro_avg: validation: 0.800813
09/16 08:25:15 AM: micro_avg: validation: 0.000000
09/16 08:25:15 AM: edges-spr2_mcc: training: 0.624796 validation: 0.696546
09/16 08:25:15 AM: edges-spr2_acc: training: 0.041590 validation: 0.093651
09/16 08:25:15 AM: edges-spr2_precision: training: 0.779051 validation: 0.853295
09/16 08:25:15 AM: edges-spr2_recall: training: 0.738229 validation: 0.754412
09/16 08:25:15 AM: edges-spr2_f1: training: 0.758091 validation: 0.800813
09/16 08:25:15 AM: Global learning rate: 0.0001
09/16 08:25:15 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:25:24 AM: ***** Step 200 / Validation 2 *****
09/16 08:25:24 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:25:24 AM: Validating...
09/16 08:25:24 AM: Evaluate: task edges-spr2, batch 8 (10): mcc: 0.7255, acc: 0.1034, precision: 0.8510, recall: 0.8031, f1: 0.8264, edges-spr2_loss: 0.2899
09/16 08:25:25 AM: Best result seen so far for edges-spr2.
09/16 08:25:25 AM: Best result seen so far for macro.
09/16 08:25:25 AM: Updating LR scheduler:
09/16 08:25:25 AM: 	Best result seen so far for macro_avg: 0.819
09/16 08:25:25 AM: 	# validation passes without improvement: 0
09/16 08:25:25 AM: edges-spr2_loss: training: 0.306903 validation: 0.323248
09/16 08:25:25 AM: macro_avg: validation: 0.818661
09/16 08:25:25 AM: micro_avg: validation: 0.000000
09/16 08:25:25 AM: edges-spr2_mcc: training: 0.702703 validation: 0.717086
09/16 08:25:25 AM: edges-spr2_acc: training: 0.073338 validation: 0.100000
09/16 08:25:25 AM: edges-spr2_precision: training: 0.831705 validation: 0.846154
09/16 08:25:25 AM: edges-spr2_recall: training: 0.784998 validation: 0.792898
09/16 08:25:25 AM: edges-spr2_f1: training: 0.807677 validation: 0.818661
09/16 08:25:25 AM: Global learning rate: 0.0001
09/16 08:25:25 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:25:35 AM: Update 295: task edges-spr2, batch 95 (295): mcc: 0.7206, acc: 0.0827, precision: 0.8397, recall: 0.8008, f1: 0.8198, edges-spr2_loss: 0.2878
09/16 08:25:35 AM: ***** Step 300 / Validation 3 *****
09/16 08:25:35 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:25:35 AM: Validating...
09/16 08:25:36 AM: Best result seen so far for edges-spr2.
09/16 08:25:36 AM: Best result seen so far for macro.
09/16 08:25:36 AM: Updating LR scheduler:
09/16 08:25:36 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:25:36 AM: 	# validation passes without improvement: 0
09/16 08:25:36 AM: edges-spr2_loss: training: 0.287094 validation: 0.317224
09/16 08:25:36 AM: macro_avg: validation: 0.823529
09/16 08:25:36 AM: micro_avg: validation: 0.000000
09/16 08:25:36 AM: edges-spr2_mcc: training: 0.721229 validation: 0.723439
09/16 08:25:36 AM: edges-spr2_acc: training: 0.082968 validation: 0.092063
09/16 08:25:36 AM: edges-spr2_precision: training: 0.841146 validation: 0.845964
09/16 08:25:36 AM: edges-spr2_recall: training: 0.800353 validation: 0.802254
09/16 08:25:36 AM: edges-spr2_f1: training: 0.820243 validation: 0.823529
09/16 08:25:36 AM: Global learning rate: 0.0001
09/16 08:25:36 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:25:45 AM: Update 384: task edges-spr2, batch 84 (384): mcc: 0.7288, acc: 0.0829, precision: 0.8421, recall: 0.8102, f1: 0.8258, edges-spr2_loss: 0.2783
09/16 08:25:46 AM: ***** Step 400 / Validation 4 *****
09/16 08:25:46 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:25:46 AM: Validating...
09/16 08:25:47 AM: Updating LR scheduler:
09/16 08:25:47 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:25:47 AM: 	# validation passes without improvement: 1
09/16 08:25:47 AM: edges-spr2_loss: training: 0.275913 validation: 0.317124
09/16 08:25:47 AM: macro_avg: validation: 0.821647
09/16 08:25:47 AM: micro_avg: validation: 0.000000
09/16 08:25:47 AM: edges-spr2_mcc: training: 0.732107 validation: 0.724685
09/16 08:25:47 AM: edges-spr2_acc: training: 0.087571 validation: 0.098413
09/16 08:25:47 AM: edges-spr2_precision: training: 0.844137 validation: 0.860568
09/16 08:25:47 AM: edges-spr2_recall: training: 0.812101 validation: 0.786094
09/16 08:25:47 AM: edges-spr2_f1: training: 0.827809 validation: 0.821647
09/16 08:25:47 AM: Global learning rate: 0.0001
09/16 08:25:47 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:25:55 AM: Update 492: task edges-spr2, batch 92 (492): mcc: 0.7390, acc: 0.0964, precision: 0.8501, recall: 0.8153, f1: 0.8323, edges-spr2_loss: 0.2686
09/16 08:25:55 AM: ***** Step 500 / Validation 5 *****
09/16 08:25:55 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:25:55 AM: Validating...
09/16 08:25:56 AM: Updating LR scheduler:
09/16 08:25:56 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:25:56 AM: 	# validation passes without improvement: 2
09/16 08:25:56 AM: edges-spr2_loss: training: 0.267686 validation: 0.311441
09/16 08:25:56 AM: macro_avg: validation: 0.823413
09/16 08:25:56 AM: micro_avg: validation: 0.000000
09/16 08:25:56 AM: edges-spr2_mcc: training: 0.739838 validation: 0.725059
09/16 08:25:56 AM: edges-spr2_acc: training: 0.096834 validation: 0.096825
09/16 08:25:56 AM: edges-spr2_precision: training: 0.850910 validation: 0.853169
09/16 08:25:56 AM: edges-spr2_recall: training: 0.815414 validation: 0.795662
09/16 08:25:56 AM: edges-spr2_f1: training: 0.832784 validation: 0.823413
09/16 08:25:56 AM: Global learning rate: 0.0001
09/16 08:25:56 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:26:05 AM: Update 594: task edges-spr2, batch 94 (594): mcc: 0.7422, acc: 0.0930, precision: 0.8519, recall: 0.8174, f1: 0.8343, edges-spr2_loss: 0.2615
09/16 08:26:05 AM: ***** Step 600 / Validation 6 *****
09/16 08:26:05 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:26:05 AM: Validating...
09/16 08:26:06 AM: Best result seen so far for edges-spr2.
09/16 08:26:06 AM: Best result seen so far for macro.
09/16 08:26:06 AM: Updating LR scheduler:
09/16 08:26:06 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:26:06 AM: 	# validation passes without improvement: 0
09/16 08:26:06 AM: edges-spr2_loss: training: 0.261887 validation: 0.311792
09/16 08:26:06 AM: macro_avg: validation: 0.824657
09/16 08:26:06 AM: micro_avg: validation: 0.000000
09/16 08:26:06 AM: edges-spr2_mcc: training: 0.741703 validation: 0.724773
09/16 08:26:06 AM: edges-spr2_acc: training: 0.092139 validation: 0.092063
09/16 08:26:06 AM: edges-spr2_precision: training: 0.849976 validation: 0.845278
09/16 08:26:06 AM: edges-spr2_recall: training: 0.818783 validation: 0.805018
09/16 08:26:06 AM: edges-spr2_f1: training: 0.834088 validation: 0.824657
09/16 08:26:06 AM: Global learning rate: 0.0001
09/16 08:26:06 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:26:14 AM: ***** Step 700 / Validation 7 *****
09/16 08:26:14 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:26:14 AM: Validating...
09/16 08:26:15 AM: Evaluate: task edges-spr2, batch 6 (10): mcc: 0.7309, acc: 0.0953, precision: 0.8473, recall: 0.8196, f1: 0.8333, edges-spr2_loss: 0.2780
09/16 08:26:15 AM: Updating LR scheduler:
09/16 08:26:15 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:26:15 AM: 	# validation passes without improvement: 1
09/16 08:26:15 AM: edges-spr2_loss: training: 0.255138 validation: 0.311170
09/16 08:26:15 AM: macro_avg: validation: 0.823836
09/16 08:26:15 AM: micro_avg: validation: 0.000000
09/16 08:26:15 AM: edges-spr2_mcc: training: 0.751508 validation: 0.723162
09/16 08:26:15 AM: edges-spr2_acc: training: 0.100465 validation: 0.090476
09/16 08:26:15 AM: edges-spr2_precision: training: 0.857536 validation: 0.843089
09/16 08:26:15 AM: edges-spr2_recall: training: 0.823907 validation: 0.805443
09/16 08:26:15 AM: edges-spr2_f1: training: 0.840385 validation: 0.823836
09/16 08:26:15 AM: Global learning rate: 0.0001
09/16 08:26:15 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:26:23 AM: ***** Step 800 / Validation 8 *****
09/16 08:26:23 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:26:23 AM: Validating...
09/16 08:26:24 AM: Updating LR scheduler:
09/16 08:26:24 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:26:24 AM: 	# validation passes without improvement: 2
09/16 08:26:24 AM: edges-spr2_loss: training: 0.251109 validation: 0.313701
09/16 08:26:24 AM: macro_avg: validation: 0.822477
09/16 08:26:24 AM: micro_avg: validation: 0.000000
09/16 08:26:24 AM: edges-spr2_mcc: training: 0.755943 validation: 0.721738
09/16 08:26:24 AM: edges-spr2_acc: training: 0.106374 validation: 0.090476
09/16 08:26:24 AM: edges-spr2_precision: training: 0.857759 validation: 0.844688
09/16 08:26:24 AM: edges-spr2_recall: training: 0.829718 validation: 0.801403
09/16 08:26:24 AM: edges-spr2_f1: training: 0.843506 validation: 0.822477
09/16 08:26:24 AM: Global learning rate: 0.0001
09/16 08:26:24 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:26:25 AM: Update 807: task edges-spr2, batch 7 (807): mcc: 0.7649, acc: 0.1126, precision: 0.8684, recall: 0.8333, f1: 0.8505, edges-spr2_loss: 0.2484
09/16 08:26:32 AM: ***** Step 900 / Validation 9 *****
09/16 08:26:32 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:26:32 AM: Validating...
09/16 08:26:33 AM: Updating LR scheduler:
09/16 08:26:33 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:26:33 AM: 	# validation passes without improvement: 3
09/16 08:26:33 AM: edges-spr2_loss: training: 0.247441 validation: 0.317587
09/16 08:26:33 AM: macro_avg: validation: 0.823350
09/16 08:26:33 AM: micro_avg: validation: 0.000000
09/16 08:26:33 AM: edges-spr2_mcc: training: 0.758208 validation: 0.722716
09/16 08:26:33 AM: edges-spr2_acc: training: 0.106526 validation: 0.076190
09/16 08:26:33 AM: edges-spr2_precision: training: 0.859710 validation: 0.843938
09/16 08:26:33 AM: edges-spr2_recall: training: 0.830059 validation: 0.803742
09/16 08:26:33 AM: edges-spr2_f1: training: 0.844625 validation: 0.823350
09/16 08:26:33 AM: Global learning rate: 0.0001
09/16 08:26:33 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:26:35 AM: Update 917: task edges-spr2, batch 17 (917): mcc: 0.7483, acc: 0.1073, precision: 0.8482, recall: 0.8327, f1: 0.8404, edges-spr2_loss: 0.2560
09/16 08:26:42 AM: ***** Step 1000 / Validation 10 *****
09/16 08:26:42 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:26:42 AM: Validating...
09/16 08:26:43 AM: Updating LR scheduler:
09/16 08:26:43 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:26:43 AM: 	# validation passes without improvement: 0
09/16 08:26:43 AM: edges-spr2_loss: training: 0.245118 validation: 0.316056
09/16 08:26:43 AM: macro_avg: validation: 0.818640
09/16 08:26:43 AM: micro_avg: validation: 0.000000
09/16 08:26:43 AM: edges-spr2_mcc: training: 0.760245 validation: 0.716803
09/16 08:26:43 AM: edges-spr2_acc: training: 0.116014 validation: 0.079365
09/16 08:26:43 AM: edges-spr2_precision: training: 0.861908 validation: 0.845144
09/16 08:26:43 AM: edges-spr2_recall: training: 0.831816 validation: 0.793749
09/16 08:26:43 AM: edges-spr2_f1: training: 0.846595 validation: 0.818640
09/16 08:26:43 AM: Global learning rate: 5e-05
09/16 08:26:43 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:26:45 AM: Update 1029: task edges-spr2, batch 29 (1029): mcc: 0.7601, acc: 0.1151, precision: 0.8583, recall: 0.8345, f1: 0.8462, edges-spr2_loss: 0.2464
09/16 08:26:51 AM: ***** Step 1100 / Validation 11 *****
09/16 08:26:51 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:26:51 AM: Validating...
09/16 08:26:52 AM: Updating LR scheduler:
09/16 08:26:52 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:26:52 AM: 	# validation passes without improvement: 1
09/16 08:26:52 AM: edges-spr2_loss: training: 0.239681 validation: 0.314290
09/16 08:26:52 AM: macro_avg: validation: 0.821208
09/16 08:26:52 AM: micro_avg: validation: 0.000000
09/16 08:26:52 AM: edges-spr2_mcc: training: 0.766707 validation: 0.718413
09/16 08:26:52 AM: edges-spr2_acc: training: 0.117117 validation: 0.071429
09/16 08:26:52 AM: edges-spr2_precision: training: 0.864334 validation: 0.837832
09/16 08:26:52 AM: edges-spr2_recall: training: 0.836614 validation: 0.805231
09/16 08:26:52 AM: edges-spr2_f1: training: 0.850248 validation: 0.821208
09/16 08:26:52 AM: Global learning rate: 5e-05
09/16 08:26:52 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:26:55 AM: Update 1137: task edges-spr2, batch 37 (1137): mcc: 0.7615, acc: 0.1163, precision: 0.8622, recall: 0.8315, f1: 0.8466, edges-spr2_loss: 0.2418
09/16 08:27:00 AM: ***** Step 1200 / Validation 12 *****
09/16 08:27:00 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:27:00 AM: Validating...
09/16 08:27:01 AM: Updating LR scheduler:
09/16 08:27:01 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:27:01 AM: 	# validation passes without improvement: 2
09/16 08:27:01 AM: edges-spr2_loss: training: 0.238826 validation: 0.316138
09/16 08:27:01 AM: macro_avg: validation: 0.821301
09/16 08:27:01 AM: micro_avg: validation: 0.000000
09/16 08:27:01 AM: edges-spr2_mcc: training: 0.765601 validation: 0.718207
09/16 08:27:01 AM: edges-spr2_acc: training: 0.118386 validation: 0.071429
09/16 08:27:01 AM: edges-spr2_precision: training: 0.864263 validation: 0.836420
09/16 08:27:01 AM: edges-spr2_recall: training: 0.835662 validation: 0.806719
09/16 08:27:01 AM: edges-spr2_f1: training: 0.849721 validation: 0.821301
09/16 08:27:01 AM: Global learning rate: 5e-05
09/16 08:27:01 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:27:05 AM: Update 1256: task edges-spr2, batch 56 (1256): mcc: 0.7743, acc: 0.1240, precision: 0.8685, recall: 0.8427, f1: 0.8554, edges-spr2_loss: 0.2340
09/16 08:27:09 AM: ***** Step 1300 / Validation 13 *****
09/16 08:27:09 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:27:09 AM: Validating...
09/16 08:27:10 AM: Updating LR scheduler:
09/16 08:27:10 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:27:10 AM: 	# validation passes without improvement: 3
09/16 08:27:10 AM: edges-spr2_loss: training: 0.234299 validation: 0.316987
09/16 08:27:10 AM: macro_avg: validation: 0.820097
09/16 08:27:10 AM: micro_avg: validation: 0.000000
09/16 08:27:10 AM: edges-spr2_mcc: training: 0.772518 validation: 0.715958
09/16 08:27:10 AM: edges-spr2_acc: training: 0.122767 validation: 0.079365
09/16 08:27:10 AM: edges-spr2_precision: training: 0.868393 validation: 0.833699
09/16 08:27:10 AM: edges-spr2_recall: training: 0.839951 validation: 0.806932
09/16 08:27:10 AM: edges-spr2_f1: training: 0.853935 validation: 0.820097
09/16 08:27:10 AM: Global learning rate: 5e-05
09/16 08:27:10 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:27:15 AM: Update 1364: task edges-spr2, batch 64 (1364): mcc: 0.7709, acc: 0.1250, precision: 0.8659, recall: 0.8409, f1: 0.8532, edges-spr2_loss: 0.2343
09/16 08:27:18 AM: ***** Step 1400 / Validation 14 *****
09/16 08:27:18 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:27:18 AM: Validating...
09/16 08:27:19 AM: Updating LR scheduler:
09/16 08:27:19 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:27:19 AM: 	# validation passes without improvement: 0
09/16 08:27:19 AM: edges-spr2_loss: training: 0.234296 validation: 0.316107
09/16 08:27:19 AM: macro_avg: validation: 0.818668
09/16 08:27:19 AM: micro_avg: validation: 0.000000
09/16 08:27:19 AM: edges-spr2_mcc: training: 0.770779 validation: 0.715606
09/16 08:27:19 AM: edges-spr2_acc: training: 0.124379 validation: 0.077778
09/16 08:27:19 AM: edges-spr2_precision: training: 0.865200 validation: 0.840197
09/16 08:27:19 AM: edges-spr2_recall: training: 0.842091 validation: 0.798214
09/16 08:27:19 AM: edges-spr2_f1: training: 0.853489 validation: 0.818668
09/16 08:27:19 AM: Global learning rate: 2.5e-05
09/16 08:27:19 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:27:25 AM: Update 1473: task edges-spr2, batch 73 (1473): mcc: 0.7725, acc: 0.1276, precision: 0.8686, recall: 0.8400, f1: 0.8540, edges-spr2_loss: 0.2324
09/16 08:27:27 AM: ***** Step 1500 / Validation 15 *****
09/16 08:27:27 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:27:27 AM: Validating...
09/16 08:27:28 AM: Updating LR scheduler:
09/16 08:27:28 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:27:28 AM: 	# validation passes without improvement: 1
09/16 08:27:28 AM: edges-spr2_loss: training: 0.231425 validation: 0.316226
09/16 08:27:28 AM: macro_avg: validation: 0.821906
09/16 08:27:28 AM: micro_avg: validation: 0.000000
09/16 08:27:28 AM: edges-spr2_mcc: training: 0.774819 validation: 0.718372
09/16 08:27:28 AM: edges-spr2_acc: training: 0.128545 validation: 0.074603
09/16 08:27:28 AM: edges-spr2_precision: training: 0.870762 validation: 0.833588
09/16 08:27:28 AM: edges-spr2_recall: training: 0.841213 validation: 0.810546
09/16 08:27:28 AM: edges-spr2_f1: training: 0.855733 validation: 0.821906
09/16 08:27:28 AM: Global learning rate: 2.5e-05
09/16 08:27:28 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:27:35 AM: Update 1592: task edges-spr2, batch 92 (1592): mcc: 0.7762, acc: 0.1254, precision: 0.8692, recall: 0.8442, f1: 0.8565, edges-spr2_loss: 0.2302
09/16 08:27:36 AM: ***** Step 1600 / Validation 16 *****
09/16 08:27:36 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:27:36 AM: Validating...
09/16 08:27:37 AM: Updating LR scheduler:
09/16 08:27:37 AM: 	Best result seen so far for macro_avg: 0.825
09/16 08:27:37 AM: 	# validation passes without improvement: 2
09/16 08:27:37 AM: Ran out of early stopping patience. Stopping training.
09/16 08:27:37 AM: edges-spr2_loss: training: 0.231211 validation: 0.316467
09/16 08:27:37 AM: macro_avg: validation: 0.820980
09/16 08:27:37 AM: micro_avg: validation: 0.000000
09/16 08:27:37 AM: edges-spr2_mcc: training: 0.775044 validation: 0.717942
09/16 08:27:37 AM: edges-spr2_acc: training: 0.125072 validation: 0.079365
09/16 08:27:37 AM: edges-spr2_precision: training: 0.868410 validation: 0.837127
09/16 08:27:37 AM: edges-spr2_recall: training: 0.843538 validation: 0.805443
09/16 08:27:37 AM: edges-spr2_f1: training: 0.855793 validation: 0.820980
09/16 08:27:37 AM: Global learning rate: 2.5e-05
09/16 08:27:37 AM: Saving checkpoints to: ./experiments/spr2-sts-mix/run
09/16 08:27:37 AM: Stopped training after 16 validation checks
09/16 08:27:37 AM: Trained edges-spr2 for 1600 batches or 22.857 epochs
09/16 08:27:37 AM: ***** VALIDATION RESULTS *****
09/16 08:27:37 AM: edges-spr2_f1 (for best val pass 6): edges-spr2_loss: 0.31179, macro_avg: 0.82466, micro_avg: 0.00000, edges-spr2_mcc: 0.72477, edges-spr2_acc: 0.09206, edges-spr2_precision: 0.84528, edges-spr2_recall: 0.80502, edges-spr2_f1: 0.82466
09/16 08:27:37 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.34056, macro_avg: 0.80081, micro_avg: 0.00000, edges-spr2_mcc: 0.69655, edges-spr2_acc: 0.09365, edges-spr2_precision: 0.85329, edges-spr2_recall: 0.75441, edges-spr2_f1: 0.80081
09/16 08:27:37 AM: macro_avg (for best val pass 6): edges-spr2_loss: 0.31179, macro_avg: 0.82466, micro_avg: 0.00000, edges-spr2_mcc: 0.72477, edges-spr2_acc: 0.09206, edges-spr2_precision: 0.84528, edges-spr2_recall: 0.80502, edges-spr2_f1: 0.82466
09/16 08:27:37 AM: Evaluating...
09/16 08:27:37 AM: Loaded model state from ./experiments/spr2-sts-mix/run/edges-spr2/model_state_target_train_val_6.best.th
09/16 08:27:37 AM: Evaluating on: edges-spr2, split: val
09/16 08:27:38 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:27:38 AM: Finished evaluating on: edges-spr2
09/16 08:27:38 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:27:38 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-sts-mix/run
09/16 08:27:38 AM: Wrote all preds for split 'val' to ./experiments/spr2-sts-mix/run
09/16 08:27:38 AM: Evaluating on: edges-spr2, split: test
09/16 08:27:39 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:27:39 AM: Finished evaluating on: edges-spr2
09/16 08:27:39 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:27:39 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-sts-mix/run
09/16 08:27:39 AM: Wrote all preds for split 'test' to ./experiments/spr2-sts-mix/run
09/16 08:27:39 AM: Writing results for split 'val' to ./experiments/spr2-sts-mix/results.tsv
09/16 08:27:39 AM: micro_avg: 0.000, macro_avg: 0.825, edges-spr2_mcc: 0.725, edges-spr2_acc: 0.092, edges-spr2_precision: 0.845, edges-spr2_recall: 0.805, edges-spr2_f1: 0.825
09/16 08:27:39 AM: Done!
09/16 08:27:39 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
