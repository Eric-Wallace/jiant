09/16 08:28:45 AM: Git branch: master
09/16 08:28:45 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:28:46 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-sst-top/",
  "exp_name": "experiments/spr2-sst-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-sst-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/sst",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/spr2-sst-top__run",
  "run_dir": "./experiments/spr2-sst-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:28:46 AM: Saved config to ./experiments/spr2-sst-top/run/params.conf
09/16 08:28:46 AM: Using random seed 1234
09/16 08:28:48 AM: Using GPU 0
09/16 08:28:48 AM: Loading tasks...
09/16 08:28:48 AM: Writing pre-preprocessed tasks to ./experiments/spr2-sst-top/
09/16 08:28:48 AM: 	Creating task edges-spr2 from scratch.
09/16 08:28:48 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:28:48 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:28:48 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:28:48 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:28:48 AM: 	Finished loading tasks: edges-spr2.
09/16 08:28:48 AM: 	Building vocab from scratch.
09/16 08:28:48 AM: 	Counting units for task edges-spr2.
09/16 08:28:48 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:28:49 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:28:49 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:28:50 AM: 	Saved vocab to ./experiments/spr2-sst-top/vocab
09/16 08:28:50 AM: Loading token dictionary from ./experiments/spr2-sst-top/vocab.
09/16 08:28:50 AM: 	Loaded vocab from ./experiments/spr2-sst-top/vocab
09/16 08:28:50 AM: 	Vocab namespace tokens: size 7943
09/16 08:28:50 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:28:50 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:28:50 AM: 	Vocab namespace chars: size 65
09/16 08:28:50 AM: 	Finished building vocab.
09/16 08:28:50 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:28:50 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-sst-top/preproc/edges-spr2__train_data
09/16 08:28:50 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:28:50 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-sst-top/preproc/edges-spr2__val_data
09/16 08:28:50 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:28:50 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-sst-top/preproc/edges-spr2__test_data
09/16 08:28:50 AM: 	Finished indexing tasks
09/16 08:28:50 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:28:50 AM: 	  Training on 
09/16 08:28:50 AM: 	  Evaluating on edges-spr2
09/16 08:28:50 AM: 	Finished loading tasks in 2.858s
09/16 08:28:50 AM: 	 Tasks: ['edges-spr2']
09/16 08:28:50 AM: Building model...
09/16 08:28:50 AM: Using BERT model (bert-base-uncased).
09/16 08:28:50 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:28:50 AM: models/sst
09/16 08:28:50 AM: loading configuration file models/sst/config.json
09/16 08:28:50 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "sst-2",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:28:50 AM: loading weights file models/sst/pytorch_model.bin
09/16 08:29:02 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpx1s9c2a6
09/16 08:29:07 AM: copying /tmp/tmpx1s9c2a6 to cache at ./experiments/spr2-sst-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:29:07 AM: creating metadata file for ./experiments/spr2-sst-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:29:07 AM: removing temp file /tmp/tmpx1s9c2a6
09/16 08:29:07 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-sst-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:29:07 AM: Initializing parameters
09/16 08:29:07 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:29:07 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:29:07 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:29:07 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:29:07 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:29:07 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:29:07 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:29:12 AM: Model specification:
09/16 08:29:12 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:29:12 AM: Model parameters:
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:29:12 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:29:12 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:29:12 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:29:12 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:29:12 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:29:12 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:29:12 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:29:12 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:29:12 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:29:12 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:29:12 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:29:12 AM: Total number of parameters: 110144020 (1.10144e+08)
09/16 08:29:12 AM: Number of trainable parameters: 661780 (661780)
09/16 08:29:12 AM: Finished building model in 21.133s
09/16 08:29:12 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:29:12 AM: patience = 9
09/16 08:29:12 AM: val_interval = 100
09/16 08:29:12 AM: max_vals = 100
09/16 08:29:12 AM: cuda_device = 0
09/16 08:29:12 AM: grad_norm = 5.0
09/16 08:29:12 AM: grad_clipping = None
09/16 08:29:12 AM: lr_decay = 0.99
09/16 08:29:12 AM: min_lr = 1e-06
09/16 08:29:12 AM: keep_all_checkpoints = 0
09/16 08:29:12 AM: val_data_limit = 5000
09/16 08:29:12 AM: max_epochs = -1
09/16 08:29:12 AM: dec_val_scale = 250
09/16 08:29:12 AM: training_data_fraction = 1
09/16 08:29:12 AM: type = adam
09/16 08:29:12 AM: parameter_groups = None
09/16 08:29:12 AM: Number of trainable parameters: 661780
09/16 08:29:12 AM: infer_type_and_cast = True
09/16 08:29:12 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:29:12 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:29:12 AM: lr = 0.0001
09/16 08:29:12 AM: amsgrad = True
09/16 08:29:12 AM: type = reduce_on_plateau
09/16 08:29:12 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:29:12 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:29:12 AM: mode = max
09/16 08:29:12 AM: factor = 0.5
09/16 08:29:12 AM: patience = 3
09/16 08:29:12 AM: threshold = 0.0001
09/16 08:29:12 AM: threshold_mode = abs
09/16 08:29:12 AM: verbose = True
09/16 08:29:12 AM: type = adam
09/16 08:29:12 AM: parameter_groups = None
09/16 08:29:12 AM: Number of trainable parameters: 661780
09/16 08:29:12 AM: infer_type_and_cast = True
09/16 08:29:12 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:29:12 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:29:12 AM: lr = 0.0001
09/16 08:29:12 AM: amsgrad = True
09/16 08:29:12 AM: type = reduce_on_plateau
09/16 08:29:12 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:29:12 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:29:12 AM: mode = max
09/16 08:29:12 AM: factor = 0.5
09/16 08:29:12 AM: patience = 3
09/16 08:29:12 AM: threshold = 0.0001
09/16 08:29:12 AM: threshold_mode = abs
09/16 08:29:12 AM: verbose = True
09/16 08:29:12 AM: Starting training without restoring from a checkpoint.
09/16 08:29:12 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:29:12 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:29:21 AM: ***** Step 100 / Validation 1 *****
09/16 08:29:21 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:29:21 AM: Validating...
09/16 08:29:22 AM: Best result seen so far for edges-spr2.
09/16 08:29:22 AM: Best result seen so far for micro.
09/16 08:29:22 AM: Best result seen so far for macro.
09/16 08:29:22 AM: Updating LR scheduler:
09/16 08:29:22 AM: 	Best result seen so far for macro_avg: 0.774
09/16 08:29:22 AM: 	# validation passes without improvement: 0
09/16 08:29:22 AM: edges-spr2_loss: training: 0.419490 validation: 0.380558
09/16 08:29:22 AM: macro_avg: validation: 0.773912
09/16 08:29:22 AM: micro_avg: validation: 0.000000
09/16 08:29:22 AM: edges-spr2_mcc: training: 0.544395 validation: 0.645268
09/16 08:29:22 AM: edges-spr2_acc: training: 0.014098 validation: 0.044444
09/16 08:29:22 AM: edges-spr2_precision: training: 0.721958 validation: 0.794447
09/16 08:29:22 AM: edges-spr2_recall: training: 0.694013 validation: 0.754412
09/16 08:29:22 AM: edges-spr2_f1: training: 0.707710 validation: 0.773912
09/16 08:29:22 AM: Global learning rate: 0.0001
09/16 08:29:22 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:29:22 AM: Update 101: task edges-spr2, batch 1 (101): mcc: 0.6037, acc: 0.0164, precision: 0.7636, recall: 0.7352, f1: 0.7492, edges-spr2_loss: 0.3865
09/16 08:29:30 AM: ***** Step 200 / Validation 2 *****
09/16 08:29:30 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:29:30 AM: Validating...
09/16 08:29:31 AM: Best result seen so far for edges-spr2.
09/16 08:29:31 AM: Best result seen so far for macro.
09/16 08:29:31 AM: Updating LR scheduler:
09/16 08:29:31 AM: 	Best result seen so far for macro_avg: 0.791
09/16 08:29:31 AM: 	# validation passes without improvement: 0
09/16 08:29:31 AM: edges-spr2_loss: training: 0.358738 validation: 0.359237
09/16 08:29:31 AM: macro_avg: validation: 0.790545
09/16 08:29:31 AM: micro_avg: validation: 0.000000
09/16 08:29:31 AM: edges-spr2_mcc: training: 0.633638 validation: 0.672254
09/16 08:29:31 AM: edges-spr2_acc: training: 0.036741 validation: 0.060317
09/16 08:29:31 AM: edges-spr2_precision: training: 0.786039 validation: 0.814431
09/16 08:29:31 AM: edges-spr2_recall: training: 0.741466 validation: 0.768020
09/16 08:29:31 AM: edges-spr2_f1: training: 0.763102 validation: 0.790545
09/16 08:29:31 AM: Global learning rate: 0.0001
09/16 08:29:31 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:29:33 AM: Update 211: task edges-spr2, batch 11 (211): mcc: 0.6613, acc: 0.0699, precision: 0.8159, recall: 0.7451, f1: 0.7789, edges-spr2_loss: 0.3417
09/16 08:29:40 AM: ***** Step 300 / Validation 3 *****
09/16 08:29:40 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:29:40 AM: Validating...
09/16 08:29:41 AM: Best result seen so far for edges-spr2.
09/16 08:29:41 AM: Best result seen so far for macro.
09/16 08:29:41 AM: Updating LR scheduler:
09/16 08:29:41 AM: 	Best result seen so far for macro_avg: 0.796
09/16 08:29:41 AM: 	# validation passes without improvement: 0
09/16 08:29:41 AM: edges-spr2_loss: training: 0.335532 validation: 0.344471
09/16 08:29:41 AM: macro_avg: validation: 0.795727
09/16 08:29:41 AM: micro_avg: validation: 0.000000
09/16 08:29:41 AM: edges-spr2_mcc: training: 0.663040 validation: 0.679447
09/16 08:29:41 AM: edges-spr2_acc: training: 0.056492 validation: 0.055556
09/16 08:29:41 AM: edges-spr2_precision: training: 0.807549 validation: 0.816372
09/16 08:29:41 AM: edges-spr2_recall: training: 0.757529 validation: 0.776100
09/16 08:29:41 AM: edges-spr2_f1: training: 0.781740 validation: 0.795727
09/16 08:29:41 AM: Global learning rate: 0.0001
09/16 08:29:41 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:29:43 AM: Update 319: task edges-spr2, batch 19 (319): mcc: 0.6776, acc: 0.0589, precision: 0.8101, recall: 0.7731, f1: 0.7912, edges-spr2_loss: 0.3213
09/16 08:29:50 AM: ***** Step 400 / Validation 4 *****
09/16 08:29:50 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:29:50 AM: Validating...
09/16 08:29:51 AM: Best result seen so far for edges-spr2.
09/16 08:29:51 AM: Best result seen so far for macro.
09/16 08:29:51 AM: Updating LR scheduler:
09/16 08:29:51 AM: 	Best result seen so far for macro_avg: 0.800
09/16 08:29:51 AM: 	# validation passes without improvement: 0
09/16 08:29:51 AM: edges-spr2_loss: training: 0.324409 validation: 0.338374
09/16 08:29:51 AM: macro_avg: validation: 0.799733
09/16 08:29:51 AM: micro_avg: validation: 0.000000
09/16 08:29:51 AM: edges-spr2_mcc: training: 0.675174 validation: 0.690880
09/16 08:29:51 AM: edges-spr2_acc: training: 0.059181 validation: 0.063492
09/16 08:29:51 AM: edges-spr2_precision: training: 0.811621 validation: 0.838740
09/16 08:29:51 AM: edges-spr2_recall: training: 0.770049 validation: 0.764193
09/16 08:29:51 AM: edges-spr2_f1: training: 0.790289 validation: 0.799733
09/16 08:29:51 AM: Global learning rate: 0.0001
09/16 08:29:51 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:29:53 AM: Update 425: task edges-spr2, batch 25 (425): mcc: 0.6659, acc: 0.0456, precision: 0.8088, recall: 0.7615, f1: 0.7845, edges-spr2_loss: 0.3260
09/16 08:29:59 AM: ***** Step 500 / Validation 5 *****
09/16 08:29:59 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:29:59 AM: Validating...
09/16 08:30:00 AM: Best result seen so far for edges-spr2.
09/16 08:30:00 AM: Best result seen so far for macro.
09/16 08:30:00 AM: Updating LR scheduler:
09/16 08:30:00 AM: 	Best result seen so far for macro_avg: 0.801
09/16 08:30:00 AM: 	# validation passes without improvement: 0
09/16 08:30:00 AM: edges-spr2_loss: training: 0.319344 validation: 0.340287
09/16 08:30:00 AM: macro_avg: validation: 0.801316
09/16 08:30:00 AM: micro_avg: validation: 0.000000
09/16 08:30:00 AM: edges-spr2_mcc: training: 0.679071 validation: 0.689635
09/16 08:30:00 AM: edges-spr2_acc: training: 0.056936 validation: 0.058730
09/16 08:30:00 AM: edges-spr2_precision: training: 0.815090 validation: 0.827258
09/16 08:30:00 AM: edges-spr2_recall: training: 0.772031 validation: 0.776951
09/16 08:30:00 AM: edges-spr2_f1: training: 0.792976 validation: 0.801316
09/16 08:30:00 AM: Global learning rate: 0.0001
09/16 08:30:00 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:30:03 AM: Update 538: task edges-spr2, batch 38 (538): mcc: 0.6823, acc: 0.0589, precision: 0.8163, recall: 0.7750, f1: 0.7951, edges-spr2_loss: 0.3156
09/16 08:30:08 AM: ***** Step 600 / Validation 6 *****
09/16 08:30:08 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:30:08 AM: Validating...
09/16 08:30:09 AM: Updating LR scheduler:
09/16 08:30:09 AM: 	Best result seen so far for macro_avg: 0.801
09/16 08:30:09 AM: 	# validation passes without improvement: 1
09/16 08:30:09 AM: edges-spr2_loss: training: 0.312859 validation: 0.339763
09/16 08:30:09 AM: macro_avg: validation: 0.799478
09/16 08:30:09 AM: micro_avg: validation: 0.000000
09/16 08:30:09 AM: edges-spr2_mcc: training: 0.687609 validation: 0.684918
09/16 08:30:09 AM: edges-spr2_acc: training: 0.065934 validation: 0.057143
09/16 08:30:09 AM: edges-spr2_precision: training: 0.817633 validation: 0.818627
09/16 08:30:09 AM: edges-spr2_recall: training: 0.780831 validation: 0.781204
09/16 08:30:09 AM: edges-spr2_f1: training: 0.798808 validation: 0.799478
09/16 08:30:09 AM: Global learning rate: 0.0001
09/16 08:30:09 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:30:13 AM: Update 643: task edges-spr2, batch 43 (643): mcc: 0.6858, acc: 0.0640, precision: 0.8171, recall: 0.7786, f1: 0.7974, edges-spr2_loss: 0.3120
09/16 08:30:17 AM: ***** Step 700 / Validation 7 *****
09/16 08:30:17 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:30:17 AM: Validating...
09/16 08:30:18 AM: Best result seen so far for edges-spr2.
09/16 08:30:18 AM: Best result seen so far for macro.
09/16 08:30:18 AM: Updating LR scheduler:
09/16 08:30:18 AM: 	Best result seen so far for macro_avg: 0.804
09/16 08:30:18 AM: 	# validation passes without improvement: 0
09/16 08:30:18 AM: edges-spr2_loss: training: 0.310088 validation: 0.333073
09/16 08:30:18 AM: macro_avg: validation: 0.804271
09/16 08:30:18 AM: micro_avg: validation: 0.000000
09/16 08:30:18 AM: edges-spr2_mcc: training: 0.689790 validation: 0.695230
09/16 08:30:18 AM: edges-spr2_acc: training: 0.067607 validation: 0.071429
09/16 08:30:18 AM: edges-spr2_precision: training: 0.820367 validation: 0.833828
09/16 08:30:18 AM: edges-spr2_recall: training: 0.780976 validation: 0.776738
09/16 08:30:18 AM: edges-spr2_f1: training: 0.800187 validation: 0.804271
09/16 08:30:18 AM: Global learning rate: 0.0001
09/16 08:30:18 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:30:23 AM: Update 758: task edges-spr2, batch 58 (758): mcc: 0.6896, acc: 0.0679, precision: 0.8200, recall: 0.7806, f1: 0.7998, edges-spr2_loss: 0.3100
09/16 08:30:27 AM: ***** Step 800 / Validation 8 *****
09/16 08:30:27 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:30:27 AM: Validating...
09/16 08:30:28 AM: Best result seen so far for edges-spr2.
09/16 08:30:28 AM: Best result seen so far for macro.
09/16 08:30:28 AM: Updating LR scheduler:
09/16 08:30:28 AM: 	Best result seen so far for macro_avg: 0.807
09/16 08:30:28 AM: 	# validation passes without improvement: 0
09/16 08:30:28 AM: edges-spr2_loss: training: 0.307591 validation: 0.333162
09/16 08:30:28 AM: macro_avg: validation: 0.806983
09/16 08:30:28 AM: micro_avg: validation: 0.000000
09/16 08:30:28 AM: edges-spr2_mcc: training: 0.691034 validation: 0.697377
09/16 08:30:28 AM: edges-spr2_acc: training: 0.067304 validation: 0.068254
09/16 08:30:28 AM: edges-spr2_precision: training: 0.821107 validation: 0.828776
09/16 08:30:28 AM: edges-spr2_recall: training: 0.781579 validation: 0.786307
09/16 08:30:28 AM: edges-spr2_f1: training: 0.800855 validation: 0.806983
09/16 08:30:28 AM: Global learning rate: 0.0001
09/16 08:30:28 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:30:33 AM: Update 861: task edges-spr2, batch 61 (861): mcc: 0.6939, acc: 0.0677, precision: 0.8218, recall: 0.7845, f1: 0.8027, edges-spr2_loss: 0.3061
09/16 08:30:36 AM: ***** Step 900 / Validation 9 *****
09/16 08:30:36 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:30:36 AM: Validating...
09/16 08:30:37 AM: Updating LR scheduler:
09/16 08:30:37 AM: 	Best result seen so far for macro_avg: 0.807
09/16 08:30:37 AM: 	# validation passes without improvement: 1
09/16 08:30:37 AM: edges-spr2_loss: training: 0.305383 validation: 0.333271
09/16 08:30:37 AM: macro_avg: validation: 0.802090
09/16 08:30:37 AM: micro_avg: validation: 0.000000
09/16 08:30:37 AM: edges-spr2_mcc: training: 0.695141 validation: 0.694372
09/16 08:30:37 AM: edges-spr2_acc: training: 0.071541 validation: 0.058730
09/16 08:30:37 AM: edges-spr2_precision: training: 0.823425 validation: 0.840597
09/16 08:30:37 AM: edges-spr2_recall: training: 0.783995 validation: 0.766957
09/16 08:30:37 AM: edges-spr2_f1: training: 0.803227 validation: 0.802090
09/16 08:30:37 AM: Global learning rate: 0.0001
09/16 08:30:37 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:30:43 AM: Update 967: task edges-spr2, batch 67 (967): mcc: 0.6999, acc: 0.0758, precision: 0.8244, recall: 0.7912, f1: 0.8075, edges-spr2_loss: 0.3030
09/16 08:30:47 AM: ***** Step 1000 / Validation 10 *****
09/16 08:30:47 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:30:47 AM: Validating...
09/16 08:30:48 AM: Updating LR scheduler:
09/16 08:30:48 AM: 	Best result seen so far for macro_avg: 0.807
09/16 08:30:48 AM: 	# validation passes without improvement: 2
09/16 08:30:48 AM: edges-spr2_loss: training: 0.302844 validation: 0.331804
09/16 08:30:48 AM: macro_avg: validation: 0.800402
09/16 08:30:48 AM: micro_avg: validation: 0.000000
09/16 08:30:48 AM: edges-spr2_mcc: training: 0.698852 validation: 0.692827
09/16 08:30:48 AM: edges-spr2_acc: training: 0.075354 validation: 0.063492
09/16 08:30:48 AM: edges-spr2_precision: training: 0.823923 validation: 0.842538
09/16 08:30:48 AM: edges-spr2_recall: training: 0.790785 validation: 0.762279
09/16 08:30:48 AM: edges-spr2_f1: training: 0.807014 validation: 0.800402
09/16 08:30:48 AM: Global learning rate: 0.0001
09/16 08:30:48 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:30:53 AM: Update 1061: task edges-spr2, batch 61 (1061): mcc: 0.6922, acc: 0.0650, precision: 0.8215, recall: 0.7827, f1: 0.8016, edges-spr2_loss: 0.3062
09/16 08:30:56 AM: ***** Step 1100 / Validation 11 *****
09/16 08:30:56 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:30:56 AM: Validating...
09/16 08:30:57 AM: Updating LR scheduler:
09/16 08:30:57 AM: 	Best result seen so far for macro_avg: 0.807
09/16 08:30:57 AM: 	# validation passes without improvement: 3
09/16 08:30:57 AM: edges-spr2_loss: training: 0.303305 validation: 0.333065
09/16 08:30:57 AM: macro_avg: validation: 0.800982
09/16 08:30:57 AM: micro_avg: validation: 0.000000
09/16 08:30:57 AM: edges-spr2_mcc: training: 0.695533 validation: 0.693545
09/16 08:30:57 AM: edges-spr2_acc: training: 0.068003 validation: 0.050794
09/16 08:30:57 AM: edges-spr2_precision: training: 0.822870 validation: 0.842525
09/16 08:30:57 AM: edges-spr2_recall: training: 0.785398 validation: 0.763343
09/16 08:30:57 AM: edges-spr2_f1: training: 0.803698 validation: 0.800982
09/16 08:30:57 AM: Global learning rate: 0.0001
09/16 08:30:57 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:31:03 AM: Update 1163: task edges-spr2, batch 63 (1163): mcc: 0.7019, acc: 0.0672, precision: 0.8271, recall: 0.7898, f1: 0.8080, edges-spr2_loss: 0.2992
09/16 08:31:07 AM: ***** Step 1200 / Validation 12 *****
09/16 08:31:07 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:31:07 AM: Validating...
09/16 08:31:08 AM: Best result seen so far for edges-spr2.
09/16 08:31:08 AM: Best result seen so far for macro.
09/16 08:31:08 AM: Updating LR scheduler:
09/16 08:31:08 AM: 	Best result seen so far for macro_avg: 0.808
09/16 08:31:08 AM: 	# validation passes without improvement: 0
09/16 08:31:08 AM: edges-spr2_loss: training: 0.299385 validation: 0.328185
09/16 08:31:08 AM: macro_avg: validation: 0.808361
09/16 08:31:08 AM: micro_avg: validation: 0.000000
09/16 08:31:08 AM: edges-spr2_mcc: training: 0.701452 validation: 0.701470
09/16 08:31:08 AM: edges-spr2_acc: training: 0.067988 validation: 0.065079
09/16 08:31:08 AM: edges-spr2_precision: training: 0.826878 validation: 0.837474
09/16 08:31:08 AM: edges-spr2_recall: training: 0.789668 validation: 0.781204
09/16 08:31:08 AM: edges-spr2_f1: training: 0.807845 validation: 0.808361
09/16 08:31:08 AM: Global learning rate: 0.0001
09/16 08:31:08 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:31:13 AM: Update 1263: task edges-spr2, batch 63 (1263): mcc: 0.7001, acc: 0.0745, precision: 0.8282, recall: 0.7856, f1: 0.8064, edges-spr2_loss: 0.3014
09/16 08:31:16 AM: ***** Step 1300 / Validation 13 *****
09/16 08:31:16 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:31:16 AM: Validating...
09/16 08:31:17 AM: Updating LR scheduler:
09/16 08:31:17 AM: 	Best result seen so far for macro_avg: 0.808
09/16 08:31:17 AM: 	# validation passes without improvement: 1
09/16 08:31:17 AM: edges-spr2_loss: training: 0.300650 validation: 0.335022
09/16 08:31:17 AM: macro_avg: validation: 0.803917
09/16 08:31:17 AM: micro_avg: validation: 0.000000
09/16 08:31:17 AM: edges-spr2_mcc: training: 0.699957 validation: 0.697452
09/16 08:31:17 AM: edges-spr2_acc: training: 0.072622 validation: 0.055556
09/16 08:31:17 AM: edges-spr2_precision: training: 0.825597 validation: 0.843334
09/16 08:31:17 AM: edges-spr2_recall: training: 0.788412 validation: 0.768020
09/16 08:31:17 AM: edges-spr2_f1: training: 0.806576 validation: 0.803917
09/16 08:31:17 AM: Global learning rate: 0.0001
09/16 08:31:17 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:31:23 AM: Update 1373: task edges-spr2, batch 73 (1373): mcc: 0.7036, acc: 0.0739, precision: 0.8286, recall: 0.7909, f1: 0.8093, edges-spr2_loss: 0.2965
09/16 08:31:25 AM: ***** Step 1400 / Validation 14 *****
09/16 08:31:25 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:31:25 AM: Validating...
09/16 08:31:26 AM: Updating LR scheduler:
09/16 08:31:26 AM: 	Best result seen so far for macro_avg: 0.808
09/16 08:31:26 AM: 	# validation passes without improvement: 2
09/16 08:31:26 AM: edges-spr2_loss: training: 0.296721 validation: 0.328006
09/16 08:31:26 AM: macro_avg: validation: 0.807930
09/16 08:31:26 AM: micro_avg: validation: 0.000000
09/16 08:31:26 AM: edges-spr2_mcc: training: 0.703568 validation: 0.701062
09/16 08:31:26 AM: edges-spr2_acc: training: 0.075110 validation: 0.058730
09/16 08:31:26 AM: edges-spr2_precision: training: 0.827560 validation: 0.838017
09/16 08:31:26 AM: edges-spr2_recall: training: 0.792239 validation: 0.779928
09/16 08:31:26 AM: edges-spr2_f1: training: 0.809514 validation: 0.807930
09/16 08:31:26 AM: Global learning rate: 0.0001
09/16 08:31:26 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:31:33 AM: Update 1482: task edges-spr2, batch 82 (1482): mcc: 0.7016, acc: 0.0777, precision: 0.8281, recall: 0.7879, f1: 0.8075, edges-spr2_loss: 0.2970
09/16 08:31:35 AM: ***** Step 1500 / Validation 15 *****
09/16 08:31:35 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:31:35 AM: Validating...
09/16 08:31:36 AM: Best result seen so far for edges-spr2.
09/16 08:31:36 AM: Best result seen so far for macro.
09/16 08:31:36 AM: Updating LR scheduler:
09/16 08:31:36 AM: 	Best result seen so far for macro_avg: 0.810
09/16 08:31:36 AM: 	# validation passes without improvement: 0
09/16 08:31:36 AM: edges-spr2_loss: training: 0.295226 validation: 0.329937
09/16 08:31:36 AM: macro_avg: validation: 0.810367
09/16 08:31:36 AM: micro_avg: validation: 0.000000
09/16 08:31:36 AM: edges-spr2_mcc: training: 0.703821 validation: 0.700465
09/16 08:31:36 AM: edges-spr2_acc: training: 0.078944 validation: 0.065079
09/16 08:31:36 AM: edges-spr2_precision: training: 0.829491 validation: 0.823349
09/16 08:31:36 AM: edges-spr2_recall: training: 0.790273 validation: 0.797789
09/16 08:31:36 AM: edges-spr2_f1: training: 0.809408 validation: 0.810367
09/16 08:31:36 AM: Global learning rate: 0.0001
09/16 08:31:36 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:31:43 AM: ***** Step 1600 / Validation 16 *****
09/16 08:31:43 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:31:43 AM: Validating...
09/16 08:31:43 AM: Evaluate: task edges-spr2, batch 1 (10): mcc: 0.7122, acc: 0.0946, precision: 0.8611, recall: 0.7841, f1: 0.8208, edges-spr2_loss: 0.2934
09/16 08:31:44 AM: Updating LR scheduler:
09/16 08:31:44 AM: 	Best result seen so far for macro_avg: 0.810
09/16 08:31:44 AM: 	# validation passes without improvement: 1
09/16 08:31:44 AM: edges-spr2_loss: training: 0.295626 validation: 0.327960
09/16 08:31:44 AM: macro_avg: validation: 0.803219
09/16 08:31:44 AM: micro_avg: validation: 0.000000
09/16 08:31:44 AM: edges-spr2_mcc: training: 0.703332 validation: 0.693939
09/16 08:31:44 AM: edges-spr2_acc: training: 0.077720 validation: 0.066667
09/16 08:31:44 AM: edges-spr2_precision: training: 0.826481 validation: 0.834020
09/16 08:31:44 AM: edges-spr2_recall: training: 0.792311 validation: 0.774612
09/16 08:31:44 AM: edges-spr2_f1: training: 0.809036 validation: 0.803219
09/16 08:31:44 AM: Global learning rate: 0.0001
09/16 08:31:44 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:31:53 AM: ***** Step 1700 / Validation 17 *****
09/16 08:31:53 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:31:53 AM: Validating...
09/16 08:31:54 AM: Evaluate: task edges-spr2, batch 7 (10): mcc: 0.7019, acc: 0.0573, precision: 0.8245, recall: 0.8059, f1: 0.8151, edges-spr2_loss: 0.3036
09/16 08:31:54 AM: Updating LR scheduler:
09/16 08:31:54 AM: 	Best result seen so far for macro_avg: 0.810
09/16 08:31:54 AM: 	# validation passes without improvement: 2
09/16 08:31:54 AM: edges-spr2_loss: training: 0.294153 validation: 0.333324
09/16 08:31:54 AM: macro_avg: validation: 0.801781
09/16 08:31:54 AM: micro_avg: validation: 0.000000
09/16 08:31:54 AM: edges-spr2_mcc: training: 0.705010 validation: 0.688152
09/16 08:31:54 AM: edges-spr2_acc: training: 0.075801 validation: 0.055556
09/16 08:31:54 AM: edges-spr2_precision: training: 0.828084 validation: 0.819494
09/16 08:31:54 AM: edges-spr2_recall: training: 0.792894 validation: 0.784818
09/16 08:31:54 AM: edges-spr2_f1: training: 0.810107 validation: 0.801781
09/16 08:31:54 AM: Global learning rate: 0.0001
09/16 08:31:54 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:32:02 AM: ***** Step 1800 / Validation 18 *****
09/16 08:32:02 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:32:02 AM: Validating...
09/16 08:32:03 AM: Updating LR scheduler:
09/16 08:32:03 AM: 	Best result seen so far for macro_avg: 0.810
09/16 08:32:03 AM: 	# validation passes without improvement: 3
09/16 08:32:03 AM: edges-spr2_loss: training: 0.292034 validation: 0.330249
09/16 08:32:03 AM: macro_avg: validation: 0.806763
09/16 08:32:03 AM: micro_avg: validation: 0.000000
09/16 08:32:03 AM: edges-spr2_mcc: training: 0.707176 validation: 0.695529
09/16 08:32:03 AM: edges-spr2_acc: training: 0.079205 validation: 0.065079
09/16 08:32:03 AM: edges-spr2_precision: training: 0.828034 validation: 0.822723
09/16 08:32:03 AM: edges-spr2_recall: training: 0.796235 validation: 0.791410
09/16 08:32:03 AM: edges-spr2_f1: training: 0.811823 validation: 0.806763
09/16 08:32:03 AM: Global learning rate: 0.0001
09/16 08:32:03 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:32:04 AM: Update 1813: task edges-spr2, batch 13 (1813): mcc: 0.7113, acc: 0.0903, precision: 0.8361, recall: 0.7952, f1: 0.8152, edges-spr2_loss: 0.2968
09/16 08:32:11 AM: ***** Step 1900 / Validation 19 *****
09/16 08:32:11 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:32:11 AM: Validating...
09/16 08:32:12 AM: Best result seen so far for edges-spr2.
09/16 08:32:12 AM: Best result seen so far for macro.
09/16 08:32:12 AM: Updating LR scheduler:
09/16 08:32:12 AM: 	Best result seen so far for macro_avg: 0.817
09/16 08:32:12 AM: 	# validation passes without improvement: 0
09/16 08:32:12 AM: edges-spr2_loss: training: 0.294068 validation: 0.326915
09/16 08:32:12 AM: macro_avg: validation: 0.816808
09/16 08:32:12 AM: micro_avg: validation: 0.000000
09/16 08:32:12 AM: edges-spr2_mcc: training: 0.705067 validation: 0.709200
09/16 08:32:12 AM: edges-spr2_acc: training: 0.077178 validation: 0.061905
09/16 08:32:12 AM: edges-spr2_precision: training: 0.828919 validation: 0.823606
09/16 08:32:12 AM: edges-spr2_recall: training: 0.792506 validation: 0.810121
09/16 08:32:12 AM: edges-spr2_f1: training: 0.810304 validation: 0.816808
09/16 08:32:12 AM: Global learning rate: 0.0001
09/16 08:32:12 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:32:14 AM: Update 1918: task edges-spr2, batch 18 (1918): mcc: 0.7087, acc: 0.0696, precision: 0.8323, recall: 0.7969, f1: 0.8142, edges-spr2_loss: 0.2912
09/16 08:32:20 AM: ***** Step 2000 / Validation 20 *****
09/16 08:32:20 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:32:20 AM: Validating...
09/16 08:32:21 AM: Updating LR scheduler:
09/16 08:32:21 AM: 	Best result seen so far for macro_avg: 0.817
09/16 08:32:21 AM: 	# validation passes without improvement: 1
09/16 08:32:21 AM: edges-spr2_loss: training: 0.290948 validation: 0.329486
09/16 08:32:21 AM: macro_avg: validation: 0.810307
09/16 08:32:21 AM: micro_avg: validation: 0.000000
09/16 08:32:21 AM: edges-spr2_mcc: training: 0.709731 validation: 0.703735
09/16 08:32:21 AM: edges-spr2_acc: training: 0.074910 validation: 0.074603
09/16 08:32:21 AM: edges-spr2_precision: training: 0.830380 validation: 0.836541
09/16 08:32:21 AM: edges-spr2_recall: training: 0.797375 validation: 0.785669
09/16 08:32:21 AM: edges-spr2_f1: training: 0.813543 validation: 0.810307
09/16 08:32:21 AM: Global learning rate: 0.0001
09/16 08:32:21 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:32:24 AM: Update 2031: task edges-spr2, batch 31 (2031): mcc: 0.7102, acc: 0.0777, precision: 0.8333, recall: 0.7943, f1: 0.8134, edges-spr2_loss: 0.2920
09/16 08:32:29 AM: ***** Step 2100 / Validation 21 *****
09/16 08:32:29 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:32:29 AM: Validating...
09/16 08:32:30 AM: Updating LR scheduler:
09/16 08:32:30 AM: 	Best result seen so far for macro_avg: 0.817
09/16 08:32:30 AM: 	# validation passes without improvement: 2
09/16 08:32:30 AM: edges-spr2_loss: training: 0.290337 validation: 0.332922
09/16 08:32:30 AM: macro_avg: validation: 0.800574
09/16 08:32:30 AM: micro_avg: validation: 0.000000
09/16 08:32:30 AM: edges-spr2_mcc: training: 0.710754 validation: 0.690081
09/16 08:32:30 AM: edges-spr2_acc: training: 0.081038 validation: 0.063492
09/16 08:32:30 AM: edges-spr2_precision: training: 0.832250 validation: 0.832263
09/16 08:32:30 AM: edges-spr2_recall: training: 0.796371 validation: 0.771210
09/16 08:32:30 AM: edges-spr2_f1: training: 0.813916 validation: 0.800574
09/16 08:32:30 AM: Global learning rate: 0.0001
09/16 08:32:30 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:32:34 AM: Update 2144: task edges-spr2, batch 44 (2144): mcc: 0.7055, acc: 0.0787, precision: 0.8314, recall: 0.7883, f1: 0.8093, edges-spr2_loss: 0.2924
09/16 08:32:38 AM: ***** Step 2200 / Validation 22 *****
09/16 08:32:38 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:32:38 AM: Validating...
09/16 08:32:39 AM: Updating LR scheduler:
09/16 08:32:39 AM: 	Best result seen so far for macro_avg: 0.817
09/16 08:32:39 AM: 	# validation passes without improvement: 3
09/16 08:32:39 AM: edges-spr2_loss: training: 0.290514 validation: 0.329672
09/16 08:32:39 AM: macro_avg: validation: 0.810302
09/16 08:32:39 AM: micro_avg: validation: 0.000000
09/16 08:32:39 AM: edges-spr2_mcc: training: 0.707104 validation: 0.700792
09/16 08:32:39 AM: edges-spr2_acc: training: 0.079657 validation: 0.055556
09/16 08:32:39 AM: edges-spr2_precision: training: 0.831220 validation: 0.825033
09/16 08:32:39 AM: edges-spr2_recall: training: 0.792314 validation: 0.796088
09/16 08:32:39 AM: edges-spr2_f1: training: 0.811301 validation: 0.810302
09/16 08:32:39 AM: Global learning rate: 0.0001
09/16 08:32:39 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:32:44 AM: Update 2250: task edges-spr2, batch 50 (2250): mcc: 0.7107, acc: 0.0841, precision: 0.8316, recall: 0.7973, f1: 0.8141, edges-spr2_loss: 0.2893
09/16 08:32:47 AM: ***** Step 2300 / Validation 23 *****
09/16 08:32:47 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:32:47 AM: Validating...
09/16 08:32:48 AM: Updating LR scheduler:
09/16 08:32:48 AM: 	Best result seen so far for macro_avg: 0.817
09/16 08:32:48 AM: 	# validation passes without improvement: 0
09/16 08:32:48 AM: edges-spr2_loss: training: 0.288329 validation: 0.326548
09/16 08:32:48 AM: macro_avg: validation: 0.811944
09/16 08:32:48 AM: micro_avg: validation: 0.000000
09/16 08:32:48 AM: edges-spr2_mcc: training: 0.712535 validation: 0.704099
09/16 08:32:48 AM: edges-spr2_acc: training: 0.083800 validation: 0.055556
09/16 08:32:48 AM: edges-spr2_precision: training: 0.832743 validation: 0.829598
09/16 08:32:48 AM: edges-spr2_recall: training: 0.798681 validation: 0.795024
09/16 08:32:48 AM: edges-spr2_f1: training: 0.815357 validation: 0.811944
09/16 08:32:48 AM: Global learning rate: 5e-05
09/16 08:32:48 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:32:54 AM: Update 2364: task edges-spr2, batch 64 (2364): mcc: 0.7119, acc: 0.0836, precision: 0.8329, recall: 0.7964, f1: 0.8143, edges-spr2_loss: 0.2869
09/16 08:32:57 AM: ***** Step 2400 / Validation 24 *****
09/16 08:32:57 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:32:57 AM: Validating...
09/16 08:32:58 AM: Updating LR scheduler:
09/16 08:32:58 AM: 	Best result seen so far for macro_avg: 0.817
09/16 08:32:58 AM: 	# validation passes without improvement: 1
09/16 08:32:58 AM: edges-spr2_loss: training: 0.285816 validation: 0.328634
09/16 08:32:58 AM: macro_avg: validation: 0.808371
09/16 08:32:58 AM: micro_avg: validation: 0.000000
09/16 08:32:58 AM: edges-spr2_mcc: training: 0.714001 validation: 0.699338
09/16 08:32:58 AM: edges-spr2_acc: training: 0.082459 validation: 0.071429
09/16 08:32:58 AM: edges-spr2_precision: training: 0.833323 validation: 0.829345
09/16 08:32:58 AM: edges-spr2_recall: training: 0.799287 validation: 0.788433
09/16 08:32:58 AM: edges-spr2_f1: training: 0.815950 validation: 0.808371
09/16 08:32:58 AM: Global learning rate: 5e-05
09/16 08:32:58 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:33:04 AM: Update 2470: task edges-spr2, batch 70 (2470): mcc: 0.7108, acc: 0.0816, precision: 0.8330, recall: 0.7954, f1: 0.8138, edges-spr2_loss: 0.2879
09/16 08:33:06 AM: ***** Step 2500 / Validation 25 *****
09/16 08:33:06 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:33:06 AM: Validating...
09/16 08:33:07 AM: Updating LR scheduler:
09/16 08:33:07 AM: 	Best result seen so far for macro_avg: 0.817
09/16 08:33:07 AM: 	# validation passes without improvement: 2
09/16 08:33:07 AM: edges-spr2_loss: training: 0.286494 validation: 0.328457
09/16 08:33:07 AM: macro_avg: validation: 0.811393
09/16 08:33:07 AM: micro_avg: validation: 0.000000
09/16 08:33:07 AM: edges-spr2_mcc: training: 0.712719 validation: 0.703490
09/16 08:33:07 AM: edges-spr2_acc: training: 0.082275 validation: 0.069841
09/16 08:33:07 AM: edges-spr2_precision: training: 0.834289 validation: 0.830071
09/16 08:33:07 AM: edges-spr2_recall: training: 0.796912 validation: 0.793536
09/16 08:33:07 AM: edges-spr2_f1: training: 0.815172 validation: 0.811393
09/16 08:33:07 AM: Global learning rate: 5e-05
09/16 08:33:07 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:33:14 AM: Update 2582: task edges-spr2, batch 82 (2582): mcc: 0.7136, acc: 0.0816, precision: 0.8325, recall: 0.8003, f1: 0.8160, edges-spr2_loss: 0.2858
09/16 08:33:16 AM: ***** Step 2600 / Validation 26 *****
09/16 08:33:16 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:33:16 AM: Validating...
09/16 08:33:17 AM: Updating LR scheduler:
09/16 08:33:17 AM: 	Best result seen so far for macro_avg: 0.817
09/16 08:33:17 AM: 	# validation passes without improvement: 3
09/16 08:33:17 AM: edges-spr2_loss: training: 0.285461 validation: 0.328242
09/16 08:33:17 AM: macro_avg: validation: 0.809700
09/16 08:33:17 AM: micro_avg: validation: 0.000000
09/16 08:33:17 AM: edges-spr2_mcc: training: 0.713615 validation: 0.700895
09/16 08:33:17 AM: edges-spr2_acc: training: 0.082011 validation: 0.063492
09/16 08:33:17 AM: edges-spr2_precision: training: 0.832678 validation: 0.828622
09/16 08:33:17 AM: edges-spr2_recall: training: 0.799985 validation: 0.791622
09/16 08:33:17 AM: edges-spr2_f1: training: 0.816004 validation: 0.809700
09/16 08:33:17 AM: Global learning rate: 5e-05
09/16 08:33:17 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:33:24 AM: Update 2688: task edges-spr2, batch 88 (2688): mcc: 0.7150, acc: 0.0849, precision: 0.8340, recall: 0.7999, f1: 0.8166, edges-spr2_loss: 0.2866
09/16 08:33:25 AM: ***** Step 2700 / Validation 27 *****
09/16 08:33:25 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:33:25 AM: Validating...
09/16 08:33:26 AM: Updating LR scheduler:
09/16 08:33:26 AM: 	Best result seen so far for macro_avg: 0.817
09/16 08:33:26 AM: 	# validation passes without improvement: 0
09/16 08:33:26 AM: edges-spr2_loss: training: 0.285890 validation: 0.329356
09/16 08:33:26 AM: macro_avg: validation: 0.804945
09/16 08:33:26 AM: micro_avg: validation: 0.000000
09/16 08:33:26 AM: edges-spr2_mcc: training: 0.716243 validation: 0.696969
09/16 08:33:26 AM: edges-spr2_acc: training: 0.086740 validation: 0.065079
09/16 08:33:26 AM: edges-spr2_precision: training: 0.835335 validation: 0.837006
09/16 08:33:26 AM: edges-spr2_recall: training: 0.800238 validation: 0.775250
09/16 08:33:26 AM: edges-spr2_f1: training: 0.817410 validation: 0.804945
09/16 08:33:26 AM: Global learning rate: 2.5e-05
09/16 08:33:26 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:33:34 AM: ***** Step 2800 / Validation 28 *****
09/16 08:33:34 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:33:34 AM: Validating...
09/16 08:33:34 AM: Evaluate: task edges-spr2, batch 1 (10): mcc: 0.7240, acc: 0.0676, precision: 0.8528, recall: 0.8111, f1: 0.8315, edges-spr2_loss: 0.2908
09/16 08:33:35 AM: Updating LR scheduler:
09/16 08:33:35 AM: 	Best result seen so far for macro_avg: 0.817
09/16 08:33:35 AM: 	# validation passes without improvement: 1
09/16 08:33:35 AM: edges-spr2_loss: training: 0.283466 validation: 0.327325
09/16 08:33:35 AM: macro_avg: validation: 0.811635
09/16 08:33:35 AM: micro_avg: validation: 0.000000
09/16 08:33:35 AM: edges-spr2_mcc: training: 0.716505 validation: 0.704351
09/16 08:33:35 AM: edges-spr2_acc: training: 0.083156 validation: 0.074603
09/16 08:33:35 AM: edges-spr2_precision: training: 0.836240 validation: 0.832216
09/16 08:33:35 AM: edges-spr2_recall: training: 0.799616 validation: 0.792048
09/16 08:33:35 AM: edges-spr2_f1: training: 0.817518 validation: 0.811635
09/16 08:33:35 AM: Global learning rate: 2.5e-05
09/16 08:33:35 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:33:43 AM: ***** Step 2900 / Validation 29 *****
09/16 08:33:43 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:33:43 AM: Validating...
09/16 08:33:44 AM: Evaluate: task edges-spr2, batch 6 (10): mcc: 0.7136, acc: 0.0628, precision: 0.8465, recall: 0.7962, f1: 0.8206, edges-spr2_loss: 0.3027
09/16 08:33:44 AM: Updating LR scheduler:
09/16 08:33:44 AM: 	Best result seen so far for macro_avg: 0.817
09/16 08:33:44 AM: 	# validation passes without improvement: 2
09/16 08:33:44 AM: Ran out of early stopping patience. Stopping training.
09/16 08:33:44 AM: edges-spr2_loss: training: 0.285195 validation: 0.326568
09/16 08:33:44 AM: macro_avg: validation: 0.811084
09/16 08:33:44 AM: micro_avg: validation: 0.000000
09/16 08:33:44 AM: edges-spr2_mcc: training: 0.714302 validation: 0.705628
09/16 08:33:44 AM: edges-spr2_acc: training: 0.083714 validation: 0.071429
09/16 08:33:44 AM: edges-spr2_precision: training: 0.832201 validation: 0.839900
09/16 08:33:44 AM: edges-spr2_recall: training: 0.801273 validation: 0.784180
09/16 08:33:44 AM: edges-spr2_f1: training: 0.816444 validation: 0.811084
09/16 08:33:44 AM: Global learning rate: 2.5e-05
09/16 08:33:44 AM: Saving checkpoints to: ./experiments/spr2-sst-top/run
09/16 08:33:44 AM: Stopped training after 29 validation checks
09/16 08:33:44 AM: Trained edges-spr2 for 2900 batches or 41.429 epochs
09/16 08:33:44 AM: ***** VALIDATION RESULTS *****
09/16 08:33:44 AM: edges-spr2_f1 (for best val pass 19): edges-spr2_loss: 0.32692, macro_avg: 0.81681, micro_avg: 0.00000, edges-spr2_mcc: 0.70920, edges-spr2_acc: 0.06190, edges-spr2_precision: 0.82361, edges-spr2_recall: 0.81012, edges-spr2_f1: 0.81681
09/16 08:33:44 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.38056, macro_avg: 0.77391, micro_avg: 0.00000, edges-spr2_mcc: 0.64527, edges-spr2_acc: 0.04444, edges-spr2_precision: 0.79445, edges-spr2_recall: 0.75441, edges-spr2_f1: 0.77391
09/16 08:33:44 AM: macro_avg (for best val pass 19): edges-spr2_loss: 0.32692, macro_avg: 0.81681, micro_avg: 0.00000, edges-spr2_mcc: 0.70920, edges-spr2_acc: 0.06190, edges-spr2_precision: 0.82361, edges-spr2_recall: 0.81012, edges-spr2_f1: 0.81681
09/16 08:33:44 AM: Evaluating...
09/16 08:33:44 AM: Loaded model state from ./experiments/spr2-sst-top/run/edges-spr2/model_state_target_train_val_19.best.th
09/16 08:33:44 AM: Evaluating on: edges-spr2, split: val
09/16 08:33:46 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:33:46 AM: Finished evaluating on: edges-spr2
09/16 08:33:46 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:33:46 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-sst-top/run
09/16 08:33:46 AM: Wrote all preds for split 'val' to ./experiments/spr2-sst-top/run
09/16 08:33:46 AM: Evaluating on: edges-spr2, split: test
09/16 08:33:47 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:33:47 AM: Finished evaluating on: edges-spr2
09/16 08:33:47 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:33:47 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-sst-top/run
09/16 08:33:47 AM: Wrote all preds for split 'test' to ./experiments/spr2-sst-top/run
09/16 08:33:47 AM: Writing results for split 'val' to ./experiments/spr2-sst-top/results.tsv
09/16 08:33:47 AM: micro_avg: 0.000, macro_avg: 0.817, edges-spr2_mcc: 0.709, edges-spr2_acc: 0.062, edges-spr2_precision: 0.824, edges-spr2_recall: 0.810, edges-spr2_f1: 0.817
09/16 08:33:47 AM: Done!
09/16 08:33:47 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
