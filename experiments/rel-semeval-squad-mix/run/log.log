09/16 08:18:27 AM: Git branch: master
09/16 08:18:27 AM: Git SHA: a6b97574b819abe0c17f2f3300d1097e5c87dbde
09/16 08:18:27 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-squad-mix/",
  "exp_name": "experiments/rel-semeval-squad-mix",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-squad-mix/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/squad",
  "pytorch_transformers_output_mode": "mix",
  "remote_log_name": "experiments/rel-semeval-squad-mix__run",
  "run_dir": "./experiments/rel-semeval-squad-mix/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:18:27 AM: Saved config to ./experiments/rel-semeval-squad-mix/run/params.conf
09/16 08:18:27 AM: Using random seed 1234
09/16 08:18:27 AM: Using GPU 0
09/16 08:18:27 AM: Loading tasks...
09/16 08:18:27 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-squad-mix/
09/16 08:18:27 AM: 	Creating task edges-rel-semeval from scratch.
09/16 08:18:27 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 08:18:27 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 08:18:28 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 08:18:28 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 08:18:28 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 08:18:28 AM: 	Building vocab from scratch.
09/16 08:18:28 AM: 	Counting units for task edges-rel-semeval.
09/16 08:18:28 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 08:18:29 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:18:29 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:18:29 AM: 	Saved vocab to ./experiments/rel-semeval-squad-mix/vocab
09/16 08:18:29 AM: Loading token dictionary from ./experiments/rel-semeval-squad-mix/vocab.
09/16 08:18:29 AM: 	Loaded vocab from ./experiments/rel-semeval-squad-mix/vocab
09/16 08:18:29 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:18:29 AM: 	Vocab namespace tokens: size 16020
09/16 08:18:29 AM: 	Vocab namespace chars: size 59
09/16 08:18:29 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 08:18:29 AM: 	Finished building vocab.
09/16 08:18:29 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 08:18:30 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-squad-mix/preproc/edges-rel-semeval__train_data
09/16 08:18:30 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 08:18:30 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-squad-mix/preproc/edges-rel-semeval__val_data
09/16 08:18:30 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 08:18:30 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-squad-mix/preproc/edges-rel-semeval__test_data
09/16 08:18:30 AM: 	Finished indexing tasks
09/16 08:18:30 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 08:18:30 AM: 	  Training on 
09/16 08:18:30 AM: 	  Evaluating on edges-rel-semeval
09/16 08:18:30 AM: 	Finished loading tasks in 2.797s
09/16 08:18:30 AM: 	 Tasks: ['edges-rel-semeval']
09/16 08:18:30 AM: Building model...
09/16 08:18:30 AM: Using BERT model (bert-base-uncased).
09/16 08:18:30 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:18:30 AM: models/squad
09/16 08:18:30 AM: loading configuration file models/squad/config.json
09/16 08:18:30 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:18:30 AM: loading weights file models/squad/pytorch_model.bin
09/16 08:18:33 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpy7ingv6h
09/16 08:18:41 AM: copying /tmp/tmpy7ingv6h to cache at ./experiments/rel-semeval-squad-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:18:41 AM: creating metadata file for ./experiments/rel-semeval-squad-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:18:41 AM: removing temp file /tmp/tmpy7ingv6h
09/16 08:18:41 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-squad-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:18:41 AM: NOTE: pytorch_transformers_output_mode='mix', so scalar mixing weights will be fine-tuned even if BERT model is frozen.
09/16 08:18:41 AM: Initializing parameters
09/16 08:18:41 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:18:41 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:18:41 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:18:41 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:18:41 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:18:41 AM:    _text_field_embedder.scalar_mix.gamma
09/16 08:18:41 AM:    _text_field_embedder.scalar_mix.scalar_parameters.0
09/16 08:18:41 AM:    _text_field_embedder.scalar_mix.scalar_parameters.1
09/16 08:18:41 AM:    _text_field_embedder.scalar_mix.scalar_parameters.10
09/16 08:18:41 AM:    _text_field_embedder.scalar_mix.scalar_parameters.11
09/16 08:18:41 AM:    _text_field_embedder.scalar_mix.scalar_parameters.12
09/16 08:18:41 AM:    _text_field_embedder.scalar_mix.scalar_parameters.2
09/16 08:18:41 AM:    _text_field_embedder.scalar_mix.scalar_parameters.3
09/16 08:18:41 AM:    _text_field_embedder.scalar_mix.scalar_parameters.4
09/16 08:18:41 AM:    _text_field_embedder.scalar_mix.scalar_parameters.5
09/16 08:18:41 AM:    _text_field_embedder.scalar_mix.scalar_parameters.6
09/16 08:18:41 AM:    _text_field_embedder.scalar_mix.scalar_parameters.7
09/16 08:18:41 AM:    _text_field_embedder.scalar_mix.scalar_parameters.8
09/16 08:18:41 AM:    _text_field_embedder.scalar_mix.scalar_parameters.9
09/16 08:18:41 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 08:18:45 AM: Model specification:
09/16 08:18:45 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
      (scalar_mix): ScalarMix(
        (scalar_parameters): ParameterList(
            (0): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (1): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (2): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (3): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (4): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (5): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (6): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (7): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (8): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (9): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (10): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (11): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (12): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 08:18:45 AM: Model parameters:
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.scalar_mix.gamma: Trainable parameter, count 1 with torch.Size([1])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.0: Trainable parameter, count 1 with torch.Size([1])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.1: Trainable parameter, count 1 with torch.Size([1])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.2: Trainable parameter, count 1 with torch.Size([1])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.3: Trainable parameter, count 1 with torch.Size([1])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.4: Trainable parameter, count 1 with torch.Size([1])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.5: Trainable parameter, count 1 with torch.Size([1])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.6: Trainable parameter, count 1 with torch.Size([1])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.7: Trainable parameter, count 1 with torch.Size([1])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.8: Trainable parameter, count 1 with torch.Size([1])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.9: Trainable parameter, count 1 with torch.Size([1])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.10: Trainable parameter, count 1 with torch.Size([1])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.11: Trainable parameter, count 1 with torch.Size([1])
09/16 08:18:45 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.12: Trainable parameter, count 1 with torch.Size([1])
09/16 08:18:45 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:18:45 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:18:45 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:18:45 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:18:45 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:18:45 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:18:45 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:18:45 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:18:45 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 08:18:45 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 08:18:45 AM: Total number of parameters: 110143777 (1.10144e+08)
09/16 08:18:45 AM: Number of trainable parameters: 661537 (661537)
09/16 08:18:45 AM: Finished building model in 14.855s
09/16 08:18:45 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 08:18:46 AM: patience = 9
09/16 08:18:46 AM: val_interval = 100
09/16 08:18:46 AM: max_vals = 100
09/16 08:18:46 AM: cuda_device = 0
09/16 08:18:46 AM: grad_norm = 5.0
09/16 08:18:46 AM: grad_clipping = None
09/16 08:18:46 AM: lr_decay = 0.99
09/16 08:18:46 AM: min_lr = 1e-06
09/16 08:18:46 AM: keep_all_checkpoints = 0
09/16 08:18:46 AM: val_data_limit = 5000
09/16 08:18:46 AM: max_epochs = -1
09/16 08:18:46 AM: dec_val_scale = 250
09/16 08:18:46 AM: training_data_fraction = 1
09/16 08:18:46 AM: type = adam
09/16 08:18:46 AM: parameter_groups = None
09/16 08:18:46 AM: Number of trainable parameters: 661537
09/16 08:18:46 AM: infer_type_and_cast = True
09/16 08:18:46 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:18:46 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:18:46 AM: lr = 0.0001
09/16 08:18:46 AM: amsgrad = True
09/16 08:18:46 AM: type = reduce_on_plateau
09/16 08:18:46 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:18:46 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:18:46 AM: mode = max
09/16 08:18:46 AM: factor = 0.5
09/16 08:18:46 AM: patience = 3
09/16 08:18:46 AM: threshold = 0.0001
09/16 08:18:46 AM: threshold_mode = abs
09/16 08:18:46 AM: verbose = True
09/16 08:18:46 AM: type = adam
09/16 08:18:46 AM: parameter_groups = None
09/16 08:18:46 AM: Number of trainable parameters: 661537
09/16 08:18:46 AM: infer_type_and_cast = True
09/16 08:18:46 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:18:46 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:18:46 AM: lr = 0.0001
09/16 08:18:46 AM: amsgrad = True
09/16 08:18:46 AM: type = reduce_on_plateau
09/16 08:18:46 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:18:46 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:18:46 AM: mode = max
09/16 08:18:46 AM: factor = 0.5
09/16 08:18:46 AM: patience = 3
09/16 08:18:46 AM: threshold = 0.0001
09/16 08:18:46 AM: threshold_mode = abs
09/16 08:18:46 AM: verbose = True
09/16 08:18:46 AM: Starting training without restoring from a checkpoint.
09/16 08:18:46 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 08:18:46 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 08:18:52 AM: ***** Step 100 / Validation 1 *****
09/16 08:18:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:18:52 AM: Validating...
09/16 08:18:55 AM: Best result seen so far for edges-rel-semeval.
09/16 08:18:55 AM: Best result seen so far for micro.
09/16 08:18:55 AM: Best result seen so far for macro.
09/16 08:18:55 AM: Updating LR scheduler:
09/16 08:18:55 AM: 	Best result seen so far for macro_avg: 0.000
09/16 08:18:55 AM: 	# validation passes without improvement: 0
09/16 08:18:55 AM: edges-rel-semeval_loss: training: 0.244514 validation: 0.175853
09/16 08:18:55 AM: macro_avg: validation: 0.000000
09/16 08:18:55 AM: micro_avg: validation: 0.000000
09/16 08:18:55 AM: edges-rel-semeval_mcc: training: 0.007603 validation: 0.000000
09/16 08:18:55 AM: edges-rel-semeval_acc: training: 0.002838 validation: 0.000000
09/16 08:18:55 AM: edges-rel-semeval_precision: training: 0.065041 validation: 0.000000
09/16 08:18:55 AM: edges-rel-semeval_recall: training: 0.022706 validation: 0.000000
09/16 08:18:55 AM: edges-rel-semeval_f1: training: 0.033661 validation: 0.000000
09/16 08:18:55 AM: Global learning rate: 0.0001
09/16 08:18:55 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:18:56 AM: Update 115: task edges-rel-semeval, batch 15 (115): mcc: -0.0025, acc: 0.0000, precision: 0.0000, recall: 0.0000, f1: 0.0000, edges-rel-semeval_loss: 0.1824
09/16 08:19:01 AM: ***** Step 200 / Validation 2 *****
09/16 08:19:01 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:19:01 AM: Validating...
09/16 08:19:04 AM: Best result seen so far for edges-rel-semeval.
09/16 08:19:04 AM: Best result seen so far for macro.
09/16 08:19:04 AM: Updating LR scheduler:
09/16 08:19:04 AM: 	Best result seen so far for macro_avg: 0.167
09/16 08:19:04 AM: 	# validation passes without improvement: 0
09/16 08:19:04 AM: edges-rel-semeval_loss: training: 0.166855 validation: 0.142019
09/16 08:19:04 AM: macro_avg: validation: 0.166667
09/16 08:19:04 AM: micro_avg: validation: 0.000000
09/16 08:19:04 AM: edges-rel-semeval_mcc: training: 0.158091 validation: 0.285992
09/16 08:19:04 AM: edges-rel-semeval_acc: training: 0.030312 validation: 0.091384
09/16 08:19:04 AM: edges-rel-semeval_precision: training: 0.881818 validation: 0.945946
09/16 08:19:04 AM: edges-rel-semeval_recall: training: 0.030313 validation: 0.091384
09/16 08:19:04 AM: edges-rel-semeval_f1: training: 0.058610 validation: 0.166667
09/16 08:19:04 AM: Global learning rate: 0.0001
09/16 08:19:04 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:19:06 AM: Update 217: task edges-rel-semeval, batch 17 (217): mcc: 0.2859, acc: 0.0990, precision: 0.8793, recall: 0.0990, f1: 0.1780, edges-rel-semeval_loss: 0.1462
09/16 08:19:11 AM: ***** Step 300 / Validation 3 *****
09/16 08:19:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:19:11 AM: Validating...
09/16 08:19:14 AM: Best result seen so far for edges-rel-semeval.
09/16 08:19:14 AM: Best result seen so far for macro.
09/16 08:19:14 AM: Updating LR scheduler:
09/16 08:19:14 AM: 	Best result seen so far for macro_avg: 0.326
09/16 08:19:14 AM: 	# validation passes without improvement: 0
09/16 08:19:14 AM: edges-rel-semeval_loss: training: 0.139910 validation: 0.120670
09/16 08:19:14 AM: macro_avg: validation: 0.325714
09/16 08:19:14 AM: micro_avg: validation: 0.000000
09/16 08:19:14 AM: edges-rel-semeval_mcc: training: 0.358217 validation: 0.413302
09/16 08:19:14 AM: edges-rel-semeval_acc: training: 0.157048 validation: 0.195822
09/16 08:19:14 AM: edges-rel-semeval_precision: training: 0.848837 validation: 0.908367
09/16 08:19:14 AM: edges-rel-semeval_recall: training: 0.161148 validation: 0.198433
09/16 08:19:14 AM: edges-rel-semeval_f1: training: 0.270872 validation: 0.325714
09/16 08:19:14 AM: Global learning rate: 0.0001
09/16 08:19:14 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:19:16 AM: Update 331: task edges-rel-semeval, batch 31 (331): mcc: 0.4550, acc: 0.2470, precision: 0.8528, recall: 0.2571, f1: 0.3950, edges-rel-semeval_loss: 0.1245
09/16 08:19:20 AM: ***** Step 400 / Validation 4 *****
09/16 08:19:20 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:19:20 AM: Validating...
09/16 08:19:23 AM: Best result seen so far for edges-rel-semeval.
09/16 08:19:23 AM: Best result seen so far for macro.
09/16 08:19:23 AM: Updating LR scheduler:
09/16 08:19:23 AM: 	Best result seen so far for macro_avg: 0.456
09/16 08:19:23 AM: 	# validation passes without improvement: 0
09/16 08:19:23 AM: edges-rel-semeval_loss: training: 0.120354 validation: 0.106668
09/16 08:19:23 AM: macro_avg: validation: 0.456140
09/16 08:19:23 AM: micro_avg: validation: 0.000000
09/16 08:19:23 AM: edges-rel-semeval_mcc: training: 0.479839 validation: 0.511799
09/16 08:19:23 AM: edges-rel-semeval_acc: training: 0.277500 validation: 0.303742
09/16 08:19:23 AM: edges-rel-semeval_precision: training: 0.847145 validation: 0.900000
09/16 08:19:23 AM: edges-rel-semeval_recall: training: 0.287500 validation: 0.305483
09/16 08:19:23 AM: edges-rel-semeval_f1: training: 0.429305 validation: 0.456140
09/16 08:19:23 AM: Global learning rate: 0.0001
09/16 08:19:23 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:19:26 AM: Update 436: task edges-rel-semeval, batch 36 (436): mcc: 0.5033, acc: 0.3108, precision: 0.8420, recall: 0.3179, f1: 0.4615, edges-rel-semeval_loss: 0.1157
09/16 08:19:30 AM: ***** Step 500 / Validation 5 *****
09/16 08:19:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:19:30 AM: Validating...
09/16 08:19:33 AM: Best result seen so far for edges-rel-semeval.
09/16 08:19:33 AM: Best result seen so far for macro.
09/16 08:19:33 AM: Updating LR scheduler:
09/16 08:19:33 AM: 	Best result seen so far for macro_avg: 0.543
09/16 08:19:33 AM: 	# validation passes without improvement: 0
09/16 08:19:33 AM: edges-rel-semeval_loss: training: 0.110562 validation: 0.098011
09/16 08:19:33 AM: macro_avg: validation: 0.543478
09/16 08:19:33 AM: micro_avg: validation: 0.000000
09/16 08:19:33 AM: edges-rel-semeval_mcc: training: 0.539127 validation: 0.576559
09/16 08:19:33 AM: edges-rel-semeval_acc: training: 0.350678 validation: 0.388164
09/16 08:19:33 AM: edges-rel-semeval_precision: training: 0.850224 validation: 0.887574
09/16 08:19:33 AM: edges-rel-semeval_recall: training: 0.359823 validation: 0.391645
09/16 08:19:33 AM: edges-rel-semeval_f1: training: 0.505650 validation: 0.543478
09/16 08:19:33 AM: Global learning rate: 0.0001
09/16 08:19:33 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:19:36 AM: Update 552: task edges-rel-semeval, batch 52 (552): mcc: 0.5946, acc: 0.4171, precision: 0.8534, recall: 0.4339, f1: 0.5753, edges-rel-semeval_loss: 0.0998
09/16 08:19:39 AM: ***** Step 600 / Validation 6 *****
09/16 08:19:39 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:19:39 AM: Validating...
09/16 08:19:41 AM: Best result seen so far for edges-rel-semeval.
09/16 08:19:41 AM: Best result seen so far for macro.
09/16 08:19:41 AM: Updating LR scheduler:
09/16 08:19:41 AM: 	Best result seen so far for macro_avg: 0.600
09/16 08:19:41 AM: 	# validation passes without improvement: 0
09/16 08:19:41 AM: edges-rel-semeval_loss: training: 0.099388 validation: 0.091289
09/16 08:19:41 AM: macro_avg: validation: 0.599542
09/16 08:19:41 AM: micro_avg: validation: 0.000000
09/16 08:19:41 AM: edges-rel-semeval_mcc: training: 0.592981 validation: 0.618431
09/16 08:19:41 AM: edges-rel-semeval_acc: training: 0.419375 validation: 0.449086
09/16 08:19:41 AM: edges-rel-semeval_precision: training: 0.847654 validation: 0.874791
09/16 08:19:41 AM: edges-rel-semeval_recall: training: 0.434687 validation: 0.456049
09/16 08:19:41 AM: edges-rel-semeval_f1: training: 0.574675 validation: 0.599542
09/16 08:19:41 AM: Global learning rate: 0.0001
09/16 08:19:41 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:19:46 AM: Update 669: task edges-rel-semeval, batch 69 (669): mcc: 0.6155, acc: 0.4369, precision: 0.8614, recall: 0.4594, f1: 0.5992, edges-rel-semeval_loss: 0.0935
09/16 08:19:48 AM: ***** Step 700 / Validation 7 *****
09/16 08:19:48 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:19:48 AM: Validating...
09/16 08:19:50 AM: Best result seen so far for edges-rel-semeval.
09/16 08:19:50 AM: Best result seen so far for macro.
09/16 08:19:50 AM: Updating LR scheduler:
09/16 08:19:50 AM: 	Best result seen so far for macro_avg: 0.612
09/16 08:19:50 AM: 	# validation passes without improvement: 0
09/16 08:19:50 AM: edges-rel-semeval_loss: training: 0.092996 validation: 0.086950
09/16 08:19:50 AM: macro_avg: validation: 0.611552
09/16 08:19:50 AM: micro_avg: validation: 0.000000
09/16 08:19:50 AM: edges-rel-semeval_mcc: training: 0.623543 validation: 0.628235
09/16 08:19:50 AM: edges-rel-semeval_acc: training: 0.449385 validation: 0.463882
09/16 08:19:50 AM: edges-rel-semeval_precision: training: 0.860265 validation: 0.875203
09/16 08:19:50 AM: edges-rel-semeval_recall: training: 0.471775 validation: 0.469974
09/16 08:19:50 AM: edges-rel-semeval_f1: training: 0.609369 validation: 0.611552
09/16 08:19:50 AM: Global learning rate: 0.0001
09/16 08:19:50 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:19:56 AM: ***** Step 800 / Validation 8 *****
09/16 08:19:56 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:19:56 AM: Validating...
09/16 08:19:56 AM: Evaluate: task edges-rel-semeval, batch 1 (36): mcc: 0.6411, acc: 0.5000, precision: 0.8095, recall: 0.5312, f1: 0.6415, edges-rel-semeval_loss: 0.0751
09/16 08:19:58 AM: Best result seen so far for edges-rel-semeval.
09/16 08:19:58 AM: Best result seen so far for macro.
09/16 08:19:58 AM: Updating LR scheduler:
09/16 08:19:58 AM: 	Best result seen so far for macro_avg: 0.670
09/16 08:19:58 AM: 	# validation passes without improvement: 0
09/16 08:19:58 AM: edges-rel-semeval_loss: training: 0.087580 validation: 0.081684
09/16 08:19:58 AM: macro_avg: validation: 0.669908
09/16 08:19:58 AM: micro_avg: validation: 0.000000
09/16 08:19:58 AM: edges-rel-semeval_mcc: training: 0.649444 validation: 0.677980
09/16 08:19:58 AM: edges-rel-semeval_acc: training: 0.486563 validation: 0.530896
09/16 08:19:58 AM: edges-rel-semeval_precision: training: 0.865600 validation: 0.883191
09/16 08:19:58 AM: edges-rel-semeval_recall: training: 0.507187 validation: 0.539600
09/16 08:19:58 AM: edges-rel-semeval_f1: training: 0.639606 validation: 0.669908
09/16 08:19:58 AM: Global learning rate: 0.0001
09/16 08:19:58 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:20:05 AM: ***** Step 900 / Validation 9 *****
09/16 08:20:05 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:20:05 AM: Validating...
09/16 08:20:06 AM: Evaluate: task edges-rel-semeval, batch 19 (36): mcc: 0.7082, acc: 0.5658, precision: 0.8997, recall: 0.5757, f1: 0.7021, edges-rel-semeval_loss: 0.0754
09/16 08:20:07 AM: Updating LR scheduler:
09/16 08:20:07 AM: 	Best result seen so far for macro_avg: 0.670
09/16 08:20:07 AM: 	# validation passes without improvement: 1
09/16 08:20:07 AM: edges-rel-semeval_loss: training: 0.084056 validation: 0.079492
09/16 08:20:07 AM: macro_avg: validation: 0.664874
09/16 08:20:07 AM: micro_avg: validation: 0.000000
09/16 08:20:07 AM: edges-rel-semeval_mcc: training: 0.663473 validation: 0.671478
09/16 08:20:07 AM: edges-rel-semeval_acc: training: 0.509303 validation: 0.527415
09/16 08:20:07 AM: edges-rel-semeval_precision: training: 0.858012 validation: 0.870423
09/16 08:20:07 AM: edges-rel-semeval_recall: training: 0.533586 validation: 0.537859
09/16 08:20:07 AM: edges-rel-semeval_f1: training: 0.657982 validation: 0.664874
09/16 08:20:07 AM: Global learning rate: 0.0001
09/16 08:20:07 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:20:13 AM: ***** Step 1000 / Validation 10 *****
09/16 08:20:13 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:20:13 AM: Validating...
09/16 08:20:16 AM: Best result seen so far for edges-rel-semeval.
09/16 08:20:16 AM: Best result seen so far for macro.
09/16 08:20:16 AM: Updating LR scheduler:
09/16 08:20:16 AM: 	Best result seen so far for macro_avg: 0.673
09/16 08:20:16 AM: 	# validation passes without improvement: 0
09/16 08:20:16 AM: edges-rel-semeval_loss: training: 0.078075 validation: 0.077177
09/16 08:20:16 AM: macro_avg: validation: 0.672718
09/16 08:20:16 AM: micro_avg: validation: 0.000000
09/16 08:20:16 AM: edges-rel-semeval_mcc: training: 0.699139 validation: 0.678077
09/16 08:20:16 AM: edges-rel-semeval_acc: training: 0.555000 validation: 0.535248
09/16 08:20:16 AM: edges-rel-semeval_precision: training: 0.868998 validation: 0.870166
09/16 08:20:16 AM: edges-rel-semeval_recall: training: 0.582500 validation: 0.548303
09/16 08:20:16 AM: edges-rel-semeval_f1: training: 0.697474 validation: 0.672718
09/16 08:20:16 AM: Global learning rate: 0.0001
09/16 08:20:16 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:20:16 AM: Update 1011: task edges-rel-semeval, batch 11 (1011): mcc: 0.6737, acc: 0.5199, precision: 0.8515, recall: 0.5540, f1: 0.6713, edges-rel-semeval_loss: 0.0779
09/16 08:20:22 AM: ***** Step 1100 / Validation 11 *****
09/16 08:20:22 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:20:22 AM: Validating...
09/16 08:20:24 AM: Best result seen so far for edges-rel-semeval.
09/16 08:20:24 AM: Best result seen so far for macro.
09/16 08:20:24 AM: Updating LR scheduler:
09/16 08:20:24 AM: 	Best result seen so far for macro_avg: 0.692
09/16 08:20:24 AM: 	# validation passes without improvement: 0
09/16 08:20:24 AM: edges-rel-semeval_loss: training: 0.076613 validation: 0.075776
09/16 08:20:24 AM: macro_avg: validation: 0.691579
09/16 08:20:24 AM: micro_avg: validation: 0.000000
09/16 08:20:24 AM: edges-rel-semeval_mcc: training: 0.695563 validation: 0.694993
09/16 08:20:24 AM: edges-rel-semeval_acc: training: 0.555030 validation: 0.561358
09/16 08:20:24 AM: edges-rel-semeval_precision: training: 0.853480 validation: 0.874834
09/16 08:20:24 AM: edges-rel-semeval_recall: training: 0.587827 validation: 0.571802
09/16 08:20:24 AM: edges-rel-semeval_f1: training: 0.696172 validation: 0.691579
09/16 08:20:24 AM: Global learning rate: 0.0001
09/16 08:20:24 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:20:26 AM: Update 1133: task edges-rel-semeval, batch 33 (1133): mcc: 0.7176, acc: 0.5814, precision: 0.8726, recall: 0.6098, f1: 0.7179, edges-rel-semeval_loss: 0.0730
09/16 08:20:30 AM: ***** Step 1200 / Validation 12 *****
09/16 08:20:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:20:30 AM: Validating...
09/16 08:20:32 AM: Best result seen so far for edges-rel-semeval.
09/16 08:20:32 AM: Best result seen so far for macro.
09/16 08:20:32 AM: Updating LR scheduler:
09/16 08:20:32 AM: 	Best result seen so far for macro_avg: 0.692
09/16 08:20:32 AM: 	# validation passes without improvement: 0
09/16 08:20:32 AM: edges-rel-semeval_loss: training: 0.072925 validation: 0.073739
09/16 08:20:32 AM: macro_avg: validation: 0.691824
09/16 08:20:32 AM: micro_avg: validation: 0.000000
09/16 08:20:32 AM: edges-rel-semeval_mcc: training: 0.718892 validation: 0.694340
09/16 08:20:32 AM: edges-rel-semeval_acc: training: 0.581562 validation: 0.555265
09/16 08:20:32 AM: edges-rel-semeval_precision: training: 0.871886 validation: 0.869565
09/16 08:20:32 AM: edges-rel-semeval_recall: training: 0.612500 validation: 0.574413
09/16 08:20:32 AM: edges-rel-semeval_f1: training: 0.719530 validation: 0.691824
09/16 08:20:32 AM: Global learning rate: 0.0001
09/16 08:20:32 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:20:36 AM: Update 1265: task edges-rel-semeval, batch 65 (1265): mcc: 0.6952, acc: 0.5543, precision: 0.8408, recall: 0.5966, f1: 0.6980, edges-rel-semeval_loss: 0.0746
09/16 08:20:39 AM: ***** Step 1300 / Validation 13 *****
09/16 08:20:39 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:20:39 AM: Validating...
09/16 08:20:41 AM: Best result seen so far for edges-rel-semeval.
09/16 08:20:41 AM: Best result seen so far for macro.
09/16 08:20:41 AM: Updating LR scheduler:
09/16 08:20:41 AM: 	Best result seen so far for macro_avg: 0.719
09/16 08:20:41 AM: 	# validation passes without improvement: 0
09/16 08:20:41 AM: edges-rel-semeval_loss: training: 0.073374 validation: 0.071616
09/16 08:20:41 AM: macro_avg: validation: 0.718575
09/16 08:20:41 AM: micro_avg: validation: 0.000000
09/16 08:20:41 AM: edges-rel-semeval_mcc: training: 0.705270 validation: 0.717060
09/16 08:20:41 AM: edges-rel-semeval_acc: training: 0.567960 validation: 0.587467
09/16 08:20:41 AM: edges-rel-semeval_precision: training: 0.849448 validation: 0.865196
09/16 08:20:41 AM: edges-rel-semeval_recall: training: 0.606749 validation: 0.614447
09/16 08:20:41 AM: edges-rel-semeval_f1: training: 0.707873 validation: 0.718575
09/16 08:20:41 AM: Global learning rate: 0.0001
09/16 08:20:41 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:20:46 AM: Update 1390: task edges-rel-semeval, batch 90 (1390): mcc: 0.7357, acc: 0.6049, precision: 0.8697, recall: 0.6420, f1: 0.7387, edges-rel-semeval_loss: 0.0689
09/16 08:20:47 AM: ***** Step 1400 / Validation 14 *****
09/16 08:20:47 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:20:47 AM: Validating...
09/16 08:20:49 AM: Updating LR scheduler:
09/16 08:20:49 AM: 	Best result seen so far for macro_avg: 0.719
09/16 08:20:49 AM: 	# validation passes without improvement: 1
09/16 08:20:49 AM: edges-rel-semeval_loss: training: 0.068144 validation: 0.071656
09/16 08:20:49 AM: macro_avg: validation: 0.710010
09/16 08:20:49 AM: micro_avg: validation: 0.000000
09/16 08:20:49 AM: edges-rel-semeval_mcc: training: 0.739491 validation: 0.710536
09/16 08:20:49 AM: edges-rel-semeval_acc: training: 0.610313 validation: 0.585727
09/16 08:20:49 AM: edges-rel-semeval_precision: training: 0.872889 validation: 0.871990
09/16 08:20:49 AM: edges-rel-semeval_recall: training: 0.645938 validation: 0.598782
09/16 08:20:49 AM: edges-rel-semeval_f1: training: 0.742457 validation: 0.710010
09/16 08:20:49 AM: Global learning rate: 0.0001
09/16 08:20:49 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:20:55 AM: ***** Step 1500 / Validation 15 *****
09/16 08:20:55 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:20:55 AM: Validating...
09/16 08:20:56 AM: Evaluate: task edges-rel-semeval, batch 24 (36): mcc: 0.7350, acc: 0.6068, precision: 0.8891, recall: 0.6263, f1: 0.7349, edges-rel-semeval_loss: 0.0666
09/16 08:20:57 AM: Updating LR scheduler:
09/16 08:20:57 AM: 	Best result seen so far for macro_avg: 0.719
09/16 08:20:57 AM: 	# validation passes without improvement: 2
09/16 08:20:57 AM: edges-rel-semeval_loss: training: 0.067489 validation: 0.069967
09/16 08:20:57 AM: macro_avg: validation: 0.716495
09/16 08:20:57 AM: micro_avg: validation: 0.000000
09/16 08:20:57 AM: edges-rel-semeval_mcc: training: 0.743560 validation: 0.717240
09/16 08:20:57 AM: edges-rel-semeval_acc: training: 0.611563 validation: 0.585727
09/16 08:20:57 AM: edges-rel-semeval_precision: training: 0.882152 validation: 0.878635
09/16 08:20:57 AM: edges-rel-semeval_recall: training: 0.645625 validation: 0.604874
09/16 08:20:57 AM: edges-rel-semeval_f1: training: 0.745579 validation: 0.716495
09/16 08:20:57 AM: Global learning rate: 0.0001
09/16 08:20:57 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:21:03 AM: ***** Step 1600 / Validation 16 *****
09/16 08:21:03 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:21:03 AM: Validating...
09/16 08:21:06 AM: Best result seen so far for edges-rel-semeval.
09/16 08:21:06 AM: Best result seen so far for macro.
09/16 08:21:06 AM: Updating LR scheduler:
09/16 08:21:06 AM: 	Best result seen so far for macro_avg: 0.727
09/16 08:21:06 AM: 	# validation passes without improvement: 0
09/16 08:21:06 AM: edges-rel-semeval_loss: training: 0.063408 validation: 0.070400
09/16 08:21:06 AM: macro_avg: validation: 0.726721
09/16 08:21:06 AM: micro_avg: validation: 0.000000
09/16 08:21:06 AM: edges-rel-semeval_mcc: training: 0.760384 validation: 0.724734
09/16 08:21:06 AM: edges-rel-semeval_acc: training: 0.637338 validation: 0.610096
09/16 08:21:06 AM: edges-rel-semeval_precision: training: 0.877501 validation: 0.868198
09/16 08:21:06 AM: edges-rel-semeval_recall: training: 0.677704 validation: 0.624891
09/16 08:21:06 AM: edges-rel-semeval_f1: training: 0.764769 validation: 0.726721
09/16 08:21:06 AM: Global learning rate: 0.0001
09/16 08:21:06 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:21:06 AM: Update 1607: task edges-rel-semeval, batch 7 (1607): mcc: 0.7661, acc: 0.6696, precision: 0.8667, recall: 0.6964, f1: 0.7723, edges-rel-semeval_loss: 0.0633
09/16 08:21:12 AM: ***** Step 1700 / Validation 17 *****
09/16 08:21:12 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:21:12 AM: Validating...
09/16 08:21:15 AM: Updating LR scheduler:
09/16 08:21:15 AM: 	Best result seen so far for macro_avg: 0.727
09/16 08:21:15 AM: 	# validation passes without improvement: 1
09/16 08:21:15 AM: edges-rel-semeval_loss: training: 0.064931 validation: 0.068722
09/16 08:21:15 AM: macro_avg: validation: 0.724780
09/16 08:21:15 AM: micro_avg: validation: 0.000000
09/16 08:21:15 AM: edges-rel-semeval_mcc: training: 0.748469 validation: 0.717724
09/16 08:21:15 AM: edges-rel-semeval_acc: training: 0.621875 validation: 0.604003
09/16 08:21:15 AM: edges-rel-semeval_precision: training: 0.866017 validation: 0.828667
09/16 08:21:15 AM: edges-rel-semeval_recall: training: 0.666562 validation: 0.644038
09/16 08:21:15 AM: edges-rel-semeval_f1: training: 0.753311 validation: 0.724780
09/16 08:21:15 AM: Global learning rate: 0.0001
09/16 08:21:15 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:21:16 AM: Update 1718: task edges-rel-semeval, batch 18 (1718): mcc: 0.7520, acc: 0.6319, precision: 0.8480, recall: 0.6875, f1: 0.7593, edges-rel-semeval_loss: 0.0644
09/16 08:21:23 AM: ***** Step 1800 / Validation 18 *****
09/16 08:21:23 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:21:23 AM: Validating...
09/16 08:21:26 AM: Updating LR scheduler:
09/16 08:21:26 AM: 	Best result seen so far for macro_avg: 0.727
09/16 08:21:26 AM: 	# validation passes without improvement: 2
09/16 08:21:26 AM: edges-rel-semeval_loss: training: 0.061661 validation: 0.069193
09/16 08:21:26 AM: macro_avg: validation: 0.722364
09/16 08:21:26 AM: micro_avg: validation: 0.000000
09/16 08:21:26 AM: edges-rel-semeval_mcc: training: 0.763931 validation: 0.721268
09/16 08:21:26 AM: edges-rel-semeval_acc: training: 0.644907 validation: 0.596171
09/16 08:21:26 AM: edges-rel-semeval_precision: training: 0.870275 validation: 0.871007
09/16 08:21:26 AM: edges-rel-semeval_recall: training: 0.689688 validation: 0.617058
09/16 08:21:26 AM: edges-rel-semeval_f1: training: 0.769529 validation: 0.722364
09/16 08:21:26 AM: Global learning rate: 0.0001
09/16 08:21:26 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:21:26 AM: Update 1809: task edges-rel-semeval, batch 9 (1809): mcc: 0.7597, acc: 0.6528, precision: 0.8395, recall: 0.7083, f1: 0.7684, edges-rel-semeval_loss: 0.0648
09/16 08:21:33 AM: ***** Step 1900 / Validation 19 *****
09/16 08:21:33 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:21:33 AM: Validating...
09/16 08:21:36 AM: Best result seen so far for edges-rel-semeval.
09/16 08:21:36 AM: Best result seen so far for macro.
09/16 08:21:36 AM: Updating LR scheduler:
09/16 08:21:36 AM: 	Best result seen so far for macro_avg: 0.735
09/16 08:21:36 AM: 	# validation passes without improvement: 0
09/16 08:21:36 AM: edges-rel-semeval_loss: training: 0.061466 validation: 0.067366
09/16 08:21:36 AM: macro_avg: validation: 0.734879
09/16 08:21:36 AM: micro_avg: validation: 0.000000
09/16 08:21:36 AM: edges-rel-semeval_mcc: training: 0.762495 validation: 0.732706
09/16 08:21:36 AM: edges-rel-semeval_acc: training: 0.645312 validation: 0.616188
09/16 08:21:36 AM: edges-rel-semeval_precision: training: 0.862753 validation: 0.873054
09/16 08:21:36 AM: edges-rel-semeval_recall: training: 0.693438 validation: 0.634465
09/16 08:21:36 AM: edges-rel-semeval_f1: training: 0.768884 validation: 0.734879
09/16 08:21:36 AM: Global learning rate: 0.0001
09/16 08:21:36 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:21:37 AM: Update 1911: task edges-rel-semeval, batch 11 (1911): mcc: 0.7700, acc: 0.6449, precision: 0.8893, recall: 0.6847, f1: 0.7737, edges-rel-semeval_loss: 0.0605
09/16 08:21:43 AM: ***** Step 2000 / Validation 20 *****
09/16 08:21:43 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:21:43 AM: Validating...
09/16 08:21:45 AM: Updating LR scheduler:
09/16 08:21:45 AM: 	Best result seen so far for macro_avg: 0.735
09/16 08:21:45 AM: 	# validation passes without improvement: 1
09/16 08:21:45 AM: edges-rel-semeval_loss: training: 0.059009 validation: 0.068138
09/16 08:21:45 AM: macro_avg: validation: 0.728101
09/16 08:21:45 AM: micro_avg: validation: 0.000000
09/16 08:21:45 AM: edges-rel-semeval_mcc: training: 0.775607 validation: 0.726287
09/16 08:21:45 AM: edges-rel-semeval_acc: training: 0.657206 validation: 0.603133
09/16 08:21:45 AM: edges-rel-semeval_precision: training: 0.881396 validation: 0.870460
09/16 08:21:45 AM: edges-rel-semeval_recall: training: 0.700725 validation: 0.625762
09/16 08:21:45 AM: edges-rel-semeval_f1: training: 0.780745 validation: 0.728101
09/16 08:21:45 AM: Global learning rate: 0.0001
09/16 08:21:45 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:21:47 AM: Update 2023: task edges-rel-semeval, batch 23 (2023): mcc: 0.7846, acc: 0.6671, precision: 0.8866, recall: 0.7120, f1: 0.7898, edges-rel-semeval_loss: 0.0560
09/16 08:21:51 AM: ***** Step 2100 / Validation 21 *****
09/16 08:21:51 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:21:51 AM: Validating...
09/16 08:21:54 AM: Best result seen so far for edges-rel-semeval.
09/16 08:21:54 AM: Best result seen so far for macro.
09/16 08:21:54 AM: Updating LR scheduler:
09/16 08:21:54 AM: 	Best result seen so far for macro_avg: 0.737
09/16 08:21:54 AM: 	# validation passes without improvement: 0
09/16 08:21:54 AM: edges-rel-semeval_loss: training: 0.057896 validation: 0.067183
09/16 08:21:54 AM: macro_avg: validation: 0.736997
09/16 08:21:54 AM: micro_avg: validation: 0.000000
09/16 08:21:54 AM: edges-rel-semeval_mcc: training: 0.780162 validation: 0.730903
09/16 08:21:54 AM: edges-rel-semeval_acc: training: 0.667813 validation: 0.624021
09/16 08:21:54 AM: edges-rel-semeval_precision: training: 0.879010 validation: 0.844769
09/16 08:21:54 AM: edges-rel-semeval_recall: training: 0.710625 validation: 0.653612
09/16 08:21:54 AM: edges-rel-semeval_f1: training: 0.785899 validation: 0.736997
09/16 08:21:54 AM: Global learning rate: 0.0001
09/16 08:21:54 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:21:57 AM: Update 2151: task edges-rel-semeval, batch 51 (2151): mcc: 0.7666, acc: 0.6475, precision: 0.8702, recall: 0.6943, f1: 0.7724, edges-rel-semeval_loss: 0.0603
09/16 08:22:00 AM: ***** Step 2200 / Validation 22 *****
09/16 08:22:00 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:22:00 AM: Validating...
09/16 08:22:03 AM: Best result seen so far for edges-rel-semeval.
09/16 08:22:03 AM: Best result seen so far for macro.
09/16 08:22:03 AM: Updating LR scheduler:
09/16 08:22:03 AM: 	Best result seen so far for macro_avg: 0.742
09/16 08:22:03 AM: 	# validation passes without improvement: 0
09/16 08:22:03 AM: edges-rel-semeval_loss: training: 0.057185 validation: 0.065354
09/16 08:22:03 AM: macro_avg: validation: 0.742289
09/16 08:22:03 AM: micro_avg: validation: 0.000000
09/16 08:22:03 AM: edges-rel-semeval_mcc: training: 0.783118 validation: 0.738480
09/16 08:22:03 AM: edges-rel-semeval_acc: training: 0.667928 validation: 0.624891
09/16 08:22:03 AM: edges-rel-semeval_precision: training: 0.880047 validation: 0.866434
09/16 08:22:03 AM: edges-rel-semeval_recall: training: 0.714916 validation: 0.649260
09/16 08:22:03 AM: edges-rel-semeval_f1: training: 0.788933 validation: 0.742289
09/16 08:22:03 AM: Global learning rate: 0.0001
09/16 08:22:03 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:22:07 AM: Update 2280: task edges-rel-semeval, batch 80 (2280): mcc: 0.7833, acc: 0.6684, precision: 0.8795, recall: 0.7156, f1: 0.7891, edges-rel-semeval_loss: 0.0575
09/16 08:22:08 AM: ***** Step 2300 / Validation 23 *****
09/16 08:22:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:22:08 AM: Validating...
09/16 08:22:11 AM: Best result seen so far for edges-rel-semeval.
09/16 08:22:11 AM: Best result seen so far for macro.
09/16 08:22:11 AM: Updating LR scheduler:
09/16 08:22:11 AM: 	Best result seen so far for macro_avg: 0.749
09/16 08:22:11 AM: 	# validation passes without improvement: 0
09/16 08:22:11 AM: edges-rel-semeval_loss: training: 0.057960 validation: 0.065920
09/16 08:22:11 AM: macro_avg: validation: 0.748668
09/16 08:22:11 AM: micro_avg: validation: 0.000000
09/16 08:22:11 AM: edges-rel-semeval_mcc: training: 0.780030 validation: 0.741571
09/16 08:22:11 AM: edges-rel-semeval_acc: training: 0.663438 validation: 0.635335
09/16 08:22:11 AM: edges-rel-semeval_precision: training: 0.876876 validation: 0.843886
09/16 08:22:11 AM: edges-rel-semeval_recall: training: 0.712188 validation: 0.672759
09/16 08:22:11 AM: edges-rel-semeval_f1: training: 0.785998 validation: 0.748668
09/16 08:22:11 AM: Global learning rate: 0.0001
09/16 08:22:11 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:22:17 AM: Update 2395: task edges-rel-semeval, batch 95 (2395): mcc: 0.7941, acc: 0.6825, precision: 0.8842, recall: 0.7307, f1: 0.8001, edges-rel-semeval_loss: 0.0544
09/16 08:22:17 AM: ***** Step 2400 / Validation 24 *****
09/16 08:22:18 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:22:18 AM: Validating...
09/16 08:22:20 AM: Updating LR scheduler:
09/16 08:22:20 AM: 	Best result seen so far for macro_avg: 0.749
09/16 08:22:20 AM: 	# validation passes without improvement: 1
09/16 08:22:20 AM: edges-rel-semeval_loss: training: 0.054110 validation: 0.066335
09/16 08:22:20 AM: macro_avg: validation: 0.729579
09/16 08:22:20 AM: micro_avg: validation: 0.000000
09/16 08:22:20 AM: edges-rel-semeval_mcc: training: 0.794902 validation: 0.728210
09/16 08:22:20 AM: edges-rel-semeval_acc: training: 0.683065 validation: 0.606614
09/16 08:22:20 AM: edges-rel-semeval_precision: training: 0.883606 validation: 0.874696
09/16 08:22:20 AM: edges-rel-semeval_recall: training: 0.732576 validation: 0.625762
09/16 08:22:20 AM: edges-rel-semeval_f1: training: 0.801035 validation: 0.729579
09/16 08:22:20 AM: Global learning rate: 0.0001
09/16 08:22:20 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:22:26 AM: ***** Step 2500 / Validation 25 *****
09/16 08:22:26 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:22:26 AM: Validating...
09/16 08:22:27 AM: Evaluate: task edges-rel-semeval, batch 18 (36): mcc: 0.7791, acc: 0.6788, precision: 0.8879, recall: 0.7014, f1: 0.7837, edges-rel-semeval_loss: 0.0594
09/16 08:22:28 AM: Best result seen so far for edges-rel-semeval.
09/16 08:22:28 AM: Best result seen so far for macro.
09/16 08:22:28 AM: Updating LR scheduler:
09/16 08:22:29 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:22:29 AM: 	# validation passes without improvement: 0
09/16 08:22:29 AM: edges-rel-semeval_loss: training: 0.053658 validation: 0.064954
09/16 08:22:29 AM: macro_avg: validation: 0.755424
09/16 08:22:29 AM: micro_avg: validation: 0.000000
09/16 08:22:29 AM: edges-rel-semeval_mcc: training: 0.804196 validation: 0.751076
09/16 08:22:29 AM: edges-rel-semeval_acc: training: 0.695312 validation: 0.643168
09/16 08:22:29 AM: edges-rel-semeval_precision: training: 0.893328 validation: 0.871445
09/16 08:22:29 AM: edges-rel-semeval_recall: training: 0.740625 validation: 0.666667
09/16 08:22:29 AM: edges-rel-semeval_f1: training: 0.809841 validation: 0.755424
09/16 08:22:29 AM: Global learning rate: 0.0001
09/16 08:22:29 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:22:35 AM: ***** Step 2600 / Validation 26 *****
09/16 08:22:35 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:22:35 AM: Validating...
09/16 08:22:37 AM: Evaluate: task edges-rel-semeval, batch 29 (36): mcc: 0.7728, acc: 0.6659, precision: 0.8945, recall: 0.6853, f1: 0.7761, edges-rel-semeval_loss: 0.0622
09/16 08:22:38 AM: Updating LR scheduler:
09/16 08:22:38 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:22:38 AM: 	# validation passes without improvement: 1
09/16 08:22:38 AM: edges-rel-semeval_loss: training: 0.054164 validation: 0.065544
09/16 08:22:38 AM: macro_avg: validation: 0.754717
09/16 08:22:38 AM: micro_avg: validation: 0.000000
09/16 08:22:38 AM: edges-rel-semeval_mcc: training: 0.790394 validation: 0.751342
09/16 08:22:38 AM: edges-rel-semeval_acc: training: 0.682119 validation: 0.642298
09/16 08:22:38 AM: edges-rel-semeval_precision: training: 0.881700 validation: 0.878613
09/16 08:22:38 AM: edges-rel-semeval_recall: training: 0.726269 validation: 0.661445
09/16 08:22:38 AM: edges-rel-semeval_f1: training: 0.796472 validation: 0.754717
09/16 08:22:38 AM: Global learning rate: 0.0001
09/16 08:22:38 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:22:44 AM: ***** Step 2700 / Validation 27 *****
09/16 08:22:44 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:22:44 AM: Validating...
09/16 08:22:46 AM: Updating LR scheduler:
09/16 08:22:46 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:22:46 AM: 	# validation passes without improvement: 2
09/16 08:22:46 AM: edges-rel-semeval_loss: training: 0.050537 validation: 0.065241
09/16 08:22:46 AM: macro_avg: validation: 0.740630
09/16 08:22:46 AM: micro_avg: validation: 0.000000
09/16 08:22:46 AM: edges-rel-semeval_mcc: training: 0.812960 validation: 0.737417
09/16 08:22:46 AM: edges-rel-semeval_acc: training: 0.705937 validation: 0.620540
09/16 08:22:46 AM: edges-rel-semeval_precision: training: 0.892121 validation: 0.869718
09/16 08:22:46 AM: edges-rel-semeval_recall: training: 0.757187 validation: 0.644909
09/16 08:22:46 AM: edges-rel-semeval_f1: training: 0.819135 validation: 0.740630
09/16 08:22:46 AM: Global learning rate: 0.0001
09/16 08:22:46 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:22:47 AM: Update 2718: task edges-rel-semeval, batch 18 (2718): mcc: 0.7568, acc: 0.6441, precision: 0.8417, recall: 0.7014, f1: 0.7652, edges-rel-semeval_loss: 0.0577
09/16 08:22:52 AM: ***** Step 2800 / Validation 28 *****
09/16 08:22:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:22:52 AM: Validating...
09/16 08:22:55 AM: Updating LR scheduler:
09/16 08:22:55 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:22:55 AM: 	# validation passes without improvement: 3
09/16 08:22:55 AM: edges-rel-semeval_loss: training: 0.053912 validation: 0.065660
09/16 08:22:55 AM: macro_avg: validation: 0.737359
09/16 08:22:55 AM: micro_avg: validation: 0.000000
09/16 08:22:55 AM: edges-rel-semeval_mcc: training: 0.792293 validation: 0.731352
09/16 08:22:55 AM: edges-rel-semeval_acc: training: 0.682435 validation: 0.625762
09/16 08:22:55 AM: edges-rel-semeval_precision: training: 0.876790 validation: 0.845721
09/16 08:22:55 AM: edges-rel-semeval_recall: training: 0.733838 validation: 0.653612
09/16 08:22:55 AM: edges-rel-semeval_f1: training: 0.798970 validation: 0.737359
09/16 08:22:55 AM: Global learning rate: 0.0001
09/16 08:22:55 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:22:57 AM: Update 2839: task edges-rel-semeval, batch 39 (2839): mcc: 0.8171, acc: 0.7147, precision: 0.8932, recall: 0.7636, f1: 0.8233, edges-rel-semeval_loss: 0.0474
09/16 08:23:01 AM: ***** Step 2900 / Validation 29 *****
09/16 08:23:01 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:23:01 AM: Validating...
09/16 08:23:03 AM: Updating LR scheduler:
09/16 08:23:03 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:23:03 AM: 	# validation passes without improvement: 0
09/16 08:23:03 AM: edges-rel-semeval_loss: training: 0.049336 validation: 0.065869
09/16 08:23:03 AM: macro_avg: validation: 0.750843
09/16 08:23:03 AM: micro_avg: validation: 0.000000
09/16 08:23:03 AM: edges-rel-semeval_mcc: training: 0.806382 validation: 0.743303
09/16 08:23:03 AM: edges-rel-semeval_acc: training: 0.697187 validation: 0.644038
09/16 08:23:03 AM: edges-rel-semeval_precision: training: 0.885167 validation: 0.841253
09/16 08:23:03 AM: edges-rel-semeval_recall: training: 0.751562 validation: 0.677981
09/16 08:23:03 AM: edges-rel-semeval_f1: training: 0.812912 validation: 0.750843
09/16 08:23:03 AM: Global learning rate: 5e-05
09/16 08:23:03 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:23:07 AM: Update 2965: task edges-rel-semeval, batch 65 (2965): mcc: 0.8118, acc: 0.7139, precision: 0.8849, recall: 0.7615, f1: 0.8186, edges-rel-semeval_loss: 0.0520
09/16 08:23:09 AM: ***** Step 3000 / Validation 30 *****
09/16 08:23:09 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:23:09 AM: Validating...
09/16 08:23:12 AM: Updating LR scheduler:
09/16 08:23:12 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:23:12 AM: 	# validation passes without improvement: 1
09/16 08:23:12 AM: edges-rel-semeval_loss: training: 0.051767 validation: 0.064032
09/16 08:23:12 AM: macro_avg: validation: 0.754369
09/16 08:23:12 AM: micro_avg: validation: 0.000000
09/16 08:23:12 AM: edges-rel-semeval_mcc: training: 0.807275 validation: 0.747887
09/16 08:23:12 AM: edges-rel-semeval_acc: training: 0.705000 validation: 0.638816
09/16 08:23:12 AM: edges-rel-semeval_precision: training: 0.884488 validation: 0.852909
09/16 08:23:12 AM: edges-rel-semeval_recall: training: 0.753750 validation: 0.676240
09/16 08:23:12 AM: edges-rel-semeval_f1: training: 0.813902 validation: 0.754369
09/16 08:23:12 AM: Global learning rate: 5e-05
09/16 08:23:12 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:23:17 AM: Update 3074: task edges-rel-semeval, batch 74 (3074): mcc: 0.8206, acc: 0.7187, precision: 0.8994, recall: 0.7644, f1: 0.8264, edges-rel-semeval_loss: 0.0482
09/16 08:23:19 AM: ***** Step 3100 / Validation 31 *****
09/16 08:23:19 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:23:19 AM: Validating...
09/16 08:23:22 AM: Updating LR scheduler:
09/16 08:23:22 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:23:22 AM: 	# validation passes without improvement: 2
09/16 08:23:22 AM: edges-rel-semeval_loss: training: 0.048160 validation: 0.064820
09/16 08:23:22 AM: macro_avg: validation: 0.742941
09/16 08:23:22 AM: micro_avg: validation: 0.000000
09/16 08:23:22 AM: edges-rel-semeval_mcc: training: 0.818373 validation: 0.736173
09/16 08:23:22 AM: edges-rel-semeval_acc: training: 0.719016 validation: 0.629243
09/16 08:23:22 AM: edges-rel-semeval_precision: training: 0.898103 validation: 0.843094
09/16 08:23:22 AM: edges-rel-semeval_recall: training: 0.761589 validation: 0.664056
09/16 08:23:22 AM: edges-rel-semeval_f1: training: 0.824232 validation: 0.742941
09/16 08:23:22 AM: Global learning rate: 5e-05
09/16 08:23:22 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:23:27 AM: Update 3195: task edges-rel-semeval, batch 95 (3195): mcc: 0.8216, acc: 0.7257, precision: 0.8961, recall: 0.7691, f1: 0.8278, edges-rel-semeval_loss: 0.0498
09/16 08:23:28 AM: ***** Step 3200 / Validation 32 *****
09/16 08:23:28 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:23:28 AM: Validating...
09/16 08:23:30 AM: Updating LR scheduler:
09/16 08:23:30 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:23:30 AM: 	# validation passes without improvement: 3
09/16 08:23:30 AM: edges-rel-semeval_loss: training: 0.049629 validation: 0.064427
09/16 08:23:30 AM: macro_avg: validation: 0.748532
09/16 08:23:30 AM: micro_avg: validation: 0.000000
09/16 08:23:30 AM: edges-rel-semeval_mcc: training: 0.820892 validation: 0.742711
09/16 08:23:30 AM: edges-rel-semeval_acc: training: 0.724688 validation: 0.636205
09/16 08:23:30 AM: edges-rel-semeval_precision: training: 0.895773 validation: 0.854749
09/16 08:23:30 AM: edges-rel-semeval_recall: training: 0.768125 validation: 0.665796
09/16 08:23:30 AM: edges-rel-semeval_f1: training: 0.827052 validation: 0.748532
09/16 08:23:30 AM: Global learning rate: 5e-05
09/16 08:23:30 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:23:37 AM: Update 3297: task edges-rel-semeval, batch 97 (3297): mcc: 0.8158, acc: 0.7174, precision: 0.8880, recall: 0.7659, f1: 0.8224, edges-rel-semeval_loss: 0.0468
09/16 08:23:37 AM: ***** Step 3300 / Validation 33 *****
09/16 08:23:37 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:23:37 AM: Validating...
09/16 08:23:40 AM: Updating LR scheduler:
09/16 08:23:40 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:23:40 AM: 	# validation passes without improvement: 0
09/16 08:23:40 AM: edges-rel-semeval_loss: training: 0.047060 validation: 0.064330
09/16 08:23:40 AM: macro_avg: validation: 0.752688
09/16 08:23:40 AM: micro_avg: validation: 0.000000
09/16 08:23:40 AM: edges-rel-semeval_mcc: training: 0.815564 validation: 0.746976
09/16 08:23:40 AM: edges-rel-semeval_acc: training: 0.716809 validation: 0.643168
09/16 08:23:40 AM: edges-rel-semeval_precision: training: 0.887751 validation: 0.858417
09/16 08:23:40 AM: edges-rel-semeval_recall: training: 0.765689 validation: 0.670148
09/16 08:23:40 AM: edges-rel-semeval_f1: training: 0.822215 validation: 0.752688
09/16 08:23:40 AM: Global learning rate: 2.5e-05
09/16 08:23:40 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:23:46 AM: ***** Step 3400 / Validation 34 *****
09/16 08:23:46 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:23:46 AM: Validating...
09/16 08:23:47 AM: Evaluate: task edges-rel-semeval, batch 14 (36): mcc: 0.7558, acc: 0.6473, precision: 0.8750, recall: 0.6719, f1: 0.7601, edges-rel-semeval_loss: 0.0606
09/16 08:23:49 AM: Updating LR scheduler:
09/16 08:23:49 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:23:49 AM: 	# validation passes without improvement: 1
09/16 08:23:49 AM: edges-rel-semeval_loss: training: 0.047211 validation: 0.064636
09/16 08:23:49 AM: macro_avg: validation: 0.748393
09/16 08:23:49 AM: micro_avg: validation: 0.000000
09/16 08:23:49 AM: edges-rel-semeval_mcc: training: 0.824409 validation: 0.743989
09/16 08:23:49 AM: edges-rel-semeval_acc: training: 0.726250 validation: 0.634465
09/16 08:23:49 AM: edges-rel-semeval_precision: training: 0.899708 validation: 0.866133
09/16 08:23:49 AM: edges-rel-semeval_recall: training: 0.770938 validation: 0.658834
09/16 08:23:49 AM: edges-rel-semeval_f1: training: 0.830360 validation: 0.748393
09/16 08:23:49 AM: Global learning rate: 2.5e-05
09/16 08:23:49 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:23:56 AM: ***** Step 3500 / Validation 35 *****
09/16 08:23:56 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:23:56 AM: Validating...
09/16 08:23:57 AM: Evaluate: task edges-rel-semeval, batch 21 (36): mcc: 0.7649, acc: 0.6622, precision: 0.8678, recall: 0.6935, f1: 0.7709, edges-rel-semeval_loss: 0.0591
09/16 08:23:58 AM: Updating LR scheduler:
09/16 08:23:58 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:23:58 AM: 	# validation passes without improvement: 2
09/16 08:23:58 AM: Ran out of early stopping patience. Stopping training.
09/16 08:23:58 AM: edges-rel-semeval_loss: training: 0.045704 validation: 0.064623
09/16 08:23:58 AM: macro_avg: validation: 0.744368
09/16 08:23:58 AM: micro_avg: validation: 0.000000
09/16 08:23:58 AM: edges-rel-semeval_mcc: training: 0.833390 validation: 0.738437
09/16 08:23:58 AM: edges-rel-semeval_acc: training: 0.735099 validation: 0.628372
09/16 08:23:58 AM: edges-rel-semeval_precision: training: 0.902430 validation: 0.851064
09/16 08:23:58 AM: edges-rel-semeval_recall: training: 0.784611 validation: 0.661445
09/16 08:23:58 AM: edges-rel-semeval_f1: training: 0.839406 validation: 0.744368
09/16 08:23:58 AM: Global learning rate: 2.5e-05
09/16 08:23:58 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-mix/run
09/16 08:23:58 AM: Stopped training after 35 validation checks
09/16 08:23:58 AM: Trained edges-rel-semeval for 3500 batches or 16.279 epochs
09/16 08:23:58 AM: ***** VALIDATION RESULTS *****
09/16 08:23:58 AM: edges-rel-semeval_f1 (for best val pass 25): edges-rel-semeval_loss: 0.06495, macro_avg: 0.75542, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.75108, edges-rel-semeval_acc: 0.64317, edges-rel-semeval_precision: 0.87144, edges-rel-semeval_recall: 0.66667, edges-rel-semeval_f1: 0.75542
09/16 08:23:58 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.17585, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 08:23:58 AM: macro_avg (for best val pass 25): edges-rel-semeval_loss: 0.06495, macro_avg: 0.75542, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.75108, edges-rel-semeval_acc: 0.64317, edges-rel-semeval_precision: 0.87144, edges-rel-semeval_recall: 0.66667, edges-rel-semeval_f1: 0.75542
09/16 08:23:58 AM: Evaluating...
09/16 08:23:58 AM: Loaded model state from ./experiments/rel-semeval-squad-mix/run/edges-rel-semeval/model_state_target_train_val_25.best.th
09/16 08:23:58 AM: Evaluating on: edges-rel-semeval, split: val
09/16 08:24:01 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:24:01 AM: Finished evaluating on: edges-rel-semeval
09/16 08:24:01 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 08:24:01 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-squad-mix/run
09/16 08:24:01 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-squad-mix/run
09/16 08:24:01 AM: Evaluating on: edges-rel-semeval, split: test
09/16 08:24:08 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:24:08 AM: Finished evaluating on: edges-rel-semeval
09/16 08:24:08 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 08:24:08 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-squad-mix/run
09/16 08:24:08 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-squad-mix/run
09/16 08:24:08 AM: Writing results for split 'val' to ./experiments/rel-semeval-squad-mix/results.tsv
09/16 08:24:08 AM: micro_avg: 0.000, macro_avg: 0.755, edges-rel-semeval_mcc: 0.751, edges-rel-semeval_acc: 0.643, edges-rel-semeval_precision: 0.871, edges-rel-semeval_recall: 0.667, edges-rel-semeval_f1: 0.755
09/16 08:24:08 AM: Done!
09/16 08:24:08 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
