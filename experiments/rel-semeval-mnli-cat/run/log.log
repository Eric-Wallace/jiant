09/16 07:58:13 AM: Git branch: master
09/16 07:58:13 AM: Git SHA: a6b97574b819abe0c17f2f3300d1097e5c87dbde
09/16 07:58:13 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-mnli-cat/",
  "exp_name": "experiments/rel-semeval-mnli-cat",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-mnli-cat/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/mnli",
  "pytorch_transformers_output_mode": "cat",
  "remote_log_name": "experiments/rel-semeval-mnli-cat__run",
  "run_dir": "./experiments/rel-semeval-mnli-cat/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 07:58:13 AM: Saved config to ./experiments/rel-semeval-mnli-cat/run/params.conf
09/16 07:58:13 AM: Using random seed 1234
09/16 07:58:13 AM: Using GPU 0
09/16 07:58:13 AM: Loading tasks...
09/16 07:58:13 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-mnli-cat/
09/16 07:58:13 AM: 	Creating task edges-rel-semeval from scratch.
09/16 07:58:13 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 07:58:13 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 07:58:13 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 07:58:13 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 07:58:13 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 07:58:13 AM: 	Building vocab from scratch.
09/16 07:58:13 AM: 	Counting units for task edges-rel-semeval.
09/16 07:58:13 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 07:58:14 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:58:15 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 07:58:15 AM: 	Saved vocab to ./experiments/rel-semeval-mnli-cat/vocab
09/16 07:58:15 AM: Loading token dictionary from ./experiments/rel-semeval-mnli-cat/vocab.
09/16 07:58:15 AM: 	Loaded vocab from ./experiments/rel-semeval-mnli-cat/vocab
09/16 07:58:15 AM: 	Vocab namespace bert_uncased: size 30524
09/16 07:58:15 AM: 	Vocab namespace tokens: size 16020
09/16 07:58:15 AM: 	Vocab namespace chars: size 59
09/16 07:58:15 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 07:58:15 AM: 	Finished building vocab.
09/16 07:58:15 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 07:58:15 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-mnli-cat/preproc/edges-rel-semeval__train_data
09/16 07:58:15 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 07:58:16 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-mnli-cat/preproc/edges-rel-semeval__val_data
09/16 07:58:16 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 07:58:16 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-mnli-cat/preproc/edges-rel-semeval__test_data
09/16 07:58:16 AM: 	Finished indexing tasks
09/16 07:58:16 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 07:58:16 AM: 	  Training on 
09/16 07:58:16 AM: 	  Evaluating on edges-rel-semeval
09/16 07:58:16 AM: 	Finished loading tasks in 2.717s
09/16 07:58:16 AM: 	 Tasks: ['edges-rel-semeval']
09/16 07:58:16 AM: Building model...
09/16 07:58:16 AM: Using BERT model (bert-base-uncased).
09/16 07:58:16 AM: LOADING A FUNETUNED MODEL from: 
09/16 07:58:16 AM: models/mnli
09/16 07:58:16 AM: loading configuration file models/mnli/config.json
09/16 07:58:16 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "mnli",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 3,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 07:58:16 AM: loading weights file models/mnli/pytorch_model.bin
09/16 07:58:19 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmp7w424uvo
09/16 07:58:21 AM: copying /tmp/tmp7w424uvo to cache at ./experiments/rel-semeval-mnli-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:58:21 AM: creating metadata file for ./experiments/rel-semeval-mnli-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:58:21 AM: removing temp file /tmp/tmp7w424uvo
09/16 07:58:21 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-mnli-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:58:21 AM: Initializing parameters
09/16 07:58:21 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 07:58:21 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 07:58:21 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 07:58:21 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 07:58:21 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 07:58:21 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 07:58:21 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 07:58:26 AM: Model specification:
09/16 07:58:26 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 07:58:26 AM: Model parameters:
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:26 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:26 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 07:58:26 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:58:26 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 07:58:26 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:58:26 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 07:58:26 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:58:26 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 07:58:26 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:58:26 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 07:58:26 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 07:58:26 AM: Total number of parameters: 110536979 (1.10537e+08)
09/16 07:58:26 AM: Number of trainable parameters: 1054739 (1.05474e+06)
09/16 07:58:26 AM: Finished building model in 9.765s
09/16 07:58:26 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 07:58:26 AM: patience = 9
09/16 07:58:26 AM: val_interval = 100
09/16 07:58:26 AM: max_vals = 100
09/16 07:58:26 AM: cuda_device = 0
09/16 07:58:26 AM: grad_norm = 5.0
09/16 07:58:26 AM: grad_clipping = None
09/16 07:58:26 AM: lr_decay = 0.99
09/16 07:58:26 AM: min_lr = 1e-06
09/16 07:58:26 AM: keep_all_checkpoints = 0
09/16 07:58:26 AM: val_data_limit = 5000
09/16 07:58:26 AM: max_epochs = -1
09/16 07:58:26 AM: dec_val_scale = 250
09/16 07:58:26 AM: training_data_fraction = 1
09/16 07:58:26 AM: type = adam
09/16 07:58:26 AM: parameter_groups = None
09/16 07:58:26 AM: Number of trainable parameters: 1054739
09/16 07:58:26 AM: infer_type_and_cast = True
09/16 07:58:26 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:58:26 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:58:26 AM: lr = 0.0001
09/16 07:58:26 AM: amsgrad = True
09/16 07:58:26 AM: type = reduce_on_plateau
09/16 07:58:26 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:58:26 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:58:26 AM: mode = max
09/16 07:58:26 AM: factor = 0.5
09/16 07:58:26 AM: patience = 3
09/16 07:58:26 AM: threshold = 0.0001
09/16 07:58:26 AM: threshold_mode = abs
09/16 07:58:26 AM: verbose = True
09/16 07:58:26 AM: type = adam
09/16 07:58:26 AM: parameter_groups = None
09/16 07:58:26 AM: Number of trainable parameters: 1054739
09/16 07:58:26 AM: infer_type_and_cast = True
09/16 07:58:26 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:58:26 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:58:26 AM: lr = 0.0001
09/16 07:58:26 AM: amsgrad = True
09/16 07:58:26 AM: type = reduce_on_plateau
09/16 07:58:26 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:58:26 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:58:26 AM: mode = max
09/16 07:58:26 AM: factor = 0.5
09/16 07:58:26 AM: patience = 3
09/16 07:58:26 AM: threshold = 0.0001
09/16 07:58:26 AM: threshold_mode = abs
09/16 07:58:26 AM: verbose = True
09/16 07:58:26 AM: Starting training without restoring from a checkpoint.
09/16 07:58:26 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 07:58:26 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 07:58:31 AM: ***** Step 100 / Validation 1 *****
09/16 07:58:31 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:31 AM: Validating...
09/16 07:58:34 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:34 AM: Best result seen so far for micro.
09/16 07:58:34 AM: Best result seen so far for macro.
09/16 07:58:34 AM: Updating LR scheduler:
09/16 07:58:34 AM: 	Best result seen so far for macro_avg: 0.000
09/16 07:58:34 AM: 	# validation passes without improvement: 0
09/16 07:58:34 AM: edges-rel-semeval_loss: training: 0.245280 validation: 0.178706
09/16 07:58:34 AM: macro_avg: validation: 0.000000
09/16 07:58:34 AM: micro_avg: validation: 0.000000
09/16 07:58:34 AM: edges-rel-semeval_mcc: training: 0.009676 validation: 0.000000
09/16 07:58:34 AM: edges-rel-semeval_acc: training: 0.002523 validation: 0.000000
09/16 07:58:34 AM: edges-rel-semeval_precision: training: 0.068045 validation: 0.000000
09/16 07:58:34 AM: edges-rel-semeval_recall: training: 0.024913 validation: 0.000000
09/16 07:58:34 AM: edges-rel-semeval_f1: training: 0.036473 validation: 0.000000
09/16 07:58:34 AM: Global learning rate: 0.0001
09/16 07:58:34 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 07:58:36 AM: Update 163: task edges-rel-semeval, batch 63 (163): mcc: 0.0816, acc: 0.0084, precision: 0.8500, recall: 0.0084, f1: 0.0167, edges-rel-semeval_loss: 0.1770
09/16 07:58:38 AM: ***** Step 200 / Validation 2 *****
09/16 07:58:38 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:38 AM: Validating...
09/16 07:58:40 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:40 AM: Best result seen so far for macro.
09/16 07:58:40 AM: Updating LR scheduler:
09/16 07:58:40 AM: 	Best result seen so far for macro_avg: 0.105
09/16 07:58:40 AM: 	# validation passes without improvement: 0
09/16 07:58:40 AM: edges-rel-semeval_loss: training: 0.171929 validation: 0.148702
09/16 07:58:40 AM: macro_avg: validation: 0.104661
09/16 07:58:40 AM: micro_avg: validation: 0.000000
09/16 07:58:40 AM: edges-rel-semeval_mcc: training: 0.120909 validation: 0.212136
09/16 07:58:40 AM: edges-rel-semeval_acc: training: 0.019375 validation: 0.055701
09/16 07:58:40 AM: edges-rel-semeval_precision: training: 0.815789 validation: 0.864865
09/16 07:58:40 AM: edges-rel-semeval_recall: training: 0.019375 validation: 0.055701
09/16 07:58:40 AM: edges-rel-semeval_f1: training: 0.037851 validation: 0.104661
09/16 07:58:40 AM: Global learning rate: 0.0001
09/16 07:58:40 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 07:58:45 AM: ***** Step 300 / Validation 3 *****
09/16 07:58:45 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:45 AM: Validating...
09/16 07:58:46 AM: Evaluate: task edges-rel-semeval, batch 16 (36): mcc: 0.4205, acc: 0.2070, precision: 0.8790, recall: 0.2129, f1: 0.3428, edges-rel-semeval_loss: 0.1225
09/16 07:58:48 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:48 AM: Best result seen so far for macro.
09/16 07:58:48 AM: Updating LR scheduler:
09/16 07:58:48 AM: 	Best result seen so far for macro_avg: 0.292
09/16 07:58:48 AM: 	# validation passes without improvement: 0
09/16 07:58:48 AM: edges-rel-semeval_loss: training: 0.143230 validation: 0.125817
09/16 07:58:48 AM: macro_avg: validation: 0.291908
09/16 07:58:48 AM: micro_avg: validation: 0.000000
09/16 07:58:48 AM: edges-rel-semeval_mcc: training: 0.325249 validation: 0.376971
09/16 07:58:48 AM: edges-rel-semeval_acc: training: 0.132766 validation: 0.173194
09/16 07:58:48 AM: edges-rel-semeval_precision: training: 0.829502 validation: 0.859574
09/16 07:58:48 AM: edges-rel-semeval_recall: training: 0.136550 validation: 0.175805
09/16 07:58:48 AM: edges-rel-semeval_f1: training: 0.234498 validation: 0.291908
09/16 07:58:48 AM: Global learning rate: 0.0001
09/16 07:58:48 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 07:58:52 AM: ***** Step 400 / Validation 4 *****
09/16 07:58:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:52 AM: Validating...
09/16 07:58:54 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:54 AM: Best result seen so far for macro.
09/16 07:58:54 AM: Updating LR scheduler:
09/16 07:58:54 AM: 	Best result seen so far for macro_avg: 0.427
09/16 07:58:54 AM: 	# validation passes without improvement: 0
09/16 07:58:54 AM: edges-rel-semeval_loss: training: 0.123474 validation: 0.111440
09/16 07:58:54 AM: macro_avg: validation: 0.426578
09/16 07:58:54 AM: micro_avg: validation: 0.000000
09/16 07:58:54 AM: edges-rel-semeval_mcc: training: 0.456627 validation: 0.489566
09/16 07:58:54 AM: edges-rel-semeval_acc: training: 0.255312 validation: 0.275892
09/16 07:58:54 AM: edges-rel-semeval_precision: training: 0.840319 validation: 0.901685
09/16 07:58:54 AM: edges-rel-semeval_recall: training: 0.263125 validation: 0.279373
09/16 07:58:54 AM: edges-rel-semeval_f1: training: 0.400762 validation: 0.426578
09/16 07:58:54 AM: Global learning rate: 0.0001
09/16 07:58:54 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 07:58:56 AM: Update 439: task edges-rel-semeval, batch 39 (439): mcc: 0.4830, acc: 0.2871, precision: 0.8258, recall: 0.2994, f1: 0.4395, edges-rel-semeval_loss: 0.1159
09/16 07:58:59 AM: ***** Step 500 / Validation 5 *****
09/16 07:58:59 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:59 AM: Validating...
09/16 07:59:02 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:02 AM: Best result seen so far for macro.
09/16 07:59:02 AM: Updating LR scheduler:
09/16 07:59:02 AM: 	Best result seen so far for macro_avg: 0.514
09/16 07:59:02 AM: 	# validation passes without improvement: 0
09/16 07:59:02 AM: edges-rel-semeval_loss: training: 0.110086 validation: 0.101885
09/16 07:59:02 AM: macro_avg: validation: 0.513580
09/16 07:59:02 AM: micro_avg: validation: 0.000000
09/16 07:59:02 AM: edges-rel-semeval_mcc: training: 0.533187 validation: 0.552353
09/16 07:59:02 AM: edges-rel-semeval_acc: training: 0.335856 validation: 0.357702
09/16 07:59:02 AM: edges-rel-semeval_precision: training: 0.856260 validation: 0.883227
09/16 07:59:02 AM: edges-rel-semeval_recall: training: 0.349417 validation: 0.362054
09/16 07:59:02 AM: edges-rel-semeval_f1: training: 0.496305 validation: 0.513580
09/16 07:59:02 AM: Global learning rate: 0.0001
09/16 07:59:02 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 07:59:06 AM: ***** Step 600 / Validation 6 *****
09/16 07:59:06 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:06 AM: Validating...
09/16 07:59:06 AM: Evaluate: task edges-rel-semeval, batch 9 (36): mcc: 0.6271, acc: 0.4583, precision: 0.8867, recall: 0.4618, f1: 0.6073, edges-rel-semeval_loss: 0.0904
09/16 07:59:08 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:08 AM: Best result seen so far for macro.
09/16 07:59:08 AM: Updating LR scheduler:
09/16 07:59:08 AM: 	Best result seen so far for macro_avg: 0.579
09/16 07:59:08 AM: 	# validation passes without improvement: 0
09/16 07:59:08 AM: edges-rel-semeval_loss: training: 0.099340 validation: 0.094535
09/16 07:59:08 AM: macro_avg: validation: 0.578947
09/16 07:59:08 AM: micro_avg: validation: 0.000000
09/16 07:59:08 AM: edges-rel-semeval_mcc: training: 0.594363 validation: 0.603458
09/16 07:59:08 AM: edges-rel-semeval_acc: training: 0.414375 validation: 0.423847
09/16 07:59:08 AM: edges-rel-semeval_precision: training: 0.860451 validation: 0.882353
09/16 07:59:08 AM: edges-rel-semeval_recall: training: 0.429688 validation: 0.430809
09/16 07:59:08 AM: edges-rel-semeval_f1: training: 0.573155 validation: 0.578947
09/16 07:59:08 AM: Global learning rate: 0.0001
09/16 07:59:08 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 07:59:13 AM: ***** Step 700 / Validation 7 *****
09/16 07:59:13 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:13 AM: Validating...
09/16 07:59:15 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:15 AM: Best result seen so far for macro.
09/16 07:59:15 AM: Updating LR scheduler:
09/16 07:59:15 AM: 	Best result seen so far for macro_avg: 0.610
09/16 07:59:15 AM: 	# validation passes without improvement: 0
09/16 07:59:15 AM: edges-rel-semeval_loss: training: 0.091076 validation: 0.089878
09/16 07:59:15 AM: macro_avg: validation: 0.609729
09/16 07:59:15 AM: micro_avg: validation: 0.000000
09/16 07:59:15 AM: edges-rel-semeval_mcc: training: 0.636556 validation: 0.625883
09/16 07:59:15 AM: edges-rel-semeval_acc: training: 0.467045 validation: 0.457789
09/16 07:59:15 AM: edges-rel-semeval_precision: training: 0.866106 validation: 0.870759
09/16 07:59:15 AM: edges-rel-semeval_recall: training: 0.487543 validation: 0.469104
09/16 07:59:15 AM: edges-rel-semeval_f1: training: 0.623890 validation: 0.609729
09/16 07:59:15 AM: Global learning rate: 0.0001
09/16 07:59:15 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 07:59:17 AM: Update 726: task edges-rel-semeval, batch 26 (726): mcc: 0.6737, acc: 0.5168, precision: 0.8676, recall: 0.5433, f1: 0.6681, edges-rel-semeval_loss: 0.0847
09/16 07:59:20 AM: ***** Step 800 / Validation 8 *****
09/16 07:59:20 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:20 AM: Validating...
09/16 07:59:22 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:22 AM: Best result seen so far for macro.
09/16 07:59:22 AM: Updating LR scheduler:
09/16 07:59:22 AM: 	Best result seen so far for macro_avg: 0.632
09/16 07:59:22 AM: 	# validation passes without improvement: 0
09/16 07:59:22 AM: edges-rel-semeval_loss: training: 0.084834 validation: 0.086092
09/16 07:59:22 AM: macro_avg: validation: 0.632107
09/16 07:59:22 AM: micro_avg: validation: 0.000000
09/16 07:59:22 AM: edges-rel-semeval_mcc: training: 0.665870 validation: 0.645778
09/16 07:59:22 AM: edges-rel-semeval_acc: training: 0.508125 validation: 0.484769
09/16 07:59:22 AM: edges-rel-semeval_precision: training: 0.858213 validation: 0.879070
09/16 07:59:22 AM: edges-rel-semeval_recall: training: 0.537188 validation: 0.493473
09/16 07:59:22 AM: edges-rel-semeval_f1: training: 0.660773 validation: 0.632107
09/16 07:59:22 AM: Global learning rate: 0.0001
09/16 07:59:22 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 07:59:27 AM: Update 892: task edges-rel-semeval, batch 92 (892): mcc: 0.6846, acc: 0.5304, precision: 0.8673, recall: 0.5605, f1: 0.6810, edges-rel-semeval_loss: 0.0802
09/16 07:59:27 AM: ***** Step 900 / Validation 9 *****
09/16 07:59:27 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:27 AM: Validating...
09/16 07:59:29 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:29 AM: Best result seen so far for macro.
09/16 07:59:29 AM: Updating LR scheduler:
09/16 07:59:29 AM: 	Best result seen so far for macro_avg: 0.669
09/16 07:59:29 AM: 	# validation passes without improvement: 0
09/16 07:59:29 AM: edges-rel-semeval_loss: training: 0.079993 validation: 0.082902
09/16 07:59:29 AM: macro_avg: validation: 0.669122
09/16 07:59:29 AM: micro_avg: validation: 0.000000
09/16 07:59:29 AM: edges-rel-semeval_mcc: training: 0.687698 validation: 0.670867
09/16 07:59:29 AM: edges-rel-semeval_acc: training: 0.534216 validation: 0.530026
09/16 07:59:29 AM: edges-rel-semeval_precision: training: 0.870010 validation: 0.845745
09/16 07:59:29 AM: edges-rel-semeval_recall: training: 0.563545 validation: 0.553525
09/16 07:59:29 AM: edges-rel-semeval_f1: training: 0.684019 validation: 0.669122
09/16 07:59:29 AM: Global learning rate: 0.0001
09/16 07:59:29 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 07:59:33 AM: ***** Step 1000 / Validation 10 *****
09/16 07:59:33 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:33 AM: Validating...
09/16 07:59:36 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:36 AM: Best result seen so far for macro.
09/16 07:59:36 AM: Updating LR scheduler:
09/16 07:59:36 AM: 	Best result seen so far for macro_avg: 0.675
09/16 07:59:36 AM: 	# validation passes without improvement: 0
09/16 07:59:36 AM: edges-rel-semeval_loss: training: 0.072921 validation: 0.081164
09/16 07:59:36 AM: macro_avg: validation: 0.675420
09/16 07:59:36 AM: micro_avg: validation: 0.000000
09/16 07:59:36 AM: edges-rel-semeval_mcc: training: 0.732493 validation: 0.677262
09/16 07:59:36 AM: edges-rel-semeval_acc: training: 0.591875 validation: 0.542211
09/16 07:59:36 AM: edges-rel-semeval_precision: training: 0.883936 validation: 0.851656
09/16 07:59:36 AM: edges-rel-semeval_recall: training: 0.625938 validation: 0.559617
09/16 07:59:36 AM: edges-rel-semeval_f1: training: 0.732894 validation: 0.675420
09/16 07:59:36 AM: Global learning rate: 0.0001
09/16 07:59:36 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 07:59:37 AM: Update 1018: task edges-rel-semeval, batch 18 (1018): mcc: 0.7124, acc: 0.5816, precision: 0.8480, recall: 0.6198, f1: 0.7161, edges-rel-semeval_loss: 0.0741
09/16 07:59:41 AM: ***** Step 1100 / Validation 11 *****
09/16 07:59:41 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:41 AM: Validating...
09/16 07:59:43 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:43 AM: Best result seen so far for macro.
09/16 07:59:43 AM: Updating LR scheduler:
09/16 07:59:43 AM: 	Best result seen so far for macro_avg: 0.679
09/16 07:59:43 AM: 	# validation passes without improvement: 0
09/16 07:59:43 AM: edges-rel-semeval_loss: training: 0.071573 validation: 0.079921
09/16 07:59:43 AM: macro_avg: validation: 0.679385
09/16 07:59:43 AM: micro_avg: validation: 0.000000
09/16 07:59:43 AM: edges-rel-semeval_mcc: training: 0.733543 validation: 0.683487
09/16 07:59:43 AM: edges-rel-semeval_acc: training: 0.601072 validation: 0.538729
09/16 07:59:43 AM: edges-rel-semeval_precision: training: 0.878177 validation: 0.868564
09/16 07:59:43 AM: edges-rel-semeval_recall: training: 0.631977 validation: 0.557876
09/16 07:59:43 AM: edges-rel-semeval_f1: training: 0.735008 validation: 0.679385
09/16 07:59:43 AM: Global learning rate: 0.0001
09/16 07:59:43 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 07:59:47 AM: Update 1186: task edges-rel-semeval, batch 86 (1186): mcc: 0.7577, acc: 0.6315, precision: 0.8841, recall: 0.6679, f1: 0.7609, edges-rel-semeval_loss: 0.0668
09/16 07:59:47 AM: ***** Step 1200 / Validation 12 *****
09/16 07:59:47 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:47 AM: Validating...
09/16 07:59:49 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:49 AM: Best result seen so far for macro.
09/16 07:59:49 AM: Updating LR scheduler:
09/16 07:59:49 AM: 	Best result seen so far for macro_avg: 0.682
09/16 07:59:49 AM: 	# validation passes without improvement: 0
09/16 07:59:49 AM: edges-rel-semeval_loss: training: 0.066609 validation: 0.078236
09/16 07:59:49 AM: macro_avg: validation: 0.681723
09/16 07:59:49 AM: micro_avg: validation: 0.000000
09/16 07:59:49 AM: edges-rel-semeval_mcc: training: 0.757001 validation: 0.683998
09/16 07:59:49 AM: edges-rel-semeval_acc: training: 0.630313 validation: 0.546562
09/16 07:59:49 AM: edges-rel-semeval_precision: training: 0.882693 validation: 0.859603
09/16 07:59:49 AM: edges-rel-semeval_recall: training: 0.667813 validation: 0.564839
09/16 07:59:49 AM: edges-rel-semeval_f1: training: 0.760363 validation: 0.681723
09/16 07:59:49 AM: Global learning rate: 0.0001
09/16 07:59:49 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 07:59:54 AM: ***** Step 1300 / Validation 13 *****
09/16 07:59:54 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:54 AM: Validating...
09/16 07:59:57 AM: Evaluate: task edges-rel-semeval, batch 35 (36): mcc: 0.6978, acc: 0.5643, precision: 0.8639, recall: 0.5839, f1: 0.6969, edges-rel-semeval_loss: 0.0756
09/16 07:59:57 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:57 AM: Best result seen so far for macro.
09/16 07:59:57 AM: Updating LR scheduler:
09/16 07:59:57 AM: 	Best result seen so far for macro_avg: 0.690
09/16 07:59:57 AM: 	# validation passes without improvement: 0
09/16 07:59:57 AM: edges-rel-semeval_loss: training: 0.064839 validation: 0.076895
09/16 07:59:57 AM: macro_avg: validation: 0.689943
09/16 07:59:57 AM: micro_avg: validation: 0.000000
09/16 07:59:57 AM: edges-rel-semeval_mcc: training: 0.750674 validation: 0.691123
09/16 07:59:57 AM: edges-rel-semeval_acc: training: 0.617155 validation: 0.557006
09/16 07:59:57 AM: edges-rel-semeval_precision: training: 0.870981 validation: 0.859740
09/16 07:59:57 AM: edges-rel-semeval_recall: training: 0.666351 validation: 0.576153
09/16 07:59:57 AM: edges-rel-semeval_f1: training: 0.755047 validation: 0.689943
09/16 07:59:57 AM: Global learning rate: 0.0001
09/16 07:59:57 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:00:01 AM: ***** Step 1400 / Validation 14 *****
09/16 08:00:01 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:01 AM: Validating...
09/16 08:00:03 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:03 AM: Best result seen so far for macro.
09/16 08:00:03 AM: Updating LR scheduler:
09/16 08:00:03 AM: 	Best result seen so far for macro_avg: 0.695
09/16 08:00:03 AM: 	# validation passes without improvement: 0
09/16 08:00:03 AM: edges-rel-semeval_loss: training: 0.060445 validation: 0.075827
09/16 08:00:03 AM: macro_avg: validation: 0.694898
09/16 08:00:03 AM: micro_avg: validation: 0.000000
09/16 08:00:03 AM: edges-rel-semeval_mcc: training: 0.789730 validation: 0.692351
09/16 08:00:03 AM: edges-rel-semeval_acc: training: 0.668125 validation: 0.569191
09/16 08:00:03 AM: edges-rel-semeval_precision: training: 0.906350 validation: 0.839704
09/16 08:00:03 AM: edges-rel-semeval_recall: training: 0.704687 validation: 0.592689
09/16 08:00:03 AM: edges-rel-semeval_f1: training: 0.792897 validation: 0.694898
09/16 08:00:03 AM: Global learning rate: 0.0001
09/16 08:00:03 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:00:07 AM: Update 1478: task edges-rel-semeval, batch 78 (1478): mcc: 0.7779, acc: 0.6534, precision: 0.8897, recall: 0.6979, f1: 0.7822, edges-rel-semeval_loss: 0.0597
09/16 08:00:08 AM: ***** Step 1500 / Validation 15 *****
09/16 08:00:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:08 AM: Validating...
09/16 08:00:10 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:10 AM: Best result seen so far for macro.
09/16 08:00:10 AM: Updating LR scheduler:
09/16 08:00:10 AM: 	Best result seen so far for macro_avg: 0.697
09/16 08:00:10 AM: 	# validation passes without improvement: 0
09/16 08:00:10 AM: edges-rel-semeval_loss: training: 0.060051 validation: 0.075350
09/16 08:00:10 AM: macro_avg: validation: 0.697001
09/16 08:00:10 AM: micro_avg: validation: 0.000000
09/16 08:00:10 AM: edges-rel-semeval_mcc: training: 0.775237 validation: 0.697083
09/16 08:00:10 AM: edges-rel-semeval_acc: training: 0.653125 validation: 0.566580
09/16 08:00:10 AM: edges-rel-semeval_precision: training: 0.883399 validation: 0.858599
09/16 08:00:10 AM: edges-rel-semeval_recall: training: 0.698438 validation: 0.586597
09/16 08:00:10 AM: edges-rel-semeval_f1: training: 0.780105 validation: 0.697001
09/16 08:00:10 AM: Global learning rate: 0.0001
09/16 08:00:10 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:00:15 AM: ***** Step 1600 / Validation 16 *****
09/16 08:00:15 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:15 AM: Validating...
09/16 08:00:17 AM: Evaluate: task edges-rel-semeval, batch 32 (36): mcc: 0.7269, acc: 0.6162, precision: 0.8464, recall: 0.6455, f1: 0.7324, edges-rel-semeval_loss: 0.0717
09/16 08:00:17 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:17 AM: Best result seen so far for macro.
09/16 08:00:17 AM: Updating LR scheduler:
09/16 08:00:17 AM: 	Best result seen so far for macro_avg: 0.710
09/16 08:00:17 AM: 	# validation passes without improvement: 0
09/16 08:00:17 AM: edges-rel-semeval_loss: training: 0.054420 validation: 0.076415
09/16 08:00:17 AM: macro_avg: validation: 0.710159
09/16 08:00:17 AM: micro_avg: validation: 0.000000
09/16 08:00:17 AM: edges-rel-semeval_mcc: training: 0.810727 validation: 0.704596
09/16 08:00:17 AM: edges-rel-semeval_acc: training: 0.703564 validation: 0.590949
09/16 08:00:17 AM: edges-rel-semeval_precision: training: 0.902178 validation: 0.830035
09/16 08:00:17 AM: edges-rel-semeval_recall: training: 0.744560 validation: 0.620540
09/16 08:00:17 AM: edges-rel-semeval_f1: training: 0.815826 validation: 0.710159
09/16 08:00:17 AM: Global learning rate: 0.0001
09/16 08:00:17 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:00:21 AM: ***** Step 1700 / Validation 17 *****
09/16 08:00:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:21 AM: Validating...
09/16 08:00:23 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:23 AM: Best result seen so far for macro.
09/16 08:00:23 AM: Updating LR scheduler:
09/16 08:00:23 AM: 	Best result seen so far for macro_avg: 0.713
09/16 08:00:23 AM: 	# validation passes without improvement: 0
09/16 08:00:23 AM: edges-rel-semeval_loss: training: 0.055423 validation: 0.074780
09/16 08:00:23 AM: macro_avg: validation: 0.713497
09/16 08:00:23 AM: micro_avg: validation: 0.000000
09/16 08:00:23 AM: edges-rel-semeval_mcc: training: 0.795724 validation: 0.709288
09/16 08:00:23 AM: edges-rel-semeval_acc: training: 0.685625 validation: 0.589208
09/16 08:00:23 AM: edges-rel-semeval_precision: training: 0.891271 validation: 0.842417
09/16 08:00:23 AM: edges-rel-semeval_recall: training: 0.727500 validation: 0.618799
09/16 08:00:23 AM: edges-rel-semeval_f1: training: 0.801101 validation: 0.713497
09/16 08:00:23 AM: Global learning rate: 0.0001
09/16 08:00:23 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:00:27 AM: Update 1763: task edges-rel-semeval, batch 63 (1763): mcc: 0.8101, acc: 0.7006, precision: 0.8988, recall: 0.7464, f1: 0.8155, edges-rel-semeval_loss: 0.0513
09/16 08:00:28 AM: ***** Step 1800 / Validation 18 *****
09/16 08:00:28 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:28 AM: Validating...
09/16 08:00:31 AM: Updating LR scheduler:
09/16 08:00:31 AM: 	Best result seen so far for macro_avg: 0.713
09/16 08:00:31 AM: 	# validation passes without improvement: 1
09/16 08:00:31 AM: edges-rel-semeval_loss: training: 0.050993 validation: 0.075499
09/16 08:00:31 AM: macro_avg: validation: 0.704154
09/16 08:00:31 AM: micro_avg: validation: 0.000000
09/16 08:00:31 AM: edges-rel-semeval_mcc: training: 0.815761 validation: 0.700948
09/16 08:00:31 AM: edges-rel-semeval_acc: training: 0.707663 validation: 0.583116
09/16 08:00:31 AM: edges-rel-semeval_precision: training: 0.904058 validation: 0.842424
09/16 08:00:31 AM: edges-rel-semeval_recall: training: 0.751813 validation: 0.604874
09/16 08:00:31 AM: edges-rel-semeval_f1: training: 0.820937 validation: 0.704154
09/16 08:00:31 AM: Global learning rate: 0.0001
09/16 08:00:31 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:00:35 AM: ***** Step 1900 / Validation 19 *****
09/16 08:00:35 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:35 AM: Validating...
09/16 08:00:37 AM: Evaluate: task edges-rel-semeval, batch 32 (36): mcc: 0.7392, acc: 0.6338, precision: 0.8555, recall: 0.6592, f1: 0.7446, edges-rel-semeval_loss: 0.0698
09/16 08:00:37 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:37 AM: Best result seen so far for macro.
09/16 08:00:37 AM: Updating LR scheduler:
09/16 08:00:37 AM: 	Best result seen so far for macro_avg: 0.722
09/16 08:00:37 AM: 	# validation passes without improvement: 0
09/16 08:00:37 AM: edges-rel-semeval_loss: training: 0.050755 validation: 0.074014
09/16 08:00:37 AM: macro_avg: validation: 0.722057
09/16 08:00:37 AM: micro_avg: validation: 0.000000
09/16 08:00:37 AM: edges-rel-semeval_mcc: training: 0.820773 validation: 0.716184
09/16 08:00:37 AM: edges-rel-semeval_acc: training: 0.712187 validation: 0.607485
09/16 08:00:37 AM: edges-rel-semeval_precision: training: 0.900516 validation: 0.836197
09/16 08:00:37 AM: edges-rel-semeval_recall: training: 0.763750 validation: 0.635335
09/16 08:00:37 AM: edges-rel-semeval_f1: training: 0.826513 validation: 0.722057
09/16 08:00:37 AM: Global learning rate: 0.0001
09/16 08:00:37 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:00:42 AM: ***** Step 2000 / Validation 20 *****
09/16 08:00:42 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:42 AM: Validating...
09/16 08:00:45 AM: Updating LR scheduler:
09/16 08:00:45 AM: 	Best result seen so far for macro_avg: 0.722
09/16 08:00:45 AM: 	# validation passes without improvement: 1
09/16 08:00:45 AM: edges-rel-semeval_loss: training: 0.047234 validation: 0.073740
09/16 08:00:45 AM: macro_avg: validation: 0.718765
09/16 08:00:45 AM: micro_avg: validation: 0.000000
09/16 08:00:45 AM: edges-rel-semeval_mcc: training: 0.833267 validation: 0.713639
09/16 08:00:45 AM: edges-rel-semeval_acc: training: 0.733838 validation: 0.600522
09/16 08:00:45 AM: edges-rel-semeval_precision: training: 0.909661 validation: 0.839535
09/16 08:00:45 AM: edges-rel-semeval_recall: training: 0.777988 validation: 0.628372
09/16 08:00:45 AM: edges-rel-semeval_f1: training: 0.838688 validation: 0.718765
09/16 08:00:45 AM: Global learning rate: 0.0001
09/16 08:00:45 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:00:47 AM: Update 2049: task edges-rel-semeval, batch 49 (2049): mcc: 0.8499, acc: 0.7615, precision: 0.9231, recall: 0.7959, f1: 0.8548, edges-rel-semeval_loss: 0.0446
09/16 08:00:49 AM: ***** Step 2100 / Validation 21 *****
09/16 08:00:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:49 AM: Validating...
09/16 08:00:51 AM: Updating LR scheduler:
09/16 08:00:51 AM: 	Best result seen so far for macro_avg: 0.722
09/16 08:00:51 AM: 	# validation passes without improvement: 2
09/16 08:00:51 AM: edges-rel-semeval_loss: training: 0.045935 validation: 0.074883
09/16 08:00:51 AM: macro_avg: validation: 0.703573
09/16 08:00:51 AM: micro_avg: validation: 0.000000
09/16 08:00:51 AM: edges-rel-semeval_mcc: training: 0.841566 validation: 0.699245
09/16 08:00:51 AM: edges-rel-semeval_acc: training: 0.746563 validation: 0.583116
09/16 08:00:51 AM: edges-rel-semeval_precision: training: 0.913562 validation: 0.834129
09/16 08:00:51 AM: edges-rel-semeval_recall: training: 0.789375 validation: 0.608355
09/16 08:00:51 AM: edges-rel-semeval_f1: training: 0.846941 validation: 0.703573
09/16 08:00:51 AM: Global learning rate: 0.0001
09/16 08:00:51 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:00:56 AM: ***** Step 2200 / Validation 22 *****
09/16 08:00:56 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:56 AM: Validating...
09/16 08:00:57 AM: Evaluate: task edges-rel-semeval, batch 13 (36): mcc: 0.7364, acc: 0.6346, precision: 0.8531, recall: 0.6562, f1: 0.7418, edges-rel-semeval_loss: 0.0693
09/16 08:00:58 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:58 AM: Best result seen so far for macro.
09/16 08:00:58 AM: Updating LR scheduler:
09/16 08:00:58 AM: 	Best result seen so far for macro_avg: 0.725
09/16 08:00:58 AM: 	# validation passes without improvement: 0
09/16 08:00:58 AM: edges-rel-semeval_loss: training: 0.046582 validation: 0.072749
09/16 08:00:58 AM: macro_avg: validation: 0.724766
09/16 08:00:58 AM: micro_avg: validation: 0.000000
09/16 08:00:58 AM: edges-rel-semeval_mcc: training: 0.827731 validation: 0.718432
09/16 08:00:58 AM: edges-rel-semeval_acc: training: 0.723746 validation: 0.612707
09/16 08:00:58 AM: edges-rel-semeval_precision: training: 0.896339 validation: 0.834467
09/16 08:00:58 AM: edges-rel-semeval_recall: training: 0.779880 validation: 0.640557
09/16 08:00:58 AM: edges-rel-semeval_f1: training: 0.834064 validation: 0.724766
09/16 08:00:58 AM: Global learning rate: 0.0001
09/16 08:00:58 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:01:03 AM: ***** Step 2300 / Validation 23 *****
09/16 08:01:03 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:03 AM: Validating...
09/16 08:01:05 AM: Updating LR scheduler:
09/16 08:01:05 AM: 	Best result seen so far for macro_avg: 0.725
09/16 08:01:05 AM: 	# validation passes without improvement: 1
09/16 08:01:05 AM: edges-rel-semeval_loss: training: 0.045717 validation: 0.074446
09/16 08:01:05 AM: macro_avg: validation: 0.723092
09/16 08:01:05 AM: micro_avg: validation: 0.000000
09/16 08:01:05 AM: edges-rel-semeval_mcc: training: 0.831551 validation: 0.715812
09/16 08:01:05 AM: edges-rel-semeval_acc: training: 0.731250 validation: 0.613577
09/16 08:01:05 AM: edges-rel-semeval_precision: training: 0.895522 validation: 0.825698
09/16 08:01:05 AM: edges-rel-semeval_recall: training: 0.787500 validation: 0.643168
09/16 08:01:05 AM: edges-rel-semeval_f1: training: 0.838045 validation: 0.723092
09/16 08:01:05 AM: Global learning rate: 0.0001
09/16 08:01:05 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:01:07 AM: Update 2342: task edges-rel-semeval, batch 42 (2342): mcc: 0.8369, acc: 0.7381, precision: 0.9024, recall: 0.7909, f1: 0.8430, edges-rel-semeval_loss: 0.0438
09/16 08:01:10 AM: ***** Step 2400 / Validation 24 *****
09/16 08:01:10 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:10 AM: Validating...
09/16 08:01:12 AM: Updating LR scheduler:
09/16 08:01:12 AM: 	Best result seen so far for macro_avg: 0.725
09/16 08:01:12 AM: 	# validation passes without improvement: 2
09/16 08:01:12 AM: edges-rel-semeval_loss: training: 0.042116 validation: 0.075173
09/16 08:01:12 AM: macro_avg: validation: 0.704254
09/16 08:01:12 AM: micro_avg: validation: 0.000000
09/16 08:01:12 AM: edges-rel-semeval_mcc: training: 0.849354 validation: 0.703135
09/16 08:01:12 AM: edges-rel-semeval_acc: training: 0.754336 validation: 0.586597
09/16 08:01:12 AM: edges-rel-semeval_precision: training: 0.908511 validation: 0.856608
09/16 08:01:12 AM: edges-rel-semeval_recall: training: 0.807947 validation: 0.597911
09/16 08:01:12 AM: edges-rel-semeval_f1: training: 0.855283 validation: 0.704254
09/16 08:01:12 AM: Global learning rate: 0.0001
09/16 08:01:12 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:01:16 AM: ***** Step 2500 / Validation 25 *****
09/16 08:01:16 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:16 AM: Validating...
09/16 08:01:17 AM: Evaluate: task edges-rel-semeval, batch 7 (36): mcc: 0.7687, acc: 0.6652, precision: 0.8941, recall: 0.6786, f1: 0.7716, edges-rel-semeval_loss: 0.0660
09/16 08:01:19 AM: Updating LR scheduler:
09/16 08:01:19 AM: 	Best result seen so far for macro_avg: 0.725
09/16 08:01:19 AM: 	# validation passes without improvement: 3
09/16 08:01:19 AM: edges-rel-semeval_loss: training: 0.042308 validation: 0.074534
09/16 08:01:19 AM: macro_avg: validation: 0.720484
09/16 08:01:19 AM: micro_avg: validation: 0.000000
09/16 08:01:19 AM: edges-rel-semeval_mcc: training: 0.851045 validation: 0.717601
09/16 08:01:19 AM: edges-rel-semeval_acc: training: 0.756563 validation: 0.606614
09/16 08:01:19 AM: edges-rel-semeval_precision: training: 0.912721 validation: 0.857143
09/16 08:01:19 AM: edges-rel-semeval_recall: training: 0.807187 validation: 0.621410
09/16 08:01:19 AM: edges-rel-semeval_f1: training: 0.856716 validation: 0.720484
09/16 08:01:19 AM: Global learning rate: 0.0001
09/16 08:01:19 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:01:24 AM: ***** Step 2600 / Validation 26 *****
09/16 08:01:24 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:24 AM: Validating...
09/16 08:01:26 AM: Updating LR scheduler:
09/16 08:01:26 AM: 	Best result seen so far for macro_avg: 0.725
09/16 08:01:26 AM: 	# validation passes without improvement: 0
09/16 08:01:26 AM: edges-rel-semeval_loss: training: 0.042366 validation: 0.074682
09/16 08:01:26 AM: macro_avg: validation: 0.716183
09/16 08:01:26 AM: micro_avg: validation: 0.000000
09/16 08:01:26 AM: edges-rel-semeval_mcc: training: 0.847946 validation: 0.709217
09/16 08:01:26 AM: edges-rel-semeval_acc: training: 0.754021 validation: 0.604003
09/16 08:01:26 AM: edges-rel-semeval_precision: training: 0.907092 validation: 0.823529
09/16 08:01:26 AM: edges-rel-semeval_recall: training: 0.806686 validation: 0.633594
09/16 08:01:26 AM: edges-rel-semeval_f1: training: 0.853948 validation: 0.716183
09/16 08:01:26 AM: Global learning rate: 5e-05
09/16 08:01:26 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:01:27 AM: Update 2624: task edges-rel-semeval, batch 24 (2624): mcc: 0.8566, acc: 0.7656, precision: 0.9253, recall: 0.8060, f1: 0.8615, edges-rel-semeval_loss: 0.0383
09/16 08:01:30 AM: ***** Step 2700 / Validation 27 *****
09/16 08:01:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:30 AM: Validating...
09/16 08:01:32 AM: Updating LR scheduler:
09/16 08:01:32 AM: 	Best result seen so far for macro_avg: 0.725
09/16 08:01:32 AM: 	# validation passes without improvement: 1
09/16 08:01:32 AM: edges-rel-semeval_loss: training: 0.037095 validation: 0.073798
09/16 08:01:32 AM: macro_avg: validation: 0.720318
09/16 08:01:32 AM: micro_avg: validation: 0.000000
09/16 08:01:32 AM: edges-rel-semeval_mcc: training: 0.872547 validation: 0.714988
09/16 08:01:32 AM: edges-rel-semeval_acc: training: 0.790937 validation: 0.604003
09/16 08:01:32 AM: edges-rel-semeval_precision: training: 0.924007 validation: 0.839120
09/16 08:01:32 AM: edges-rel-semeval_recall: training: 0.835938 validation: 0.630983
09/16 08:01:32 AM: edges-rel-semeval_f1: training: 0.877769 validation: 0.720318
09/16 08:01:32 AM: Global learning rate: 5e-05
09/16 08:01:32 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:01:37 AM: Update 2796: task edges-rel-semeval, batch 96 (2796): mcc: 0.8674, acc: 0.7828, precision: 0.9208, recall: 0.8294, f1: 0.8728, edges-rel-semeval_loss: 0.0381
09/16 08:01:37 AM: ***** Step 2800 / Validation 28 *****
09/16 08:01:37 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:37 AM: Validating...
09/16 08:01:40 AM: Updating LR scheduler:
09/16 08:01:40 AM: 	Best result seen so far for macro_avg: 0.725
09/16 08:01:40 AM: 	# validation passes without improvement: 2
09/16 08:01:40 AM: edges-rel-semeval_loss: training: 0.037922 validation: 0.074192
09/16 08:01:40 AM: macro_avg: validation: 0.722415
09/16 08:01:40 AM: micro_avg: validation: 0.000000
09/16 08:01:40 AM: edges-rel-semeval_mcc: training: 0.869078 validation: 0.716633
09/16 08:01:40 AM: edges-rel-semeval_acc: training: 0.785557 validation: 0.606614
09/16 08:01:40 AM: edges-rel-semeval_precision: training: 0.920823 validation: 0.837156
09/16 08:01:40 AM: edges-rel-semeval_recall: training: 0.832545 validation: 0.635335
09/16 08:01:40 AM: edges-rel-semeval_f1: training: 0.874462 validation: 0.722415
09/16 08:01:40 AM: Global learning rate: 5e-05
09/16 08:01:40 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:01:44 AM: ***** Step 2900 / Validation 29 *****
09/16 08:01:44 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:44 AM: Validating...
09/16 08:01:46 AM: Updating LR scheduler:
09/16 08:01:46 AM: 	Best result seen so far for macro_avg: 0.725
09/16 08:01:46 AM: 	# validation passes without improvement: 3
09/16 08:01:46 AM: edges-rel-semeval_loss: training: 0.035722 validation: 0.074766
09/16 08:01:46 AM: macro_avg: validation: 0.720712
09/16 08:01:46 AM: micro_avg: validation: 0.000000
09/16 08:01:46 AM: edges-rel-semeval_mcc: training: 0.883695 validation: 0.714690
09/16 08:01:46 AM: edges-rel-semeval_acc: training: 0.808750 validation: 0.607485
09/16 08:01:46 AM: edges-rel-semeval_precision: training: 0.931164 validation: 0.834096
09/16 08:01:46 AM: edges-rel-semeval_recall: training: 0.849688 validation: 0.634465
09/16 08:01:46 AM: edges-rel-semeval_f1: training: 0.888562 validation: 0.720712
09/16 08:01:46 AM: Global learning rate: 5e-05
09/16 08:01:46 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:01:47 AM: Update 2926: task edges-rel-semeval, batch 26 (2926): mcc: 0.8719, acc: 0.7885, precision: 0.9130, recall: 0.8450, f1: 0.8777, edges-rel-semeval_loss: 0.0378
09/16 08:01:50 AM: ***** Step 3000 / Validation 30 *****
09/16 08:01:50 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:50 AM: Validating...
09/16 08:01:52 AM: Best result seen so far for edges-rel-semeval.
09/16 08:01:52 AM: Best result seen so far for macro.
09/16 08:01:52 AM: Updating LR scheduler:
09/16 08:01:52 AM: 	Best result seen so far for macro_avg: 0.728
09/16 08:01:52 AM: 	# validation passes without improvement: 0
09/16 08:01:52 AM: edges-rel-semeval_loss: training: 0.037274 validation: 0.073481
09/16 08:01:52 AM: macro_avg: validation: 0.728413
09/16 08:01:52 AM: micro_avg: validation: 0.000000
09/16 08:01:52 AM: edges-rel-semeval_mcc: training: 0.869967 validation: 0.719725
09/16 08:01:52 AM: edges-rel-semeval_acc: training: 0.788125 validation: 0.616188
09/16 08:01:52 AM: edges-rel-semeval_precision: training: 0.916895 validation: 0.817100
09/16 08:01:52 AM: edges-rel-semeval_recall: training: 0.837812 validation: 0.657093
09/16 08:01:52 AM: edges-rel-semeval_f1: training: 0.875572 validation: 0.728413
09/16 08:01:52 AM: Global learning rate: 5e-05
09/16 08:01:52 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:01:57 AM: Update 3092: task edges-rel-semeval, batch 92 (3092): mcc: 0.8822, acc: 0.8038, precision: 0.9303, recall: 0.8477, f1: 0.8871, edges-rel-semeval_loss: 0.0347
09/16 08:01:58 AM: ***** Step 3100 / Validation 31 *****
09/16 08:01:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:58 AM: Validating...
09/16 08:02:00 AM: Updating LR scheduler:
09/16 08:02:00 AM: 	Best result seen so far for macro_avg: 0.728
09/16 08:02:00 AM: 	# validation passes without improvement: 1
09/16 08:02:00 AM: edges-rel-semeval_loss: training: 0.035049 validation: 0.074431
09/16 08:02:00 AM: macro_avg: validation: 0.726570
09/16 08:02:00 AM: micro_avg: validation: 0.000000
09/16 08:02:00 AM: edges-rel-semeval_mcc: training: 0.881246 validation: 0.717944
09/16 08:02:00 AM: edges-rel-semeval_acc: training: 0.801955 validation: 0.610966
09/16 08:02:00 AM: edges-rel-semeval_precision: training: 0.928497 validation: 0.816504
09/16 08:02:00 AM: edges-rel-semeval_recall: training: 0.847682 validation: 0.654482
09/16 08:02:00 AM: edges-rel-semeval_f1: training: 0.886251 validation: 0.726570
09/16 08:02:00 AM: Global learning rate: 5e-05
09/16 08:02:00 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:02:04 AM: ***** Step 3200 / Validation 32 *****
09/16 08:02:04 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:04 AM: Validating...
09/16 08:02:06 AM: Updating LR scheduler:
09/16 08:02:06 AM: 	Best result seen so far for macro_avg: 0.728
09/16 08:02:06 AM: 	# validation passes without improvement: 2
09/16 08:02:06 AM: edges-rel-semeval_loss: training: 0.035826 validation: 0.073870
09/16 08:02:06 AM: macro_avg: validation: 0.727715
09/16 08:02:06 AM: micro_avg: validation: 0.000000
09/16 08:02:06 AM: edges-rel-semeval_mcc: training: 0.880567 validation: 0.720142
09/16 08:02:06 AM: edges-rel-semeval_acc: training: 0.803125 validation: 0.618799
09/16 08:02:06 AM: edges-rel-semeval_precision: training: 0.926014 validation: 0.826327
09/16 08:02:06 AM: edges-rel-semeval_recall: training: 0.848750 validation: 0.650131
09/16 08:02:06 AM: edges-rel-semeval_f1: training: 0.885700 validation: 0.727715
09/16 08:02:06 AM: Global learning rate: 5e-05
09/16 08:02:06 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:02:07 AM: Update 3222: task edges-rel-semeval, batch 22 (3222): mcc: 0.8782, acc: 0.8026, precision: 0.9267, recall: 0.8438, f1: 0.8833, edges-rel-semeval_loss: 0.0354
09/16 08:02:11 AM: ***** Step 3300 / Validation 33 *****
09/16 08:02:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:11 AM: Validating...
09/16 08:02:13 AM: Updating LR scheduler:
09/16 08:02:13 AM: 	Best result seen so far for macro_avg: 0.728
09/16 08:02:13 AM: 	# validation passes without improvement: 3
09/16 08:02:13 AM: edges-rel-semeval_loss: training: 0.033577 validation: 0.073178
09/16 08:02:13 AM: macro_avg: validation: 0.726563
09/16 08:02:13 AM: micro_avg: validation: 0.000000
09/16 08:02:13 AM: edges-rel-semeval_mcc: training: 0.887347 validation: 0.719231
09/16 08:02:13 AM: edges-rel-semeval_acc: training: 0.813623 validation: 0.617058
09/16 08:02:13 AM: edges-rel-semeval_precision: training: 0.929010 validation: 0.827586
09/16 08:02:13 AM: edges-rel-semeval_recall: training: 0.858404 validation: 0.647520
09/16 08:02:13 AM: edges-rel-semeval_f1: training: 0.892313 validation: 0.726563
09/16 08:02:13 AM: Global learning rate: 5e-05
09/16 08:02:13 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:02:17 AM: Update 3392: task edges-rel-semeval, batch 92 (3392): mcc: 0.8899, acc: 0.8179, precision: 0.9378, recall: 0.8550, f1: 0.8945, edges-rel-semeval_loss: 0.0332
09/16 08:02:18 AM: ***** Step 3400 / Validation 34 *****
09/16 08:02:18 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:18 AM: Validating...
09/16 08:02:20 AM: Updating LR scheduler:
09/16 08:02:20 AM: 	Best result seen so far for macro_avg: 0.728
09/16 08:02:20 AM: 	# validation passes without improvement: 0
09/16 08:02:20 AM: edges-rel-semeval_loss: training: 0.033454 validation: 0.074286
09/16 08:02:20 AM: macro_avg: validation: 0.727625
09/16 08:02:20 AM: micro_avg: validation: 0.000000
09/16 08:02:20 AM: edges-rel-semeval_mcc: training: 0.887608 validation: 0.719226
09/16 08:02:20 AM: edges-rel-semeval_acc: training: 0.812813 validation: 0.625762
09/16 08:02:20 AM: edges-rel-semeval_precision: training: 0.935849 validation: 0.819172
09/16 08:02:20 AM: edges-rel-semeval_recall: training: 0.852500 validation: 0.654482
09/16 08:02:20 AM: edges-rel-semeval_f1: training: 0.892232 validation: 0.727625
09/16 08:02:20 AM: Global learning rate: 2.5e-05
09/16 08:02:20 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:02:25 AM: ***** Step 3500 / Validation 35 *****
09/16 08:02:25 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:25 AM: Validating...
09/16 08:02:27 AM: Updating LR scheduler:
09/16 08:02:27 AM: 	Best result seen so far for macro_avg: 0.728
09/16 08:02:27 AM: 	# validation passes without improvement: 1
09/16 08:02:27 AM: edges-rel-semeval_loss: training: 0.033135 validation: 0.074905
09/16 08:02:27 AM: macro_avg: validation: 0.726285
09/16 08:02:27 AM: micro_avg: validation: 0.000000
09/16 08:02:27 AM: edges-rel-semeval_mcc: training: 0.892823 validation: 0.720519
09/16 08:02:27 AM: edges-rel-semeval_acc: training: 0.821507 validation: 0.615318
09/16 08:02:27 AM: edges-rel-semeval_precision: training: 0.930020 validation: 0.840000
09/16 08:02:27 AM: edges-rel-semeval_recall: training: 0.867550 validation: 0.639687
09/16 08:02:27 AM: edges-rel-semeval_f1: training: 0.897699 validation: 0.726285
09/16 08:02:27 AM: Global learning rate: 2.5e-05
09/16 08:02:27 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:02:27 AM: Update 3509: task edges-rel-semeval, batch 9 (3509): mcc: 0.9079, acc: 0.8542, precision: 0.9442, recall: 0.8819, f1: 0.9120, edges-rel-semeval_loss: 0.0319
09/16 08:02:31 AM: ***** Step 3600 / Validation 36 *****
09/16 08:02:31 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:31 AM: Validating...
09/16 08:02:33 AM: Updating LR scheduler:
09/16 08:02:33 AM: 	Best result seen so far for macro_avg: 0.728
09/16 08:02:33 AM: 	# validation passes without improvement: 2
09/16 08:02:33 AM: edges-rel-semeval_loss: training: 0.033457 validation: 0.074091
09/16 08:02:33 AM: macro_avg: validation: 0.722549
09/16 08:02:33 AM: micro_avg: validation: 0.000000
09/16 08:02:33 AM: edges-rel-semeval_mcc: training: 0.892669 validation: 0.715493
09/16 08:02:33 AM: edges-rel-semeval_acc: training: 0.820312 validation: 0.609225
09/16 08:02:33 AM: edges-rel-semeval_precision: training: 0.934077 validation: 0.827160
09/16 08:02:33 AM: edges-rel-semeval_recall: training: 0.863437 validation: 0.641427
09/16 08:02:33 AM: edges-rel-semeval_f1: training: 0.897369 validation: 0.722549
09/16 08:02:33 AM: Global learning rate: 2.5e-05
09/16 08:02:33 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:02:37 AM: Update 3678: task edges-rel-semeval, batch 78 (3678): mcc: 0.8945, acc: 0.8221, precision: 0.9352, recall: 0.8658, f1: 0.8992, edges-rel-semeval_loss: 0.0324
09/16 08:02:38 AM: ***** Step 3700 / Validation 37 *****
09/16 08:02:38 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:38 AM: Validating...
09/16 08:02:40 AM: Updating LR scheduler:
09/16 08:02:40 AM: 	Best result seen so far for macro_avg: 0.728
09/16 08:02:40 AM: 	# validation passes without improvement: 3
09/16 08:02:40 AM: edges-rel-semeval_loss: training: 0.032095 validation: 0.074329
09/16 08:02:40 AM: macro_avg: validation: 0.726021
09/16 08:02:40 AM: micro_avg: validation: 0.000000
09/16 08:02:40 AM: edges-rel-semeval_mcc: training: 0.895738 validation: 0.719625
09/16 08:02:40 AM: edges-rel-semeval_acc: training: 0.824661 validation: 0.617058
09/16 08:02:40 AM: edges-rel-semeval_precision: training: 0.935714 validation: 0.834842
09/16 08:02:40 AM: edges-rel-semeval_recall: training: 0.867550 validation: 0.642298
09/16 08:02:40 AM: edges-rel-semeval_f1: training: 0.900344 validation: 0.726021
09/16 08:02:40 AM: Global learning rate: 2.5e-05
09/16 08:02:40 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:02:45 AM: ***** Step 3800 / Validation 38 *****
09/16 08:02:45 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:45 AM: Validating...
09/16 08:02:47 AM: Updating LR scheduler:
09/16 08:02:47 AM: 	Best result seen so far for macro_avg: 0.728
09/16 08:02:47 AM: 	# validation passes without improvement: 0
09/16 08:02:47 AM: edges-rel-semeval_loss: training: 0.031411 validation: 0.074123
09/16 08:02:47 AM: macro_avg: validation: 0.726917
09/16 08:02:47 AM: micro_avg: validation: 0.000000
09/16 08:02:47 AM: edges-rel-semeval_mcc: training: 0.899392 validation: 0.719668
09/16 08:02:47 AM: edges-rel-semeval_acc: training: 0.832187 validation: 0.620540
09/16 08:02:47 AM: edges-rel-semeval_precision: training: 0.934311 validation: 0.828508
09/16 08:02:47 AM: edges-rel-semeval_recall: training: 0.875625 validation: 0.647520
09/16 08:02:47 AM: edges-rel-semeval_f1: training: 0.904017 validation: 0.726917
09/16 08:02:47 AM: Global learning rate: 1.25e-05
09/16 08:02:47 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:02:47 AM: Update 3813: task edges-rel-semeval, batch 13 (3813): mcc: 0.8914, acc: 0.8101, precision: 0.9171, recall: 0.8774, f1: 0.8968, edges-rel-semeval_loss: 0.0315
09/16 08:02:52 AM: ***** Step 3900 / Validation 39 *****
09/16 08:02:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:52 AM: Validating...
09/16 08:02:54 AM: Updating LR scheduler:
09/16 08:02:54 AM: 	Best result seen so far for macro_avg: 0.728
09/16 08:02:54 AM: 	# validation passes without improvement: 1
09/16 08:02:54 AM: edges-rel-semeval_loss: training: 0.031181 validation: 0.074300
09/16 08:02:54 AM: macro_avg: validation: 0.723986
09/16 08:02:54 AM: micro_avg: validation: 0.000000
09/16 08:02:54 AM: edges-rel-semeval_mcc: training: 0.902980 validation: 0.716569
09/16 08:02:54 AM: edges-rel-semeval_acc: training: 0.831284 validation: 0.617929
09/16 08:02:54 AM: edges-rel-semeval_precision: training: 0.939845 validation: 0.825167
09/16 08:02:54 AM: edges-rel-semeval_recall: training: 0.877010 validation: 0.644909
09/16 08:02:54 AM: edges-rel-semeval_f1: training: 0.907341 validation: 0.723986
09/16 08:02:54 AM: Global learning rate: 1.25e-05
09/16 08:02:54 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:02:57 AM: Update 3979: task edges-rel-semeval, batch 79 (3979): mcc: 0.9007, acc: 0.8350, precision: 0.9392, recall: 0.8734, f1: 0.9051, edges-rel-semeval_loss: 0.0319
09/16 08:02:58 AM: ***** Step 4000 / Validation 40 *****
09/16 08:02:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:02:58 AM: Validating...
09/16 08:03:01 AM: Updating LR scheduler:
09/16 08:03:01 AM: 	Best result seen so far for macro_avg: 0.728
09/16 08:03:01 AM: 	# validation passes without improvement: 2
09/16 08:03:01 AM: Ran out of early stopping patience. Stopping training.
09/16 08:03:01 AM: edges-rel-semeval_loss: training: 0.032051 validation: 0.074432
09/16 08:03:01 AM: macro_avg: validation: 0.727808
09/16 08:03:01 AM: micro_avg: validation: 0.000000
09/16 08:03:01 AM: edges-rel-semeval_mcc: training: 0.898997 validation: 0.721119
09/16 08:03:01 AM: edges-rel-semeval_acc: training: 0.832812 validation: 0.621410
09/16 08:03:01 AM: edges-rel-semeval_precision: training: 0.937500 validation: 0.833708
09/16 08:03:01 AM: edges-rel-semeval_recall: training: 0.871875 validation: 0.645779
09/16 08:03:01 AM: edges-rel-semeval_f1: training: 0.903497 validation: 0.727808
09/16 08:03:01 AM: Global learning rate: 1.25e-05
09/16 08:03:01 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-cat/run
09/16 08:03:01 AM: Stopped training after 40 validation checks
09/16 08:03:01 AM: Trained edges-rel-semeval for 4000 batches or 18.605 epochs
09/16 08:03:01 AM: ***** VALIDATION RESULTS *****
09/16 08:03:01 AM: edges-rel-semeval_f1 (for best val pass 30): edges-rel-semeval_loss: 0.07348, macro_avg: 0.72841, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.71973, edges-rel-semeval_acc: 0.61619, edges-rel-semeval_precision: 0.81710, edges-rel-semeval_recall: 0.65709, edges-rel-semeval_f1: 0.72841
09/16 08:03:01 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.17871, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 08:03:01 AM: macro_avg (for best val pass 30): edges-rel-semeval_loss: 0.07348, macro_avg: 0.72841, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.71973, edges-rel-semeval_acc: 0.61619, edges-rel-semeval_precision: 0.81710, edges-rel-semeval_recall: 0.65709, edges-rel-semeval_f1: 0.72841
09/16 08:03:01 AM: Evaluating...
09/16 08:03:01 AM: Loaded model state from ./experiments/rel-semeval-mnli-cat/run/edges-rel-semeval/model_state_target_train_val_30.best.th
09/16 08:03:01 AM: Evaluating on: edges-rel-semeval, split: val
09/16 08:03:03 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:03:03 AM: Finished evaluating on: edges-rel-semeval
09/16 08:03:03 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 08:03:03 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-mnli-cat/run
09/16 08:03:03 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-mnli-cat/run
09/16 08:03:03 AM: Evaluating on: edges-rel-semeval, split: test
09/16 08:03:08 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:03:08 AM: Finished evaluating on: edges-rel-semeval
09/16 08:03:08 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 08:03:08 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-mnli-cat/run
09/16 08:03:08 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-mnli-cat/run
09/16 08:03:08 AM: Writing results for split 'val' to ./experiments/rel-semeval-mnli-cat/results.tsv
09/16 08:03:08 AM: micro_avg: 0.000, macro_avg: 0.728, edges-rel-semeval_mcc: 0.720, edges-rel-semeval_acc: 0.616, edges-rel-semeval_precision: 0.817, edges-rel-semeval_recall: 0.657, edges-rel-semeval_f1: 0.728
09/16 08:03:08 AM: Done!
09/16 08:03:08 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
