09/16 07:56:40 AM: Git branch: master
09/16 07:56:40 AM: Git SHA: 4d3ecf773e1c64dc339b7f0f66408105deba8209
09/16 07:56:40 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-sst-cat/",
  "exp_name": "experiments/rel-semeval-sst-cat",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-sst-cat/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/sst",
  "pytorch_transformers_output_mode": "cat",
  "remote_log_name": "experiments/rel-semeval-sst-cat__run",
  "run_dir": "./experiments/rel-semeval-sst-cat/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 07:56:40 AM: Saved config to ./experiments/rel-semeval-sst-cat/run/params.conf
09/16 07:56:40 AM: Using random seed 1234
09/16 07:56:40 AM: Using GPU 0
09/16 07:56:40 AM: Loading tasks...
09/16 07:56:40 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-sst-cat/
09/16 07:56:40 AM: 	Creating task edges-rel-semeval from scratch.
09/16 07:56:40 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 07:56:40 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 07:56:40 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 07:56:40 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 07:56:40 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 07:56:40 AM: 	Building vocab from scratch.
09/16 07:56:40 AM: 	Counting units for task edges-rel-semeval.
09/16 07:56:41 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 07:56:42 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:56:42 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 07:56:42 AM: 	Saved vocab to ./experiments/rel-semeval-sst-cat/vocab
09/16 07:56:42 AM: Loading token dictionary from ./experiments/rel-semeval-sst-cat/vocab.
09/16 07:56:42 AM: 	Loaded vocab from ./experiments/rel-semeval-sst-cat/vocab
09/16 07:56:42 AM: 	Vocab namespace bert_uncased: size 30524
09/16 07:56:42 AM: 	Vocab namespace tokens: size 16020
09/16 07:56:42 AM: 	Vocab namespace chars: size 59
09/16 07:56:42 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 07:56:42 AM: 	Finished building vocab.
09/16 07:56:42 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 07:56:43 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-sst-cat/preproc/edges-rel-semeval__train_data
09/16 07:56:43 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 07:56:43 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-sst-cat/preproc/edges-rel-semeval__val_data
09/16 07:56:43 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 07:56:43 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-sst-cat/preproc/edges-rel-semeval__test_data
09/16 07:56:43 AM: 	Finished indexing tasks
09/16 07:56:43 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 07:56:43 AM: 	  Training on 
09/16 07:56:43 AM: 	  Evaluating on edges-rel-semeval
09/16 07:56:43 AM: 	Finished loading tasks in 2.726s
09/16 07:56:43 AM: 	 Tasks: ['edges-rel-semeval']
09/16 07:56:43 AM: Building model...
09/16 07:56:43 AM: Using BERT model (bert-base-uncased).
09/16 07:56:43 AM: LOADING A FUNETUNED MODEL from: 
09/16 07:56:43 AM: models/sst
09/16 07:56:43 AM: loading configuration file models/sst/config.json
09/16 07:56:43 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "sst-2",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 07:56:43 AM: loading weights file models/sst/pytorch_model.bin
09/16 07:56:46 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmp32yqtn1s
09/16 07:56:48 AM: copying /tmp/tmp32yqtn1s to cache at ./experiments/rel-semeval-sst-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:56:48 AM: creating metadata file for ./experiments/rel-semeval-sst-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:56:48 AM: removing temp file /tmp/tmp32yqtn1s
09/16 07:56:48 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-sst-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:56:48 AM: Initializing parameters
09/16 07:56:48 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 07:56:48 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 07:56:48 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 07:56:48 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 07:56:48 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 07:56:48 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 07:56:48 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 07:56:52 AM: Model specification:
09/16 07:56:52 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 07:56:52 AM: Model parameters:
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:56:52 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:56:52 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 07:56:52 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:56:52 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 07:56:52 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:56:52 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 07:56:52 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:56:52 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 07:56:52 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:56:52 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 07:56:52 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 07:56:52 AM: Total number of parameters: 110536979 (1.10537e+08)
09/16 07:56:52 AM: Number of trainable parameters: 1054739 (1.05474e+06)
09/16 07:56:52 AM: Finished building model in 9.094s
09/16 07:56:52 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 07:56:53 AM: patience = 9
09/16 07:56:53 AM: val_interval = 100
09/16 07:56:53 AM: max_vals = 100
09/16 07:56:53 AM: cuda_device = 0
09/16 07:56:53 AM: grad_norm = 5.0
09/16 07:56:53 AM: grad_clipping = None
09/16 07:56:53 AM: lr_decay = 0.99
09/16 07:56:53 AM: min_lr = 1e-06
09/16 07:56:53 AM: keep_all_checkpoints = 0
09/16 07:56:53 AM: val_data_limit = 5000
09/16 07:56:53 AM: max_epochs = -1
09/16 07:56:53 AM: dec_val_scale = 250
09/16 07:56:53 AM: training_data_fraction = 1
09/16 07:56:53 AM: type = adam
09/16 07:56:53 AM: parameter_groups = None
09/16 07:56:53 AM: Number of trainable parameters: 1054739
09/16 07:56:53 AM: infer_type_and_cast = True
09/16 07:56:53 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:56:53 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:56:53 AM: lr = 0.0001
09/16 07:56:53 AM: amsgrad = True
09/16 07:56:53 AM: type = reduce_on_plateau
09/16 07:56:53 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:56:53 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:56:53 AM: mode = max
09/16 07:56:53 AM: factor = 0.5
09/16 07:56:53 AM: patience = 3
09/16 07:56:53 AM: threshold = 0.0001
09/16 07:56:53 AM: threshold_mode = abs
09/16 07:56:53 AM: verbose = True
09/16 07:56:53 AM: type = adam
09/16 07:56:53 AM: parameter_groups = None
09/16 07:56:53 AM: Number of trainable parameters: 1054739
09/16 07:56:53 AM: infer_type_and_cast = True
09/16 07:56:53 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:56:53 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:56:53 AM: lr = 0.0001
09/16 07:56:53 AM: amsgrad = True
09/16 07:56:53 AM: type = reduce_on_plateau
09/16 07:56:53 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:56:53 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:56:53 AM: mode = max
09/16 07:56:53 AM: factor = 0.5
09/16 07:56:53 AM: patience = 3
09/16 07:56:53 AM: threshold = 0.0001
09/16 07:56:53 AM: threshold_mode = abs
09/16 07:56:53 AM: verbose = True
09/16 07:56:53 AM: Starting training without restoring from a checkpoint.
09/16 07:56:53 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 07:56:53 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 07:56:58 AM: ***** Step 100 / Validation 1 *****
09/16 07:56:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:56:58 AM: Validating...
09/16 07:57:00 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:00 AM: Best result seen so far for micro.
09/16 07:57:00 AM: Best result seen so far for macro.
09/16 07:57:00 AM: Updating LR scheduler:
09/16 07:57:00 AM: 	Best result seen so far for macro_avg: 0.000
09/16 07:57:00 AM: 	# validation passes without improvement: 0
09/16 07:57:00 AM: edges-rel-semeval_loss: training: 0.248843 validation: 0.182657
09/16 07:57:00 AM: macro_avg: validation: 0.000000
09/16 07:57:00 AM: micro_avg: validation: 0.000000
09/16 07:57:00 AM: edges-rel-semeval_mcc: training: 0.012239 validation: 0.000000
09/16 07:57:00 AM: edges-rel-semeval_acc: training: 0.004100 validation: 0.000000
09/16 07:57:00 AM: edges-rel-semeval_precision: training: 0.071315 validation: 0.000000
09/16 07:57:00 AM: edges-rel-semeval_recall: training: 0.028382 validation: 0.000000
09/16 07:57:00 AM: edges-rel-semeval_f1: training: 0.040605 validation: 0.000000
09/16 07:57:00 AM: Global learning rate: 0.0001
09/16 07:57:00 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:57:03 AM: Update 158: task edges-rel-semeval, batch 58 (158): mcc: 0.0567, acc: 0.0043, precision: 0.6667, recall: 0.0054, f1: 0.0107, edges-rel-semeval_loss: 0.1834
09/16 07:57:05 AM: ***** Step 200 / Validation 2 *****
09/16 07:57:05 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:05 AM: Validating...
09/16 07:57:07 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:07 AM: Best result seen so far for macro.
09/16 07:57:07 AM: Updating LR scheduler:
09/16 07:57:07 AM: 	Best result seen so far for macro_avg: 0.022
09/16 07:57:07 AM: 	# validation passes without improvement: 0
09/16 07:57:07 AM: edges-rel-semeval_loss: training: 0.180240 validation: 0.163405
09/16 07:57:07 AM: macro_avg: validation: 0.022318
09/16 07:57:07 AM: micro_avg: validation: 0.000000
09/16 07:57:07 AM: edges-rel-semeval_mcc: training: 0.078999 validation: 0.092159
09/16 07:57:07 AM: edges-rel-semeval_acc: training: 0.008750 validation: 0.011314
09/16 07:57:07 AM: edges-rel-semeval_precision: training: 0.731707 validation: 0.812500
09/16 07:57:07 AM: edges-rel-semeval_recall: training: 0.009375 validation: 0.011314
09/16 07:57:07 AM: edges-rel-semeval_f1: training: 0.018513 validation: 0.022318
09/16 07:57:07 AM: Global learning rate: 0.0001
09/16 07:57:07 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:57:12 AM: ***** Step 300 / Validation 3 *****
09/16 07:57:12 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:12 AM: Validating...
09/16 07:57:13 AM: Evaluate: task edges-rel-semeval, batch 16 (36): mcc: 0.2634, acc: 0.0859, precision: 0.8627, recall: 0.0859, f1: 0.1563, edges-rel-semeval_loss: 0.1401
09/16 07:57:14 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:14 AM: Best result seen so far for macro.
09/16 07:57:14 AM: Updating LR scheduler:
09/16 07:57:14 AM: 	Best result seen so far for macro_avg: 0.143
09/16 07:57:14 AM: 	# validation passes without improvement: 0
09/16 07:57:14 AM: edges-rel-semeval_loss: training: 0.158583 validation: 0.143197
09/16 07:57:14 AM: macro_avg: validation: 0.143084
09/16 07:57:14 AM: micro_avg: validation: 0.000000
09/16 07:57:14 AM: edges-rel-semeval_mcc: training: 0.212288 validation: 0.245240
09/16 07:57:14 AM: edges-rel-semeval_acc: training: 0.061179 validation: 0.077459
09/16 07:57:14 AM: edges-rel-semeval_precision: training: 0.782609 validation: 0.825688
09/16 07:57:14 AM: edges-rel-semeval_recall: training: 0.062441 validation: 0.078329
09/16 07:57:14 AM: edges-rel-semeval_f1: training: 0.115654 validation: 0.143084
09/16 07:57:14 AM: Global learning rate: 0.0001
09/16 07:57:14 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:57:18 AM: ***** Step 400 / Validation 4 *****
09/16 07:57:18 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:18 AM: Validating...
09/16 07:57:21 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:21 AM: Best result seen so far for macro.
09/16 07:57:21 AM: Updating LR scheduler:
09/16 07:57:21 AM: 	Best result seen so far for macro_avg: 0.256
09/16 07:57:21 AM: 	# validation passes without improvement: 0
09/16 07:57:21 AM: edges-rel-semeval_loss: training: 0.140055 validation: 0.129134
09/16 07:57:21 AM: macro_avg: validation: 0.256448
09/16 07:57:21 AM: micro_avg: validation: 0.000000
09/16 07:57:21 AM: edges-rel-semeval_mcc: training: 0.331184 validation: 0.344315
09/16 07:57:21 AM: edges-rel-semeval_acc: training: 0.150312 validation: 0.151436
09/16 07:57:21 AM: edges-rel-semeval_precision: training: 0.766254 validation: 0.836538
09/16 07:57:21 AM: edges-rel-semeval_recall: training: 0.154687 validation: 0.151436
09/16 07:57:21 AM: edges-rel-semeval_f1: training: 0.257410 validation: 0.256448
09/16 07:57:21 AM: Global learning rate: 0.0001
09/16 07:57:21 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:57:23 AM: Update 432: task edges-rel-semeval, batch 32 (432): mcc: 0.3641, acc: 0.1739, precision: 0.7835, recall: 0.1819, f1: 0.2953, edges-rel-semeval_loss: 0.1335
09/16 07:57:26 AM: ***** Step 500 / Validation 5 *****
09/16 07:57:26 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:26 AM: Validating...
09/16 07:57:28 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:28 AM: Best result seen so far for macro.
09/16 07:57:28 AM: Updating LR scheduler:
09/16 07:57:28 AM: 	Best result seen so far for macro_avg: 0.369
09/16 07:57:28 AM: 	# validation passes without improvement: 0
09/16 07:57:28 AM: edges-rel-semeval_loss: training: 0.127185 validation: 0.121030
09/16 07:57:28 AM: macro_avg: validation: 0.369168
09/16 07:57:28 AM: micro_avg: validation: 0.000000
09/16 07:57:28 AM: edges-rel-semeval_mcc: training: 0.416471 validation: 0.429779
09/16 07:57:28 AM: edges-rel-semeval_acc: training: 0.220751 validation: 0.235857
09/16 07:57:28 AM: edges-rel-semeval_precision: training: 0.804851 validation: 0.827273
09/16 07:57:28 AM: edges-rel-semeval_recall: training: 0.230211 validation: 0.237598
09/16 07:57:28 AM: edges-rel-semeval_f1: training: 0.358019 validation: 0.369168
09/16 07:57:28 AM: Global learning rate: 0.0001
09/16 07:57:28 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:57:33 AM: ***** Step 600 / Validation 6 *****
09/16 07:57:33 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:33 AM: Validating...
09/16 07:57:33 AM: Evaluate: task edges-rel-semeval, batch 7 (36): mcc: 0.5020, acc: 0.3080, precision: 0.8625, recall: 0.3080, f1: 0.4539, edges-rel-semeval_loss: 0.1061
09/16 07:57:35 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:35 AM: Best result seen so far for macro.
09/16 07:57:35 AM: Updating LR scheduler:
09/16 07:57:35 AM: 	Best result seen so far for macro_avg: 0.402
09/16 07:57:35 AM: 	# validation passes without improvement: 0
09/16 07:57:35 AM: edges-rel-semeval_loss: training: 0.117560 validation: 0.114216
09/16 07:57:35 AM: macro_avg: validation: 0.402390
09/16 07:57:35 AM: micro_avg: validation: 0.000000
09/16 07:57:35 AM: edges-rel-semeval_mcc: training: 0.473073 validation: 0.459692
09/16 07:57:35 AM: edges-rel-semeval_acc: training: 0.286250 validation: 0.260226
09/16 07:57:35 AM: edges-rel-semeval_precision: training: 0.791461 validation: 0.848740
09/16 07:57:35 AM: edges-rel-semeval_recall: training: 0.301250 validation: 0.263708
09/16 07:57:35 AM: edges-rel-semeval_f1: training: 0.436397 validation: 0.402390
09/16 07:57:35 AM: Global learning rate: 0.0001
09/16 07:57:35 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:57:40 AM: ***** Step 700 / Validation 7 *****
09/16 07:57:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:40 AM: Validating...
09/16 07:57:42 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:42 AM: Best result seen so far for macro.
09/16 07:57:42 AM: Updating LR scheduler:
09/16 07:57:42 AM: 	Best result seen so far for macro_avg: 0.449
09/16 07:57:42 AM: 	# validation passes without improvement: 0
09/16 07:57:42 AM: edges-rel-semeval_loss: training: 0.108830 validation: 0.109254
09/16 07:57:42 AM: macro_avg: validation: 0.449466
09/16 07:57:42 AM: micro_avg: validation: 0.000000
09/16 07:57:42 AM: edges-rel-semeval_mcc: training: 0.518486 validation: 0.486315
09/16 07:57:42 AM: edges-rel-semeval_acc: training: 0.332703 validation: 0.303742
09/16 07:57:42 AM: edges-rel-semeval_precision: training: 0.808249 validation: 0.806306
09/16 07:57:42 AM: edges-rel-semeval_recall: training: 0.352255 validation: 0.311575
09/16 07:57:42 AM: edges-rel-semeval_f1: training: 0.490665 validation: 0.449466
09/16 07:57:42 AM: Global learning rate: 0.0001
09/16 07:57:42 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:57:43 AM: Update 721: task edges-rel-semeval, batch 21 (721): mcc: 0.5544, acc: 0.3750, precision: 0.8102, recall: 0.4003, f1: 0.5359, edges-rel-semeval_loss: 0.1040
09/16 07:57:46 AM: ***** Step 800 / Validation 8 *****
09/16 07:57:46 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:46 AM: Validating...
09/16 07:57:49 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:49 AM: Best result seen so far for macro.
09/16 07:57:49 AM: Updating LR scheduler:
09/16 07:57:49 AM: 	Best result seen so far for macro_avg: 0.490
09/16 07:57:49 AM: 	# validation passes without improvement: 0
09/16 07:57:49 AM: edges-rel-semeval_loss: training: 0.103550 validation: 0.103880
09/16 07:57:49 AM: macro_avg: validation: 0.490497
09/16 07:57:49 AM: micro_avg: validation: 0.000000
09/16 07:57:49 AM: edges-rel-semeval_mcc: training: 0.549744 validation: 0.523009
09/16 07:57:49 AM: edges-rel-semeval_acc: training: 0.376250 validation: 0.339426
09/16 07:57:49 AM: edges-rel-semeval_precision: training: 0.803922 validation: 0.829876
09/16 07:57:49 AM: edges-rel-semeval_recall: training: 0.397188 validation: 0.348129
09/16 07:57:49 AM: edges-rel-semeval_f1: training: 0.531688 validation: 0.490497
09/16 07:57:49 AM: Global learning rate: 0.0001
09/16 07:57:49 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:57:53 AM: Update 881: task edges-rel-semeval, batch 81 (881): mcc: 0.5772, acc: 0.4050, precision: 0.8142, recall: 0.4307, f1: 0.5634, edges-rel-semeval_loss: 0.0971
09/16 07:57:54 AM: ***** Step 900 / Validation 9 *****
09/16 07:57:54 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:57:54 AM: Validating...
09/16 07:57:56 AM: Best result seen so far for edges-rel-semeval.
09/16 07:57:56 AM: Best result seen so far for macro.
09/16 07:57:56 AM: Updating LR scheduler:
09/16 07:57:56 AM: 	Best result seen so far for macro_avg: 0.514
09/16 07:57:56 AM: 	# validation passes without improvement: 0
09/16 07:57:56 AM: edges-rel-semeval_loss: training: 0.096946 validation: 0.101807
09/16 07:57:56 AM: macro_avg: validation: 0.514151
09/16 07:57:56 AM: micro_avg: validation: 0.000000
09/16 07:57:56 AM: edges-rel-semeval_mcc: training: 0.579936 validation: 0.534461
09/16 07:57:56 AM: edges-rel-semeval_acc: training: 0.405866 validation: 0.366406
09/16 07:57:56 AM: edges-rel-semeval_precision: training: 0.818888 validation: 0.797075
09/16 07:57:56 AM: edges-rel-semeval_recall: training: 0.432040 validation: 0.379460
09/16 07:57:56 AM: edges-rel-semeval_f1: training: 0.565648 validation: 0.514151
09/16 07:57:56 AM: Global learning rate: 0.0001
09/16 07:57:56 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:58:00 AM: ***** Step 1000 / Validation 10 *****
09/16 07:58:00 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:00 AM: Validating...
09/16 07:58:03 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:03 AM: Best result seen so far for macro.
09/16 07:58:03 AM: Updating LR scheduler:
09/16 07:58:03 AM: 	Best result seen so far for macro_avg: 0.527
09/16 07:58:03 AM: 	# validation passes without improvement: 0
09/16 07:58:03 AM: edges-rel-semeval_loss: training: 0.090205 validation: 0.100360
09/16 07:58:03 AM: macro_avg: validation: 0.527187
09/16 07:58:03 AM: micro_avg: validation: 0.000000
09/16 07:58:03 AM: edges-rel-semeval_mcc: training: 0.630057 validation: 0.549825
09/16 07:58:03 AM: edges-rel-semeval_acc: training: 0.464375 validation: 0.375979
09/16 07:58:03 AM: edges-rel-semeval_precision: training: 0.838095 validation: 0.821363
09/16 07:58:03 AM: edges-rel-semeval_recall: training: 0.495000 validation: 0.388164
09/16 07:58:03 AM: edges-rel-semeval_f1: training: 0.622397 validation: 0.527187
09/16 07:58:03 AM: Global learning rate: 0.0001
09/16 07:58:03 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:58:03 AM: Update 1009: task edges-rel-semeval, batch 9 (1009): mcc: 0.5884, acc: 0.4340, precision: 0.8247, recall: 0.4410, f1: 0.5747, edges-rel-semeval_loss: 0.0912
09/16 07:58:08 AM: ***** Step 1100 / Validation 11 *****
09/16 07:58:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:08 AM: Validating...
09/16 07:58:10 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:10 AM: Best result seen so far for macro.
09/16 07:58:10 AM: Updating LR scheduler:
09/16 07:58:10 AM: 	Best result seen so far for macro_avg: 0.574
09/16 07:58:10 AM: 	# validation passes without improvement: 0
09/16 07:58:10 AM: edges-rel-semeval_loss: training: 0.089043 validation: 0.097637
09/16 07:58:10 AM: macro_avg: validation: 0.574022
09/16 07:58:10 AM: micro_avg: validation: 0.000000
09/16 07:58:10 AM: edges-rel-semeval_mcc: training: 0.635100 validation: 0.587733
09/16 07:58:10 AM: edges-rel-semeval_acc: training: 0.472722 validation: 0.420366
09/16 07:58:10 AM: edges-rel-semeval_precision: training: 0.841102 validation: 0.824104
09/16 07:58:10 AM: edges-rel-semeval_recall: training: 0.500788 validation: 0.440383
09/16 07:58:10 AM: edges-rel-semeval_f1: training: 0.627792 validation: 0.574022
09/16 07:58:10 AM: Global learning rate: 0.0001
09/16 07:58:10 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:58:13 AM: Update 1171: task edges-rel-semeval, batch 71 (1171): mcc: 0.6567, acc: 0.4987, precision: 0.8423, recall: 0.5335, f1: 0.6532, edges-rel-semeval_loss: 0.0846
09/16 07:58:14 AM: ***** Step 1200 / Validation 12 *****
09/16 07:58:14 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:14 AM: Validating...
09/16 07:58:17 AM: Updating LR scheduler:
09/16 07:58:17 AM: 	Best result seen so far for macro_avg: 0.574
09/16 07:58:17 AM: 	# validation passes without improvement: 1
09/16 07:58:17 AM: edges-rel-semeval_loss: training: 0.083615 validation: 0.097046
09/16 07:58:17 AM: macro_avg: validation: 0.565691
09/16 07:58:17 AM: micro_avg: validation: 0.000000
09/16 07:58:17 AM: edges-rel-semeval_mcc: training: 0.658574 validation: 0.582200
09/16 07:58:17 AM: edges-rel-semeval_acc: training: 0.503125 validation: 0.416014
09/16 07:58:17 AM: edges-rel-semeval_precision: training: 0.842079 validation: 0.829966
09/16 07:58:17 AM: edges-rel-semeval_recall: training: 0.536563 validation: 0.429069
09/16 07:58:17 AM: edges-rel-semeval_f1: training: 0.655469 validation: 0.565691
09/16 07:58:17 AM: Global learning rate: 0.0001
09/16 07:58:17 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:58:22 AM: ***** Step 1300 / Validation 13 *****
09/16 07:58:22 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:22 AM: Validating...
09/16 07:58:23 AM: Evaluate: task edges-rel-semeval, batch 20 (36): mcc: 0.6120, acc: 0.4641, precision: 0.8187, recall: 0.4797, f1: 0.6049, edges-rel-semeval_loss: 0.0914
09/16 07:58:24 AM: Updating LR scheduler:
09/16 07:58:24 AM: 	Best result seen so far for macro_avg: 0.574
09/16 07:58:24 AM: 	# validation passes without improvement: 2
09/16 07:58:24 AM: edges-rel-semeval_loss: training: 0.081495 validation: 0.096340
09/16 07:58:24 AM: macro_avg: validation: 0.564444
09/16 07:58:24 AM: micro_avg: validation: 0.000000
09/16 07:58:24 AM: edges-rel-semeval_mcc: training: 0.663146 validation: 0.571348
09/16 07:58:24 AM: edges-rel-semeval_acc: training: 0.510880 validation: 0.422977
09/16 07:58:24 AM: edges-rel-semeval_precision: training: 0.834933 validation: 0.780338
09/16 07:58:24 AM: edges-rel-semeval_recall: training: 0.548723 validation: 0.442124
09/16 07:58:24 AM: edges-rel-semeval_f1: training: 0.662226 validation: 0.564444
09/16 07:58:24 AM: Global learning rate: 0.0001
09/16 07:58:24 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:58:29 AM: ***** Step 1400 / Validation 14 *****
09/16 07:58:29 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:29 AM: Validating...
09/16 07:58:31 AM: Updating LR scheduler:
09/16 07:58:31 AM: 	Best result seen so far for macro_avg: 0.574
09/16 07:58:31 AM: 	# validation passes without improvement: 3
09/16 07:58:31 AM: edges-rel-semeval_loss: training: 0.075653 validation: 0.094380
09/16 07:58:31 AM: macro_avg: validation: 0.572727
09/16 07:58:31 AM: micro_avg: validation: 0.000000
09/16 07:58:31 AM: edges-rel-semeval_mcc: training: 0.701125 validation: 0.586841
09/16 07:58:31 AM: edges-rel-semeval_acc: training: 0.550312 validation: 0.422977
09/16 07:58:31 AM: edges-rel-semeval_precision: training: 0.864282 validation: 0.824877
09/16 07:58:31 AM: edges-rel-semeval_recall: training: 0.589063 validation: 0.438642
09/16 07:58:31 AM: edges-rel-semeval_f1: training: 0.700613 validation: 0.572727
09/16 07:58:31 AM: Global learning rate: 0.0001
09/16 07:58:31 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:58:33 AM: Update 1440: task edges-rel-semeval, batch 40 (1440): mcc: 0.6942, acc: 0.5523, precision: 0.8466, recall: 0.5906, f1: 0.6958, edges-rel-semeval_loss: 0.0758
09/16 07:58:36 AM: ***** Step 1500 / Validation 15 *****
09/16 07:58:36 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:36 AM: Validating...
09/16 07:58:38 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:38 AM: Best result seen so far for macro.
09/16 07:58:38 AM: Updating LR scheduler:
09/16 07:58:38 AM: 	Best result seen so far for macro_avg: 0.590
09/16 07:58:38 AM: 	# validation passes without improvement: 0
09/16 07:58:38 AM: edges-rel-semeval_loss: training: 0.077146 validation: 0.095360
09/16 07:58:38 AM: macro_avg: validation: 0.590255
09/16 07:58:38 AM: micro_avg: validation: 0.000000
09/16 07:58:38 AM: edges-rel-semeval_mcc: training: 0.686349 validation: 0.598452
09/16 07:58:38 AM: edges-rel-semeval_acc: training: 0.540937 validation: 0.449956
09/16 07:58:38 AM: edges-rel-semeval_precision: training: 0.841012 validation: 0.811263
09/16 07:58:38 AM: edges-rel-semeval_recall: training: 0.581875 validation: 0.463882
09/16 07:58:38 AM: edges-rel-semeval_f1: training: 0.687846 validation: 0.590255
09/16 07:58:38 AM: Global learning rate: 0.0001
09/16 07:58:38 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:58:43 AM: Update 1577: task edges-rel-semeval, batch 77 (1577): mcc: 0.7327, acc: 0.5922, precision: 0.8639, recall: 0.6415, f1: 0.7363, edges-rel-semeval_loss: 0.0690
09/16 07:58:44 AM: ***** Step 1600 / Validation 16 *****
09/16 07:58:44 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:44 AM: Validating...
09/16 07:58:47 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:47 AM: Best result seen so far for macro.
09/16 07:58:47 AM: Updating LR scheduler:
09/16 07:58:47 AM: 	Best result seen so far for macro_avg: 0.619
09/16 07:58:47 AM: 	# validation passes without improvement: 0
09/16 07:58:47 AM: edges-rel-semeval_loss: training: 0.068800 validation: 0.092775
09/16 07:58:47 AM: macro_avg: validation: 0.618767
09/16 07:58:47 AM: micro_avg: validation: 0.000000
09/16 07:58:47 AM: edges-rel-semeval_mcc: training: 0.731027 validation: 0.621167
09/16 07:58:47 AM: edges-rel-semeval_acc: training: 0.589719 validation: 0.475196
09/16 07:58:47 AM: edges-rel-semeval_precision: training: 0.863598 validation: 0.805866
09/16 07:58:47 AM: edges-rel-semeval_recall: training: 0.638915 validation: 0.502176
09/16 07:58:47 AM: edges-rel-semeval_f1: training: 0.734457 validation: 0.618767
09/16 07:58:47 AM: Global learning rate: 0.0001
09/16 07:58:47 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:58:52 AM: ***** Step 1700 / Validation 17 *****
09/16 07:58:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:52 AM: Validating...
09/16 07:58:53 AM: Evaluate: task edges-rel-semeval, batch 24 (36): mcc: 0.6250, acc: 0.4857, precision: 0.8143, recall: 0.5026, f1: 0.6216, edges-rel-semeval_loss: 0.0895
09/16 07:58:54 AM: Updating LR scheduler:
09/16 07:58:54 AM: 	Best result seen so far for macro_avg: 0.619
09/16 07:58:54 AM: 	# validation passes without improvement: 1
09/16 07:58:54 AM: edges-rel-semeval_loss: training: 0.071163 validation: 0.092373
09/16 07:58:54 AM: macro_avg: validation: 0.606257
09/16 07:58:54 AM: micro_avg: validation: 0.000000
09/16 07:58:54 AM: edges-rel-semeval_mcc: training: 0.717940 validation: 0.609097
09/16 07:58:54 AM: edges-rel-semeval_acc: training: 0.576875 validation: 0.465622
09/16 07:58:54 AM: edges-rel-semeval_precision: training: 0.854818 validation: 0.797163
09/16 07:58:54 AM: edges-rel-semeval_recall: training: 0.623750 validation: 0.489121
09/16 07:58:54 AM: edges-rel-semeval_f1: training: 0.721229 validation: 0.606257
09/16 07:58:54 AM: Global learning rate: 0.0001
09/16 07:58:54 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:59:00 AM: ***** Step 1800 / Validation 18 *****
09/16 07:59:00 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:00 AM: Validating...
09/16 07:59:02 AM: Updating LR scheduler:
09/16 07:59:02 AM: 	Best result seen so far for macro_avg: 0.619
09/16 07:59:02 AM: 	# validation passes without improvement: 2
09/16 07:59:02 AM: edges-rel-semeval_loss: training: 0.065185 validation: 0.094695
09/16 07:59:02 AM: macro_avg: validation: 0.612378
09/16 07:59:02 AM: micro_avg: validation: 0.000000
09/16 07:59:02 AM: edges-rel-semeval_mcc: training: 0.743550 validation: 0.617253
09/16 07:59:02 AM: edges-rel-semeval_acc: training: 0.611794 validation: 0.471715
09/16 07:59:02 AM: edges-rel-semeval_precision: training: 0.872054 validation: 0.813853
09/16 07:59:02 AM: edges-rel-semeval_recall: training: 0.653422 validation: 0.490862
09/16 07:59:02 AM: edges-rel-semeval_f1: training: 0.747070 validation: 0.612378
09/16 07:59:02 AM: Global learning rate: 0.0001
09/16 07:59:02 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:59:03 AM: Update 1828: task edges-rel-semeval, batch 28 (1828): mcc: 0.7280, acc: 0.5938, precision: 0.8521, recall: 0.6429, f1: 0.7328, edges-rel-semeval_loss: 0.0682
09/16 07:59:07 AM: ***** Step 1900 / Validation 19 *****
09/16 07:59:07 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:07 AM: Validating...
09/16 07:59:09 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:09 AM: Best result seen so far for macro.
09/16 07:59:09 AM: Updating LR scheduler:
09/16 07:59:09 AM: 	Best result seen so far for macro_avg: 0.625
09/16 07:59:09 AM: 	# validation passes without improvement: 0
09/16 07:59:09 AM: edges-rel-semeval_loss: training: 0.066999 validation: 0.091039
09/16 07:59:09 AM: macro_avg: validation: 0.624934
09/16 07:59:09 AM: micro_avg: validation: 0.000000
09/16 07:59:09 AM: edges-rel-semeval_mcc: training: 0.736123 validation: 0.623624
09/16 07:59:09 AM: edges-rel-semeval_acc: training: 0.600625 validation: 0.490862
09/16 07:59:09 AM: edges-rel-semeval_precision: training: 0.863997 validation: 0.789894
09/16 07:59:09 AM: edges-rel-semeval_recall: training: 0.647187 validation: 0.516971
09/16 07:59:09 AM: edges-rel-semeval_f1: training: 0.740039 validation: 0.624934
09/16 07:59:09 AM: Global learning rate: 0.0001
09/16 07:59:09 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:59:13 AM: Update 1957: task edges-rel-semeval, batch 57 (1957): mcc: 0.7433, acc: 0.6117, precision: 0.8582, recall: 0.6641, f1: 0.7487, edges-rel-semeval_loss: 0.0643
09/16 07:59:15 AM: ***** Step 2000 / Validation 20 *****
09/16 07:59:15 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:15 AM: Validating...
09/16 07:59:18 AM: Updating LR scheduler:
09/16 07:59:18 AM: 	Best result seen so far for macro_avg: 0.625
09/16 07:59:18 AM: 	# validation passes without improvement: 1
09/16 07:59:18 AM: edges-rel-semeval_loss: training: 0.061197 validation: 0.092176
09/16 07:59:18 AM: macro_avg: validation: 0.617472
09/16 07:59:18 AM: micro_avg: validation: 0.000000
09/16 07:59:18 AM: edges-rel-semeval_mcc: training: 0.764509 validation: 0.622607
09/16 07:59:18 AM: edges-rel-semeval_acc: training: 0.638915 validation: 0.476066
09/16 07:59:18 AM: edges-rel-semeval_precision: training: 0.872256 validation: 0.819885
09/16 07:59:18 AM: edges-rel-semeval_recall: training: 0.689057 validation: 0.495213
09/16 07:59:18 AM: edges-rel-semeval_f1: training: 0.769908 validation: 0.617472
09/16 07:59:18 AM: Global learning rate: 0.0001
09/16 07:59:18 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:59:23 AM: ***** Step 2100 / Validation 21 *****
09/16 07:59:23 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:23 AM: Validating...
09/16 07:59:23 AM: Evaluate: task edges-rel-semeval, batch 6 (36): mcc: 0.6761, acc: 0.5365, precision: 0.8678, recall: 0.5469, f1: 0.6709, edges-rel-semeval_loss: 0.0796
09/16 07:59:25 AM: Updating LR scheduler:
09/16 07:59:25 AM: 	Best result seen so far for macro_avg: 0.625
09/16 07:59:25 AM: 	# validation passes without improvement: 2
09/16 07:59:25 AM: edges-rel-semeval_loss: training: 0.062082 validation: 0.091590
09/16 07:59:25 AM: macro_avg: validation: 0.609585
09/16 07:59:25 AM: micro_avg: validation: 0.000000
09/16 07:59:25 AM: edges-rel-semeval_mcc: training: 0.758923 validation: 0.612298
09/16 07:59:25 AM: edges-rel-semeval_acc: training: 0.628125 validation: 0.469974
09/16 07:59:25 AM: edges-rel-semeval_precision: training: 0.866588 validation: 0.799435
09/16 07:59:25 AM: edges-rel-semeval_recall: training: 0.684062 validation: 0.492602
09/16 07:59:25 AM: edges-rel-semeval_f1: training: 0.764583 validation: 0.609585
09/16 07:59:25 AM: Global learning rate: 0.0001
09/16 07:59:25 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:59:31 AM: ***** Step 2200 / Validation 22 *****
09/16 07:59:31 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:31 AM: Validating...
09/16 07:59:33 AM: Evaluate: task edges-rel-semeval, batch 32 (36): mcc: 0.6591, acc: 0.5322, precision: 0.8173, recall: 0.5547, f1: 0.6608, edges-rel-semeval_loss: 0.0863
09/16 07:59:34 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:34 AM: Best result seen so far for macro.
09/16 07:59:34 AM: Updating LR scheduler:
09/16 07:59:34 AM: 	Best result seen so far for macro_avg: 0.639
09/16 07:59:34 AM: 	# validation passes without improvement: 0
09/16 07:59:34 AM: edges-rel-semeval_loss: training: 0.060705 validation: 0.090502
09/16 07:59:34 AM: macro_avg: validation: 0.639035
09/16 07:59:34 AM: micro_avg: validation: 0.000000
09/16 07:59:34 AM: edges-rel-semeval_mcc: training: 0.755559 validation: 0.638159
09/16 07:59:34 AM: edges-rel-semeval_acc: training: 0.627247 validation: 0.505657
09/16 07:59:34 AM: edges-rel-semeval_precision: training: 0.864183 validation: 0.804491
09/16 07:59:34 AM: edges-rel-semeval_recall: training: 0.680227 validation: 0.530026
09/16 07:59:34 AM: edges-rel-semeval_f1: training: 0.761249 validation: 0.639035
09/16 07:59:34 AM: Global learning rate: 0.0001
09/16 07:59:34 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:59:39 AM: ***** Step 2300 / Validation 23 *****
09/16 07:59:39 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:39 AM: Validating...
09/16 07:59:41 AM: Updating LR scheduler:
09/16 07:59:41 AM: 	Best result seen so far for macro_avg: 0.639
09/16 07:59:41 AM: 	# validation passes without improvement: 1
09/16 07:59:41 AM: edges-rel-semeval_loss: training: 0.060283 validation: 0.092724
09/16 07:59:41 AM: macro_avg: validation: 0.619202
09/16 07:59:41 AM: micro_avg: validation: 0.000000
09/16 07:59:41 AM: edges-rel-semeval_mcc: training: 0.759238 validation: 0.623022
09/16 07:59:41 AM: edges-rel-semeval_acc: training: 0.634687 validation: 0.483899
09/16 07:59:41 AM: edges-rel-semeval_precision: training: 0.863084 validation: 0.814184
09/16 07:59:41 AM: edges-rel-semeval_recall: training: 0.687500 validation: 0.499565
09/16 07:59:41 AM: edges-rel-semeval_f1: training: 0.765351 validation: 0.619202
09/16 07:59:41 AM: Global learning rate: 0.0001
09/16 07:59:41 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:59:43 AM: Update 2344: task edges-rel-semeval, batch 44 (2344): mcc: 0.7730, acc: 0.6484, precision: 0.8842, recall: 0.6939, f1: 0.7776, edges-rel-semeval_loss: 0.0594
09/16 07:59:47 AM: ***** Step 2400 / Validation 24 *****
09/16 07:59:47 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:47 AM: Validating...
09/16 07:59:49 AM: Updating LR scheduler:
09/16 07:59:49 AM: 	Best result seen so far for macro_avg: 0.639
09/16 07:59:49 AM: 	# validation passes without improvement: 2
09/16 07:59:49 AM: edges-rel-semeval_loss: training: 0.057265 validation: 0.090958
09/16 07:59:49 AM: macro_avg: validation: 0.616558
09/16 07:59:49 AM: micro_avg: validation: 0.000000
09/16 07:59:49 AM: edges-rel-semeval_mcc: training: 0.783091 validation: 0.622575
09/16 07:59:49 AM: edges-rel-semeval_acc: training: 0.662882 validation: 0.478677
09/16 07:59:49 AM: edges-rel-semeval_precision: training: 0.885265 validation: 0.823872
09/16 07:59:49 AM: edges-rel-semeval_recall: training: 0.710501 validation: 0.492602
09/16 07:59:49 AM: edges-rel-semeval_f1: training: 0.788314 validation: 0.616558
09/16 07:59:49 AM: Global learning rate: 0.0001
09/16 07:59:49 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 07:59:53 AM: Update 2479: task edges-rel-semeval, batch 79 (2479): mcc: 0.7935, acc: 0.6788, precision: 0.8867, recall: 0.7275, f1: 0.7992, edges-rel-semeval_loss: 0.0548
09/16 07:59:54 AM: ***** Step 2500 / Validation 25 *****
09/16 07:59:54 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:54 AM: Validating...
09/16 07:59:57 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:57 AM: Best result seen so far for macro.
09/16 07:59:57 AM: Updating LR scheduler:
09/16 07:59:57 AM: 	Best result seen so far for macro_avg: 0.640
09/16 07:59:57 AM: 	# validation passes without improvement: 0
09/16 07:59:57 AM: edges-rel-semeval_loss: training: 0.055314 validation: 0.091210
09/16 07:59:57 AM: macro_avg: validation: 0.640000
09/16 07:59:57 AM: micro_avg: validation: 0.000000
09/16 07:59:57 AM: edges-rel-semeval_mcc: training: 0.792362 validation: 0.639842
09/16 07:59:57 AM: edges-rel-semeval_acc: training: 0.677500 validation: 0.504787
09/16 07:59:57 AM: edges-rel-semeval_precision: training: 0.886893 validation: 0.809587
09/16 07:59:57 AM: edges-rel-semeval_recall: training: 0.725312 validation: 0.529156
09/16 07:59:57 AM: edges-rel-semeval_f1: training: 0.798006 validation: 0.640000
09/16 07:59:57 AM: Global learning rate: 0.0001
09/16 07:59:57 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 08:00:03 AM: ***** Step 2600 / Validation 26 *****
09/16 08:00:03 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:03 AM: Validating...
09/16 08:00:03 AM: Evaluate: task edges-rel-semeval, batch 8 (36): mcc: 0.7021, acc: 0.5742, precision: 0.8547, recall: 0.5977, f1: 0.7034, edges-rel-semeval_loss: 0.0770
09/16 08:00:05 AM: Updating LR scheduler:
09/16 08:00:05 AM: 	Best result seen so far for macro_avg: 0.640
09/16 08:00:05 AM: 	# validation passes without improvement: 1
09/16 08:00:05 AM: edges-rel-semeval_loss: training: 0.056723 validation: 0.091559
09/16 08:00:05 AM: macro_avg: validation: 0.627943
09/16 08:00:05 AM: micro_avg: validation: 0.000000
09/16 08:00:05 AM: edges-rel-semeval_mcc: training: 0.777212 validation: 0.625784
09/16 08:00:05 AM: edges-rel-semeval_acc: training: 0.655944 validation: 0.496084
09/16 08:00:05 AM: edges-rel-semeval_precision: training: 0.868199 validation: 0.787402
09/16 08:00:05 AM: edges-rel-semeval_recall: training: 0.714601 validation: 0.522193
09/16 08:00:05 AM: edges-rel-semeval_f1: training: 0.783947 validation: 0.627943
09/16 08:00:05 AM: Global learning rate: 0.0001
09/16 08:00:05 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 08:00:10 AM: ***** Step 2700 / Validation 27 *****
09/16 08:00:10 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:10 AM: Validating...
09/16 08:00:13 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:13 AM: Best result seen so far for macro.
09/16 08:00:13 AM: Updating LR scheduler:
09/16 08:00:13 AM: 	Best result seen so far for macro_avg: 0.642
09/16 08:00:13 AM: 	# validation passes without improvement: 0
09/16 08:00:13 AM: edges-rel-semeval_loss: training: 0.051800 validation: 0.090406
09/16 08:00:13 AM: macro_avg: validation: 0.642040
09/16 08:00:13 AM: micro_avg: validation: 0.000000
09/16 08:00:13 AM: edges-rel-semeval_mcc: training: 0.805793 validation: 0.639705
09/16 08:00:13 AM: edges-rel-semeval_acc: training: 0.696250 validation: 0.515231
09/16 08:00:13 AM: edges-rel-semeval_precision: training: 0.885041 validation: 0.798189
09/16 08:00:13 AM: edges-rel-semeval_recall: training: 0.750625 validation: 0.536989
09/16 08:00:13 AM: edges-rel-semeval_f1: training: 0.812310 validation: 0.642040
09/16 08:00:13 AM: Global learning rate: 0.0001
09/16 08:00:13 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 08:00:13 AM: Update 2712: task edges-rel-semeval, batch 12 (2712): mcc: 0.7852, acc: 0.6667, precision: 0.8646, recall: 0.7318, f1: 0.7927, edges-rel-semeval_loss: 0.0555
09/16 08:00:19 AM: ***** Step 2800 / Validation 28 *****
09/16 08:00:19 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:19 AM: Validating...
09/16 08:00:21 AM: Updating LR scheduler:
09/16 08:00:21 AM: 	Best result seen so far for macro_avg: 0.642
09/16 08:00:21 AM: 	# validation passes without improvement: 1
09/16 08:00:21 AM: edges-rel-semeval_loss: training: 0.055115 validation: 0.092435
09/16 08:00:21 AM: macro_avg: validation: 0.628450
09/16 08:00:21 AM: micro_avg: validation: 0.000000
09/16 08:00:21 AM: edges-rel-semeval_mcc: training: 0.784164 validation: 0.629284
09/16 08:00:21 AM: edges-rel-semeval_acc: training: 0.669190 validation: 0.496954
09/16 08:00:21 AM: edges-rel-semeval_precision: training: 0.868173 validation: 0.805442
09/16 08:00:21 AM: edges-rel-semeval_recall: training: 0.726900 validation: 0.515231
09/16 08:00:21 AM: edges-rel-semeval_f1: training: 0.791280 validation: 0.628450
09/16 08:00:21 AM: Global learning rate: 0.0001
09/16 08:00:21 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 08:00:23 AM: Update 2844: task edges-rel-semeval, batch 44 (2844): mcc: 0.8240, acc: 0.7216, precision: 0.9017, recall: 0.7685, f1: 0.8298, edges-rel-semeval_loss: 0.0486
09/16 08:00:26 AM: ***** Step 2900 / Validation 29 *****
09/16 08:00:26 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:26 AM: Validating...
09/16 08:00:29 AM: Updating LR scheduler:
09/16 08:00:29 AM: 	Best result seen so far for macro_avg: 0.642
09/16 08:00:29 AM: 	# validation passes without improvement: 2
09/16 08:00:29 AM: edges-rel-semeval_loss: training: 0.049314 validation: 0.094162
09/16 08:00:29 AM: macro_avg: validation: 0.627056
09/16 08:00:29 AM: micro_avg: validation: 0.000000
09/16 08:00:29 AM: edges-rel-semeval_mcc: training: 0.816989 validation: 0.627675
09/16 08:00:29 AM: edges-rel-semeval_acc: training: 0.708438 validation: 0.496954
09/16 08:00:29 AM: edges-rel-semeval_precision: training: 0.891764 validation: 0.802989
09/16 08:00:29 AM: edges-rel-semeval_recall: training: 0.764687 validation: 0.514360
09/16 08:00:29 AM: edges-rel-semeval_f1: training: 0.823351 validation: 0.627056
09/16 08:00:29 AM: Global learning rate: 0.0001
09/16 08:00:29 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 08:00:33 AM: Update 3000: task edges-rel-semeval, batch 100 (3000): mcc: 0.7968, acc: 0.6869, precision: 0.8721, recall: 0.7459, f1: 0.8041, edges-rel-semeval_loss: 0.0537
09/16 08:00:33 AM: ***** Step 3000 / Validation 30 *****
09/16 08:00:33 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:33 AM: Validating...
09/16 08:00:36 AM: Updating LR scheduler:
09/16 08:00:36 AM: 	Best result seen so far for macro_avg: 0.642
09/16 08:00:36 AM: 	# validation passes without improvement: 3
09/16 08:00:36 AM: edges-rel-semeval_loss: training: 0.053690 validation: 0.090632
09/16 08:00:36 AM: macro_avg: validation: 0.637985
09/16 08:00:36 AM: micro_avg: validation: 0.000000
09/16 08:00:36 AM: edges-rel-semeval_mcc: training: 0.796800 validation: 0.637037
09/16 08:00:36 AM: edges-rel-semeval_acc: training: 0.686875 validation: 0.504787
09/16 08:00:36 AM: edges-rel-semeval_precision: training: 0.872123 validation: 0.803170
09/16 08:00:36 AM: edges-rel-semeval_recall: training: 0.745938 validation: 0.529156
09/16 08:00:36 AM: edges-rel-semeval_f1: training: 0.804110 validation: 0.637985
09/16 08:00:36 AM: Global learning rate: 0.0001
09/16 08:00:36 AM: Saving checkpoints to: ./experiments/rel-semeval-sst-cat/run
09/16 08:00:42 AM: ***** Step 3100 / Validation 31 *****
09/16 08:00:42 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:42 AM: Validating...
09/16 08:00:44 AM: Evaluate: task edges-rel-semeval, batch 22 (36): mcc: 0.6603, acc: 0.5355, precision: 0.8211, recall: 0.5540, f1: 0.6616, edges-rel-semeval_loss: 0.0884
09/16 08:00:44 AM: Updating LR scheduler:
09/16 08:00:44 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 589, in main
    phase="target_train",
  File "/srv/home/ericwallace/jiant/jiant/trainer.py", line 682, in train
    all_val_metrics, should_save, new_best = self._validate(n_val, tasks, batch_size)
  File "/srv/home/ericwallace/jiant/jiant/trainer.py", line 985, in _validate
    scheduler.step(this_val_metric, val_pass)
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/site-packages/allennlp/training/learning_rate_schedulers/learning_rate_scheduler.py", line 65, in step
    self.lr_scheduler.step(metric, epoch)
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/site-packages/torch/optim/lr_scheduler.py", line 364, in step
    self._reduce_lr(epoch)
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/site-packages/torch/optim/lr_scheduler.py", line 376, in _reduce_lr
    ' of group {} to {:.4e}.'.format(epoch, i, new_lr))
OSError: [Errno 5] Input/output error
