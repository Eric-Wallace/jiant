09/16 04:34:28 AM: Git branch: master
09/16 04:34:28 AM: Git SHA: 52a642aef3eacce8abc7a255fdb75d41f405b9b1
09/16 04:34:28 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-mnli-top/",
  "exp_name": "experiments/rel-semeval-mnli-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-mnli-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/mnli",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/rel-semeval-mnli-top__run",
  "run_dir": "./experiments/rel-semeval-mnli-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 04:34:28 AM: Saved config to ./experiments/rel-semeval-mnli-top/run/params.conf
09/16 04:34:28 AM: Using random seed 1234
09/16 04:34:28 AM: Using GPU 0
09/16 04:34:28 AM: Loading tasks...
09/16 04:34:28 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-mnli-top/
09/16 04:34:28 AM: 	Creating task edges-rel-semeval from scratch.
09/16 04:34:28 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 04:34:28 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 04:34:29 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 04:34:29 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 04:34:29 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 04:34:29 AM: 	Building vocab from scratch.
09/16 04:34:29 AM: 	Counting units for task edges-rel-semeval.
09/16 04:34:29 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 04:34:30 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 04:34:30 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 04:34:30 AM: 	Saved vocab to ./experiments/rel-semeval-mnli-top/vocab
09/16 04:34:30 AM: Loading token dictionary from ./experiments/rel-semeval-mnli-top/vocab.
09/16 04:34:30 AM: 	Loaded vocab from ./experiments/rel-semeval-mnli-top/vocab
09/16 04:34:30 AM: 	Vocab namespace bert_uncased: size 30524
09/16 04:34:30 AM: 	Vocab namespace tokens: size 16020
09/16 04:34:30 AM: 	Vocab namespace chars: size 59
09/16 04:34:30 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 04:34:30 AM: 	Finished building vocab.
09/16 04:34:30 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 04:34:31 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-mnli-top/preproc/edges-rel-semeval__train_data
09/16 04:34:31 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 04:34:31 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-mnli-top/preproc/edges-rel-semeval__val_data
09/16 04:34:31 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 04:34:32 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-mnli-top/preproc/edges-rel-semeval__test_data
09/16 04:34:32 AM: 	Finished indexing tasks
09/16 04:34:32 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 04:34:32 AM: 	  Training on 
09/16 04:34:32 AM: 	  Evaluating on edges-rel-semeval
09/16 04:34:32 AM: 	Finished loading tasks in 3.646s
09/16 04:34:32 AM: 	 Tasks: ['edges-rel-semeval']
09/16 04:34:32 AM: Building model...
09/16 04:34:32 AM: Using BERT model (bert-base-uncased).
09/16 04:34:32 AM: LOADING A FUNETUNED MODEL from: 
09/16 04:34:32 AM: models/mnli
09/16 04:34:32 AM: loading configuration file models/mnli/config.json
09/16 04:34:32 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "mnli",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 3,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 04:34:32 AM: loading weights file models/mnli/pytorch_model.bin
09/16 04:34:36 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpvih0s9xm
09/16 04:34:39 AM: copying /tmp/tmpvih0s9xm to cache at ./experiments/rel-semeval-mnli-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 04:34:39 AM: creating metadata file for ./experiments/rel-semeval-mnli-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 04:34:39 AM: removing temp file /tmp/tmpvih0s9xm
09/16 04:34:39 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-mnli-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 04:34:39 AM: Initializing parameters
09/16 04:34:39 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 04:34:39 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 04:34:39 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 04:34:39 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 04:34:39 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 04:34:39 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 04:34:39 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 04:34:44 AM: Model specification:
09/16 04:34:44 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 04:34:44 AM: Model parameters:
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 04:34:44 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 04:34:44 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 04:34:44 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 04:34:44 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 04:34:44 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 04:34:44 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 04:34:44 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 04:34:44 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 04:34:44 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 04:34:44 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 04:34:44 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 04:34:44 AM: Total number of parameters: 110143763 (1.10144e+08)
09/16 04:34:44 AM: Number of trainable parameters: 661523 (661523)
09/16 04:34:44 AM: Finished building model in 12.297s
09/16 04:34:44 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 04:34:46 AM: patience = 9
09/16 04:34:46 AM: val_interval = 100
09/16 04:34:46 AM: max_vals = 100
09/16 04:34:46 AM: cuda_device = 0
09/16 04:34:46 AM: grad_norm = 5.0
09/16 04:34:46 AM: grad_clipping = None
09/16 04:34:46 AM: lr_decay = 0.99
09/16 04:34:46 AM: min_lr = 1e-06
09/16 04:34:46 AM: keep_all_checkpoints = 0
09/16 04:34:46 AM: val_data_limit = 5000
09/16 04:34:46 AM: max_epochs = -1
09/16 04:34:46 AM: dec_val_scale = 250
09/16 04:34:46 AM: training_data_fraction = 1
09/16 04:34:46 AM: type = adam
09/16 04:34:46 AM: parameter_groups = None
09/16 04:34:46 AM: Number of trainable parameters: 661523
09/16 04:34:46 AM: infer_type_and_cast = True
09/16 04:34:46 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 04:34:46 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 04:34:46 AM: lr = 0.0001
09/16 04:34:46 AM: amsgrad = True
09/16 04:34:46 AM: type = reduce_on_plateau
09/16 04:34:46 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 04:34:46 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 04:34:46 AM: mode = max
09/16 04:34:46 AM: factor = 0.5
09/16 04:34:46 AM: patience = 3
09/16 04:34:46 AM: threshold = 0.0001
09/16 04:34:46 AM: threshold_mode = abs
09/16 04:34:46 AM: verbose = True
09/16 04:34:46 AM: type = adam
09/16 04:34:46 AM: parameter_groups = None
09/16 04:34:46 AM: Number of trainable parameters: 661523
09/16 04:34:46 AM: infer_type_and_cast = True
09/16 04:34:46 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 04:34:46 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 04:34:46 AM: lr = 0.0001
09/16 04:34:46 AM: amsgrad = True
09/16 04:34:46 AM: type = reduce_on_plateau
09/16 04:34:46 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 04:34:46 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 04:34:46 AM: mode = max
09/16 04:34:46 AM: factor = 0.5
09/16 04:34:46 AM: patience = 3
09/16 04:34:46 AM: threshold = 0.0001
09/16 04:34:46 AM: threshold_mode = abs
09/16 04:34:46 AM: verbose = True
09/16 04:34:46 AM: Starting training without restoring from a checkpoint.
09/16 04:34:46 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 04:34:46 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 04:34:51 AM: ***** Step 100 / Validation 1 *****
09/16 04:34:51 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:34:51 AM: Validating...
09/16 04:34:54 AM: Best result seen so far for edges-rel-semeval.
09/16 04:34:54 AM: Best result seen so far for micro.
09/16 04:34:54 AM: Best result seen so far for macro.
09/16 04:34:54 AM: Updating LR scheduler:
09/16 04:34:54 AM: 	Best result seen so far for macro_avg: 0.000
09/16 04:34:54 AM: 	# validation passes without improvement: 0
09/16 04:34:54 AM: edges-rel-semeval_loss: training: 0.237984 validation: 0.178507
09/16 04:34:54 AM: macro_avg: validation: 0.000000
09/16 04:34:54 AM: micro_avg: validation: 0.000000
09/16 04:34:54 AM: edges-rel-semeval_mcc: training: 0.004531 validation: 0.000000
09/16 04:34:54 AM: edges-rel-semeval_acc: training: 0.001261 validation: 0.000000
09/16 04:34:54 AM: edges-rel-semeval_precision: training: 0.061460 validation: 0.000000
09/16 04:34:54 AM: edges-rel-semeval_recall: training: 0.015137 validation: 0.000000
09/16 04:34:54 AM: edges-rel-semeval_f1: training: 0.024291 validation: 0.000000
09/16 04:34:54 AM: Global learning rate: 0.0001
09/16 04:34:54 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:34:56 AM: Update 141: task edges-rel-semeval, batch 41 (141): mcc: -0.0026, acc: 0.0000, precision: 0.0000, recall: 0.0000, f1: 0.0000, edges-rel-semeval_loss: 0.1797
09/16 04:34:58 AM: ***** Step 200 / Validation 2 *****
09/16 04:34:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:34:58 AM: Validating...
09/16 04:35:01 AM: Best result seen so far for edges-rel-semeval.
09/16 04:35:01 AM: Best result seen so far for macro.
09/16 04:35:01 AM: Updating LR scheduler:
09/16 04:35:01 AM: 	Best result seen so far for macro_avg: 0.140
09/16 04:35:01 AM: 	# validation passes without improvement: 0
09/16 04:35:01 AM: edges-rel-semeval_loss: training: 0.171530 validation: 0.147042
09/16 04:35:01 AM: macro_avg: validation: 0.140323
09/16 04:35:01 AM: micro_avg: validation: 0.000000
09/16 04:35:01 AM: edges-rel-semeval_mcc: training: 0.107240 validation: 0.261755
09/16 04:35:01 AM: edges-rel-semeval_acc: training: 0.015938 validation: 0.075718
09/16 04:35:01 AM: edges-rel-semeval_precision: training: 0.784615 validation: 0.956044
09/16 04:35:01 AM: edges-rel-semeval_recall: training: 0.015937 validation: 0.075718
09/16 04:35:01 AM: edges-rel-semeval_f1: training: 0.031240 validation: 0.140323
09/16 04:35:01 AM: Global learning rate: 0.0001
09/16 04:35:01 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:35:06 AM: Update 284: task edges-rel-semeval, batch 84 (284): mcc: 0.3182, acc: 0.1245, precision: 0.8532, recall: 0.1267, f1: 0.2207, edges-rel-semeval_loss: 0.1452
09/16 04:35:07 AM: ***** Step 300 / Validation 3 *****
09/16 04:35:07 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:35:07 AM: Validating...
09/16 04:35:09 AM: Best result seen so far for edges-rel-semeval.
09/16 04:35:09 AM: Best result seen so far for macro.
09/16 04:35:09 AM: Updating LR scheduler:
09/16 04:35:09 AM: 	Best result seen so far for macro_avg: 0.333
09/16 04:35:09 AM: 	# validation passes without improvement: 0
09/16 04:35:09 AM: edges-rel-semeval_loss: training: 0.144052 validation: 0.124218
09/16 04:35:09 AM: macro_avg: validation: 0.332859
09/16 04:35:09 AM: micro_avg: validation: 0.000000
09/16 04:35:09 AM: edges-rel-semeval_mcc: training: 0.323747 validation: 0.419317
09/16 04:35:09 AM: edges-rel-semeval_acc: training: 0.130558 validation: 0.201044
09/16 04:35:09 AM: edges-rel-semeval_precision: training: 0.843687 validation: 0.910506
09/16 04:35:09 AM: edges-rel-semeval_recall: training: 0.132766 validation: 0.203655
09/16 04:35:09 AM: edges-rel-semeval_f1: training: 0.229428 validation: 0.332859
09/16 04:35:09 AM: Global learning rate: 0.0001
09/16 04:35:09 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:35:14 AM: ***** Step 400 / Validation 4 *****
09/16 04:35:14 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:35:14 AM: Validating...
09/16 04:35:16 AM: Best result seen so far for edges-rel-semeval.
09/16 04:35:16 AM: Best result seen so far for macro.
09/16 04:35:16 AM: Updating LR scheduler:
09/16 04:35:16 AM: 	Best result seen so far for macro_avg: 0.475
09/16 04:35:16 AM: 	# validation passes without improvement: 0
09/16 04:35:16 AM: edges-rel-semeval_loss: training: 0.124535 validation: 0.109616
09/16 04:35:16 AM: macro_avg: validation: 0.474598
09/16 04:35:16 AM: micro_avg: validation: 0.000000
09/16 04:35:16 AM: edges-rel-semeval_mcc: training: 0.436664 validation: 0.527853
09/16 04:35:16 AM: edges-rel-semeval_acc: training: 0.240937 validation: 0.316797
09/16 04:35:16 AM: edges-rel-semeval_precision: training: 0.819215 validation: 0.908867
09/16 04:35:16 AM: edges-rel-semeval_recall: training: 0.247812 validation: 0.321149
09/16 04:35:16 AM: edges-rel-semeval_f1: training: 0.380518 validation: 0.474598
09/16 04:35:16 AM: Global learning rate: 0.0001
09/16 04:35:16 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:35:16 AM: Update 401: task edges-rel-semeval, batch 1 (401): mcc: 0.4591, acc: 0.2500, precision: 0.8889, recall: 0.2500, f1: 0.3902, edges-rel-semeval_loss: 0.1212
09/16 04:35:21 AM: ***** Step 500 / Validation 5 *****
09/16 04:35:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:35:21 AM: Validating...
09/16 04:35:24 AM: Best result seen so far for edges-rel-semeval.
09/16 04:35:24 AM: Best result seen so far for macro.
09/16 04:35:24 AM: Updating LR scheduler:
09/16 04:35:24 AM: 	Best result seen so far for macro_avg: 0.556
09/16 04:35:24 AM: 	# validation passes without improvement: 0
09/16 04:35:24 AM: edges-rel-semeval_loss: training: 0.113998 validation: 0.100410
09/16 04:35:24 AM: macro_avg: validation: 0.556490
09/16 04:35:24 AM: micro_avg: validation: 0.000000
09/16 04:35:24 AM: edges-rel-semeval_mcc: training: 0.507407 validation: 0.589173
09/16 04:35:24 AM: edges-rel-semeval_acc: training: 0.307789 validation: 0.395126
09/16 04:35:24 AM: edges-rel-semeval_precision: training: 0.845070 validation: 0.899029
09/16 04:35:24 AM: edges-rel-semeval_recall: training: 0.321665 validation: 0.402959
09/16 04:35:24 AM: edges-rel-semeval_f1: training: 0.465966 validation: 0.556490
09/16 04:35:24 AM: Global learning rate: 0.0001
09/16 04:35:24 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:35:26 AM: Update 550: task edges-rel-semeval, batch 50 (550): mcc: 0.5760, acc: 0.3919, precision: 0.8564, recall: 0.4062, f1: 0.5511, edges-rel-semeval_loss: 0.1033
09/16 04:35:28 AM: ***** Step 600 / Validation 6 *****
09/16 04:35:28 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:35:28 AM: Validating...
09/16 04:35:31 AM: Best result seen so far for edges-rel-semeval.
09/16 04:35:31 AM: Best result seen so far for macro.
09/16 04:35:31 AM: Updating LR scheduler:
09/16 04:35:31 AM: 	Best result seen so far for macro_avg: 0.603
09/16 04:35:31 AM: 	# validation passes without improvement: 0
09/16 04:35:31 AM: edges-rel-semeval_loss: training: 0.103394 validation: 0.092646
09/16 04:35:31 AM: macro_avg: validation: 0.602975
09/16 04:35:31 AM: micro_avg: validation: 0.000000
09/16 04:35:31 AM: edges-rel-semeval_mcc: training: 0.574114 validation: 0.622199
09/16 04:35:31 AM: edges-rel-semeval_acc: training: 0.395625 validation: 0.453438
09/16 04:35:31 AM: edges-rel-semeval_precision: training: 0.844716 validation: 0.879800
09/16 04:35:31 AM: edges-rel-semeval_recall: training: 0.409687 validation: 0.458660
09/16 04:35:31 AM: edges-rel-semeval_f1: training: 0.551768 validation: 0.602975
09/16 04:35:31 AM: Global learning rate: 0.0001
09/16 04:35:31 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:35:36 AM: ***** Step 700 / Validation 7 *****
09/16 04:35:36 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:35:36 AM: Validating...
09/16 04:35:36 AM: Evaluate: task edges-rel-semeval, batch 1 (36): mcc: 0.6586, acc: 0.5312, precision: 0.8500, recall: 0.5312, f1: 0.6538, edges-rel-semeval_loss: 0.0786
09/16 04:35:38 AM: Best result seen so far for edges-rel-semeval.
09/16 04:35:38 AM: Best result seen so far for macro.
09/16 04:35:38 AM: Updating LR scheduler:
09/16 04:35:38 AM: 	Best result seen so far for macro_avg: 0.617
09/16 04:35:38 AM: 	# validation passes without improvement: 0
09/16 04:35:38 AM: edges-rel-semeval_loss: training: 0.098079 validation: 0.088529
09/16 04:35:38 AM: macro_avg: validation: 0.616610
09/16 04:35:38 AM: micro_avg: validation: 0.000000
09/16 04:35:38 AM: edges-rel-semeval_mcc: training: 0.590340 validation: 0.635244
09/16 04:35:38 AM: edges-rel-semeval_acc: training: 0.417849 validation: 0.469104
09/16 04:35:38 AM: edges-rel-semeval_precision: training: 0.832636 validation: 0.889984
09/16 04:35:38 AM: edges-rel-semeval_recall: training: 0.439294 validation: 0.471715
09/16 04:35:38 AM: edges-rel-semeval_f1: training: 0.575144 validation: 0.616610
09/16 04:35:38 AM: Global learning rate: 0.0001
09/16 04:35:38 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:35:43 AM: ***** Step 800 / Validation 8 *****
09/16 04:35:43 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:35:43 AM: Validating...
09/16 04:35:45 AM: Best result seen so far for edges-rel-semeval.
09/16 04:35:45 AM: Best result seen so far for macro.
09/16 04:35:45 AM: Updating LR scheduler:
09/16 04:35:45 AM: 	Best result seen so far for macro_avg: 0.655
09/16 04:35:45 AM: 	# validation passes without improvement: 0
09/16 04:35:45 AM: edges-rel-semeval_loss: training: 0.092883 validation: 0.084157
09/16 04:35:45 AM: macro_avg: validation: 0.655022
09/16 04:35:45 AM: micro_avg: validation: 0.000000
09/16 04:35:45 AM: edges-rel-semeval_mcc: training: 0.624532 validation: 0.664648
09/16 04:35:45 AM: edges-rel-semeval_acc: training: 0.455625 validation: 0.516101
09/16 04:35:45 AM: edges-rel-semeval_precision: training: 0.851502 validation: 0.878477
09/16 04:35:45 AM: edges-rel-semeval_recall: training: 0.478438 validation: 0.522193
09/16 04:35:45 AM: edges-rel-semeval_f1: training: 0.612645 validation: 0.655022
09/16 04:35:45 AM: Global learning rate: 0.0001
09/16 04:35:45 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:35:46 AM: Update 821: task edges-rel-semeval, batch 21 (821): mcc: 0.6316, acc: 0.4643, precision: 0.8579, recall: 0.4851, f1: 0.6198, edges-rel-semeval_loss: 0.0917
09/16 04:35:50 AM: ***** Step 900 / Validation 9 *****
09/16 04:35:50 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:35:50 AM: Validating...
09/16 04:35:53 AM: Best result seen so far for edges-rel-semeval.
09/16 04:35:53 AM: Best result seen so far for macro.
09/16 04:35:53 AM: Updating LR scheduler:
09/16 04:35:53 AM: 	Best result seen so far for macro_avg: 0.673
09/16 04:35:53 AM: 	# validation passes without improvement: 0
09/16 04:35:53 AM: edges-rel-semeval_loss: training: 0.090258 validation: 0.081993
09/16 04:35:53 AM: macro_avg: validation: 0.672669
09/16 04:35:53 AM: micro_avg: validation: 0.000000
09/16 04:35:53 AM: edges-rel-semeval_mcc: training: 0.629942 validation: 0.676175
09/16 04:35:53 AM: edges-rel-semeval_acc: training: 0.469883 validation: 0.534378
09/16 04:35:53 AM: edges-rel-semeval_precision: training: 0.838141 validation: 0.859269
09/16 04:35:53 AM: edges-rel-semeval_recall: training: 0.494797 validation: 0.552655
09/16 04:35:53 AM: edges-rel-semeval_f1: training: 0.622249 validation: 0.672669
09/16 04:35:53 AM: Global learning rate: 0.0001
09/16 04:35:53 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:35:56 AM: Update 965: task edges-rel-semeval, batch 65 (965): mcc: 0.6672, acc: 0.5111, precision: 0.8573, recall: 0.5399, f1: 0.6625, edges-rel-semeval_loss: 0.0834
09/16 04:35:58 AM: ***** Step 1000 / Validation 10 *****
09/16 04:35:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:35:58 AM: Validating...
09/16 04:36:00 AM: Best result seen so far for edges-rel-semeval.
09/16 04:36:00 AM: Best result seen so far for macro.
09/16 04:36:00 AM: Updating LR scheduler:
09/16 04:36:00 AM: 	Best result seen so far for macro_avg: 0.683
09/16 04:36:00 AM: 	# validation passes without improvement: 0
09/16 04:36:00 AM: edges-rel-semeval_loss: training: 0.083716 validation: 0.079601
09/16 04:36:00 AM: macro_avg: validation: 0.682776
09/16 04:36:00 AM: micro_avg: validation: 0.000000
09/16 04:36:00 AM: edges-rel-semeval_mcc: training: 0.660818 validation: 0.680853
09/16 04:36:00 AM: edges-rel-semeval_acc: training: 0.508750 validation: 0.557876
09/16 04:36:00 AM: edges-rel-semeval_precision: training: 0.846381 validation: 0.834171
09/16 04:36:00 AM: edges-rel-semeval_recall: training: 0.537188 validation: 0.577894
09/16 04:36:00 AM: edges-rel-semeval_f1: training: 0.657236 validation: 0.682776
09/16 04:36:00 AM: Global learning rate: 0.0001
09/16 04:36:00 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:36:06 AM: Update 1094: task edges-rel-semeval, batch 94 (1094): mcc: 0.6668, acc: 0.5146, precision: 0.8432, recall: 0.5488, f1: 0.6649, edges-rel-semeval_loss: 0.0825
09/16 04:36:06 AM: ***** Step 1100 / Validation 11 *****
09/16 04:36:06 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:36:06 AM: Validating...
09/16 04:36:09 AM: Best result seen so far for edges-rel-semeval.
09/16 04:36:09 AM: Best result seen so far for macro.
09/16 04:36:09 AM: Updating LR scheduler:
09/16 04:36:09 AM: 	Best result seen so far for macro_avg: 0.692
09/16 04:36:09 AM: 	# validation passes without improvement: 0
09/16 04:36:09 AM: edges-rel-semeval_loss: training: 0.082116 validation: 0.078994
09/16 04:36:09 AM: macro_avg: validation: 0.691988
09/16 04:36:09 AM: micro_avg: validation: 0.000000
09/16 04:36:09 AM: edges-rel-semeval_mcc: training: 0.669811 validation: 0.692984
09/16 04:36:09 AM: edges-rel-semeval_acc: training: 0.517818 validation: 0.569191
09/16 04:36:09 AM: edges-rel-semeval_precision: training: 0.846154 validation: 0.860285
09/16 04:36:09 AM: edges-rel-semeval_recall: training: 0.551561 validation: 0.578764
09/16 04:36:09 AM: edges-rel-semeval_f1: training: 0.667812 validation: 0.691988
09/16 04:36:09 AM: Global learning rate: 0.0001
09/16 04:36:09 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:36:13 AM: ***** Step 1200 / Validation 12 *****
09/16 04:36:13 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:36:13 AM: Validating...
09/16 04:36:16 AM: Updating LR scheduler:
09/16 04:36:16 AM: 	Best result seen so far for macro_avg: 0.692
09/16 04:36:16 AM: 	# validation passes without improvement: 1
09/16 04:36:16 AM: edges-rel-semeval_loss: training: 0.081512 validation: 0.076491
09/16 04:36:16 AM: macro_avg: validation: 0.689691
09/16 04:36:16 AM: micro_avg: validation: 0.000000
09/16 04:36:16 AM: edges-rel-semeval_mcc: training: 0.672578 validation: 0.688698
09/16 04:36:16 AM: edges-rel-semeval_acc: training: 0.530625 validation: 0.563098
09/16 04:36:16 AM: edges-rel-semeval_precision: training: 0.840845 validation: 0.845765
09/16 04:36:16 AM: edges-rel-semeval_recall: training: 0.559687 validation: 0.582245
09/16 04:36:16 AM: edges-rel-semeval_f1: training: 0.672045 validation: 0.689691
09/16 04:36:16 AM: Global learning rate: 0.0001
09/16 04:36:16 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:36:16 AM: Update 1203: task edges-rel-semeval, batch 3 (1203): mcc: 0.7557, acc: 0.6146, precision: 0.9375, recall: 0.6250, f1: 0.7500, edges-rel-semeval_loss: 0.0667
09/16 04:36:22 AM: ***** Step 1300 / Validation 13 *****
09/16 04:36:22 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:36:22 AM: Validating...
09/16 04:36:24 AM: Best result seen so far for edges-rel-semeval.
09/16 04:36:24 AM: Best result seen so far for macro.
09/16 04:36:24 AM: Updating LR scheduler:
09/16 04:36:24 AM: 	Best result seen so far for macro_avg: 0.702
09/16 04:36:24 AM: 	# validation passes without improvement: 0
09/16 04:36:24 AM: edges-rel-semeval_loss: training: 0.078773 validation: 0.075147
09/16 04:36:24 AM: macro_avg: validation: 0.701629
09/16 04:36:24 AM: micro_avg: validation: 0.000000
09/16 04:36:24 AM: edges-rel-semeval_mcc: training: 0.679320 validation: 0.699144
09/16 04:36:24 AM: edges-rel-semeval_acc: training: 0.534532 validation: 0.575283
09/16 04:36:24 AM: edges-rel-semeval_precision: training: 0.837017 validation: 0.845399
09/16 04:36:24 AM: edges-rel-semeval_recall: training: 0.573321 validation: 0.599652
09/16 04:36:24 AM: edges-rel-semeval_f1: training: 0.680517 validation: 0.701629
09/16 04:36:24 AM: Global learning rate: 0.0001
09/16 04:36:24 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:36:26 AM: Update 1335: task edges-rel-semeval, batch 35 (1335): mcc: 0.6984, acc: 0.5589, precision: 0.8506, recall: 0.5946, f1: 0.6999, edges-rel-semeval_loss: 0.0762
09/16 04:36:29 AM: ***** Step 1400 / Validation 14 *****
09/16 04:36:29 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:36:29 AM: Validating...
09/16 04:36:31 AM: Best result seen so far for edges-rel-semeval.
09/16 04:36:31 AM: Best result seen so far for macro.
09/16 04:36:31 AM: Updating LR scheduler:
09/16 04:36:31 AM: 	Best result seen so far for macro_avg: 0.713
09/16 04:36:31 AM: 	# validation passes without improvement: 0
09/16 04:36:31 AM: edges-rel-semeval_loss: training: 0.076073 validation: 0.075226
09/16 04:36:31 AM: macro_avg: validation: 0.712690
09/16 04:36:31 AM: micro_avg: validation: 0.000000
09/16 04:36:31 AM: edges-rel-semeval_mcc: training: 0.701350 validation: 0.710361
09/16 04:36:31 AM: edges-rel-semeval_acc: training: 0.563125 validation: 0.592689
09/16 04:36:31 AM: edges-rel-semeval_precision: training: 0.853191 validation: 0.855055
09/16 04:36:31 AM: edges-rel-semeval_recall: training: 0.597500 validation: 0.610966
09/16 04:36:31 AM: edges-rel-semeval_f1: training: 0.702812 validation: 0.712690
09/16 04:36:31 AM: Global learning rate: 0.0001
09/16 04:36:31 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:36:36 AM: Update 1498: task edges-rel-semeval, batch 98 (1498): mcc: 0.7132, acc: 0.5788, precision: 0.8561, recall: 0.6148, f1: 0.7157, edges-rel-semeval_loss: 0.0741
09/16 04:36:36 AM: ***** Step 1500 / Validation 15 *****
09/16 04:36:36 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:36:36 AM: Validating...
09/16 04:36:38 AM: Updating LR scheduler:
09/16 04:36:38 AM: 	Best result seen so far for macro_avg: 0.713
09/16 04:36:38 AM: 	# validation passes without improvement: 1
09/16 04:36:38 AM: edges-rel-semeval_loss: training: 0.074232 validation: 0.073586
09/16 04:36:38 AM: macro_avg: validation: 0.708693
09/16 04:36:38 AM: micro_avg: validation: 0.000000
09/16 04:36:38 AM: edges-rel-semeval_mcc: training: 0.712897 validation: 0.706382
09/16 04:36:38 AM: edges-rel-semeval_acc: training: 0.577812 validation: 0.584856
09/16 04:36:38 AM: edges-rel-semeval_precision: training: 0.855280 validation: 0.852078
09/16 04:36:38 AM: edges-rel-semeval_recall: training: 0.615000 validation: 0.606614
09/16 04:36:38 AM: edges-rel-semeval_f1: training: 0.715506 validation: 0.708693
09/16 04:36:38 AM: Global learning rate: 0.0001
09/16 04:36:38 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:36:44 AM: ***** Step 1600 / Validation 16 *****
09/16 04:36:44 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:36:44 AM: Validating...
09/16 04:36:46 AM: Evaluate: task edges-rel-semeval, batch 30 (36): mcc: 0.7352, acc: 0.6177, precision: 0.8732, recall: 0.6385, f1: 0.7377, edges-rel-semeval_loss: 0.0702
09/16 04:36:47 AM: Updating LR scheduler:
09/16 04:36:47 AM: 	Best result seen so far for macro_avg: 0.713
09/16 04:36:47 AM: 	# validation passes without improvement: 2
09/16 04:36:47 AM: edges-rel-semeval_loss: training: 0.071804 validation: 0.073997
09/16 04:36:47 AM: macro_avg: validation: 0.712037
09/16 04:36:47 AM: micro_avg: validation: 0.000000
09/16 04:36:47 AM: edges-rel-semeval_mcc: training: 0.722671 validation: 0.709755
09/16 04:36:47 AM: edges-rel-semeval_acc: training: 0.588143 validation: 0.589208
09/16 04:36:47 AM: edges-rel-semeval_precision: training: 0.856470 validation: 0.854878
09/16 04:36:47 AM: edges-rel-semeval_recall: training: 0.630400 validation: 0.610096
09/16 04:36:47 AM: edges-rel-semeval_f1: training: 0.726249 validation: 0.712037
09/16 04:36:47 AM: Global learning rate: 0.0001
09/16 04:36:47 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:36:51 AM: ***** Step 1700 / Validation 17 *****
09/16 04:36:51 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:36:51 AM: Validating...
09/16 04:36:53 AM: Best result seen so far for edges-rel-semeval.
09/16 04:36:53 AM: Best result seen so far for macro.
09/16 04:36:53 AM: Updating LR scheduler:
09/16 04:36:53 AM: 	Best result seen so far for macro_avg: 0.719
09/16 04:36:53 AM: 	# validation passes without improvement: 0
09/16 04:36:53 AM: edges-rel-semeval_loss: training: 0.072561 validation: 0.072278
09/16 04:36:53 AM: macro_avg: validation: 0.719446
09/16 04:36:53 AM: micro_avg: validation: 0.000000
09/16 04:36:53 AM: edges-rel-semeval_mcc: training: 0.709087 validation: 0.713490
09/16 04:36:53 AM: edges-rel-semeval_acc: training: 0.576562 validation: 0.602263
09/16 04:36:53 AM: edges-rel-semeval_precision: training: 0.838819 validation: 0.833716
09/16 04:36:53 AM: edges-rel-semeval_recall: training: 0.621250 validation: 0.632724
09/16 04:36:53 AM: edges-rel-semeval_f1: training: 0.713824 validation: 0.719446
09/16 04:36:53 AM: Global learning rate: 0.0001
09/16 04:36:53 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:36:56 AM: Update 1737: task edges-rel-semeval, batch 37 (1737): mcc: 0.7113, acc: 0.5844, precision: 0.8256, recall: 0.6355, f1: 0.7182, edges-rel-semeval_loss: 0.0700
09/16 04:36:59 AM: ***** Step 1800 / Validation 18 *****
09/16 04:36:59 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:36:59 AM: Validating...
09/16 04:37:01 AM: Best result seen so far for edges-rel-semeval.
09/16 04:37:01 AM: Best result seen so far for macro.
09/16 04:37:01 AM: Updating LR scheduler:
09/16 04:37:01 AM: 	Best result seen so far for macro_avg: 0.731
09/16 04:37:01 AM: 	# validation passes without improvement: 0
09/16 04:37:01 AM: edges-rel-semeval_loss: training: 0.070384 validation: 0.072224
09/16 04:37:01 AM: macro_avg: validation: 0.730940
09/16 04:37:01 AM: micro_avg: validation: 0.000000
09/16 04:37:01 AM: edges-rel-semeval_mcc: training: 0.715296 validation: 0.724828
09/16 04:37:01 AM: edges-rel-semeval_acc: training: 0.586566 validation: 0.618799
09/16 04:37:01 AM: edges-rel-semeval_precision: training: 0.842128 validation: 0.840498
09/16 04:37:01 AM: edges-rel-semeval_recall: training: 0.629139 validation: 0.646649
09/16 04:37:01 AM: edges-rel-semeval_f1: training: 0.720217 validation: 0.730940
09/16 04:37:01 AM: Global learning rate: 0.0001
09/16 04:37:01 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:37:06 AM: Update 1900: task edges-rel-semeval, batch 100 (1900): mcc: 0.7262, acc: 0.5988, precision: 0.8446, recall: 0.6456, f1: 0.7318, edges-rel-semeval_loss: 0.0693
09/16 04:37:06 AM: ***** Step 1900 / Validation 19 *****
09/16 04:37:06 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:37:06 AM: Validating...
09/16 04:37:08 AM: Best result seen so far for edges-rel-semeval.
09/16 04:37:08 AM: Best result seen so far for macro.
09/16 04:37:08 AM: Updating LR scheduler:
09/16 04:37:08 AM: 	Best result seen so far for macro_avg: 0.732
09/16 04:37:08 AM: 	# validation passes without improvement: 0
09/16 04:37:08 AM: edges-rel-semeval_loss: training: 0.069322 validation: 0.070735
09/16 04:37:08 AM: macro_avg: validation: 0.731994
09/16 04:37:08 AM: micro_avg: validation: 0.000000
09/16 04:37:08 AM: edges-rel-semeval_mcc: training: 0.726177 validation: 0.725417
09/16 04:37:08 AM: edges-rel-semeval_acc: training: 0.598750 validation: 0.620540
09/16 04:37:08 AM: edges-rel-semeval_precision: training: 0.844644 validation: 0.837444
09/16 04:37:08 AM: edges-rel-semeval_recall: training: 0.645625 validation: 0.650131
09/16 04:37:08 AM: edges-rel-semeval_f1: training: 0.731846 validation: 0.731994
09/16 04:37:08 AM: Global learning rate: 0.0001
09/16 04:37:08 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:37:15 AM: ***** Step 2000 / Validation 20 *****
09/16 04:37:15 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:37:15 AM: Validating...
09/16 04:37:16 AM: Evaluate: task edges-rel-semeval, batch 24 (36): mcc: 0.7488, acc: 0.6406, precision: 0.8716, recall: 0.6628, f1: 0.7530, edges-rel-semeval_loss: 0.0677
09/16 04:37:17 AM: Updating LR scheduler:
09/16 04:37:17 AM: 	Best result seen so far for macro_avg: 0.732
09/16 04:37:17 AM: 	# validation passes without improvement: 1
09/16 04:37:17 AM: edges-rel-semeval_loss: training: 0.066972 validation: 0.071240
09/16 04:37:17 AM: macro_avg: validation: 0.727091
09/16 04:37:17 AM: micro_avg: validation: 0.000000
09/16 04:37:17 AM: edges-rel-semeval_mcc: training: 0.735549 validation: 0.723382
09/16 04:37:17 AM: edges-rel-semeval_acc: training: 0.605803 validation: 0.611836
09/16 04:37:17 AM: edges-rel-semeval_precision: training: 0.857261 validation: 0.856132
09/16 04:37:17 AM: edges-rel-semeval_recall: training: 0.651529 validation: 0.631854
09/16 04:37:17 AM: edges-rel-semeval_f1: training: 0.740369 validation: 0.727091
09/16 04:37:17 AM: Global learning rate: 0.0001
09/16 04:37:17 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:37:21 AM: ***** Step 2100 / Validation 21 *****
09/16 04:37:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:37:21 AM: Validating...
09/16 04:37:24 AM: Best result seen so far for edges-rel-semeval.
09/16 04:37:24 AM: Best result seen so far for macro.
09/16 04:37:24 AM: Updating LR scheduler:
09/16 04:37:24 AM: 	Best result seen so far for macro_avg: 0.732
09/16 04:37:24 AM: 	# validation passes without improvement: 0
09/16 04:37:24 AM: edges-rel-semeval_loss: training: 0.066785 validation: 0.069676
09/16 04:37:24 AM: macro_avg: validation: 0.732490
09/16 04:37:24 AM: micro_avg: validation: 0.000000
09/16 04:37:24 AM: edges-rel-semeval_mcc: training: 0.731067 validation: 0.725008
09/16 04:37:24 AM: edges-rel-semeval_acc: training: 0.608125 validation: 0.623151
09/16 04:37:24 AM: edges-rel-semeval_precision: training: 0.851169 validation: 0.830209
09/16 04:37:24 AM: edges-rel-semeval_recall: training: 0.648750 validation: 0.655352
09/16 04:37:24 AM: edges-rel-semeval_f1: training: 0.736301 validation: 0.732490
09/16 04:37:24 AM: Global learning rate: 0.0001
09/16 04:37:24 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:37:27 AM: Update 2151: task edges-rel-semeval, batch 51 (2151): mcc: 0.7238, acc: 0.6014, precision: 0.8366, recall: 0.6482, f1: 0.7304, edges-rel-semeval_loss: 0.0690
09/16 04:37:29 AM: ***** Step 2200 / Validation 22 *****
09/16 04:37:29 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:37:29 AM: Validating...
09/16 04:37:32 AM: Updating LR scheduler:
09/16 04:37:32 AM: 	Best result seen so far for macro_avg: 0.732
09/16 04:37:32 AM: 	# validation passes without improvement: 1
09/16 04:37:32 AM: edges-rel-semeval_loss: training: 0.066258 validation: 0.069522
09/16 04:37:32 AM: macro_avg: validation: 0.727542
09/16 04:37:32 AM: micro_avg: validation: 0.000000
09/16 04:37:32 AM: edges-rel-semeval_mcc: training: 0.737291 validation: 0.721710
09/16 04:37:32 AM: edges-rel-semeval_acc: training: 0.617155 validation: 0.612707
09/16 04:37:32 AM: edges-rel-semeval_precision: training: 0.850752 validation: 0.840365
09/16 04:37:32 AM: edges-rel-semeval_recall: training: 0.659729 validation: 0.641427
09/16 04:37:32 AM: edges-rel-semeval_f1: training: 0.743162 validation: 0.727542
09/16 04:37:32 AM: Global learning rate: 0.0001
09/16 04:37:32 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:37:36 AM: ***** Step 2300 / Validation 23 *****
09/16 04:37:36 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:37:36 AM: Validating...
09/16 04:37:37 AM: Evaluate: task edges-rel-semeval, batch 12 (36): mcc: 0.7390, acc: 0.6458, precision: 0.8333, recall: 0.6771, f1: 0.7471, edges-rel-semeval_loss: 0.0647
09/16 04:37:39 AM: Updating LR scheduler:
09/16 04:37:39 AM: 	Best result seen so far for macro_avg: 0.732
09/16 04:37:39 AM: 	# validation passes without improvement: 2
09/16 04:37:39 AM: edges-rel-semeval_loss: training: 0.065817 validation: 0.069104
09/16 04:37:39 AM: macro_avg: validation: 0.723214
09/16 04:37:39 AM: micro_avg: validation: 0.000000
09/16 04:37:39 AM: edges-rel-semeval_mcc: training: 0.744257 validation: 0.717837
09/16 04:37:39 AM: edges-rel-semeval_acc: training: 0.622500 validation: 0.606614
09/16 04:37:39 AM: edges-rel-semeval_precision: training: 0.859394 validation: 0.840830
09/16 04:37:39 AM: edges-rel-semeval_recall: training: 0.664688 validation: 0.634465
09/16 04:37:39 AM: edges-rel-semeval_f1: training: 0.749604 validation: 0.723214
09/16 04:37:39 AM: Global learning rate: 0.0001
09/16 04:37:39 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:37:45 AM: ***** Step 2400 / Validation 24 *****
09/16 04:37:45 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:37:45 AM: Validating...
09/16 04:37:47 AM: Updating LR scheduler:
09/16 04:37:47 AM: 	Best result seen so far for macro_avg: 0.732
09/16 04:37:47 AM: 	# validation passes without improvement: 3
09/16 04:37:47 AM: edges-rel-semeval_loss: training: 0.063093 validation: 0.069441
09/16 04:37:47 AM: macro_avg: validation: 0.721557
09/16 04:37:47 AM: micro_avg: validation: 0.000000
09/16 04:37:47 AM: edges-rel-semeval_mcc: training: 0.745811 validation: 0.716973
09/16 04:37:47 AM: edges-rel-semeval_acc: training: 0.621255 validation: 0.601393
09/16 04:37:47 AM: edges-rel-semeval_precision: training: 0.850219 validation: 0.845614
09/16 04:37:47 AM: edges-rel-semeval_recall: training: 0.674866 validation: 0.629243
09/16 04:37:47 AM: edges-rel-semeval_f1: training: 0.752461 validation: 0.721557
09/16 04:37:47 AM: Global learning rate: 0.0001
09/16 04:37:47 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:37:47 AM: Update 2406: task edges-rel-semeval, batch 6 (2406): mcc: 0.7285, acc: 0.5833, precision: 0.8493, recall: 0.6458, f1: 0.7337, edges-rel-semeval_loss: 0.0649
09/16 04:37:52 AM: ***** Step 2500 / Validation 25 *****
09/16 04:37:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:37:52 AM: Validating...
09/16 04:37:54 AM: Best result seen so far for edges-rel-semeval.
09/16 04:37:54 AM: Best result seen so far for macro.
09/16 04:37:54 AM: Updating LR scheduler:
09/16 04:37:54 AM: 	Best result seen so far for macro_avg: 0.742
09/16 04:37:54 AM: 	# validation passes without improvement: 0
09/16 04:37:54 AM: edges-rel-semeval_loss: training: 0.063391 validation: 0.068928
09/16 04:37:54 AM: macro_avg: validation: 0.742248
09/16 04:37:54 AM: micro_avg: validation: 0.000000
09/16 04:37:54 AM: edges-rel-semeval_mcc: training: 0.752955 validation: 0.734846
09/16 04:37:54 AM: edges-rel-semeval_acc: training: 0.630625 validation: 0.636205
09/16 04:37:54 AM: edges-rel-semeval_precision: training: 0.862028 validation: 0.837158
09/16 04:37:54 AM: edges-rel-semeval_recall: training: 0.677500 validation: 0.666667
09/16 04:37:54 AM: edges-rel-semeval_f1: training: 0.758705 validation: 0.742248
09/16 04:37:54 AM: Global learning rate: 0.0001
09/16 04:37:54 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:37:57 AM: Update 2562: task edges-rel-semeval, batch 62 (2562): mcc: 0.7443, acc: 0.6260, precision: 0.8488, recall: 0.6734, f1: 0.7510, edges-rel-semeval_loss: 0.0647
09/16 04:38:01 AM: ***** Step 2600 / Validation 26 *****
09/16 04:38:01 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:38:01 AM: Validating...
09/16 04:38:03 AM: Best result seen so far for edges-rel-semeval.
09/16 04:38:03 AM: Best result seen so far for macro.
09/16 04:38:03 AM: Updating LR scheduler:
09/16 04:38:03 AM: 	Best result seen so far for macro_avg: 0.745
09/16 04:38:03 AM: 	# validation passes without improvement: 0
09/16 04:38:03 AM: edges-rel-semeval_loss: training: 0.063739 validation: 0.069192
09/16 04:38:03 AM: macro_avg: validation: 0.745060
09/16 04:38:03 AM: micro_avg: validation: 0.000000
09/16 04:38:03 AM: edges-rel-semeval_mcc: training: 0.752267 validation: 0.737196
09/16 04:38:03 AM: edges-rel-semeval_acc: training: 0.634185 validation: 0.642298
09/16 04:38:03 AM: edges-rel-semeval_precision: training: 0.856124 validation: 0.834773
09/16 04:38:03 AM: edges-rel-semeval_recall: training: 0.681173 validation: 0.672759
09/16 04:38:03 AM: edges-rel-semeval_f1: training: 0.758693 validation: 0.745060
09/16 04:38:03 AM: Global learning rate: 0.0001
09/16 04:38:03 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:38:07 AM: Update 2693: task edges-rel-semeval, batch 93 (2693): mcc: 0.7552, acc: 0.6391, precision: 0.8571, recall: 0.6855, f1: 0.7618, edges-rel-semeval_loss: 0.0611
09/16 04:38:08 AM: ***** Step 2700 / Validation 27 *****
09/16 04:38:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:38:08 AM: Validating...
09/16 04:38:10 AM: Updating LR scheduler:
09/16 04:38:10 AM: 	Best result seen so far for macro_avg: 0.745
09/16 04:38:10 AM: 	# validation passes without improvement: 1
09/16 04:38:10 AM: edges-rel-semeval_loss: training: 0.061598 validation: 0.068784
09/16 04:38:10 AM: macro_avg: validation: 0.733918
09/16 04:38:10 AM: micro_avg: validation: 0.000000
09/16 04:38:10 AM: edges-rel-semeval_mcc: training: 0.753311 validation: 0.726759
09/16 04:38:10 AM: edges-rel-semeval_acc: training: 0.635938 validation: 0.623151
09/16 04:38:10 AM: edges-rel-semeval_precision: training: 0.857087 validation: 0.833887
09/16 04:38:10 AM: edges-rel-semeval_recall: training: 0.682187 validation: 0.655352
09/16 04:38:10 AM: edges-rel-semeval_f1: training: 0.759701 validation: 0.733918
09/16 04:38:10 AM: Global learning rate: 0.0001
09/16 04:38:10 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:38:17 AM: ***** Step 2800 / Validation 28 *****
09/16 04:38:17 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:38:17 AM: Validating...
09/16 04:38:17 AM: Evaluate: task edges-rel-semeval, batch 9 (36): mcc: 0.7493, acc: 0.6701, precision: 0.8110, recall: 0.7153, f1: 0.7601, edges-rel-semeval_loss: 0.0612
09/16 04:38:19 AM: Updating LR scheduler:
09/16 04:38:19 AM: 	Best result seen so far for macro_avg: 0.745
09/16 04:38:19 AM: 	# validation passes without improvement: 2
09/16 04:38:19 AM: edges-rel-semeval_loss: training: 0.064319 validation: 0.068546
09/16 04:38:19 AM: macro_avg: validation: 0.740029
09/16 04:38:19 AM: micro_avg: validation: 0.000000
09/16 04:38:19 AM: edges-rel-semeval_mcc: training: 0.745748 validation: 0.731560
09/16 04:38:19 AM: edges-rel-semeval_acc: training: 0.626301 validation: 0.635335
09/16 04:38:19 AM: edges-rel-semeval_precision: training: 0.849326 validation: 0.826180
09/16 04:38:19 AM: edges-rel-semeval_recall: training: 0.675497 validation: 0.670148
09/16 04:38:19 AM: edges-rel-semeval_f1: training: 0.752503 validation: 0.740029
09/16 04:38:19 AM: Global learning rate: 0.0001
09/16 04:38:19 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:38:24 AM: ***** Step 2900 / Validation 29 *****
09/16 04:38:24 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:38:24 AM: Validating...
09/16 04:38:26 AM: Updating LR scheduler:
09/16 04:38:26 AM: 	Best result seen so far for macro_avg: 0.745
09/16 04:38:26 AM: 	# validation passes without improvement: 3
09/16 04:38:26 AM: edges-rel-semeval_loss: training: 0.060013 validation: 0.069100
09/16 04:38:26 AM: macro_avg: validation: 0.744209
09/16 04:38:26 AM: micro_avg: validation: 0.000000
09/16 04:38:26 AM: edges-rel-semeval_mcc: training: 0.762949 validation: 0.736463
09/16 04:38:26 AM: edges-rel-semeval_acc: training: 0.647500 validation: 0.637076
09/16 04:38:26 AM: edges-rel-semeval_precision: training: 0.862578 validation: 0.835320
09/16 04:38:26 AM: edges-rel-semeval_recall: training: 0.694375 validation: 0.671018
09/16 04:38:26 AM: edges-rel-semeval_f1: training: 0.769391 validation: 0.744209
09/16 04:38:26 AM: Global learning rate: 0.0001
09/16 04:38:26 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:38:27 AM: Update 2919: task edges-rel-semeval, batch 19 (2919): mcc: 0.7595, acc: 0.6530, precision: 0.8636, recall: 0.6875, f1: 0.7656, edges-rel-semeval_loss: 0.0651
09/16 04:38:32 AM: ***** Step 3000 / Validation 30 *****
09/16 04:38:32 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:38:32 AM: Validating...
09/16 04:38:34 AM: Updating LR scheduler:
09/16 04:38:34 AM: 	Best result seen so far for macro_avg: 0.745
09/16 04:38:34 AM: 	# validation passes without improvement: 0
09/16 04:38:34 AM: edges-rel-semeval_loss: training: 0.063203 validation: 0.068125
09/16 04:38:34 AM: macro_avg: validation: 0.737201
09/16 04:38:34 AM: micro_avg: validation: 0.000000
09/16 04:38:34 AM: edges-rel-semeval_mcc: training: 0.753777 validation: 0.730291
09/16 04:38:34 AM: edges-rel-semeval_acc: training: 0.634375 validation: 0.624891
09/16 04:38:34 AM: edges-rel-semeval_precision: training: 0.854305 validation: 0.838137
09/16 04:38:34 AM: edges-rel-semeval_recall: training: 0.685313 validation: 0.657963
09/16 04:38:34 AM: edges-rel-semeval_f1: training: 0.760534 validation: 0.737201
09/16 04:38:34 AM: Global learning rate: 5e-05
09/16 04:38:34 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:38:37 AM: Update 3039: task edges-rel-semeval, batch 39 (3039): mcc: 0.7636, acc: 0.6464, precision: 0.8566, recall: 0.7006, f1: 0.7708, edges-rel-semeval_loss: 0.0594
09/16 04:38:40 AM: ***** Step 3100 / Validation 31 *****
09/16 04:38:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:38:40 AM: Validating...
09/16 04:38:43 AM: Updating LR scheduler:
09/16 04:38:43 AM: 	Best result seen so far for macro_avg: 0.745
09/16 04:38:43 AM: 	# validation passes without improvement: 1
09/16 04:38:43 AM: edges-rel-semeval_loss: training: 0.059910 validation: 0.068542
09/16 04:38:43 AM: macro_avg: validation: 0.734513
09/16 04:38:43 AM: micro_avg: validation: 0.000000
09/16 04:38:43 AM: edges-rel-semeval_mcc: training: 0.757624 validation: 0.728542
09/16 04:38:43 AM: edges-rel-semeval_acc: training: 0.642384 validation: 0.619669
09/16 04:38:43 AM: edges-rel-semeval_precision: training: 0.854086 validation: 0.844068
09/16 04:38:43 AM: edges-rel-semeval_recall: training: 0.692211 validation: 0.650131
09/16 04:38:43 AM: edges-rel-semeval_f1: training: 0.764675 validation: 0.734513
09/16 04:38:43 AM: Global learning rate: 5e-05
09/16 04:38:43 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:38:47 AM: ***** Step 3200 / Validation 32 *****
09/16 04:38:47 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:38:47 AM: Validating...
09/16 04:38:47 AM: Evaluate: task edges-rel-semeval, batch 4 (36): mcc: 0.7866, acc: 0.7266, precision: 0.8559, recall: 0.7422, f1: 0.7950, edges-rel-semeval_loss: 0.0571
09/16 04:38:50 AM: Updating LR scheduler:
09/16 04:38:50 AM: 	Best result seen so far for macro_avg: 0.745
09/16 04:38:50 AM: 	# validation passes without improvement: 2
09/16 04:38:50 AM: edges-rel-semeval_loss: training: 0.058849 validation: 0.067835
09/16 04:38:50 AM: macro_avg: validation: 0.741388
09/16 04:38:50 AM: micro_avg: validation: 0.000000
09/16 04:38:50 AM: edges-rel-semeval_mcc: training: 0.772334 validation: 0.734112
09/16 04:38:50 AM: edges-rel-semeval_acc: training: 0.656875 validation: 0.633594
09/16 04:38:50 AM: edges-rel-semeval_precision: training: 0.872043 validation: 0.837719
09/16 04:38:50 AM: edges-rel-semeval_recall: training: 0.702812 validation: 0.664926
09/16 04:38:50 AM: edges-rel-semeval_f1: training: 0.778335 validation: 0.741388
09/16 04:38:50 AM: Global learning rate: 5e-05
09/16 04:38:50 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:38:55 AM: ***** Step 3300 / Validation 33 *****
09/16 04:38:55 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:38:55 AM: Validating...
09/16 04:38:58 AM: Evaluate: task edges-rel-semeval, batch 32 (36): mcc: 0.7640, acc: 0.6689, precision: 0.8613, recall: 0.6973, f1: 0.7706, edges-rel-semeval_loss: 0.0627
09/16 04:38:58 AM: Best result seen so far for edges-rel-semeval.
09/16 04:38:58 AM: Best result seen so far for macro.
09/16 04:38:58 AM: Updating LR scheduler:
09/16 04:38:58 AM: 	Best result seen so far for macro_avg: 0.748
09/16 04:38:58 AM: 	# validation passes without improvement: 0
09/16 04:38:58 AM: edges-rel-semeval_loss: training: 0.057770 validation: 0.067455
09/16 04:38:58 AM: macro_avg: validation: 0.747717
09/16 04:38:58 AM: micro_avg: validation: 0.000000
09/16 04:38:58 AM: edges-rel-semeval_mcc: training: 0.771117 validation: 0.739678
09/16 04:38:58 AM: edges-rel-semeval_acc: training: 0.660044 validation: 0.644038
09/16 04:38:58 AM: edges-rel-semeval_precision: training: 0.857143 validation: 0.834764
09/16 04:38:58 AM: edges-rel-semeval_recall: training: 0.713340 validation: 0.677111
09/16 04:38:58 AM: edges-rel-semeval_f1: training: 0.778657 validation: 0.747717
09/16 04:38:58 AM: Global learning rate: 5e-05
09/16 04:38:58 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:39:03 AM: ***** Step 3400 / Validation 34 *****
09/16 04:39:03 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:39:03 AM: Validating...
09/16 04:39:06 AM: Updating LR scheduler:
09/16 04:39:06 AM: 	Best result seen so far for macro_avg: 0.748
09/16 04:39:06 AM: 	# validation passes without improvement: 1
09/16 04:39:06 AM: edges-rel-semeval_loss: training: 0.059101 validation: 0.068462
09/16 04:39:06 AM: macro_avg: validation: 0.740020
09/16 04:39:06 AM: micro_avg: validation: 0.000000
09/16 04:39:06 AM: edges-rel-semeval_mcc: training: 0.772402 validation: 0.733085
09/16 04:39:06 AM: edges-rel-semeval_acc: training: 0.664062 validation: 0.628372
09/16 04:39:06 AM: edges-rel-semeval_precision: training: 0.861847 validation: 0.839779
09/16 04:39:06 AM: edges-rel-semeval_recall: training: 0.711563 validation: 0.661445
09/16 04:39:06 AM: edges-rel-semeval_f1: training: 0.779528 validation: 0.740020
09/16 04:39:06 AM: Global learning rate: 5e-05
09/16 04:39:06 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:39:08 AM: Update 3441: task edges-rel-semeval, batch 41 (3441): mcc: 0.7690, acc: 0.6469, precision: 0.8584, recall: 0.7085, f1: 0.7763, edges-rel-semeval_loss: 0.0589
09/16 04:39:11 AM: ***** Step 3500 / Validation 35 *****
09/16 04:39:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:39:11 AM: Validating...
09/16 04:39:13 AM: Updating LR scheduler:
09/16 04:39:13 AM: 	Best result seen so far for macro_avg: 0.748
09/16 04:39:13 AM: 	# validation passes without improvement: 2
09/16 04:39:13 AM: edges-rel-semeval_loss: training: 0.057167 validation: 0.068209
09/16 04:39:13 AM: macro_avg: validation: 0.732847
09/16 04:39:13 AM: micro_avg: validation: 0.000000
09/16 04:39:13 AM: edges-rel-semeval_mcc: training: 0.773648 validation: 0.725444
09/16 04:39:13 AM: edges-rel-semeval_acc: training: 0.658467 validation: 0.620540
09/16 04:39:13 AM: edges-rel-semeval_precision: training: 0.863810 validation: 0.831126
09/16 04:39:13 AM: edges-rel-semeval_recall: training: 0.712078 validation: 0.655352
09/16 04:39:13 AM: edges-rel-semeval_f1: training: 0.780640 validation: 0.732847
09/16 04:39:13 AM: Global learning rate: 5e-05
09/16 04:39:13 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:39:18 AM: Update 3599: task edges-rel-semeval, batch 99 (3599): mcc: 0.7675, acc: 0.6544, precision: 0.8618, recall: 0.7030, f1: 0.7743, edges-rel-semeval_loss: 0.0591
09/16 04:39:18 AM: ***** Step 3600 / Validation 36 *****
09/16 04:39:18 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:39:18 AM: Validating...
09/16 04:39:21 AM: Updating LR scheduler:
09/16 04:39:21 AM: 	Best result seen so far for macro_avg: 0.748
09/16 04:39:21 AM: 	# validation passes without improvement: 3
09/16 04:39:21 AM: edges-rel-semeval_loss: training: 0.059000 validation: 0.067780
09/16 04:39:21 AM: macro_avg: validation: 0.736226
09/16 04:39:21 AM: micro_avg: validation: 0.000000
09/16 04:39:21 AM: edges-rel-semeval_mcc: training: 0.768117 validation: 0.729260
09/16 04:39:21 AM: edges-rel-semeval_acc: training: 0.655312 validation: 0.626632
09/16 04:39:21 AM: edges-rel-semeval_precision: training: 0.862175 validation: 0.837029
09/16 04:39:21 AM: edges-rel-semeval_recall: training: 0.703750 validation: 0.657093
09/16 04:39:21 AM: edges-rel-semeval_f1: training: 0.774948 validation: 0.736226
09/16 04:39:21 AM: Global learning rate: 5e-05
09/16 04:39:21 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:39:26 AM: ***** Step 3700 / Validation 37 *****
09/16 04:39:26 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:39:26 AM: Validating...
09/16 04:39:28 AM: Evaluate: task edges-rel-semeval, batch 31 (36): mcc: 0.7534, acc: 0.6472, precision: 0.8757, recall: 0.6673, f1: 0.7574, edges-rel-semeval_loss: 0.0640
09/16 04:39:29 AM: Updating LR scheduler:
09/16 04:39:29 AM: 	Best result seen so far for macro_avg: 0.748
09/16 04:39:29 AM: 	# validation passes without improvement: 0
09/16 04:39:29 AM: edges-rel-semeval_loss: training: 0.056083 validation: 0.068150
09/16 04:39:29 AM: macro_avg: validation: 0.736738
09/16 04:39:29 AM: micro_avg: validation: 0.000000
09/16 04:39:29 AM: edges-rel-semeval_mcc: training: 0.782770 validation: 0.732083
09/16 04:39:29 AM: edges-rel-semeval_acc: training: 0.673289 validation: 0.624891
09/16 04:39:29 AM: edges-rel-semeval_precision: training: 0.873374 validation: 0.855991
09/16 04:39:29 AM: edges-rel-semeval_recall: training: 0.719962 validation: 0.646649
09/16 04:39:29 AM: edges-rel-semeval_f1: training: 0.789283 validation: 0.736738
09/16 04:39:29 AM: Global learning rate: 2.5e-05
09/16 04:39:29 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:39:33 AM: ***** Step 3800 / Validation 38 *****
09/16 04:39:33 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:39:33 AM: Validating...
09/16 04:39:36 AM: Updating LR scheduler:
09/16 04:39:36 AM: 	Best result seen so far for macro_avg: 0.748
09/16 04:39:36 AM: 	# validation passes without improvement: 1
09/16 04:39:36 AM: edges-rel-semeval_loss: training: 0.055463 validation: 0.067347
09/16 04:39:36 AM: macro_avg: validation: 0.740777
09/16 04:39:36 AM: micro_avg: validation: 0.000000
09/16 04:39:36 AM: edges-rel-semeval_mcc: training: 0.785727 validation: 0.733526
09/16 04:39:36 AM: edges-rel-semeval_acc: training: 0.674063 validation: 0.637946
09/16 04:39:36 AM: edges-rel-semeval_precision: training: 0.874670 validation: 0.837541
09/16 04:39:36 AM: edges-rel-semeval_recall: training: 0.724063 validation: 0.664056
09/16 04:39:36 AM: edges-rel-semeval_f1: training: 0.792272 validation: 0.740777
09/16 04:39:36 AM: Global learning rate: 2.5e-05
09/16 04:39:36 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:39:38 AM: Update 3849: task edges-rel-semeval, batch 49 (3849): mcc: 0.7799, acc: 0.6709, precision: 0.8719, recall: 0.7162, f1: 0.7864, edges-rel-semeval_loss: 0.0561
09/16 04:39:43 AM: ***** Step 3900 / Validation 39 *****
09/16 04:39:43 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:39:43 AM: Validating...
09/16 04:39:45 AM: Updating LR scheduler:
09/16 04:39:45 AM: 	Best result seen so far for macro_avg: 0.748
09/16 04:39:45 AM: 	# validation passes without improvement: 2
09/16 04:39:45 AM: edges-rel-semeval_loss: training: 0.055114 validation: 0.067342
09/16 04:39:45 AM: macro_avg: validation: 0.738625
09/16 04:39:45 AM: micro_avg: validation: 0.000000
09/16 04:39:45 AM: edges-rel-semeval_mcc: training: 0.785042 validation: 0.730904
09/16 04:39:45 AM: edges-rel-semeval_acc: training: 0.677073 validation: 0.632724
09/16 04:39:45 AM: edges-rel-semeval_precision: training: 0.876581 validation: 0.832061
09/16 04:39:45 AM: edges-rel-semeval_recall: training: 0.721224 validation: 0.664056
09/16 04:39:45 AM: edges-rel-semeval_f1: training: 0.791350 validation: 0.738625
09/16 04:39:45 AM: Global learning rate: 2.5e-05
09/16 04:39:45 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:39:48 AM: Update 3968: task edges-rel-semeval, batch 68 (3968): mcc: 0.7768, acc: 0.6631, precision: 0.8673, recall: 0.7146, f1: 0.7836, edges-rel-semeval_loss: 0.0573
09/16 04:39:50 AM: ***** Step 4000 / Validation 40 *****
09/16 04:39:50 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:39:50 AM: Validating...
09/16 04:39:52 AM: Updating LR scheduler:
09/16 04:39:52 AM: 	Best result seen so far for macro_avg: 0.748
09/16 04:39:52 AM: 	# validation passes without improvement: 3
09/16 04:39:52 AM: edges-rel-semeval_loss: training: 0.057107 validation: 0.067404
09/16 04:39:52 AM: macro_avg: validation: 0.745251
09/16 04:39:52 AM: micro_avg: validation: 0.000000
09/16 04:39:52 AM: edges-rel-semeval_mcc: training: 0.775754 validation: 0.738676
09/16 04:39:52 AM: edges-rel-semeval_acc: training: 0.663438 validation: 0.639687
09/16 04:39:52 AM: edges-rel-semeval_precision: training: 0.863277 validation: 0.846239
09/16 04:39:52 AM: edges-rel-semeval_recall: training: 0.716250 validation: 0.665796
09/16 04:39:52 AM: edges-rel-semeval_f1: training: 0.782921 validation: 0.745251
09/16 04:39:52 AM: Global learning rate: 2.5e-05
09/16 04:39:52 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:39:58 AM: ***** Step 4100 / Validation 41 *****
09/16 04:39:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:39:58 AM: Validating...
09/16 04:39:58 AM: Evaluate: task edges-rel-semeval, batch 10 (36): mcc: 0.7649, acc: 0.6781, precision: 0.8419, recall: 0.7156, f1: 0.7736, edges-rel-semeval_loss: 0.0612
09/16 04:40:00 AM: Updating LR scheduler:
09/16 04:40:00 AM: 	Best result seen so far for macro_avg: 0.748
09/16 04:40:00 AM: 	# validation passes without improvement: 0
09/16 04:40:00 AM: edges-rel-semeval_loss: training: 0.053356 validation: 0.067155
09/16 04:40:00 AM: macro_avg: validation: 0.741171
09/16 04:40:00 AM: micro_avg: validation: 0.000000
09/16 04:40:00 AM: edges-rel-semeval_mcc: training: 0.794501 validation: 0.733536
09/16 04:40:00 AM: edges-rel-semeval_acc: training: 0.687165 validation: 0.637076
09/16 04:40:00 AM: edges-rel-semeval_precision: training: 0.883517 validation: 0.834423
09/16 04:40:00 AM: edges-rel-semeval_recall: training: 0.731946 validation: 0.666667
09/16 04:40:00 AM: edges-rel-semeval_f1: training: 0.800621 validation: 0.741171
09/16 04:40:00 AM: Global learning rate: 1.25e-05
09/16 04:40:00 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:40:05 AM: ***** Step 4200 / Validation 42 *****
09/16 04:40:05 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:40:05 AM: Validating...
09/16 04:40:07 AM: Updating LR scheduler:
09/16 04:40:07 AM: 	Best result seen so far for macro_avg: 0.748
09/16 04:40:07 AM: 	# validation passes without improvement: 1
09/16 04:40:07 AM: edges-rel-semeval_loss: training: 0.054503 validation: 0.066955
09/16 04:40:07 AM: macro_avg: validation: 0.742857
09/16 04:40:07 AM: micro_avg: validation: 0.000000
09/16 04:40:07 AM: edges-rel-semeval_mcc: training: 0.790084 validation: 0.735432
09/16 04:40:07 AM: edges-rel-semeval_acc: training: 0.679063 validation: 0.637946
09/16 04:40:07 AM: edges-rel-semeval_precision: training: 0.875984 validation: 0.837336
09/16 04:40:07 AM: edges-rel-semeval_recall: training: 0.730625 validation: 0.667537
09/16 04:40:07 AM: edges-rel-semeval_f1: training: 0.796729 validation: 0.742857
09/16 04:40:07 AM: Global learning rate: 1.25e-05
09/16 04:40:07 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:40:08 AM: Update 4232: task edges-rel-semeval, batch 32 (4232): mcc: 0.7976, acc: 0.6934, precision: 0.8859, recall: 0.7354, f1: 0.8036, edges-rel-semeval_loss: 0.0551
09/16 04:40:12 AM: ***** Step 4300 / Validation 43 *****
09/16 04:40:12 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 04:40:12 AM: Validating...
09/16 04:40:14 AM: Updating LR scheduler:
09/16 04:40:14 AM: 	Best result seen so far for macro_avg: 0.748
09/16 04:40:14 AM: 	# validation passes without improvement: 2
09/16 04:40:14 AM: Ran out of early stopping patience. Stopping training.
09/16 04:40:14 AM: edges-rel-semeval_loss: training: 0.055746 validation: 0.066837
09/16 04:40:14 AM: macro_avg: validation: 0.745306
09/16 04:40:14 AM: micro_avg: validation: 0.000000
09/16 04:40:14 AM: edges-rel-semeval_mcc: training: 0.785366 validation: 0.737347
09/16 04:40:14 AM: edges-rel-semeval_acc: training: 0.675937 validation: 0.639687
09/16 04:40:14 AM: edges-rel-semeval_precision: training: 0.874292 validation: 0.834052
09/16 04:40:14 AM: edges-rel-semeval_recall: training: 0.723750 validation: 0.673629
09/16 04:40:14 AM: edges-rel-semeval_f1: training: 0.791930 validation: 0.745306
09/16 04:40:14 AM: Global learning rate: 1.25e-05
09/16 04:40:14 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-top/run
09/16 04:40:14 AM: Stopped training after 43 validation checks
09/16 04:40:14 AM: Trained edges-rel-semeval for 4300 batches or 20.000 epochs
09/16 04:40:14 AM: ***** VALIDATION RESULTS *****
09/16 04:40:14 AM: edges-rel-semeval_f1 (for best val pass 33): edges-rel-semeval_loss: 0.06746, macro_avg: 0.74772, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.73968, edges-rel-semeval_acc: 0.64404, edges-rel-semeval_precision: 0.83476, edges-rel-semeval_recall: 0.67711, edges-rel-semeval_f1: 0.74772
09/16 04:40:14 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.17851, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 04:40:14 AM: macro_avg (for best val pass 33): edges-rel-semeval_loss: 0.06746, macro_avg: 0.74772, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.73968, edges-rel-semeval_acc: 0.64404, edges-rel-semeval_precision: 0.83476, edges-rel-semeval_recall: 0.67711, edges-rel-semeval_f1: 0.74772
09/16 04:40:14 AM: Evaluating...
09/16 04:40:14 AM: Loaded model state from ./experiments/rel-semeval-mnli-top/run/edges-rel-semeval/model_state_target_train_val_33.best.th
09/16 04:40:14 AM: Evaluating on: edges-rel-semeval, split: val
09/16 04:40:17 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 04:40:17 AM: Finished evaluating on: edges-rel-semeval
09/16 04:40:17 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 04:40:17 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-mnli-top/run
09/16 04:40:17 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-mnli-top/run
09/16 04:40:17 AM: Evaluating on: edges-rel-semeval, split: test
09/16 04:40:22 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 04:40:22 AM: Finished evaluating on: edges-rel-semeval
09/16 04:40:22 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 04:40:22 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-mnli-top/run
09/16 04:40:22 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-mnli-top/run
09/16 04:40:22 AM: Writing results for split 'val' to ./experiments/rel-semeval-mnli-top/results.tsv
09/16 04:40:22 AM: micro_avg: 0.000, macro_avg: 0.748, edges-rel-semeval_mcc: 0.740, edges-rel-semeval_acc: 0.644, edges-rel-semeval_precision: 0.835, edges-rel-semeval_recall: 0.677, edges-rel-semeval_f1: 0.748
09/16 04:40:22 AM: Done!
