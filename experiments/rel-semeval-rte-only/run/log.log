09/16 07:34:39 AM: Git branch: master
09/16 07:34:39 AM: Git SHA: 6a6c097582fb44e9e93b08dab8c29a3ff91459bf
09/16 07:34:40 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-rte-only/",
  "exp_name": "experiments/rel-semeval-rte-only",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-rte-only/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/rte",
  "pytorch_transformers_output_mode": "only",
  "remote_log_name": "experiments/rel-semeval-rte-only__run",
  "run_dir": "./experiments/rel-semeval-rte-only/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 07:34:40 AM: Saved config to ./experiments/rel-semeval-rte-only/run/params.conf
09/16 07:34:40 AM: Using random seed 1234
09/16 07:34:41 AM: Using GPU 0
09/16 07:34:41 AM: Loading tasks...
09/16 07:34:41 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-rte-only/
09/16 07:34:41 AM: 	Creating task edges-rel-semeval from scratch.
09/16 07:34:41 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 07:34:41 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 07:34:41 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 07:34:41 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 07:34:41 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 07:34:41 AM: 	Building vocab from scratch.
09/16 07:34:41 AM: 	Counting units for task edges-rel-semeval.
09/16 07:34:41 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 07:34:42 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:34:42 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 07:34:42 AM: 	Saved vocab to ./experiments/rel-semeval-rte-only/vocab
09/16 07:34:42 AM: Loading token dictionary from ./experiments/rel-semeval-rte-only/vocab.
09/16 07:34:42 AM: 	Loaded vocab from ./experiments/rel-semeval-rte-only/vocab
09/16 07:34:42 AM: 	Vocab namespace bert_uncased: size 30524
09/16 07:34:42 AM: 	Vocab namespace tokens: size 16020
09/16 07:34:42 AM: 	Vocab namespace chars: size 59
09/16 07:34:42 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 07:34:42 AM: 	Finished building vocab.
09/16 07:34:42 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 07:34:43 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-rte-only/preproc/edges-rel-semeval__train_data
09/16 07:34:43 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 07:34:43 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-rte-only/preproc/edges-rel-semeval__val_data
09/16 07:34:43 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 07:34:43 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-rte-only/preproc/edges-rel-semeval__test_data
09/16 07:34:43 AM: 	Finished indexing tasks
09/16 07:34:43 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 07:34:43 AM: 	  Training on 
09/16 07:34:43 AM: 	  Evaluating on edges-rel-semeval
09/16 07:34:43 AM: 	Finished loading tasks in 2.838s
09/16 07:34:43 AM: 	 Tasks: ['edges-rel-semeval']
09/16 07:34:43 AM: Building model...
09/16 07:34:43 AM: Using BERT model (bert-base-uncased).
09/16 07:34:43 AM: LOADING A FUNETUNED MODEL from: 
09/16 07:34:43 AM: models/rte
09/16 07:34:43 AM: loading configuration file models/rte/config.json
09/16 07:34:43 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "rte",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 07:34:43 AM: loading weights file models/rte/pytorch_model.bin
09/16 07:34:47 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpr3ey2_mz
09/16 07:34:48 AM: copying /tmp/tmpr3ey2_mz to cache at ./experiments/rel-semeval-rte-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:34:48 AM: creating metadata file for ./experiments/rel-semeval-rte-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:34:48 AM: removing temp file /tmp/tmpr3ey2_mz
09/16 07:34:48 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-rte-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:34:48 AM: Initializing parameters
09/16 07:34:48 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 07:34:48 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 07:34:48 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 07:34:48 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 07:34:48 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 07:34:48 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 07:34:48 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 07:34:52 AM: Model specification:
09/16 07:34:52 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 07:34:52 AM: Model parameters:
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:34:52 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:34:52 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 07:34:52 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:34:52 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 07:34:52 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:34:52 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 07:34:52 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:34:52 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 07:34:52 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:34:52 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 07:34:52 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 07:34:52 AM: Total number of parameters: 110143763 (1.10144e+08)
09/16 07:34:52 AM: Number of trainable parameters: 661523 (661523)
09/16 07:34:52 AM: Finished building model in 8.931s
09/16 07:34:52 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 07:34:53 AM: patience = 9
09/16 07:34:53 AM: val_interval = 100
09/16 07:34:53 AM: max_vals = 100
09/16 07:34:53 AM: cuda_device = 0
09/16 07:34:53 AM: grad_norm = 5.0
09/16 07:34:53 AM: grad_clipping = None
09/16 07:34:53 AM: lr_decay = 0.99
09/16 07:34:53 AM: min_lr = 1e-06
09/16 07:34:53 AM: keep_all_checkpoints = 0
09/16 07:34:53 AM: val_data_limit = 5000
09/16 07:34:53 AM: max_epochs = -1
09/16 07:34:53 AM: dec_val_scale = 250
09/16 07:34:53 AM: training_data_fraction = 1
09/16 07:34:53 AM: type = adam
09/16 07:34:53 AM: parameter_groups = None
09/16 07:34:53 AM: Number of trainable parameters: 661523
09/16 07:34:53 AM: infer_type_and_cast = True
09/16 07:34:53 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:34:53 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:34:53 AM: lr = 0.0001
09/16 07:34:53 AM: amsgrad = True
09/16 07:34:53 AM: type = reduce_on_plateau
09/16 07:34:53 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:34:53 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:34:53 AM: mode = max
09/16 07:34:53 AM: factor = 0.5
09/16 07:34:53 AM: patience = 3
09/16 07:34:53 AM: threshold = 0.0001
09/16 07:34:53 AM: threshold_mode = abs
09/16 07:34:53 AM: verbose = True
09/16 07:34:53 AM: type = adam
09/16 07:34:53 AM: parameter_groups = None
09/16 07:34:53 AM: Number of trainable parameters: 661523
09/16 07:34:53 AM: infer_type_and_cast = True
09/16 07:34:53 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:34:53 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:34:53 AM: lr = 0.0001
09/16 07:34:53 AM: amsgrad = True
09/16 07:34:53 AM: type = reduce_on_plateau
09/16 07:34:53 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:34:53 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:34:53 AM: mode = max
09/16 07:34:53 AM: factor = 0.5
09/16 07:34:53 AM: patience = 3
09/16 07:34:53 AM: threshold = 0.0001
09/16 07:34:53 AM: threshold_mode = abs
09/16 07:34:53 AM: verbose = True
09/16 07:34:53 AM: Starting training without restoring from a checkpoint.
09/16 07:34:53 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 07:34:53 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 07:34:55 AM: ***** Step 100 / Validation 1 *****
09/16 07:34:55 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:34:55 AM: Validating...
09/16 07:34:56 AM: Best result seen so far for edges-rel-semeval.
09/16 07:34:56 AM: Best result seen so far for micro.
09/16 07:34:56 AM: Best result seen so far for macro.
09/16 07:34:56 AM: Updating LR scheduler:
09/16 07:34:56 AM: 	Best result seen so far for macro_avg: 0.000
09/16 07:34:56 AM: 	# validation passes without improvement: 0
09/16 07:34:56 AM: edges-rel-semeval_loss: training: 0.283258 validation: 0.187444
09/16 07:34:56 AM: macro_avg: validation: 0.000000
09/16 07:34:56 AM: micro_avg: validation: 0.000000
09/16 07:34:56 AM: edges-rel-semeval_mcc: training: 0.009547 validation: 0.000000
09/16 07:34:56 AM: edges-rel-semeval_acc: training: 0.005361 validation: 0.000000
09/16 07:34:56 AM: edges-rel-semeval_precision: training: 0.062848 validation: 0.000000
09/16 07:34:56 AM: edges-rel-semeval_recall: training: 0.049827 validation: 0.000000
09/16 07:34:56 AM: edges-rel-semeval_f1: training: 0.055585 validation: 0.000000
09/16 07:34:56 AM: Global learning rate: 0.0001
09/16 07:34:56 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:34:57 AM: ***** Step 200 / Validation 2 *****
09/16 07:34:57 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:34:57 AM: Validating...
09/16 07:34:58 AM: Updating LR scheduler:
09/16 07:34:58 AM: 	Best result seen so far for macro_avg: 0.000
09/16 07:34:58 AM: 	# validation passes without improvement: 1
09/16 07:34:58 AM: edges-rel-semeval_loss: training: 0.186131 validation: 0.174148
09/16 07:34:58 AM: macro_avg: validation: 0.000000
09/16 07:34:58 AM: micro_avg: validation: 0.000000
09/16 07:34:58 AM: edges-rel-semeval_mcc: training: 0.011201 validation: 0.000000
09/16 07:34:58 AM: edges-rel-semeval_acc: training: 0.000625 validation: 0.000000
09/16 07:34:58 AM: edges-rel-semeval_precision: training: 0.285714 validation: 0.000000
09/16 07:34:58 AM: edges-rel-semeval_recall: training: 0.000625 validation: 0.000000
09/16 07:34:58 AM: edges-rel-semeval_f1: training: 0.001247 validation: 0.000000
09/16 07:34:58 AM: Global learning rate: 0.0001
09/16 07:34:58 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:00 AM: ***** Step 300 / Validation 3 *****
09/16 07:35:00 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:00 AM: Validating...
09/16 07:35:01 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:01 AM: Best result seen so far for macro.
09/16 07:35:01 AM: Updating LR scheduler:
09/16 07:35:01 AM: 	Best result seen so far for macro_avg: 0.049
09/16 07:35:01 AM: 	# validation passes without improvement: 0
09/16 07:35:01 AM: edges-rel-semeval_loss: training: 0.170696 validation: 0.158679
09/16 07:35:01 AM: macro_avg: validation: 0.049111
09/16 07:35:01 AM: micro_avg: validation: 0.000000
09/16 07:35:01 AM: edges-rel-semeval_mcc: training: 0.087039 validation: 0.146466
09/16 07:35:01 AM: edges-rel-semeval_acc: training: 0.011984 validation: 0.025239
09/16 07:35:01 AM: edges-rel-semeval_precision: training: 0.684211 validation: 0.906250
09/16 07:35:01 AM: edges-rel-semeval_recall: training: 0.012299 validation: 0.025239
09/16 07:35:01 AM: edges-rel-semeval_f1: training: 0.024164 validation: 0.049111
09/16 07:35:01 AM: Global learning rate: 0.0001
09/16 07:35:01 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:02 AM: ***** Step 400 / Validation 4 *****
09/16 07:35:02 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:02 AM: Validating...
09/16 07:35:02 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:02 AM: Best result seen so far for macro.
09/16 07:35:03 AM: Updating LR scheduler:
09/16 07:35:03 AM: 	Best result seen so far for macro_avg: 0.128
09/16 07:35:03 AM: 	# validation passes without improvement: 0
09/16 07:35:03 AM: edges-rel-semeval_loss: training: 0.154117 validation: 0.145558
09/16 07:35:03 AM: macro_avg: validation: 0.128411
09/16 07:35:03 AM: micro_avg: validation: 0.000000
09/16 07:35:03 AM: edges-rel-semeval_mcc: training: 0.234625 validation: 0.231001
09/16 07:35:03 AM: edges-rel-semeval_acc: training: 0.076250 validation: 0.069626
09/16 07:35:03 AM: edges-rel-semeval_precision: training: 0.762918 validation: 0.824742
09/16 07:35:03 AM: edges-rel-semeval_recall: training: 0.078437 validation: 0.069626
09/16 07:35:03 AM: edges-rel-semeval_f1: training: 0.142250 validation: 0.128411
09/16 07:35:03 AM: Global learning rate: 0.0001
09/16 07:35:03 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:04 AM: Update 431: task edges-rel-semeval, batch 31 (431): mcc: 0.2538, acc: 0.0883, precision: 0.7500, recall: 0.0935, f1: 0.1662, edges-rel-semeval_loss: 0.1507
09/16 07:35:05 AM: ***** Step 500 / Validation 5 *****
09/16 07:35:05 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:05 AM: Validating...
09/16 07:35:05 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:05 AM: Best result seen so far for macro.
09/16 07:35:05 AM: Updating LR scheduler:
09/16 07:35:05 AM: 	Best result seen so far for macro_avg: 0.202
09/16 07:35:05 AM: 	# validation passes without improvement: 0
09/16 07:35:05 AM: edges-rel-semeval_loss: training: 0.143614 validation: 0.136922
09/16 07:35:05 AM: macro_avg: validation: 0.201835
09/16 07:35:05 AM: micro_avg: validation: 0.000000
09/16 07:35:05 AM: edges-rel-semeval_mcc: training: 0.302691 validation: 0.298263
09/16 07:35:05 AM: edges-rel-semeval_acc: training: 0.125197 validation: 0.114012
09/16 07:35:05 AM: edges-rel-semeval_precision: training: 0.765363 validation: 0.830189
09/16 07:35:05 AM: edges-rel-semeval_recall: training: 0.129612 validation: 0.114883
09/16 07:35:05 AM: edges-rel-semeval_f1: training: 0.221683 validation: 0.201835
09/16 07:35:05 AM: Global learning rate: 0.0001
09/16 07:35:05 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:07 AM: ***** Step 600 / Validation 6 *****
09/16 07:35:07 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:07 AM: Validating...
09/16 07:35:08 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:08 AM: Best result seen so far for macro.
09/16 07:35:08 AM: Updating LR scheduler:
09/16 07:35:08 AM: 	Best result seen so far for macro_avg: 0.269
09/16 07:35:08 AM: 	# validation passes without improvement: 0
09/16 07:35:08 AM: edges-rel-semeval_loss: training: 0.134385 validation: 0.130457
09/16 07:35:08 AM: macro_avg: validation: 0.269287
09/16 07:35:08 AM: micro_avg: validation: 0.000000
09/16 07:35:08 AM: edges-rel-semeval_mcc: training: 0.363363 validation: 0.351707
09/16 07:35:08 AM: edges-rel-semeval_acc: training: 0.184688 validation: 0.156658
09/16 07:35:08 AM: edges-rel-semeval_precision: training: 0.747858 validation: 0.822222
09/16 07:35:08 AM: edges-rel-semeval_recall: training: 0.190938 validation: 0.161010
09/16 07:35:08 AM: edges-rel-semeval_f1: training: 0.304207 validation: 0.269287
09/16 07:35:08 AM: Global learning rate: 0.0001
09/16 07:35:08 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:10 AM: ***** Step 700 / Validation 7 *****
09/16 07:35:10 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:10 AM: Validating...
09/16 07:35:11 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:11 AM: Best result seen so far for macro.
09/16 07:35:11 AM: Updating LR scheduler:
09/16 07:35:11 AM: 	Best result seen so far for macro_avg: 0.329
09/16 07:35:11 AM: 	# validation passes without improvement: 0
09/16 07:35:11 AM: edges-rel-semeval_loss: training: 0.125174 validation: 0.126239
09/16 07:35:11 AM: macro_avg: validation: 0.328920
09/16 07:35:11 AM: micro_avg: validation: 0.000000
09/16 07:35:11 AM: edges-rel-semeval_mcc: training: 0.415997 validation: 0.398612
09/16 07:35:11 AM: edges-rel-semeval_acc: training: 0.231157 validation: 0.202785
09/16 07:35:11 AM: edges-rel-semeval_precision: training: 0.770938 validation: 0.825175
09/16 07:35:11 AM: edges-rel-semeval_recall: training: 0.240933 validation: 0.205396
09/16 07:35:11 AM: edges-rel-semeval_f1: training: 0.367131 validation: 0.328920
09/16 07:35:11 AM: Global learning rate: 0.0001
09/16 07:35:11 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:12 AM: ***** Step 800 / Validation 8 *****
09/16 07:35:12 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:12 AM: Validating...
09/16 07:35:13 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:13 AM: Best result seen so far for macro.
09/16 07:35:13 AM: Updating LR scheduler:
09/16 07:35:13 AM: 	Best result seen so far for macro_avg: 0.370
09/16 07:35:13 AM: 	# validation passes without improvement: 0
09/16 07:35:13 AM: edges-rel-semeval_loss: training: 0.121076 validation: 0.121943
09/16 07:35:13 AM: macro_avg: validation: 0.370020
09/16 07:35:13 AM: micro_avg: validation: 0.000000
09/16 07:35:13 AM: edges-rel-semeval_mcc: training: 0.455447 validation: 0.430003
09/16 07:35:13 AM: edges-rel-semeval_acc: training: 0.269062 validation: 0.237598
09/16 07:35:13 AM: edges-rel-semeval_precision: training: 0.780258 validation: 0.825301
09/16 07:35:13 AM: edges-rel-semeval_recall: training: 0.284063 validation: 0.238468
09/16 07:35:13 AM: edges-rel-semeval_f1: training: 0.416495 validation: 0.370020
09/16 07:35:13 AM: Global learning rate: 0.0001
09/16 07:35:13 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:14 AM: Update 861: task edges-rel-semeval, batch 61 (861): mcc: 0.4542, acc: 0.2746, precision: 0.7655, recall: 0.2886, f1: 0.4192, edges-rel-semeval_loss: 0.1169
09/16 07:35:15 AM: ***** Step 900 / Validation 9 *****
09/16 07:35:15 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:15 AM: Validating...
09/16 07:35:15 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:15 AM: Best result seen so far for macro.
09/16 07:35:15 AM: Updating LR scheduler:
09/16 07:35:15 AM: 	Best result seen so far for macro_avg: 0.392
09/16 07:35:15 AM: 	# validation passes without improvement: 0
09/16 07:35:15 AM: edges-rel-semeval_loss: training: 0.115148 validation: 0.120236
09/16 07:35:15 AM: macro_avg: validation: 0.392131
09/16 07:35:15 AM: micro_avg: validation: 0.000000
09/16 07:35:15 AM: edges-rel-semeval_mcc: training: 0.463707 validation: 0.440241
09/16 07:35:15 AM: edges-rel-semeval_acc: training: 0.284453 validation: 0.255875
09/16 07:35:15 AM: edges-rel-semeval_precision: training: 0.762550 validation: 0.795213
09/16 07:35:15 AM: edges-rel-semeval_recall: training: 0.301798 validation: 0.260226
09/16 07:35:15 AM: edges-rel-semeval_f1: training: 0.432445 validation: 0.392131
09/16 07:35:15 AM: Global learning rate: 0.0001
09/16 07:35:15 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:17 AM: ***** Step 1000 / Validation 10 *****
09/16 07:35:17 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:17 AM: Validating...
09/16 07:35:17 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:17 AM: Best result seen so far for macro.
09/16 07:35:17 AM: Updating LR scheduler:
09/16 07:35:17 AM: 	Best result seen so far for macro_avg: 0.412
09/16 07:35:17 AM: 	# validation passes without improvement: 0
09/16 07:35:17 AM: edges-rel-semeval_loss: training: 0.109018 validation: 0.118579
09/16 07:35:17 AM: macro_avg: validation: 0.411879
09/16 07:35:17 AM: micro_avg: validation: 0.000000
09/16 07:35:17 AM: edges-rel-semeval_mcc: training: 0.522455 validation: 0.455728
09/16 07:35:17 AM: edges-rel-semeval_acc: training: 0.337500 validation: 0.272411
09/16 07:35:17 AM: edges-rel-semeval_precision: training: 0.807042 validation: 0.797500
09/16 07:35:17 AM: edges-rel-semeval_recall: training: 0.358125 validation: 0.277633
09/16 07:35:17 AM: edges-rel-semeval_f1: training: 0.496104 validation: 0.411879
09/16 07:35:17 AM: Global learning rate: 0.0001
09/16 07:35:17 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:20 AM: ***** Step 1100 / Validation 11 *****
09/16 07:35:20 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:20 AM: Validating...
09/16 07:35:20 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:20 AM: Best result seen so far for macro.
09/16 07:35:20 AM: Updating LR scheduler:
09/16 07:35:20 AM: 	Best result seen so far for macro_avg: 0.454
09/16 07:35:20 AM: 	# validation passes without improvement: 0
09/16 07:35:20 AM: edges-rel-semeval_loss: training: 0.107138 validation: 0.116488
09/16 07:35:20 AM: macro_avg: validation: 0.453596
09/16 07:35:20 AM: micro_avg: validation: 0.000000
09/16 07:35:20 AM: edges-rel-semeval_mcc: training: 0.522248 validation: 0.481984
09/16 07:35:20 AM: edges-rel-semeval_acc: training: 0.352570 validation: 0.309835
09/16 07:35:20 AM: edges-rel-semeval_precision: training: 0.777997 validation: 0.771967
09/16 07:35:20 AM: edges-rel-semeval_recall: training: 0.372438 validation: 0.321149
09/16 07:35:20 AM: edges-rel-semeval_f1: training: 0.503732 validation: 0.453596
09/16 07:35:20 AM: Global learning rate: 0.0001
09/16 07:35:20 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:22 AM: ***** Step 1200 / Validation 12 *****
09/16 07:35:22 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:22 AM: Validating...
09/16 07:35:22 AM: Updating LR scheduler:
09/16 07:35:22 AM: 	Best result seen so far for macro_avg: 0.454
09/16 07:35:22 AM: 	# validation passes without improvement: 1
09/16 07:35:22 AM: edges-rel-semeval_loss: training: 0.102391 validation: 0.115972
09/16 07:35:22 AM: macro_avg: validation: 0.437028
09/16 07:35:22 AM: micro_avg: validation: 0.000000
09/16 07:35:22 AM: edges-rel-semeval_mcc: training: 0.556353 validation: 0.473329
09/16 07:35:22 AM: edges-rel-semeval_acc: training: 0.380000 validation: 0.295039
09/16 07:35:22 AM: edges-rel-semeval_precision: training: 0.798781 validation: 0.790433
09/16 07:35:22 AM: edges-rel-semeval_recall: training: 0.409375 validation: 0.302002
09/16 07:35:22 AM: edges-rel-semeval_f1: training: 0.541322 validation: 0.437028
09/16 07:35:22 AM: Global learning rate: 0.0001
09/16 07:35:22 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:25 AM: Update 1291: task edges-rel-semeval, batch 91 (1291): mcc: 0.5494, acc: 0.3791, precision: 0.7781, recall: 0.4110, f1: 0.5379, edges-rel-semeval_loss: 0.1003
09/16 07:35:25 AM: ***** Step 1300 / Validation 13 *****
09/16 07:35:25 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:25 AM: Validating...
09/16 07:35:25 AM: Updating LR scheduler:
09/16 07:35:25 AM: 	Best result seen so far for macro_avg: 0.454
09/16 07:35:25 AM: 	# validation passes without improvement: 2
09/16 07:35:25 AM: edges-rel-semeval_loss: training: 0.099661 validation: 0.114821
09/16 07:35:25 AM: macro_avg: validation: 0.445980
09/16 07:35:25 AM: micro_avg: validation: 0.000000
09/16 07:35:25 AM: edges-rel-semeval_mcc: training: 0.555219 validation: 0.482564
09/16 07:35:25 AM: edges-rel-semeval_acc: training: 0.384737 validation: 0.299391
09/16 07:35:25 AM: edges-rel-semeval_precision: training: 0.785331 validation: 0.801354
09/16 07:35:25 AM: edges-rel-semeval_recall: training: 0.415326 validation: 0.308964
09/16 07:35:25 AM: edges-rel-semeval_f1: training: 0.543317 validation: 0.445980
09/16 07:35:25 AM: Global learning rate: 0.0001
09/16 07:35:25 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:27 AM: ***** Step 1400 / Validation 14 *****
09/16 07:35:27 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:27 AM: Validating...
09/16 07:35:27 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:27 AM: Best result seen so far for macro.
09/16 07:35:27 AM: Updating LR scheduler:
09/16 07:35:27 AM: 	Best result seen so far for macro_avg: 0.469
09/16 07:35:27 AM: 	# validation passes without improvement: 0
09/16 07:35:27 AM: edges-rel-semeval_loss: training: 0.095322 validation: 0.114038
09/16 07:35:27 AM: macro_avg: validation: 0.469240
09/16 07:35:27 AM: micro_avg: validation: 0.000000
09/16 07:35:27 AM: edges-rel-semeval_mcc: training: 0.586533 validation: 0.492386
09/16 07:35:27 AM: edges-rel-semeval_acc: training: 0.415312 validation: 0.327241
09/16 07:35:27 AM: edges-rel-semeval_precision: training: 0.807887 validation: 0.764244
09/16 07:35:27 AM: edges-rel-semeval_recall: training: 0.448125 validation: 0.338555
09/16 07:35:27 AM: edges-rel-semeval_f1: training: 0.576482 validation: 0.469240
09/16 07:35:27 AM: Global learning rate: 0.0001
09/16 07:35:27 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:29 AM: ***** Step 1500 / Validation 15 *****
09/16 07:35:29 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:29 AM: Validating...
09/16 07:35:29 AM: Updating LR scheduler:
09/16 07:35:29 AM: 	Best result seen so far for macro_avg: 0.469
09/16 07:35:29 AM: 	# validation passes without improvement: 1
09/16 07:35:29 AM: edges-rel-semeval_loss: training: 0.097325 validation: 0.113128
09/16 07:35:29 AM: macro_avg: validation: 0.468712
09/16 07:35:29 AM: micro_avg: validation: 0.000000
09/16 07:35:29 AM: edges-rel-semeval_mcc: training: 0.577265 validation: 0.498459
09/16 07:35:29 AM: edges-rel-semeval_acc: training: 0.414687 validation: 0.322889
09/16 07:35:29 AM: edges-rel-semeval_precision: training: 0.792737 validation: 0.794179
09/16 07:35:29 AM: edges-rel-semeval_recall: training: 0.443437 validation: 0.332463
09/16 07:35:29 AM: edges-rel-semeval_f1: training: 0.568737 validation: 0.468712
09/16 07:35:29 AM: Global learning rate: 0.0001
09/16 07:35:29 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:32 AM: ***** Step 1600 / Validation 16 *****
09/16 07:35:32 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:32 AM: Validating...
09/16 07:35:32 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:32 AM: Best result seen so far for macro.
09/16 07:35:32 AM: Updating LR scheduler:
09/16 07:35:32 AM: 	Best result seen so far for macro_avg: 0.489
09/16 07:35:32 AM: 	# validation passes without improvement: 0
09/16 07:35:32 AM: edges-rel-semeval_loss: training: 0.089226 validation: 0.113013
09/16 07:35:32 AM: macro_avg: validation: 0.488810
09/16 07:35:32 AM: micro_avg: validation: 0.000000
09/16 07:35:32 AM: edges-rel-semeval_mcc: training: 0.609382 validation: 0.505860
09/16 07:35:32 AM: edges-rel-semeval_acc: training: 0.440870 validation: 0.349869
09/16 07:35:32 AM: edges-rel-semeval_precision: training: 0.816514 validation: 0.755920
09/16 07:35:32 AM: edges-rel-semeval_recall: training: 0.477137 validation: 0.361184
09/16 07:35:32 AM: edges-rel-semeval_f1: training: 0.602309 validation: 0.488810
09/16 07:35:32 AM: Global learning rate: 0.0001
09/16 07:35:32 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:33 AM: ***** Step 1700 / Validation 17 *****
09/16 07:35:33 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:33 AM: Validating...
09/16 07:35:34 AM: Updating LR scheduler:
09/16 07:35:34 AM: 	Best result seen so far for macro_avg: 0.489
09/16 07:35:34 AM: 	# validation passes without improvement: 1
09/16 07:35:34 AM: edges-rel-semeval_loss: training: 0.091774 validation: 0.113956
09/16 07:35:34 AM: macro_avg: validation: 0.469301
09/16 07:35:34 AM: micro_avg: validation: 0.000000
09/16 07:35:34 AM: edges-rel-semeval_mcc: training: 0.612074 validation: 0.495457
09/16 07:35:34 AM: edges-rel-semeval_acc: training: 0.460938 validation: 0.328111
09/16 07:35:34 AM: edges-rel-semeval_precision: training: 0.802867 validation: 0.778226
09/16 07:35:34 AM: edges-rel-semeval_recall: training: 0.490000 validation: 0.335944
09/16 07:35:34 AM: edges-rel-semeval_f1: training: 0.608578 validation: 0.469301
09/16 07:35:34 AM: Global learning rate: 0.0001
09/16 07:35:34 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:35 AM: Update 1721: task edges-rel-semeval, batch 21 (1721): mcc: 0.6088, acc: 0.4510, precision: 0.8073, recall: 0.4821, f1: 0.6037, edges-rel-semeval_loss: 0.0894
09/16 07:35:36 AM: ***** Step 1800 / Validation 18 *****
09/16 07:35:36 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:36 AM: Validating...
09/16 07:35:37 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:37 AM: Best result seen so far for macro.
09/16 07:35:37 AM: Updating LR scheduler:
09/16 07:35:37 AM: 	Best result seen so far for macro_avg: 0.491
09/16 07:35:37 AM: 	# validation passes without improvement: 0
09/16 07:35:37 AM: edges-rel-semeval_loss: training: 0.086190 validation: 0.113397
09/16 07:35:37 AM: macro_avg: validation: 0.490698
09/16 07:35:37 AM: micro_avg: validation: 0.000000
09/16 07:35:37 AM: edges-rel-semeval_mcc: training: 0.642477 validation: 0.503785
09/16 07:35:37 AM: edges-rel-semeval_acc: training: 0.487543 validation: 0.355962
09/16 07:35:37 AM: edges-rel-semeval_precision: training: 0.826261 validation: 0.739054
09/16 07:35:37 AM: edges-rel-semeval_recall: training: 0.521917 validation: 0.367276
09/16 07:35:37 AM: edges-rel-semeval_f1: training: 0.639737 validation: 0.490698
09/16 07:35:37 AM: Global learning rate: 0.0001
09/16 07:35:37 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:39 AM: ***** Step 1900 / Validation 19 *****
09/16 07:35:39 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:39 AM: Validating...
09/16 07:35:39 AM: Updating LR scheduler:
09/16 07:35:39 AM: 	Best result seen so far for macro_avg: 0.491
09/16 07:35:39 AM: 	# validation passes without improvement: 1
09/16 07:35:39 AM: edges-rel-semeval_loss: training: 0.087806 validation: 0.113322
09/16 07:35:39 AM: macro_avg: validation: 0.482718
09/16 07:35:39 AM: micro_avg: validation: 0.000000
09/16 07:35:39 AM: edges-rel-semeval_mcc: training: 0.624007 validation: 0.503156
09/16 07:35:39 AM: edges-rel-semeval_acc: training: 0.466875 validation: 0.342907
09/16 07:35:39 AM: edges-rel-semeval_precision: training: 0.796314 validation: 0.765595
09/16 07:35:39 AM: edges-rel-semeval_recall: training: 0.513125 validation: 0.352480
09/16 07:35:39 AM: edges-rel-semeval_f1: training: 0.624097 validation: 0.482718
09/16 07:35:39 AM: Global learning rate: 0.0001
09/16 07:35:39 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:41 AM: ***** Step 2000 / Validation 20 *****
09/16 07:35:41 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:41 AM: Validating...
09/16 07:35:42 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:42 AM: Best result seen so far for macro.
09/16 07:35:42 AM: Updating LR scheduler:
09/16 07:35:42 AM: 	Best result seen so far for macro_avg: 0.493
09/16 07:35:42 AM: 	# validation passes without improvement: 0
09/16 07:35:42 AM: edges-rel-semeval_loss: training: 0.082135 validation: 0.113858
09/16 07:35:42 AM: macro_avg: validation: 0.493310
09/16 07:35:42 AM: micro_avg: validation: 0.000000
09/16 07:35:42 AM: edges-rel-semeval_mcc: training: 0.662136 validation: 0.506856
09/16 07:35:42 AM: edges-rel-semeval_acc: training: 0.510880 validation: 0.354221
09/16 07:35:42 AM: edges-rel-semeval_precision: training: 0.840820 validation: 0.743860
09/16 07:35:42 AM: edges-rel-semeval_recall: training: 0.543046 validation: 0.369017
09/16 07:35:42 AM: edges-rel-semeval_f1: training: 0.659896 validation: 0.493310
09/16 07:35:42 AM: Global learning rate: 0.0001
09/16 07:35:42 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:43 AM: ***** Step 2100 / Validation 21 *****
09/16 07:35:43 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:43 AM: Validating...
09/16 07:35:44 AM: Updating LR scheduler:
09/16 07:35:44 AM: 	Best result seen so far for macro_avg: 0.493
09/16 07:35:44 AM: 	# validation passes without improvement: 1
09/16 07:35:44 AM: edges-rel-semeval_loss: training: 0.082864 validation: 0.114164
09/16 07:35:44 AM: macro_avg: validation: 0.484524
09/16 07:35:44 AM: micro_avg: validation: 0.000000
09/16 07:35:44 AM: edges-rel-semeval_mcc: training: 0.647838 validation: 0.504754
09/16 07:35:44 AM: edges-rel-semeval_acc: training: 0.499688 validation: 0.346388
09/16 07:35:44 AM: edges-rel-semeval_precision: training: 0.805825 validation: 0.766478
09/16 07:35:44 AM: edges-rel-semeval_recall: training: 0.544688 validation: 0.354221
09/16 07:35:44 AM: edges-rel-semeval_f1: training: 0.650009 validation: 0.484524
09/16 07:35:44 AM: Global learning rate: 0.0001
09/16 07:35:44 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:45 AM: Update 2151: task edges-rel-semeval, batch 51 (2151): mcc: 0.6102, acc: 0.4591, precision: 0.7741, recall: 0.5066, f1: 0.6124, edges-rel-semeval_loss: 0.0853
09/16 07:35:46 AM: ***** Step 2200 / Validation 22 *****
09/16 07:35:46 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:46 AM: Validating...
09/16 07:35:46 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:46 AM: Best result seen so far for macro.
09/16 07:35:46 AM: Updating LR scheduler:
09/16 07:35:46 AM: 	Best result seen so far for macro_avg: 0.494
09/16 07:35:46 AM: 	# validation passes without improvement: 0
09/16 07:35:46 AM: edges-rel-semeval_loss: training: 0.080383 validation: 0.114167
09/16 07:35:46 AM: macro_avg: validation: 0.494172
09/16 07:35:46 AM: micro_avg: validation: 0.000000
09/16 07:35:46 AM: edges-rel-semeval_mcc: training: 0.653171 validation: 0.508363
09/16 07:35:46 AM: edges-rel-semeval_acc: training: 0.505519 validation: 0.355091
09/16 07:35:46 AM: edges-rel-semeval_precision: training: 0.811365 validation: 0.747795
09/16 07:35:46 AM: edges-rel-semeval_recall: training: 0.549354 validation: 0.369017
09/16 07:35:46 AM: edges-rel-semeval_f1: training: 0.655134 validation: 0.494172
09/16 07:35:46 AM: Global learning rate: 0.0001
09/16 07:35:46 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:48 AM: ***** Step 2300 / Validation 23 *****
09/16 07:35:48 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:48 AM: Validating...
09/16 07:35:48 AM: Updating LR scheduler:
09/16 07:35:48 AM: 	Best result seen so far for macro_avg: 0.494
09/16 07:35:48 AM: 	# validation passes without improvement: 1
09/16 07:35:48 AM: edges-rel-semeval_loss: training: 0.079848 validation: 0.115386
09/16 07:35:48 AM: macro_avg: validation: 0.493310
09/16 07:35:48 AM: micro_avg: validation: 0.000000
09/16 07:35:48 AM: edges-rel-semeval_mcc: training: 0.658095 validation: 0.506856
09/16 07:35:48 AM: edges-rel-semeval_acc: training: 0.506875 validation: 0.355962
09/16 07:35:48 AM: edges-rel-semeval_precision: training: 0.815923 validation: 0.743860
09/16 07:35:48 AM: edges-rel-semeval_recall: training: 0.554062 validation: 0.369017
09/16 07:35:48 AM: edges-rel-semeval_f1: training: 0.659967 validation: 0.493310
09/16 07:35:48 AM: Global learning rate: 0.0001
09/16 07:35:48 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:51 AM: ***** Step 2400 / Validation 24 *****
09/16 07:35:51 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:51 AM: Validating...
09/16 07:35:51 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:51 AM: Best result seen so far for macro.
09/16 07:35:51 AM: Updating LR scheduler:
09/16 07:35:51 AM: 	Best result seen so far for macro_avg: 0.496
09/16 07:35:51 AM: 	# validation passes without improvement: 0
09/16 07:35:51 AM: edges-rel-semeval_loss: training: 0.076312 validation: 0.114724
09/16 07:35:51 AM: macro_avg: validation: 0.495897
09/16 07:35:51 AM: micro_avg: validation: 0.000000
09/16 07:35:51 AM: edges-rel-semeval_mcc: training: 0.678704 validation: 0.512169
09/16 07:35:51 AM: edges-rel-semeval_acc: training: 0.532324 validation: 0.355962
09/16 07:35:51 AM: edges-rel-semeval_precision: training: 0.822796 validation: 0.759426
09/16 07:35:51 AM: edges-rel-semeval_recall: training: 0.582781 validation: 0.368146
09/16 07:35:51 AM: edges-rel-semeval_f1: training: 0.682296 validation: 0.495897
09/16 07:35:51 AM: Global learning rate: 0.0001
09/16 07:35:51 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:53 AM: ***** Step 2500 / Validation 25 *****
09/16 07:35:53 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:53 AM: Validating...
09/16 07:35:54 AM: Updating LR scheduler:
09/16 07:35:54 AM: 	Best result seen so far for macro_avg: 0.496
09/16 07:35:54 AM: 	# validation passes without improvement: 1
09/16 07:35:54 AM: edges-rel-semeval_loss: training: 0.076502 validation: 0.114119
09/16 07:35:54 AM: macro_avg: validation: 0.494774
09/16 07:35:54 AM: micro_avg: validation: 0.000000
09/16 07:35:54 AM: edges-rel-semeval_mcc: training: 0.679609 validation: 0.507926
09/16 07:35:54 AM: edges-rel-semeval_acc: training: 0.538750 validation: 0.358573
09/16 07:35:54 AM: edges-rel-semeval_precision: training: 0.823919 validation: 0.743455
09/16 07:35:54 AM: edges-rel-semeval_recall: training: 0.583438 validation: 0.370757
09/16 07:35:54 AM: edges-rel-semeval_f1: training: 0.683132 validation: 0.494774
09/16 07:35:54 AM: Global learning rate: 0.0001
09/16 07:35:54 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:56 AM: Update 2581: task edges-rel-semeval, batch 81 (2581): mcc: 0.6597, acc: 0.5099, precision: 0.8052, recall: 0.5646, f1: 0.6638, edges-rel-semeval_loss: 0.0792
09/16 07:35:56 AM: ***** Step 2600 / Validation 26 *****
09/16 07:35:56 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:56 AM: Validating...
09/16 07:35:57 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:57 AM: Best result seen so far for macro.
09/16 07:35:57 AM: Updating LR scheduler:
09/16 07:35:57 AM: 	Best result seen so far for macro_avg: 0.497
09/16 07:35:57 AM: 	# validation passes without improvement: 0
09/16 07:35:57 AM: edges-rel-semeval_loss: training: 0.077741 validation: 0.116290
09/16 07:35:57 AM: macro_avg: validation: 0.497403
09/16 07:35:57 AM: micro_avg: validation: 0.000000
09/16 07:35:57 AM: edges-rel-semeval_mcc: training: 0.668045 validation: 0.508871
09/16 07:35:57 AM: edges-rel-semeval_acc: training: 0.520341 validation: 0.356832
09/16 07:35:57 AM: edges-rel-semeval_precision: training: 0.811052 validation: 0.738014
09/16 07:35:57 AM: edges-rel-semeval_recall: training: 0.573951 validation: 0.375109
09/16 07:35:57 AM: edges-rel-semeval_f1: training: 0.672207 validation: 0.497403
09/16 07:35:57 AM: Global learning rate: 0.0001
09/16 07:35:57 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:35:58 AM: ***** Step 2700 / Validation 27 *****
09/16 07:35:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:58 AM: Validating...
09/16 07:35:59 AM: Updating LR scheduler:
09/16 07:35:59 AM: 	Best result seen so far for macro_avg: 0.497
09/16 07:35:59 AM: 	# validation passes without improvement: 1
09/16 07:35:59 AM: edges-rel-semeval_loss: training: 0.073613 validation: 0.116006
09/16 07:35:59 AM: macro_avg: validation: 0.496504
09/16 07:35:59 AM: micro_avg: validation: 0.000000
09/16 07:35:59 AM: edges-rel-semeval_mcc: training: 0.693376 validation: 0.510942
09/16 07:35:59 AM: edges-rel-semeval_acc: training: 0.548438 validation: 0.361184
09/16 07:35:59 AM: edges-rel-semeval_precision: training: 0.833478 validation: 0.751323
09/16 07:35:59 AM: edges-rel-semeval_recall: training: 0.599063 validation: 0.370757
09/16 07:35:59 AM: edges-rel-semeval_f1: training: 0.697091 validation: 0.496504
09/16 07:35:59 AM: Global learning rate: 0.0001
09/16 07:35:59 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:01 AM: ***** Step 2800 / Validation 28 *****
09/16 07:36:01 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:01 AM: Validating...
09/16 07:36:02 AM: Updating LR scheduler:
09/16 07:36:02 AM: 	Best result seen so far for macro_avg: 0.497
09/16 07:36:02 AM: 	# validation passes without improvement: 2
09/16 07:36:02 AM: edges-rel-semeval_loss: training: 0.076627 validation: 0.117654
09/16 07:36:02 AM: macro_avg: validation: 0.479492
09/16 07:36:02 AM: micro_avg: validation: 0.000000
09/16 07:36:02 AM: edges-rel-semeval_mcc: training: 0.670950 validation: 0.489479
09/16 07:36:02 AM: edges-rel-semeval_acc: training: 0.528225 validation: 0.346388
09/16 07:36:02 AM: edges-rel-semeval_precision: training: 0.812417 validation: 0.713058
09/16 07:36:02 AM: edges-rel-semeval_recall: training: 0.577736 validation: 0.361184
09/16 07:36:02 AM: edges-rel-semeval_f1: training: 0.675267 validation: 0.479492
09/16 07:36:02 AM: Global learning rate: 0.0001
09/16 07:36:02 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:03 AM: ***** Step 2900 / Validation 29 *****
09/16 07:36:03 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:03 AM: Validating...
09/16 07:36:04 AM: Best result seen so far for edges-rel-semeval.
09/16 07:36:04 AM: Best result seen so far for macro.
09/16 07:36:04 AM: Updating LR scheduler:
09/16 07:36:04 AM: 	Best result seen so far for macro_avg: 0.500
09/16 07:36:04 AM: 	# validation passes without improvement: 0
09/16 07:36:04 AM: edges-rel-semeval_loss: training: 0.070585 validation: 0.118100
09/16 07:36:04 AM: macro_avg: validation: 0.499713
09/16 07:36:04 AM: micro_avg: validation: 0.000000
09/16 07:36:04 AM: edges-rel-semeval_mcc: training: 0.709140 validation: 0.510036
09/16 07:36:04 AM: edges-rel-semeval_acc: training: 0.572187 validation: 0.362054
09/16 07:36:04 AM: edges-rel-semeval_precision: training: 0.838533 validation: 0.734797
09/16 07:36:04 AM: edges-rel-semeval_recall: training: 0.621562 validation: 0.378590
09/16 07:36:04 AM: edges-rel-semeval_f1: training: 0.713927 validation: 0.499713
09/16 07:36:04 AM: Global learning rate: 0.0001
09/16 07:36:04 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:05 AM: ***** Step 3000 / Validation 30 *****
09/16 07:36:05 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:05 AM: Validating...
09/16 07:36:06 AM: Best result seen so far for edges-rel-semeval.
09/16 07:36:06 AM: Best result seen so far for macro.
09/16 07:36:06 AM: Updating LR scheduler:
09/16 07:36:06 AM: 	Best result seen so far for macro_avg: 0.523
09/16 07:36:06 AM: 	# validation passes without improvement: 0
09/16 07:36:06 AM: edges-rel-semeval_loss: training: 0.073286 validation: 0.115612
09/16 07:36:06 AM: macro_avg: validation: 0.522890
09/16 07:36:06 AM: micro_avg: validation: 0.000000
09/16 07:36:06 AM: edges-rel-semeval_mcc: training: 0.702719 validation: 0.524470
09/16 07:36:06 AM: edges-rel-semeval_acc: training: 0.560312 validation: 0.384682
09/16 07:36:06 AM: edges-rel-semeval_precision: training: 0.833475 validation: 0.713855
09/16 07:36:06 AM: edges-rel-semeval_recall: training: 0.614688 validation: 0.412533
09/16 07:36:06 AM: edges-rel-semeval_f1: training: 0.707554 validation: 0.522890
09/16 07:36:06 AM: Global learning rate: 0.0001
09/16 07:36:06 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:06 AM: Update 3010: task edges-rel-semeval, batch 10 (3010): mcc: 0.6687, acc: 0.5188, precision: 0.7908, recall: 0.5906, f1: 0.6762, edges-rel-semeval_loss: 0.0800
09/16 07:36:08 AM: ***** Step 3100 / Validation 31 *****
09/16 07:36:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:08 AM: Validating...
09/16 07:36:08 AM: Updating LR scheduler:
09/16 07:36:08 AM: 	Best result seen so far for macro_avg: 0.523
09/16 07:36:08 AM: 	# validation passes without improvement: 1
09/16 07:36:08 AM: edges-rel-semeval_loss: training: 0.068501 validation: 0.118304
09/16 07:36:08 AM: macro_avg: validation: 0.515625
09/16 07:36:08 AM: micro_avg: validation: 0.000000
09/16 07:36:08 AM: edges-rel-semeval_mcc: training: 0.720285 validation: 0.519482
09/16 07:36:08 AM: edges-rel-semeval_acc: training: 0.582151 validation: 0.379460
09/16 07:36:08 AM: edges-rel-semeval_precision: training: 0.843646 validation: 0.718507
09/16 07:36:08 AM: edges-rel-semeval_recall: training: 0.636392 validation: 0.402089
09/16 07:36:08 AM: edges-rel-semeval_f1: training: 0.725508 validation: 0.515625
09/16 07:36:08 AM: Global learning rate: 0.0001
09/16 07:36:08 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:10 AM: ***** Step 3200 / Validation 32 *****
09/16 07:36:10 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:10 AM: Validating...
09/16 07:36:11 AM: Updating LR scheduler:
09/16 07:36:11 AM: 	Best result seen so far for macro_avg: 0.523
09/16 07:36:11 AM: 	# validation passes without improvement: 2
09/16 07:36:11 AM: edges-rel-semeval_loss: training: 0.070240 validation: 0.117311
09/16 07:36:11 AM: macro_avg: validation: 0.515625
09/16 07:36:11 AM: micro_avg: validation: 0.000000
09/16 07:36:11 AM: edges-rel-semeval_mcc: training: 0.706135 validation: 0.519482
09/16 07:36:11 AM: edges-rel-semeval_acc: training: 0.569688 validation: 0.375109
09/16 07:36:11 AM: edges-rel-semeval_precision: training: 0.828086 validation: 0.718507
09/16 07:36:11 AM: edges-rel-semeval_recall: training: 0.624687 validation: 0.402089
09/16 07:36:11 AM: edges-rel-semeval_f1: training: 0.712148 validation: 0.515625
09/16 07:36:11 AM: Global learning rate: 0.0001
09/16 07:36:11 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:13 AM: ***** Step 3300 / Validation 33 *****
09/16 07:36:13 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:13 AM: Validating...
09/16 07:36:13 AM: Updating LR scheduler:
09/16 07:36:13 AM: 	Best result seen so far for macro_avg: 0.523
09/16 07:36:13 AM: 	# validation passes without improvement: 3
09/16 07:36:13 AM: edges-rel-semeval_loss: training: 0.067367 validation: 0.118898
09/16 07:36:13 AM: macro_avg: validation: 0.520155
09/16 07:36:13 AM: micro_avg: validation: 0.000000
09/16 07:36:13 AM: edges-rel-semeval_mcc: training: 0.723873 validation: 0.521773
09/16 07:36:13 AM: edges-rel-semeval_acc: training: 0.592558 validation: 0.384682
09/16 07:36:13 AM: edges-rel-semeval_precision: training: 0.837893 validation: 0.711480
09/16 07:36:13 AM: edges-rel-semeval_recall: training: 0.647114 validation: 0.409922
09/16 07:36:13 AM: edges-rel-semeval_f1: training: 0.730249 validation: 0.520155
09/16 07:36:13 AM: Global learning rate: 0.0001
09/16 07:36:13 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:15 AM: ***** Step 3400 / Validation 34 *****
09/16 07:36:15 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:15 AM: Validating...
09/16 07:36:15 AM: Updating LR scheduler:
09/16 07:36:15 AM: 	Best result seen so far for macro_avg: 0.523
09/16 07:36:15 AM: 	# validation passes without improvement: 0
09/16 07:36:15 AM: edges-rel-semeval_loss: training: 0.067379 validation: 0.119614
09/16 07:36:15 AM: macro_avg: validation: 0.506472
09/16 07:36:15 AM: micro_avg: validation: 0.000000
09/16 07:36:15 AM: edges-rel-semeval_mcc: training: 0.722167 validation: 0.511706
09/16 07:36:15 AM: edges-rel-semeval_acc: training: 0.592500 validation: 0.370757
09/16 07:36:15 AM: edges-rel-semeval_precision: training: 0.841954 validation: 0.716560
09/16 07:36:15 AM: edges-rel-semeval_recall: training: 0.640938 validation: 0.391645
09/16 07:36:15 AM: edges-rel-semeval_f1: training: 0.727821 validation: 0.506472
09/16 07:36:15 AM: Global learning rate: 5e-05
09/16 07:36:15 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:16 AM: Update 3420: task edges-rel-semeval, batch 20 (3420): mcc: 0.6796, acc: 0.5344, precision: 0.8004, recall: 0.6016, f1: 0.6869, edges-rel-semeval_loss: 0.0747
09/16 07:36:18 AM: ***** Step 3500 / Validation 35 *****
09/16 07:36:18 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:18 AM: Validating...
09/16 07:36:18 AM: Updating LR scheduler:
09/16 07:36:18 AM: 	Best result seen so far for macro_avg: 0.523
09/16 07:36:18 AM: 	# validation passes without improvement: 1
09/16 07:36:18 AM: edges-rel-semeval_loss: training: 0.066049 validation: 0.118046
09/16 07:36:18 AM: macro_avg: validation: 0.516630
09/16 07:36:18 AM: micro_avg: validation: 0.000000
09/16 07:36:18 AM: edges-rel-semeval_mcc: training: 0.730964 validation: 0.518898
09/16 07:36:18 AM: edges-rel-semeval_acc: training: 0.600126 validation: 0.382942
09/16 07:36:18 AM: edges-rel-semeval_precision: training: 0.844743 validation: 0.711450
09/16 07:36:18 AM: edges-rel-semeval_recall: training: 0.653737 validation: 0.405570
09/16 07:36:18 AM: edges-rel-semeval_f1: training: 0.737067 validation: 0.516630
09/16 07:36:18 AM: Global learning rate: 5e-05
09/16 07:36:18 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:20 AM: ***** Step 3600 / Validation 36 *****
09/16 07:36:20 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:20 AM: Validating...
09/16 07:36:20 AM: Updating LR scheduler:
09/16 07:36:20 AM: 	Best result seen so far for macro_avg: 0.523
09/16 07:36:20 AM: 	# validation passes without improvement: 2
09/16 07:36:20 AM: edges-rel-semeval_loss: training: 0.064129 validation: 0.119606
09/16 07:36:20 AM: macro_avg: validation: 0.505085
09/16 07:36:20 AM: micro_avg: validation: 0.000000
09/16 07:36:20 AM: edges-rel-semeval_mcc: training: 0.736414 validation: 0.511249
09/16 07:36:20 AM: edges-rel-semeval_acc: training: 0.606563 validation: 0.369017
09/16 07:36:20 AM: edges-rel-semeval_precision: training: 0.849718 validation: 0.719807
09/16 07:36:20 AM: edges-rel-semeval_recall: training: 0.659063 validation: 0.389034
09/16 07:36:20 AM: edges-rel-semeval_f1: training: 0.742344 validation: 0.505085
09/16 07:36:20 AM: Global learning rate: 5e-05
09/16 07:36:20 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:23 AM: ***** Step 3700 / Validation 37 *****
09/16 07:36:23 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:23 AM: Validating...
09/16 07:36:23 AM: Updating LR scheduler:
09/16 07:36:23 AM: 	Best result seen so far for macro_avg: 0.523
09/16 07:36:23 AM: 	# validation passes without improvement: 3
09/16 07:36:23 AM: edges-rel-semeval_loss: training: 0.063184 validation: 0.119126
09/16 07:36:23 AM: macro_avg: validation: 0.503095
09/16 07:36:23 AM: micro_avg: validation: 0.000000
09/16 07:36:23 AM: edges-rel-semeval_mcc: training: 0.750255 validation: 0.508024
09/16 07:36:23 AM: edges-rel-semeval_acc: training: 0.619048 validation: 0.369017
09/16 07:36:23 AM: edges-rel-semeval_precision: training: 0.861874 validation: 0.711783
09/16 07:36:23 AM: edges-rel-semeval_recall: training: 0.672974 validation: 0.389034
09/16 07:36:23 AM: edges-rel-semeval_f1: training: 0.755800 validation: 0.503095
09/16 07:36:23 AM: Global learning rate: 5e-05
09/16 07:36:23 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:25 AM: ***** Step 3800 / Validation 38 *****
09/16 07:36:25 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:25 AM: Validating...
09/16 07:36:25 AM: Updating LR scheduler:
09/16 07:36:25 AM: 	Best result seen so far for macro_avg: 0.523
09/16 07:36:25 AM: 	# validation passes without improvement: 0
09/16 07:36:25 AM: edges-rel-semeval_loss: training: 0.062701 validation: 0.119060
09/16 07:36:25 AM: macro_avg: validation: 0.515084
09/16 07:36:25 AM: micro_avg: validation: 0.000000
09/16 07:36:25 AM: edges-rel-semeval_mcc: training: 0.746950 validation: 0.519180
09/16 07:36:25 AM: edges-rel-semeval_acc: training: 0.621563 validation: 0.380331
09/16 07:36:25 AM: edges-rel-semeval_precision: training: 0.849804 validation: 0.719189
09/16 07:36:25 AM: edges-rel-semeval_recall: training: 0.677188 validation: 0.401218
09/16 07:36:25 AM: edges-rel-semeval_f1: training: 0.753739 validation: 0.515084
09/16 07:36:25 AM: Global learning rate: 2.5e-05
09/16 07:36:25 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:26 AM: Update 3827: task edges-rel-semeval, batch 27 (3827): mcc: 0.7498, acc: 0.6157, precision: 0.8489, recall: 0.6829, f1: 0.7569, edges-rel-semeval_loss: 0.0616
09/16 07:36:28 AM: ***** Step 3900 / Validation 39 *****
09/16 07:36:28 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:28 AM: Validating...
09/16 07:36:28 AM: Best result seen so far for edges-rel-semeval.
09/16 07:36:28 AM: Best result seen so far for macro.
09/16 07:36:28 AM: Updating LR scheduler:
09/16 07:36:28 AM: 	Best result seen so far for macro_avg: 0.524
09/16 07:36:28 AM: 	# validation passes without improvement: 0
09/16 07:36:28 AM: edges-rel-semeval_loss: training: 0.061653 validation: 0.118525
09/16 07:36:28 AM: macro_avg: validation: 0.523572
09/16 07:36:28 AM: micro_avg: validation: 0.000000
09/16 07:36:28 AM: edges-rel-semeval_mcc: training: 0.751248 validation: 0.526566
09/16 07:36:28 AM: edges-rel-semeval_acc: training: 0.625355 validation: 0.388164
09/16 07:36:28 AM: edges-rel-semeval_precision: training: 0.854373 validation: 0.721713
09/16 07:36:28 AM: edges-rel-semeval_recall: training: 0.680858 validation: 0.410792
09/16 07:36:28 AM: edges-rel-semeval_f1: training: 0.757810 validation: 0.523572
09/16 07:36:28 AM: Global learning rate: 2.5e-05
09/16 07:36:28 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:30 AM: ***** Step 4000 / Validation 40 *****
09/16 07:36:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:30 AM: Validating...
09/16 07:36:30 AM: Updating LR scheduler:
09/16 07:36:30 AM: 	Best result seen so far for macro_avg: 0.524
09/16 07:36:30 AM: 	# validation passes without improvement: 1
09/16 07:36:30 AM: edges-rel-semeval_loss: training: 0.059765 validation: 0.119683
09/16 07:36:30 AM: macro_avg: validation: 0.513225
09/16 07:36:30 AM: micro_avg: validation: 0.000000
09/16 07:36:30 AM: edges-rel-semeval_mcc: training: 0.763681 validation: 0.519069
09/16 07:36:30 AM: edges-rel-semeval_acc: training: 0.638125 validation: 0.377720
09/16 07:36:30 AM: edges-rel-semeval_precision: training: 0.870509 validation: 0.726115
09/16 07:36:30 AM: edges-rel-semeval_recall: training: 0.689062 validation: 0.396867
09/16 07:36:30 AM: edges-rel-semeval_f1: training: 0.769231 validation: 0.513225
09/16 07:36:30 AM: Global learning rate: 2.5e-05
09/16 07:36:30 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:33 AM: ***** Step 4100 / Validation 41 *****
09/16 07:36:33 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:33 AM: Validating...
09/16 07:36:33 AM: Updating LR scheduler:
09/16 07:36:33 AM: 	Best result seen so far for macro_avg: 0.524
09/16 07:36:33 AM: 	# validation passes without improvement: 2
09/16 07:36:33 AM: edges-rel-semeval_loss: training: 0.059463 validation: 0.119445
09/16 07:36:33 AM: macro_avg: validation: 0.513649
09/16 07:36:33 AM: micro_avg: validation: 0.000000
09/16 07:36:33 AM: edges-rel-semeval_mcc: training: 0.761737 validation: 0.516910
09/16 07:36:33 AM: edges-rel-semeval_acc: training: 0.635131 validation: 0.379460
09/16 07:36:33 AM: edges-rel-semeval_precision: training: 0.869114 validation: 0.713622
09/16 07:36:33 AM: edges-rel-semeval_recall: training: 0.686850 validation: 0.401218
09/16 07:36:33 AM: edges-rel-semeval_f1: training: 0.767307 validation: 0.513649
09/16 07:36:33 AM: Global learning rate: 2.5e-05
09/16 07:36:33 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:35 AM: ***** Step 4200 / Validation 42 *****
09/16 07:36:35 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:35 AM: Validating...
09/16 07:36:35 AM: Updating LR scheduler:
09/16 07:36:35 AM: 	Best result seen so far for macro_avg: 0.524
09/16 07:36:35 AM: 	# validation passes without improvement: 3
09/16 07:36:35 AM: edges-rel-semeval_loss: training: 0.059025 validation: 0.120207
09/16 07:36:35 AM: macro_avg: validation: 0.513077
09/16 07:36:35 AM: micro_avg: validation: 0.000000
09/16 07:36:35 AM: edges-rel-semeval_mcc: training: 0.762135 validation: 0.516009
09/16 07:36:35 AM: edges-rel-semeval_acc: training: 0.634062 validation: 0.378590
09/16 07:36:35 AM: edges-rel-semeval_precision: training: 0.866510 validation: 0.711420
09/16 07:36:35 AM: edges-rel-semeval_recall: training: 0.689687 validation: 0.401218
09/16 07:36:35 AM: edges-rel-semeval_f1: training: 0.768053 validation: 0.513077
09/16 07:36:35 AM: Global learning rate: 2.5e-05
09/16 07:36:35 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:36 AM: Update 4235: task edges-rel-semeval, batch 35 (4235): mcc: 0.7728, acc: 0.6491, precision: 0.8894, recall: 0.6893, f1: 0.7767, edges-rel-semeval_loss: 0.0598
09/16 07:36:37 AM: ***** Step 4300 / Validation 43 *****
09/16 07:36:37 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:37 AM: Validating...
09/16 07:36:38 AM: Updating LR scheduler:
09/16 07:36:38 AM: 	Best result seen so far for macro_avg: 0.524
09/16 07:36:38 AM: 	# validation passes without improvement: 0
09/16 07:36:38 AM: edges-rel-semeval_loss: training: 0.061142 validation: 0.119699
09/16 07:36:38 AM: macro_avg: validation: 0.513874
09/16 07:36:38 AM: micro_avg: validation: 0.000000
09/16 07:36:38 AM: edges-rel-semeval_mcc: training: 0.758631 validation: 0.516182
09/16 07:36:38 AM: edges-rel-semeval_acc: training: 0.635000 validation: 0.380331
09/16 07:36:38 AM: edges-rel-semeval_precision: training: 0.867116 validation: 0.709035
09/16 07:36:38 AM: edges-rel-semeval_recall: training: 0.683125 validation: 0.402959
09/16 07:36:38 AM: edges-rel-semeval_f1: training: 0.764202 validation: 0.513874
09/16 07:36:38 AM: Global learning rate: 1.25e-05
09/16 07:36:38 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:40 AM: ***** Step 4400 / Validation 44 *****
09/16 07:36:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:40 AM: Validating...
09/16 07:36:41 AM: Updating LR scheduler:
09/16 07:36:41 AM: 	Best result seen so far for macro_avg: 0.524
09/16 07:36:41 AM: 	# validation passes without improvement: 1
09/16 07:36:41 AM: edges-rel-semeval_loss: training: 0.056840 validation: 0.120227
09/16 07:36:41 AM: macro_avg: validation: 0.513998
09/16 07:36:41 AM: micro_avg: validation: 0.000000
09/16 07:36:41 AM: edges-rel-semeval_mcc: training: 0.783670 validation: 0.518578
09/16 07:36:41 AM: edges-rel-semeval_acc: training: 0.665090 validation: 0.377720
09/16 07:36:41 AM: edges-rel-semeval_precision: training: 0.877457 validation: 0.720565
09/16 07:36:41 AM: edges-rel-semeval_recall: training: 0.718070 validation: 0.399478
09/16 07:36:41 AM: edges-rel-semeval_f1: training: 0.789802 validation: 0.513998
09/16 07:36:41 AM: Global learning rate: 1.25e-05
09/16 07:36:41 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:43 AM: ***** Step 4500 / Validation 45 *****
09/16 07:36:43 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:43 AM: Validating...
09/16 07:36:43 AM: Updating LR scheduler:
09/16 07:36:43 AM: 	Best result seen so far for macro_avg: 0.524
09/16 07:36:43 AM: 	# validation passes without improvement: 2
09/16 07:36:43 AM: edges-rel-semeval_loss: training: 0.058754 validation: 0.119495
09/16 07:36:43 AM: macro_avg: validation: 0.518192
09/16 07:36:43 AM: micro_avg: validation: 0.000000
09/16 07:36:43 AM: edges-rel-semeval_mcc: training: 0.772836 validation: 0.519250
09/16 07:36:43 AM: edges-rel-semeval_acc: training: 0.647188 validation: 0.384682
09/16 07:36:43 AM: edges-rel-semeval_precision: training: 0.877599 validation: 0.706767
09/16 07:36:43 AM: edges-rel-semeval_recall: training: 0.699063 validation: 0.409051
09/16 07:36:43 AM: edges-rel-semeval_f1: training: 0.778222 validation: 0.518192
09/16 07:36:43 AM: Global learning rate: 1.25e-05
09/16 07:36:43 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:46 AM: ***** Step 4600 / Validation 46 *****
09/16 07:36:46 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:46 AM: Validating...
09/16 07:36:46 AM: Evaluate: task edges-rel-semeval, batch 13 (36): mcc: 0.5435, acc: 0.4087, precision: 0.7355, recall: 0.4279, f1: 0.5410, edges-rel-semeval_loss: 0.1130
09/16 07:36:46 AM: Updating LR scheduler:
09/16 07:36:46 AM: 	Best result seen so far for macro_avg: 0.524
09/16 07:36:46 AM: 	# validation passes without improvement: 3
09/16 07:36:46 AM: edges-rel-semeval_loss: training: 0.057625 validation: 0.120191
09/16 07:36:46 AM: macro_avg: validation: 0.513107
09/16 07:36:46 AM: micro_avg: validation: 0.000000
09/16 07:36:46 AM: edges-rel-semeval_mcc: training: 0.773443 validation: 0.516603
09/16 07:36:46 AM: edges-rel-semeval_acc: training: 0.649007 validation: 0.378590
09/16 07:36:46 AM: edges-rel-semeval_precision: training: 0.875344 validation: 0.714286
09/16 07:36:46 AM: edges-rel-semeval_recall: training: 0.701987 validation: 0.400348
09/16 07:36:46 AM: edges-rel-semeval_f1: training: 0.779139 validation: 0.513107
09/16 07:36:46 AM: Global learning rate: 1.25e-05
09/16 07:36:46 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:48 AM: ***** Step 4700 / Validation 47 *****
09/16 07:36:48 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:48 AM: Validating...
09/16 07:36:48 AM: Updating LR scheduler:
09/16 07:36:48 AM: 	Best result seen so far for macro_avg: 0.524
09/16 07:36:48 AM: 	# validation passes without improvement: 0
09/16 07:36:48 AM: edges-rel-semeval_loss: training: 0.059380 validation: 0.119945
09/16 07:36:48 AM: macro_avg: validation: 0.520670
09/16 07:36:48 AM: micro_avg: validation: 0.000000
09/16 07:36:48 AM: edges-rel-semeval_mcc: training: 0.765856 validation: 0.525256
09/16 07:36:48 AM: edges-rel-semeval_acc: training: 0.643437 validation: 0.382942
09/16 07:36:48 AM: edges-rel-semeval_precision: training: 0.874703 validation: 0.726989
09/16 07:36:48 AM: edges-rel-semeval_recall: training: 0.689375 validation: 0.405570
09/16 07:36:48 AM: edges-rel-semeval_f1: training: 0.771059 validation: 0.520670
09/16 07:36:48 AM: Global learning rate: 6.25e-06
09/16 07:36:48 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:51 AM: ***** Step 4800 / Validation 48 *****
09/16 07:36:51 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:51 AM: Validating...
09/16 07:36:51 AM: Updating LR scheduler:
09/16 07:36:51 AM: 	Best result seen so far for macro_avg: 0.524
09/16 07:36:51 AM: 	# validation passes without improvement: 1
09/16 07:36:51 AM: edges-rel-semeval_loss: training: 0.057026 validation: 0.119541
09/16 07:36:51 AM: macro_avg: validation: 0.521259
09/16 07:36:51 AM: micro_avg: validation: 0.000000
09/16 07:36:51 AM: edges-rel-semeval_mcc: training: 0.771690 validation: 0.522970
09/16 07:36:51 AM: edges-rel-semeval_acc: training: 0.649322 validation: 0.387293
09/16 07:36:51 AM: edges-rel-semeval_precision: training: 0.877381 validation: 0.712991
09/16 07:36:51 AM: edges-rel-semeval_recall: training: 0.697256 validation: 0.410792
09/16 07:36:51 AM: edges-rel-semeval_f1: training: 0.777016 validation: 0.521259
09/16 07:36:51 AM: Global learning rate: 6.25e-06
09/16 07:36:51 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:53 AM: ***** Step 4900 / Validation 49 *****
09/16 07:36:53 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:53 AM: Validating...
09/16 07:36:53 AM: Updating LR scheduler:
09/16 07:36:53 AM: 	Best result seen so far for macro_avg: 0.524
09/16 07:36:53 AM: 	# validation passes without improvement: 2
09/16 07:36:53 AM: Ran out of early stopping patience. Stopping training.
09/16 07:36:53 AM: edges-rel-semeval_loss: training: 0.058458 validation: 0.120045
09/16 07:36:53 AM: macro_avg: validation: 0.519092
09/16 07:36:53 AM: micro_avg: validation: 0.000000
09/16 07:36:53 AM: edges-rel-semeval_mcc: training: 0.769224 validation: 0.521160
09/16 07:36:53 AM: edges-rel-semeval_acc: training: 0.641250 validation: 0.384682
09/16 07:36:53 AM: edges-rel-semeval_precision: training: 0.865948 validation: 0.712766
09/16 07:36:53 AM: edges-rel-semeval_recall: training: 0.702500 validation: 0.408181
09/16 07:36:53 AM: edges-rel-semeval_f1: training: 0.775707 validation: 0.519092
09/16 07:36:53 AM: Global learning rate: 6.25e-06
09/16 07:36:53 AM: Saving checkpoints to: ./experiments/rel-semeval-rte-only/run
09/16 07:36:53 AM: Stopped training after 49 validation checks
09/16 07:36:53 AM: Trained edges-rel-semeval for 4900 batches or 22.791 epochs
09/16 07:36:53 AM: ***** VALIDATION RESULTS *****
09/16 07:36:53 AM: edges-rel-semeval_f1 (for best val pass 39): edges-rel-semeval_loss: 0.11852, macro_avg: 0.52357, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.52657, edges-rel-semeval_acc: 0.38816, edges-rel-semeval_precision: 0.72171, edges-rel-semeval_recall: 0.41079, edges-rel-semeval_f1: 0.52357
09/16 07:36:53 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.18744, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 07:36:53 AM: macro_avg (for best val pass 39): edges-rel-semeval_loss: 0.11852, macro_avg: 0.52357, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.52657, edges-rel-semeval_acc: 0.38816, edges-rel-semeval_precision: 0.72171, edges-rel-semeval_recall: 0.41079, edges-rel-semeval_f1: 0.52357
09/16 07:36:53 AM: Evaluating...
09/16 07:36:53 AM: Loaded model state from ./experiments/rel-semeval-rte-only/run/edges-rel-semeval/model_state_target_train_val_39.best.th
09/16 07:36:53 AM: Evaluating on: edges-rel-semeval, split: val
09/16 07:36:54 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 07:36:54 AM: Finished evaluating on: edges-rel-semeval
09/16 07:36:54 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 07:36:54 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-rte-only/run
09/16 07:36:54 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-rte-only/run
09/16 07:36:54 AM: Evaluating on: edges-rel-semeval, split: test
09/16 07:36:55 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 07:36:55 AM: Finished evaluating on: edges-rel-semeval
09/16 07:36:55 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 07:36:55 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-rte-only/run
09/16 07:36:55 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-rte-only/run
09/16 07:36:55 AM: Writing results for split 'val' to ./experiments/rel-semeval-rte-only/results.tsv
09/16 07:36:55 AM: micro_avg: 0.000, macro_avg: 0.524, edges-rel-semeval_mcc: 0.527, edges-rel-semeval_acc: 0.388, edges-rel-semeval_precision: 0.722, edges-rel-semeval_recall: 0.411, edges-rel-semeval_f1: 0.524
09/16 07:36:55 AM: Done!
