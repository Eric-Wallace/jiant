09/16 09:18:53 AM: Git branch: master
09/16 09:18:53 AM: Git SHA: e62dc9f3b01eb77fa9261a5ff029cc2e417b8272
09/16 09:18:53 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/dep-ud-ewt-multiqa-top/",
  "exp_name": "experiments/dep-ud-ewt-multiqa-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/dep-ud-ewt-multiqa-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/multiqa",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/dep-ud-ewt-multiqa-top__run",
  "run_dir": "./experiments/dep-ud-ewt-multiqa-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-dep-ud-ewt",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 09:18:53 AM: Saved config to ./experiments/dep-ud-ewt-multiqa-top/run/params.conf
09/16 09:18:53 AM: Using random seed 1234
09/16 09:18:55 AM: Using GPU 0
09/16 09:18:55 AM: Loading tasks...
09/16 09:18:55 AM: Writing pre-preprocessed tasks to ./experiments/dep-ud-ewt-multiqa-top/
09/16 09:18:55 AM: 	Creating task edges-dep-ud-ewt from scratch.
09/16 09:18:57 AM: Read=12522, Skip=0, Total=12522 from ./probing_data/edges/dep_ewt/en_ewt-ud-train.json.retokenized.bert-base-uncased
09/16 09:18:57 AM: Read=2000, Skip=0, Total=2000 from ./probing_data/edges/dep_ewt/en_ewt-ud-dev.json.retokenized.bert-base-uncased
09/16 09:18:57 AM: Read=2075, Skip=0, Total=2075 from ./probing_data/edges/dep_ewt/en_ewt-ud-test.json.retokenized.bert-base-uncased
09/16 09:18:58 AM: 	Task 'edges-dep-ud-ewt': |train|=12522 |val|=2000 |test|=2075
09/16 09:18:58 AM: 	Finished loading tasks: edges-dep-ud-ewt.
09/16 09:18:58 AM: 	Building vocab from scratch.
09/16 09:18:58 AM: 	Counting units for task edges-dep-ud-ewt.
09/16 09:18:58 AM: 	Task 'edges-dep-ud-ewt': adding vocab namespace 'edges-dep-ud-ewt_labels'
09/16 09:18:59 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:18:59 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 09:18:59 AM: 	Saved vocab to ./experiments/dep-ud-ewt-multiqa-top/vocab
09/16 09:18:59 AM: Loading token dictionary from ./experiments/dep-ud-ewt-multiqa-top/vocab.
09/16 09:18:59 AM: 	Loaded vocab from ./experiments/dep-ud-ewt-multiqa-top/vocab
09/16 09:18:59 AM: 	Vocab namespace tokens: size 14333
09/16 09:18:59 AM: 	Vocab namespace bert_uncased: size 30524
09/16 09:18:59 AM: 	Vocab namespace edges-dep-ud-ewt_labels: size 49
09/16 09:18:59 AM: 	Vocab namespace chars: size 81
09/16 09:18:59 AM: 	Finished building vocab.
09/16 09:18:59 AM: 	Task edges-dep-ud-ewt (train): Indexing from scratch.
09/16 09:19:05 AM: 	Task edges-dep-ud-ewt (train): Saved 12522 instances to ./experiments/dep-ud-ewt-multiqa-top/preproc/edges-dep-ud-ewt__train_data
09/16 09:19:05 AM: 	Task edges-dep-ud-ewt (val): Indexing from scratch.
09/16 09:19:06 AM: 	Task edges-dep-ud-ewt (val): Saved 2000 instances to ./experiments/dep-ud-ewt-multiqa-top/preproc/edges-dep-ud-ewt__val_data
09/16 09:19:06 AM: 	Task edges-dep-ud-ewt (test): Indexing from scratch.
09/16 09:19:07 AM: 	Task edges-dep-ud-ewt (test): Saved 2075 instances to ./experiments/dep-ud-ewt-multiqa-top/preproc/edges-dep-ud-ewt__test_data
09/16 09:19:07 AM: 	Finished indexing tasks
09/16 09:19:07 AM: 	Creating trimmed target-only version of edges-dep-ud-ewt train.
09/16 09:19:07 AM: 	  Training on 
09/16 09:19:07 AM: 	  Evaluating on edges-dep-ud-ewt
09/16 09:19:07 AM: 	Finished loading tasks in 11.403s
09/16 09:19:07 AM: 	 Tasks: ['edges-dep-ud-ewt']
09/16 09:19:07 AM: Building model...
09/16 09:19:07 AM: Using BERT model (bert-base-uncased).
09/16 09:19:07 AM: LOADING A FUNETUNED MODEL from: 
09/16 09:19:07 AM: models/multiqa
09/16 09:19:07 AM: loading configuration file models/multiqa/config.json
09/16 09:19:07 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 09:19:07 AM: loading weights file models/multiqa/pytorch_model.bin
09/16 09:19:11 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpw6b4h56e
09/16 09:19:13 AM: copying /tmp/tmpw6b4h56e to cache at ./experiments/dep-ud-ewt-multiqa-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:19:13 AM: creating metadata file for ./experiments/dep-ud-ewt-multiqa-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:19:13 AM: removing temp file /tmp/tmpw6b4h56e
09/16 09:19:13 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/dep-ud-ewt-multiqa-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:19:13 AM: Initializing parameters
09/16 09:19:13 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 09:19:13 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 09:19:13 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 09:19:13 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 09:19:13 AM: 	Task 'edges-dep-ud-ewt' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-dep-ud-ewt"
}
09/16 09:19:18 AM: Model specification:
09/16 09:19:18 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-dep-ud-ewt_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=49, bias=True)
      )
    )
  )
)
09/16 09:19:18 AM: Model parameters:
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.4.weight: Trainable parameter, count 12544 with torch.Size([49, 256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.4.bias: Trainable parameter, count 49 with torch.Size([49])
09/16 09:19:18 AM: Total number of parameters: 110151473 (1.10151e+08)
09/16 09:19:18 AM: Number of trainable parameters: 669233 (669233)
09/16 09:19:18 AM: Finished building model in 10.946s
09/16 09:19:18 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-dep-ud-ewt 

09/16 09:19:22 AM: patience = 9
09/16 09:19:22 AM: val_interval = 1000
09/16 09:19:22 AM: max_vals = 250
09/16 09:19:22 AM: cuda_device = 0
09/16 09:19:22 AM: grad_norm = 5.0
09/16 09:19:22 AM: grad_clipping = None
09/16 09:19:22 AM: lr_decay = 0.99
09/16 09:19:22 AM: min_lr = 1e-06
09/16 09:19:22 AM: keep_all_checkpoints = 0
09/16 09:19:22 AM: val_data_limit = 5000
09/16 09:19:22 AM: max_epochs = -1
09/16 09:19:22 AM: dec_val_scale = 250
09/16 09:19:22 AM: training_data_fraction = 1
09/16 09:19:22 AM: type = adam
09/16 09:19:22 AM: parameter_groups = None
09/16 09:19:22 AM: Number of trainable parameters: 669233
09/16 09:19:22 AM: infer_type_and_cast = True
09/16 09:19:22 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:22 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:22 AM: lr = 0.0001
09/16 09:19:22 AM: amsgrad = True
09/16 09:19:22 AM: type = reduce_on_plateau
09/16 09:19:22 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:22 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:22 AM: mode = max
09/16 09:19:22 AM: factor = 0.5
09/16 09:19:22 AM: patience = 3
09/16 09:19:22 AM: threshold = 0.0001
09/16 09:19:22 AM: threshold_mode = abs
09/16 09:19:22 AM: verbose = True
09/16 09:19:22 AM: type = adam
09/16 09:19:22 AM: parameter_groups = None
09/16 09:19:22 AM: Number of trainable parameters: 669233
09/16 09:19:22 AM: infer_type_and_cast = True
09/16 09:19:22 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:22 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:22 AM: lr = 0.0001
09/16 09:19:22 AM: amsgrad = True
09/16 09:19:22 AM: type = reduce_on_plateau
09/16 09:19:22 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:22 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:22 AM: mode = max
09/16 09:19:22 AM: factor = 0.5
09/16 09:19:22 AM: patience = 3
09/16 09:19:22 AM: threshold = 0.0001
09/16 09:19:22 AM: threshold_mode = abs
09/16 09:19:22 AM: verbose = True
09/16 09:19:22 AM: Starting training without restoring from a checkpoint.
09/16 09:19:22 AM: Training examples per task, before any subsampling: {'edges-dep-ud-ewt': 12522}
09/16 09:19:22 AM: Beginning training with stopping criteria based on metric: edges-dep-ud-ewt_f1
09/16 09:19:32 AM: Update 26: task edges-dep-ud-ewt, batch 26 (26): mcc: 0.0116, acc: 0.0063, precision: 0.0253, recall: 0.1250, f1: 0.0421, edges-dep-ud-ewt_loss: 0.3336
09/16 09:19:42 AM: Update 88: task edges-dep-ud-ewt, batch 88 (88): mcc: 0.0079, acc: 0.0036, precision: 0.0259, recall: 0.0496, f1: 0.0340, edges-dep-ud-ewt_loss: 0.2120
09/16 09:19:53 AM: Update 143: task edges-dep-ud-ewt, batch 143 (143): mcc: 0.0070, acc: 0.0032, precision: 0.0267, recall: 0.0313, f1: 0.0288, edges-dep-ud-ewt_loss: 0.1721
09/16 09:20:03 AM: Update 194: task edges-dep-ud-ewt, batch 194 (194): mcc: 0.0083, acc: 0.0045, precision: 0.0292, recall: 0.0246, f1: 0.0267, edges-dep-ud-ewt_loss: 0.1515
09/16 09:20:13 AM: Update 244: task edges-dep-ud-ewt, batch 244 (244): mcc: 0.0132, acc: 0.0083, precision: 0.0364, recall: 0.0240, f1: 0.0289, edges-dep-ud-ewt_loss: 0.1382
09/16 09:20:23 AM: Update 295: task edges-dep-ud-ewt, batch 295 (295): mcc: 0.0211, acc: 0.0137, precision: 0.0486, recall: 0.0265, f1: 0.0343, edges-dep-ud-ewt_loss: 0.1284
09/16 09:20:33 AM: Update 341: task edges-dep-ud-ewt, batch 341 (341): mcc: 0.0288, acc: 0.0184, precision: 0.0614, recall: 0.0295, f1: 0.0398, edges-dep-ud-ewt_loss: 0.1216
09/16 09:20:46 AM: Update 393: task edges-dep-ud-ewt, batch 393 (393): mcc: 0.0396, acc: 0.0245, precision: 0.0804, recall: 0.0340, f1: 0.0478, edges-dep-ud-ewt_loss: 0.1155
09/16 09:20:56 AM: Update 435: task edges-dep-ud-ewt, batch 435 (435): mcc: 0.0493, acc: 0.0294, precision: 0.0990, recall: 0.0379, f1: 0.0548, edges-dep-ud-ewt_loss: 0.1115
09/16 09:21:06 AM: Update 491: task edges-dep-ud-ewt, batch 491 (491): mcc: 0.0626, acc: 0.0363, precision: 0.1240, recall: 0.0441, f1: 0.0650, edges-dep-ud-ewt_loss: 0.1067
09/16 09:21:17 AM: Update 539: task edges-dep-ud-ewt, batch 539 (539): mcc: 0.0756, acc: 0.0426, precision: 0.1498, recall: 0.0497, f1: 0.0746, edges-dep-ud-ewt_loss: 0.1033
09/16 09:21:27 AM: Update 601: task edges-dep-ud-ewt, batch 601 (601): mcc: 0.0916, acc: 0.0506, precision: 0.1810, recall: 0.0573, f1: 0.0871, edges-dep-ud-ewt_loss: 0.0991
09/16 09:21:37 AM: Update 655: task edges-dep-ud-ewt, batch 655 (655): mcc: 0.1080, acc: 0.0588, precision: 0.2131, recall: 0.0652, f1: 0.0998, edges-dep-ud-ewt_loss: 0.0958
09/16 09:21:49 AM: Update 706: task edges-dep-ud-ewt, batch 706 (706): mcc: 0.1238, acc: 0.0666, precision: 0.2445, recall: 0.0727, f1: 0.1121, edges-dep-ud-ewt_loss: 0.0931
09/16 09:21:59 AM: Update 755: task edges-dep-ud-ewt, batch 755 (755): mcc: 0.1418, acc: 0.0757, precision: 0.2793, recall: 0.0816, f1: 0.1263, edges-dep-ud-ewt_loss: 0.0909
09/16 09:22:09 AM: Update 789: task edges-dep-ud-ewt, batch 789 (789): mcc: 0.1530, acc: 0.0814, precision: 0.3011, recall: 0.0872, f1: 0.1352, edges-dep-ud-ewt_loss: 0.0893
09/16 09:22:19 AM: Update 848: task edges-dep-ud-ewt, batch 848 (848): mcc: 0.1703, acc: 0.0905, precision: 0.3328, recall: 0.0963, f1: 0.1494, edges-dep-ud-ewt_loss: 0.0868
09/16 09:22:29 AM: Update 896: task edges-dep-ud-ewt, batch 896 (896): mcc: 0.1855, acc: 0.0983, precision: 0.3608, recall: 0.1043, f1: 0.1618, edges-dep-ud-ewt_loss: 0.0851
09/16 09:22:39 AM: Update 950: task edges-dep-ud-ewt, batch 950 (950): mcc: 0.2012, acc: 0.1067, precision: 0.3889, recall: 0.1129, f1: 0.1750, edges-dep-ud-ewt_loss: 0.0831
09/16 09:22:49 AM: ***** Step 1000 / Validation 1 *****
09/16 09:22:49 AM: edges-dep-ud-ewt: trained on 1000 batches, 2.551 epochs
09/16 09:22:49 AM: Validating...
09/16 09:22:50 AM: Evaluate: task edges-dep-ud-ewt, batch 2 (63): mcc: 0.5289, acc: 0.2978, precision: 0.9425, recall: 0.3018, f1: 0.4572, edges-dep-ud-ewt_loss: 0.0473
09/16 09:23:00 AM: Evaluate: task edges-dep-ud-ewt, batch 48 (63): mcc: 0.5457, acc: 0.3251, precision: 0.9197, recall: 0.3294, f1: 0.4850, edges-dep-ud-ewt_loss: 0.0464
09/16 09:23:03 AM: Best result seen so far for edges-dep-ud-ewt.
09/16 09:23:03 AM: Best result seen so far for micro.
09/16 09:23:03 AM: Best result seen so far for macro.
09/16 09:23:03 AM: Updating LR scheduler:
09/16 09:23:03 AM: 	Best result seen so far for macro_avg: 0.494
09/16 09:23:03 AM: 	# validation passes without improvement: 0
09/16 09:23:03 AM: edges-dep-ud-ewt_loss: training: 0.081436 validation: 0.045731
09/16 09:23:03 AM: macro_avg: validation: 0.494437
09/16 09:23:03 AM: micro_avg: validation: 0.000000
09/16 09:23:03 AM: edges-dep-ud-ewt_mcc: training: 0.215445 validation: 0.553087
09/16 09:23:03 AM: edges-dep-ud-ewt_acc: training: 0.114460 validation: 0.332975
09/16 09:23:03 AM: edges-dep-ud-ewt_precision: training: 0.413653 validation: 0.920208
09/16 09:23:03 AM: edges-dep-ud-ewt_recall: training: 0.120901 validation: 0.338033
09/16 09:23:03 AM: edges-dep-ud-ewt_f1: training: 0.187114 validation: 0.494437
09/16 09:23:03 AM: Global learning rate: 0.0001
09/16 09:23:03 AM: Saving checkpoints to: ./experiments/dep-ud-ewt-multiqa-top/run
09/16 09:23:10 AM: Update 1031: task edges-dep-ud-ewt, batch 31 (1031): mcc: 0.4732, acc: 0.2643, precision: 0.8307, recall: 0.2756, f1: 0.4139, edges-dep-ud-ewt_loss: 0.0505
09/16 09:23:20 AM: Update 1088: task edges-dep-ud-ewt, batch 88 (1088): mcc: 0.4883, acc: 0.2788, precision: 0.8367, recall: 0.2913, f1: 0.4321, edges-dep-ud-ewt_loss: 0.0492
09/16 09:23:30 AM: Update 1131: task edges-dep-ud-ewt, batch 131 (1131): mcc: 0.4953, acc: 0.2855, precision: 0.8415, recall: 0.2978, f1: 0.4399, edges-dep-ud-ewt_loss: 0.0491
09/16 09:23:42 AM: Update 1177: task edges-dep-ud-ewt, batch 177 (1177): mcc: 0.5035, acc: 0.2945, precision: 0.8434, recall: 0.3069, f1: 0.4501, edges-dep-ud-ewt_loss: 0.0485
09/16 09:23:52 AM: Update 1232: task edges-dep-ud-ewt, batch 232 (1232): mcc: 0.5068, acc: 0.2987, precision: 0.8407, recall: 0.3119, f1: 0.4550, edges-dep-ud-ewt_loss: 0.0481
09/16 09:24:02 AM: Update 1289: task edges-dep-ud-ewt, batch 289 (1289): mcc: 0.5114, acc: 0.3045, precision: 0.8380, recall: 0.3187, f1: 0.4617, edges-dep-ud-ewt_loss: 0.0475
09/16 09:24:12 AM: Update 1348: task edges-dep-ud-ewt, batch 348 (1348): mcc: 0.5153, acc: 0.3097, precision: 0.8355, recall: 0.3246, f1: 0.4675, edges-dep-ud-ewt_loss: 0.0468
09/16 09:24:23 AM: Update 1394: task edges-dep-ud-ewt, batch 394 (1394): mcc: 0.5161, acc: 0.3114, precision: 0.8324, recall: 0.3268, f1: 0.4694, edges-dep-ud-ewt_loss: 0.0467
09/16 09:24:33 AM: Update 1449: task edges-dep-ud-ewt, batch 449 (1449): mcc: 0.5196, acc: 0.3159, precision: 0.8309, recall: 0.3318, f1: 0.4742, edges-dep-ud-ewt_loss: 0.0462
09/16 09:24:43 AM: Update 1490: task edges-dep-ud-ewt, batch 490 (1490): mcc: 0.5218, acc: 0.3189, precision: 0.8294, recall: 0.3352, f1: 0.4774, edges-dep-ud-ewt_loss: 0.0460
09/16 09:24:53 AM: Update 1545: task edges-dep-ud-ewt, batch 545 (1545): mcc: 0.5284, acc: 0.3264, precision: 0.8308, recall: 0.3431, f1: 0.4857, edges-dep-ud-ewt_loss: 0.0456
09/16 09:25:03 AM: Update 1574: task edges-dep-ud-ewt, batch 574 (1574): mcc: 0.5300, acc: 0.3284, precision: 0.8305, recall: 0.3452, f1: 0.4877, edges-dep-ud-ewt_loss: 0.0455
09/16 09:25:13 AM: Update 1621: task edges-dep-ud-ewt, batch 621 (1621): mcc: 0.5320, acc: 0.3312, precision: 0.8286, recall: 0.3487, f1: 0.4909, edges-dep-ud-ewt_loss: 0.0454
09/16 09:25:23 AM: Update 1669: task edges-dep-ud-ewt, batch 669 (1669): mcc: 0.5344, acc: 0.3342, precision: 0.8276, recall: 0.3522, f1: 0.4941, edges-dep-ud-ewt_loss: 0.0451
09/16 09:25:34 AM: Update 1721: task edges-dep-ud-ewt, batch 721 (1721): mcc: 0.5364, acc: 0.3370, precision: 0.8262, recall: 0.3555, f1: 0.4971, edges-dep-ud-ewt_loss: 0.0448
09/16 09:25:44 AM: Update 1772: task edges-dep-ud-ewt, batch 772 (1772): mcc: 0.5391, acc: 0.3404, precision: 0.8254, recall: 0.3594, f1: 0.5007, edges-dep-ud-ewt_loss: 0.0445
09/16 09:25:54 AM: Update 1822: task edges-dep-ud-ewt, batch 822 (1822): mcc: 0.5410, acc: 0.3429, precision: 0.8246, recall: 0.3624, f1: 0.5035, edges-dep-ud-ewt_loss: 0.0442
09/16 09:26:04 AM: Update 1867: task edges-dep-ud-ewt, batch 867 (1867): mcc: 0.5431, acc: 0.3455, precision: 0.8238, recall: 0.3654, f1: 0.5062, edges-dep-ud-ewt_loss: 0.0440
09/16 09:26:14 AM: Update 1906: task edges-dep-ud-ewt, batch 906 (1906): mcc: 0.5453, acc: 0.3483, precision: 0.8237, recall: 0.3684, f1: 0.5091, edges-dep-ud-ewt_loss: 0.0438
09/16 09:26:24 AM: Update 1953: task edges-dep-ud-ewt, batch 953 (1953): mcc: 0.5488, acc: 0.3525, precision: 0.8243, recall: 0.3729, f1: 0.5135, edges-dep-ud-ewt_loss: 0.0435
09/16 09:26:34 AM: Update 1986: task edges-dep-ud-ewt, batch 986 (1986): mcc: 0.5497, acc: 0.3538, precision: 0.8237, recall: 0.3744, f1: 0.5148, edges-dep-ud-ewt_loss: 0.0435
09/16 09:26:36 AM: ***** Step 2000 / Validation 2 *****
09/16 09:26:36 AM: edges-dep-ud-ewt: trained on 1000 batches, 2.551 epochs
09/16 09:26:36 AM: Validating...
09/16 09:26:44 AM: Evaluate: task edges-dep-ud-ewt, batch 35 (63): mcc: 0.6669, acc: 0.4893, precision: 0.8988, recall: 0.5017, f1: 0.6439, edges-dep-ud-ewt_loss: 0.0342
09/16 09:26:49 AM: Best result seen so far for edges-dep-ud-ewt.
09/16 09:26:49 AM: Best result seen so far for macro.
09/16 09:26:49 AM: Updating LR scheduler:
09/16 09:26:49 AM: 	Best result seen so far for macro_avg: 0.656
09/16 09:26:49 AM: 	# validation passes without improvement: 0
09/16 09:26:49 AM: edges-dep-ud-ewt_loss: training: 0.043291 validation: 0.033373
09/16 09:26:49 AM: macro_avg: validation: 0.656187
09/16 09:26:49 AM: micro_avg: validation: 0.000000
09/16 09:26:49 AM: edges-dep-ud-ewt_mcc: training: 0.550426 validation: 0.677175
09/16 09:26:49 AM: edges-dep-ud-ewt_acc: training: 0.354588 validation: 0.504421
09/16 09:26:49 AM: edges-dep-ud-ewt_precision: training: 0.823896 validation: 0.900445
09/16 09:26:49 AM: edges-dep-ud-ewt_recall: training: 0.375234 validation: 0.516169
09/16 09:26:49 AM: edges-dep-ud-ewt_f1: training: 0.515630 validation: 0.656187
09/16 09:26:49 AM: Global learning rate: 0.0001
09/16 09:26:49 AM: Saving checkpoints to: ./experiments/dep-ud-ewt-multiqa-top/run
09/16 09:26:55 AM: Update 2025: task edges-dep-ud-ewt, batch 25 (2025): mcc: 0.5743, acc: 0.3950, precision: 0.7954, recall: 0.4233, f1: 0.5525, edges-dep-ud-ewt_loss: 0.0412
09/16 09:27:05 AM: Update 2079: task edges-dep-ud-ewt, batch 79 (2079): mcc: 0.5865, acc: 0.4056, precision: 0.8053, recall: 0.4356, f1: 0.5654, edges-dep-ud-ewt_loss: 0.0400
09/16 09:27:15 AM: Update 2132: task edges-dep-ud-ewt, batch 132 (2132): mcc: 0.5876, acc: 0.4065, precision: 0.8049, recall: 0.4375, f1: 0.5669, edges-dep-ud-ewt_loss: 0.0396
09/16 09:27:25 AM: Update 2175: task edges-dep-ud-ewt, batch 175 (2175): mcc: 0.5854, acc: 0.4033, precision: 0.8047, recall: 0.4343, f1: 0.5642, edges-dep-ud-ewt_loss: 0.0396
09/16 09:27:35 AM: Update 2232: task edges-dep-ud-ewt, batch 232 (2232): mcc: 0.5896, acc: 0.4081, precision: 0.8059, recall: 0.4398, f1: 0.5691, edges-dep-ud-ewt_loss: 0.0391
09/16 09:27:45 AM: Update 2280: task edges-dep-ud-ewt, batch 280 (2280): mcc: 0.5913, acc: 0.4099, precision: 0.8068, recall: 0.4418, f1: 0.5710, edges-dep-ud-ewt_loss: 0.0391
09/16 09:27:55 AM: Update 2337: task edges-dep-ud-ewt, batch 337 (2337): mcc: 0.5981, acc: 0.4183, precision: 0.8107, recall: 0.4498, f1: 0.5785, edges-dep-ud-ewt_loss: 0.0387
09/16 09:28:05 AM: Update 2366: task edges-dep-ud-ewt, batch 366 (2366): mcc: 0.5984, acc: 0.4187, precision: 0.8106, recall: 0.4502, f1: 0.5789, edges-dep-ud-ewt_loss: 0.0387
09/16 09:28:15 AM: Update 2418: task edges-dep-ud-ewt, batch 418 (2418): mcc: 0.5989, acc: 0.4192, precision: 0.8100, recall: 0.4514, f1: 0.5797, edges-dep-ud-ewt_loss: 0.0387
09/16 09:28:25 AM: Update 2472: task edges-dep-ud-ewt, batch 472 (2472): mcc: 0.6001, acc: 0.4207, precision: 0.8096, recall: 0.4533, f1: 0.5812, edges-dep-ud-ewt_loss: 0.0385
09/16 09:28:36 AM: Update 2526: task edges-dep-ud-ewt, batch 526 (2526): mcc: 0.6002, acc: 0.4210, precision: 0.8085, recall: 0.4542, f1: 0.5816, edges-dep-ud-ewt_loss: 0.0384
09/16 09:28:46 AM: Update 2581: task edges-dep-ud-ewt, batch 581 (2581): mcc: 0.6015, acc: 0.4225, precision: 0.8085, recall: 0.4560, f1: 0.5831, edges-dep-ud-ewt_loss: 0.0382
09/16 09:28:56 AM: Update 2633: task edges-dep-ud-ewt, batch 633 (2633): mcc: 0.6020, acc: 0.4232, precision: 0.8079, recall: 0.4572, f1: 0.5839, edges-dep-ud-ewt_loss: 0.0381
09/16 09:29:06 AM: Update 2670: task edges-dep-ud-ewt, batch 670 (2670): mcc: 0.6019, acc: 0.4231, precision: 0.8070, recall: 0.4575, f1: 0.5839, edges-dep-ud-ewt_loss: 0.0380
09/16 09:29:16 AM: Update 2722: task edges-dep-ud-ewt, batch 722 (2722): mcc: 0.6043, acc: 0.4261, precision: 0.8078, recall: 0.4606, f1: 0.5867, edges-dep-ud-ewt_loss: 0.0379
09/16 09:29:26 AM: Update 2758: task edges-dep-ud-ewt, batch 758 (2758): mcc: 0.6052, acc: 0.4273, precision: 0.8081, recall: 0.4619, f1: 0.5878, edges-dep-ud-ewt_loss: 0.0378
09/16 09:29:36 AM: Update 2812: task edges-dep-ud-ewt, batch 812 (2812): mcc: 0.6057, acc: 0.4280, precision: 0.8077, recall: 0.4629, f1: 0.5885, edges-dep-ud-ewt_loss: 0.0377
09/16 09:29:46 AM: Update 2863: task edges-dep-ud-ewt, batch 863 (2863): mcc: 0.6064, acc: 0.4290, precision: 0.8073, recall: 0.4642, f1: 0.5894, edges-dep-ud-ewt_loss: 0.0377
09/16 09:29:57 AM: Update 2920: task edges-dep-ud-ewt, batch 920 (2920): mcc: 0.6073, acc: 0.4302, precision: 0.8071, recall: 0.4656, f1: 0.5905, edges-dep-ud-ewt_loss: 0.0375
09/16 09:30:07 AM: Update 2967: task edges-dep-ud-ewt, batch 967 (2967): mcc: 0.6079, acc: 0.4310, precision: 0.8067, recall: 0.4668, f1: 0.5914, edges-dep-ud-ewt_loss: 0.0375
09/16 09:30:12 AM: ***** Step 3000 / Validation 3 *****
09/16 09:30:12 AM: edges-dep-ud-ewt: trained on 1000 batches, 2.551 epochs
09/16 09:30:12 AM: Validating...
09/16 09:30:17 AM: Evaluate: task edges-dep-ud-ewt, batch 20 (63): mcc: 0.7245, acc: 0.5682, precision: 0.8999, recall: 0.5903, f1: 0.7129, edges-dep-ud-ewt_loss: 0.0294
09/16 09:30:25 AM: Best result seen so far for edges-dep-ud-ewt.
09/16 09:30:25 AM: Best result seen so far for macro.
09/16 09:30:25 AM: Updating LR scheduler:
09/16 09:30:25 AM: 	Best result seen so far for macro_avg: 0.717
09/16 09:30:25 AM: 	# validation passes without improvement: 0
09/16 09:30:25 AM: edges-dep-ud-ewt_loss: training: 0.037477 validation: 0.029098
09/16 09:30:25 AM: macro_avg: validation: 0.716835
09/16 09:30:25 AM: micro_avg: validation: 0.000000
09/16 09:30:25 AM: edges-dep-ud-ewt_mcc: training: 0.608515 validation: 0.727783
09/16 09:30:25 AM: edges-dep-ud-ewt_acc: training: 0.431825 validation: 0.574114
09/16 09:30:25 AM: edges-dep-ud-ewt_precision: training: 0.806754 validation: 0.899177
09/16 09:30:25 AM: edges-dep-ud-ewt_recall: training: 0.467663 validation: 0.595978
09/16 09:30:25 AM: edges-dep-ud-ewt_f1: training: 0.592096 validation: 0.716835
09/16 09:30:25 AM: Global learning rate: 0.0001
09/16 09:30:25 AM: Saving checkpoints to: ./experiments/dep-ud-ewt-multiqa-top/run
09/16 09:30:27 AM: Update 3011: task edges-dep-ud-ewt, batch 11 (3011): mcc: 0.6394, acc: 0.4723, precision: 0.8122, recall: 0.5122, f1: 0.6282, edges-dep-ud-ewt_loss: 0.0296
09/16 09:30:37 AM: Update 3058: task edges-dep-ud-ewt, batch 58 (3058): mcc: 0.6069, acc: 0.4347, precision: 0.7902, recall: 0.4752, f1: 0.5935, edges-dep-ud-ewt_loss: 0.0348
09/16 09:30:47 AM: Update 3109: task edges-dep-ud-ewt, batch 109 (3109): mcc: 0.6243, acc: 0.4548, precision: 0.8032, recall: 0.4941, f1: 0.6118, edges-dep-ud-ewt_loss: 0.0354
09/16 09:30:58 AM: Update 3141: task edges-dep-ud-ewt, batch 141 (3141): mcc: 0.6240, acc: 0.4541, precision: 0.8031, recall: 0.4939, f1: 0.6116, edges-dep-ud-ewt_loss: 0.0353
09/16 09:31:08 AM: Update 3195: task edges-dep-ud-ewt, batch 195 (3195): mcc: 0.6259, acc: 0.4561, precision: 0.8034, recall: 0.4965, f1: 0.6137, edges-dep-ud-ewt_loss: 0.0356
