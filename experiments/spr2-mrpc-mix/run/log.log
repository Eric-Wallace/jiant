09/16 08:33:50 AM: Git branch: master
09/16 08:33:50 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:33:51 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-mrpc-mix/",
  "exp_name": "experiments/spr2-mrpc-mix",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-mrpc-mix/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/mrpc",
  "pytorch_transformers_output_mode": "mix",
  "remote_log_name": "experiments/spr2-mrpc-mix__run",
  "run_dir": "./experiments/spr2-mrpc-mix/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:33:51 AM: Saved config to ./experiments/spr2-mrpc-mix/run/params.conf
09/16 08:33:51 AM: Using random seed 1234
09/16 08:33:52 AM: Using GPU 0
09/16 08:33:52 AM: Loading tasks...
09/16 08:33:52 AM: Writing pre-preprocessed tasks to ./experiments/spr2-mrpc-mix/
09/16 08:33:52 AM: 	Creating task edges-spr2 from scratch.
09/16 08:33:52 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:33:52 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:33:53 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:33:53 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:33:53 AM: 	Finished loading tasks: edges-spr2.
09/16 08:33:53 AM: 	Building vocab from scratch.
09/16 08:33:53 AM: 	Counting units for task edges-spr2.
09/16 08:33:53 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:33:54 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:33:54 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:33:54 AM: 	Saved vocab to ./experiments/spr2-mrpc-mix/vocab
09/16 08:33:54 AM: Loading token dictionary from ./experiments/spr2-mrpc-mix/vocab.
09/16 08:33:54 AM: 	Loaded vocab from ./experiments/spr2-mrpc-mix/vocab
09/16 08:33:54 AM: 	Vocab namespace tokens: size 7943
09/16 08:33:54 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:33:54 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:33:54 AM: 	Vocab namespace chars: size 65
09/16 08:33:54 AM: 	Finished building vocab.
09/16 08:33:54 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:33:55 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-mrpc-mix/preproc/edges-spr2__train_data
09/16 08:33:55 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:33:55 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-mrpc-mix/preproc/edges-spr2__val_data
09/16 08:33:55 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:33:55 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-mrpc-mix/preproc/edges-spr2__test_data
09/16 08:33:55 AM: 	Finished indexing tasks
09/16 08:33:55 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:33:55 AM: 	  Training on 
09/16 08:33:55 AM: 	  Evaluating on edges-spr2
09/16 08:33:55 AM: 	Finished loading tasks in 2.555s
09/16 08:33:55 AM: 	 Tasks: ['edges-spr2']
09/16 08:33:55 AM: Building model...
09/16 08:33:55 AM: Using BERT model (bert-base-uncased).
09/16 08:33:55 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:33:55 AM: models/mrpc
09/16 08:33:55 AM: loading configuration file models/mrpc/config.json
09/16 08:33:55 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "mrpc",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:33:55 AM: loading weights file models/mrpc/pytorch_model.bin
09/16 08:34:05 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmp9tew1itx
09/16 08:34:06 AM: copying /tmp/tmp9tew1itx to cache at ./experiments/spr2-mrpc-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:34:06 AM: creating metadata file for ./experiments/spr2-mrpc-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:34:06 AM: removing temp file /tmp/tmp9tew1itx
09/16 08:34:06 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-mrpc-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:34:06 AM: NOTE: pytorch_transformers_output_mode='mix', so scalar mixing weights will be fine-tuned even if BERT model is frozen.
09/16 08:34:06 AM: Initializing parameters
09/16 08:34:06 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:34:06 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:34:06 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:34:06 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:34:06 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:34:06 AM:    _text_field_embedder.scalar_mix.gamma
09/16 08:34:06 AM:    _text_field_embedder.scalar_mix.scalar_parameters.0
09/16 08:34:06 AM:    _text_field_embedder.scalar_mix.scalar_parameters.1
09/16 08:34:06 AM:    _text_field_embedder.scalar_mix.scalar_parameters.10
09/16 08:34:06 AM:    _text_field_embedder.scalar_mix.scalar_parameters.11
09/16 08:34:06 AM:    _text_field_embedder.scalar_mix.scalar_parameters.12
09/16 08:34:06 AM:    _text_field_embedder.scalar_mix.scalar_parameters.2
09/16 08:34:06 AM:    _text_field_embedder.scalar_mix.scalar_parameters.3
09/16 08:34:06 AM:    _text_field_embedder.scalar_mix.scalar_parameters.4
09/16 08:34:06 AM:    _text_field_embedder.scalar_mix.scalar_parameters.5
09/16 08:34:06 AM:    _text_field_embedder.scalar_mix.scalar_parameters.6
09/16 08:34:06 AM:    _text_field_embedder.scalar_mix.scalar_parameters.7
09/16 08:34:06 AM:    _text_field_embedder.scalar_mix.scalar_parameters.8
09/16 08:34:06 AM:    _text_field_embedder.scalar_mix.scalar_parameters.9
09/16 08:34:06 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:34:12 AM: Model specification:
09/16 08:34:12 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
      (scalar_mix): ScalarMix(
        (scalar_parameters): ParameterList(
            (0): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (1): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (2): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (3): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (4): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (5): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (6): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (7): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (8): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (9): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (10): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (11): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (12): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:34:12 AM: Model parameters:
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.scalar_mix.gamma: Trainable parameter, count 1 with torch.Size([1])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.0: Trainable parameter, count 1 with torch.Size([1])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.1: Trainable parameter, count 1 with torch.Size([1])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.2: Trainable parameter, count 1 with torch.Size([1])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.3: Trainable parameter, count 1 with torch.Size([1])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.4: Trainable parameter, count 1 with torch.Size([1])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.5: Trainable parameter, count 1 with torch.Size([1])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.6: Trainable parameter, count 1 with torch.Size([1])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.7: Trainable parameter, count 1 with torch.Size([1])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.8: Trainable parameter, count 1 with torch.Size([1])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.9: Trainable parameter, count 1 with torch.Size([1])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.10: Trainable parameter, count 1 with torch.Size([1])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.11: Trainable parameter, count 1 with torch.Size([1])
09/16 08:34:12 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.12: Trainable parameter, count 1 with torch.Size([1])
09/16 08:34:12 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:34:12 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:34:12 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:34:12 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:34:12 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:34:12 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:34:12 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:34:12 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:34:12 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:34:12 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:34:12 AM: Total number of parameters: 110144034 (1.10144e+08)
09/16 08:34:12 AM: Number of trainable parameters: 661794 (661794)
09/16 08:34:12 AM: Finished building model in 16.850s
09/16 08:34:12 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:34:13 AM: patience = 9
09/16 08:34:13 AM: val_interval = 100
09/16 08:34:13 AM: max_vals = 100
09/16 08:34:13 AM: cuda_device = 0
09/16 08:34:13 AM: grad_norm = 5.0
09/16 08:34:13 AM: grad_clipping = None
09/16 08:34:13 AM: lr_decay = 0.99
09/16 08:34:13 AM: min_lr = 1e-06
09/16 08:34:13 AM: keep_all_checkpoints = 0
09/16 08:34:13 AM: val_data_limit = 5000
09/16 08:34:13 AM: max_epochs = -1
09/16 08:34:13 AM: dec_val_scale = 250
09/16 08:34:13 AM: training_data_fraction = 1
09/16 08:34:13 AM: type = adam
09/16 08:34:13 AM: parameter_groups = None
09/16 08:34:13 AM: Number of trainable parameters: 661794
09/16 08:34:13 AM: infer_type_and_cast = True
09/16 08:34:13 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:34:13 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:34:13 AM: lr = 0.0001
09/16 08:34:13 AM: amsgrad = True
09/16 08:34:13 AM: type = reduce_on_plateau
09/16 08:34:13 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:34:13 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:34:13 AM: mode = max
09/16 08:34:13 AM: factor = 0.5
09/16 08:34:13 AM: patience = 3
09/16 08:34:13 AM: threshold = 0.0001
09/16 08:34:13 AM: threshold_mode = abs
09/16 08:34:13 AM: verbose = True
09/16 08:34:13 AM: type = adam
09/16 08:34:13 AM: parameter_groups = None
09/16 08:34:13 AM: Number of trainable parameters: 661794
09/16 08:34:13 AM: infer_type_and_cast = True
09/16 08:34:13 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:34:13 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:34:13 AM: lr = 0.0001
09/16 08:34:13 AM: amsgrad = True
09/16 08:34:13 AM: type = reduce_on_plateau
09/16 08:34:13 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:34:13 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:34:13 AM: mode = max
09/16 08:34:13 AM: factor = 0.5
09/16 08:34:13 AM: patience = 3
09/16 08:34:13 AM: threshold = 0.0001
09/16 08:34:13 AM: threshold_mode = abs
09/16 08:34:13 AM: verbose = True
09/16 08:34:13 AM: Starting training without restoring from a checkpoint.
09/16 08:34:13 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:34:13 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:34:22 AM: ***** Step 100 / Validation 1 *****
09/16 08:34:22 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:34:22 AM: Validating...
09/16 08:34:23 AM: Evaluate: task edges-spr2, batch 2 (10): mcc: 0.7011, acc: 0.0725, precision: 0.8569, recall: 0.7740, f1: 0.8133, edges-spr2_loss: 0.3155
09/16 08:34:24 AM: Best result seen so far for edges-spr2.
09/16 08:34:24 AM: Best result seen so far for micro.
09/16 08:34:24 AM: Best result seen so far for macro.
09/16 08:34:24 AM: Updating LR scheduler:
09/16 08:34:24 AM: 	Best result seen so far for macro_avg: 0.802
09/16 08:34:24 AM: 	# validation passes without improvement: 0
09/16 08:34:24 AM: edges-spr2_loss: training: 0.377354 validation: 0.340452
09/16 08:34:24 AM: macro_avg: validation: 0.801622
09/16 08:34:24 AM: micro_avg: validation: 0.000000
09/16 08:34:24 AM: edges-spr2_mcc: training: 0.623517 validation: 0.697274
09/16 08:34:24 AM: edges-spr2_acc: training: 0.042859 validation: 0.092063
09/16 08:34:24 AM: edges-spr2_precision: training: 0.777629 validation: 0.852420
09/16 08:34:24 AM: edges-spr2_recall: training: 0.738229 validation: 0.756538
09/16 08:34:24 AM: edges-spr2_f1: training: 0.757417 validation: 0.801622
09/16 08:34:24 AM: Global learning rate: 0.0001
09/16 08:34:24 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:34:32 AM: ***** Step 200 / Validation 2 *****
09/16 08:34:32 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:34:32 AM: Validating...
09/16 08:34:33 AM: Evaluate: task edges-spr2, batch 4 (10): mcc: 0.7234, acc: 0.0830, precision: 0.8474, recall: 0.8110, f1: 0.8288, edges-spr2_loss: 0.2912
09/16 08:34:33 AM: Best result seen so far for edges-spr2.
09/16 08:34:33 AM: Best result seen so far for macro.
09/16 08:34:33 AM: Updating LR scheduler:
09/16 08:34:33 AM: 	Best result seen so far for macro_avg: 0.820
09/16 08:34:33 AM: 	# validation passes without improvement: 0
09/16 08:34:33 AM: edges-spr2_loss: training: 0.308125 validation: 0.323659
09/16 08:34:33 AM: macro_avg: validation: 0.819726
09/16 08:34:33 AM: micro_avg: validation: 0.000000
09/16 08:34:33 AM: edges-spr2_mcc: training: 0.701460 validation: 0.718382
09/16 08:34:33 AM: edges-spr2_acc: training: 0.075340 validation: 0.098413
09/16 08:34:33 AM: edges-spr2_precision: training: 0.831891 validation: 0.845771
09/16 08:34:33 AM: edges-spr2_recall: training: 0.782943 validation: 0.795237
09/16 08:34:33 AM: edges-spr2_f1: training: 0.806675 validation: 0.819726
09/16 08:34:33 AM: Global learning rate: 0.0001
09/16 08:34:33 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:34:43 AM: ***** Step 300 / Validation 3 *****
09/16 08:34:43 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:34:43 AM: Validating...
09/16 08:34:43 AM: Evaluate: task edges-spr2, batch 1 (10): mcc: 0.7292, acc: 0.0676, precision: 0.8439, recall: 0.8297, f1: 0.8367, edges-spr2_loss: 0.2821
09/16 08:34:44 AM: Best result seen so far for edges-spr2.
09/16 08:34:44 AM: Best result seen so far for macro.
09/16 08:34:44 AM: Updating LR scheduler:
09/16 08:34:44 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:34:44 AM: 	# validation passes without improvement: 0
09/16 08:34:44 AM: edges-spr2_loss: training: 0.287964 validation: 0.319328
09/16 08:34:44 AM: macro_avg: validation: 0.823555
09/16 08:34:44 AM: micro_avg: validation: 0.000000
09/16 08:34:44 AM: edges-spr2_mcc: training: 0.720687 validation: 0.723316
09/16 08:34:44 AM: edges-spr2_acc: training: 0.080278 validation: 0.088889
09/16 08:34:44 AM: edges-spr2_precision: training: 0.841449 validation: 0.845310
09/16 08:34:44 AM: edges-spr2_recall: training: 0.799190 validation: 0.802892
09/16 08:34:44 AM: edges-spr2_f1: training: 0.819776 validation: 0.823555
09/16 08:34:44 AM: Global learning rate: 0.0001
09/16 08:34:44 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:34:53 AM: ***** Step 400 / Validation 4 *****
09/16 08:34:53 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:34:53 AM: Validating...
09/16 08:34:53 AM: Evaluate: task edges-spr2, batch 2 (10): mcc: 0.7329, acc: 0.0652, precision: 0.8584, recall: 0.8165, f1: 0.8369, edges-spr2_loss: 0.2731
09/16 08:34:54 AM: Updating LR scheduler:
09/16 08:34:54 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:34:54 AM: 	# validation passes without improvement: 1
09/16 08:34:54 AM: edges-spr2_loss: training: 0.276880 validation: 0.318607
09/16 08:34:54 AM: macro_avg: validation: 0.820359
09/16 08:34:54 AM: micro_avg: validation: 0.000000
09/16 08:34:54 AM: edges-spr2_mcc: training: 0.730815 validation: 0.722156
09/16 08:34:54 AM: edges-spr2_acc: training: 0.086158 validation: 0.095238
09/16 08:34:54 AM: edges-spr2_precision: training: 0.844964 validation: 0.857242
09/16 08:34:54 AM: edges-spr2_recall: training: 0.809219 validation: 0.786519
09/16 08:34:54 AM: edges-spr2_f1: training: 0.826705 validation: 0.820359
09/16 08:34:54 AM: Global learning rate: 0.0001
09/16 08:34:54 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:35:03 AM: Update 496: task edges-spr2, batch 96 (496): mcc: 0.7370, acc: 0.0929, precision: 0.8493, recall: 0.8134, f1: 0.8309, edges-spr2_loss: 0.2691
09/16 08:35:03 AM: ***** Step 500 / Validation 5 *****
09/16 08:35:03 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:35:03 AM: Validating...
09/16 08:35:04 AM: Updating LR scheduler:
09/16 08:35:04 AM: 	Best result seen so far for macro_avg: 0.824
09/16 08:35:04 AM: 	# validation passes without improvement: 2
09/16 08:35:04 AM: edges-spr2_loss: training: 0.268486 validation: 0.312985
09/16 08:35:04 AM: macro_avg: validation: 0.822818
09/16 08:35:04 AM: micro_avg: validation: 0.000000
09/16 08:35:04 AM: edges-spr2_mcc: training: 0.737821 validation: 0.723901
09/16 08:35:04 AM: edges-spr2_acc: training: 0.093426 validation: 0.093651
09/16 08:35:04 AM: edges-spr2_precision: training: 0.850025 validation: 0.851650
09/16 08:35:04 AM: edges-spr2_recall: training: 0.813610 validation: 0.795875
09/16 08:35:04 AM: edges-spr2_f1: training: 0.831419 validation: 0.822818
09/16 08:35:04 AM: Global learning rate: 0.0001
09/16 08:35:04 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:35:13 AM: Update 585: task edges-spr2, batch 85 (585): mcc: 0.7415, acc: 0.0958, precision: 0.8512, recall: 0.8173, f1: 0.8339, edges-spr2_loss: 0.2636
09/16 08:35:14 AM: ***** Step 600 / Validation 6 *****
09/16 08:35:14 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:35:14 AM: Validating...
09/16 08:35:15 AM: Best result seen so far for edges-spr2.
09/16 08:35:15 AM: Best result seen so far for macro.
09/16 08:35:15 AM: Updating LR scheduler:
09/16 08:35:15 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:35:15 AM: 	# validation passes without improvement: 0
09/16 08:35:15 AM: edges-spr2_loss: training: 0.262370 validation: 0.313385
09/16 08:35:15 AM: macro_avg: validation: 0.826479
09/16 08:35:15 AM: micro_avg: validation: 0.000000
09/16 08:35:15 AM: edges-spr2_mcc: training: 0.742515 validation: 0.726903
09/16 08:35:15 AM: edges-spr2_acc: training: 0.096224 validation: 0.092063
09/16 08:35:15 AM: edges-spr2_precision: training: 0.851302 validation: 0.843972
09/16 08:35:15 AM: edges-spr2_recall: training: 0.818320 validation: 0.809696
09/16 08:35:15 AM: edges-spr2_f1: training: 0.834485 validation: 0.826479
09/16 08:35:15 AM: Global learning rate: 0.0001
09/16 08:35:15 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:35:23 AM: Update 676: task edges-spr2, batch 76 (676): mcc: 0.7516, acc: 0.1025, precision: 0.8553, recall: 0.8270, f1: 0.8409, edges-spr2_loss: 0.2558
09/16 08:35:25 AM: ***** Step 700 / Validation 7 *****
09/16 08:35:25 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:35:25 AM: Validating...
09/16 08:35:26 AM: Updating LR scheduler:
09/16 08:35:26 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:35:26 AM: 	# validation passes without improvement: 1
09/16 08:35:26 AM: edges-spr2_loss: training: 0.255461 validation: 0.313640
09/16 08:35:26 AM: macro_avg: validation: 0.824409
09/16 08:35:26 AM: micro_avg: validation: 0.000000
09/16 08:35:26 AM: edges-spr2_mcc: training: 0.751574 validation: 0.723398
09/16 08:35:26 AM: edges-spr2_acc: training: 0.103664 validation: 0.082540
09/16 08:35:26 AM: edges-spr2_precision: training: 0.857548 validation: 0.840814
09/16 08:35:26 AM: edges-spr2_recall: training: 0.823986 validation: 0.808633
09/16 08:35:26 AM: edges-spr2_f1: training: 0.840432 validation: 0.824409
09/16 08:35:26 AM: Global learning rate: 0.0001
09/16 08:35:26 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:35:33 AM: Update 769: task edges-spr2, batch 69 (769): mcc: 0.7527, acc: 0.1013, precision: 0.8561, recall: 0.8270, f1: 0.8413, edges-spr2_loss: 0.2534
09/16 08:35:36 AM: ***** Step 800 / Validation 8 *****
09/16 08:35:36 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:35:36 AM: Validating...
09/16 08:35:37 AM: Updating LR scheduler:
09/16 08:35:37 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:35:37 AM: 	# validation passes without improvement: 2
09/16 08:35:37 AM: edges-spr2_loss: training: 0.251416 validation: 0.316661
09/16 08:35:37 AM: macro_avg: validation: 0.823568
09/16 08:35:37 AM: micro_avg: validation: 0.000000
09/16 08:35:37 AM: edges-spr2_mcc: training: 0.755499 validation: 0.723854
09/16 08:35:37 AM: edges-spr2_acc: training: 0.104092 validation: 0.082540
09/16 08:35:37 AM: edges-spr2_precision: training: 0.857754 validation: 0.847469
09/16 08:35:37 AM: edges-spr2_recall: training: 0.829094 validation: 0.800978
09/16 08:35:37 AM: edges-spr2_f1: training: 0.843181 validation: 0.823568
09/16 08:35:37 AM: Global learning rate: 0.0001
09/16 08:35:37 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:35:43 AM: Update 862: task edges-spr2, batch 62 (862): mcc: 0.7574, acc: 0.1105, precision: 0.8598, recall: 0.8290, f1: 0.8441, edges-spr2_loss: 0.2486
09/16 08:35:46 AM: ***** Step 900 / Validation 9 *****
09/16 08:35:46 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:35:46 AM: Validating...
09/16 08:35:47 AM: Updating LR scheduler:
09/16 08:35:47 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:35:47 AM: 	# validation passes without improvement: 3
09/16 08:35:47 AM: edges-spr2_loss: training: 0.247022 validation: 0.321243
09/16 08:35:47 AM: macro_avg: validation: 0.822246
09/16 08:35:47 AM: micro_avg: validation: 0.000000
09/16 08:35:47 AM: edges-spr2_mcc: training: 0.759147 validation: 0.721258
09/16 08:35:47 AM: edges-spr2_acc: training: 0.110810 validation: 0.079365
09/16 08:35:47 AM: edges-spr2_precision: training: 0.860766 validation: 0.843967
09/16 08:35:47 AM: edges-spr2_recall: training: 0.830118 validation: 0.801616
09/16 08:35:47 AM: edges-spr2_f1: training: 0.845164 validation: 0.822246
09/16 08:35:47 AM: Global learning rate: 0.0001
09/16 08:35:47 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:35:53 AM: Update 962: task edges-spr2, batch 62 (962): mcc: 0.7598, acc: 0.1140, precision: 0.8609, recall: 0.8319, f1: 0.8461, edges-spr2_loss: 0.2462
09/16 08:35:57 AM: ***** Step 1000 / Validation 10 *****
09/16 08:35:57 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:35:57 AM: Validating...
09/16 08:35:58 AM: Updating LR scheduler:
09/16 08:35:58 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:35:58 AM: 	# validation passes without improvement: 0
09/16 08:35:58 AM: edges-spr2_loss: training: 0.245113 validation: 0.319543
09/16 08:35:58 AM: macro_avg: validation: 0.818351
09/16 08:35:58 AM: micro_avg: validation: 0.000000
09/16 08:35:58 AM: edges-spr2_mcc: training: 0.760512 validation: 0.716576
09/16 08:35:58 AM: edges-spr2_acc: training: 0.114210 validation: 0.076190
09/16 08:35:58 AM: edges-spr2_precision: training: 0.862127 validation: 0.845735
09/16 08:35:58 AM: edges-spr2_recall: training: 0.831930 validation: 0.792686
09/16 08:35:58 AM: edges-spr2_f1: training: 0.846759 validation: 0.818351
09/16 08:35:58 AM: Global learning rate: 5e-05
09/16 08:35:58 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:36:03 AM: Update 1062: task edges-spr2, batch 62 (1062): mcc: 0.7618, acc: 0.1121, precision: 0.8615, recall: 0.8332, f1: 0.8471, edges-spr2_loss: 0.2426
09/16 08:36:06 AM: ***** Step 1100 / Validation 11 *****
09/16 08:36:06 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:36:06 AM: Validating...
09/16 08:36:07 AM: Updating LR scheduler:
09/16 08:36:07 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:36:07 AM: 	# validation passes without improvement: 1
09/16 08:36:07 AM: edges-spr2_loss: training: 0.239640 validation: 0.316719
09/16 08:36:07 AM: macro_avg: validation: 0.821467
09/16 08:36:07 AM: micro_avg: validation: 0.000000
09/16 08:36:07 AM: edges-spr2_mcc: training: 0.765670 validation: 0.718404
09/16 08:36:07 AM: edges-spr2_acc: training: 0.117553 validation: 0.071429
09/16 08:36:07 AM: edges-spr2_precision: training: 0.864143 validation: 0.836308
09/16 08:36:07 AM: edges-spr2_recall: training: 0.835378 validation: 0.807144
09/16 08:36:07 AM: edges-spr2_f1: training: 0.849517 validation: 0.821467
09/16 08:36:07 AM: Global learning rate: 5e-05
09/16 08:36:07 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:36:13 AM: Update 1156: task edges-spr2, batch 56 (1156): mcc: 0.7658, acc: 0.1238, precision: 0.8651, recall: 0.8348, f1: 0.8497, edges-spr2_loss: 0.2386
09/16 08:36:17 AM: ***** Step 1200 / Validation 12 *****
09/16 08:36:17 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:36:17 AM: Validating...
09/16 08:36:18 AM: Updating LR scheduler:
09/16 08:36:18 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:36:18 AM: 	# validation passes without improvement: 2
09/16 08:36:18 AM: edges-spr2_loss: training: 0.238523 validation: 0.319423
09/16 08:36:18 AM: macro_avg: validation: 0.823771
09/16 08:36:18 AM: micro_avg: validation: 0.000000
09/16 08:36:18 AM: edges-spr2_mcc: training: 0.766086 validation: 0.722130
09/16 08:36:18 AM: edges-spr2_acc: training: 0.123691 validation: 0.077778
09/16 08:36:18 AM: edges-spr2_precision: training: 0.864929 validation: 0.839030
09/16 08:36:18 AM: edges-spr2_recall: training: 0.835547 validation: 0.809058
09/16 08:36:18 AM: edges-spr2_f1: training: 0.849984 validation: 0.823771
09/16 08:36:18 AM: Global learning rate: 5e-05
09/16 08:36:18 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:36:23 AM: Update 1257: task edges-spr2, batch 57 (1257): mcc: 0.7752, acc: 0.1255, precision: 0.8691, recall: 0.8433, f1: 0.8560, edges-spr2_loss: 0.2334
09/16 08:36:28 AM: ***** Step 1300 / Validation 13 *****
09/16 08:36:28 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:36:28 AM: Validating...
09/16 08:36:29 AM: Updating LR scheduler:
09/16 08:36:29 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:36:29 AM: 	# validation passes without improvement: 3
09/16 08:36:29 AM: edges-spr2_loss: training: 0.234135 validation: 0.319804
09/16 08:36:29 AM: macro_avg: validation: 0.819485
09/16 08:36:29 AM: micro_avg: validation: 0.000000
09/16 08:36:29 AM: edges-spr2_mcc: training: 0.773297 validation: 0.714477
09/16 08:36:29 AM: edges-spr2_acc: training: 0.124928 validation: 0.080952
09/16 08:36:29 AM: edges-spr2_precision: training: 0.868765 validation: 0.830857
09/16 08:36:29 AM: edges-spr2_recall: training: 0.840603 validation: 0.808420
09/16 08:36:29 AM: edges-spr2_f1: training: 0.854452 validation: 0.819485
09/16 08:36:29 AM: Global learning rate: 5e-05
09/16 08:36:29 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:36:33 AM: Update 1350: task edges-spr2, batch 50 (1350): mcc: 0.7687, acc: 0.1221, precision: 0.8658, recall: 0.8377, f1: 0.8515, edges-spr2_loss: 0.2358
09/16 08:36:37 AM: ***** Step 1400 / Validation 14 *****
09/16 08:36:37 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:36:37 AM: Validating...
09/16 08:36:38 AM: Updating LR scheduler:
09/16 08:36:38 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:36:38 AM: 	# validation passes without improvement: 0
09/16 08:36:38 AM: edges-spr2_loss: training: 0.233790 validation: 0.319431
09/16 08:36:38 AM: macro_avg: validation: 0.817342
09/16 08:36:38 AM: micro_avg: validation: 0.000000
09/16 08:36:38 AM: edges-spr2_mcc: training: 0.771310 validation: 0.712771
09/16 08:36:38 AM: edges-spr2_acc: training: 0.123385 validation: 0.069841
09/16 08:36:38 AM: edges-spr2_precision: training: 0.866503 validation: 0.835778
09/16 08:36:38 AM: edges-spr2_recall: training: 0.841277 validation: 0.799702
09/16 08:36:38 AM: edges-spr2_f1: training: 0.853704 validation: 0.817342
09/16 08:36:38 AM: Global learning rate: 2.5e-05
09/16 08:36:38 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:36:43 AM: Update 1466: task edges-spr2, batch 66 (1466): mcc: 0.7737, acc: 0.1350, precision: 0.8701, recall: 0.8400, f1: 0.8548, edges-spr2_loss: 0.2319
09/16 08:36:46 AM: ***** Step 1500 / Validation 15 *****
09/16 08:36:46 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:36:46 AM: Validating...
09/16 08:36:47 AM: Updating LR scheduler:
09/16 08:36:47 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:36:47 AM: 	# validation passes without improvement: 1
09/16 08:36:47 AM: edges-spr2_loss: training: 0.231487 validation: 0.319789
09/16 08:36:47 AM: macro_avg: validation: 0.821770
09/16 08:36:47 AM: micro_avg: validation: 0.000000
09/16 08:36:47 AM: edges-spr2_mcc: training: 0.773802 validation: 0.717723
09/16 08:36:47 AM: edges-spr2_acc: training: 0.132178 validation: 0.071429
09/16 08:36:47 AM: edges-spr2_precision: training: 0.870316 validation: 0.831519
09/16 08:36:47 AM: edges-spr2_recall: training: 0.840317 validation: 0.812248
09/16 08:36:47 AM: edges-spr2_f1: training: 0.855053 validation: 0.821770
09/16 08:36:47 AM: Global learning rate: 2.5e-05
09/16 08:36:47 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:36:53 AM: Update 1567: task edges-spr2, batch 67 (1567): mcc: 0.7733, acc: 0.1236, precision: 0.8668, recall: 0.8429, f1: 0.8547, edges-spr2_loss: 0.2312
09/16 08:36:56 AM: ***** Step 1600 / Validation 16 *****
09/16 08:36:56 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:36:56 AM: Validating...
09/16 08:36:57 AM: Updating LR scheduler:
09/16 08:36:57 AM: 	Best result seen so far for macro_avg: 0.826
09/16 08:36:57 AM: 	# validation passes without improvement: 2
09/16 08:36:57 AM: Ran out of early stopping patience. Stopping training.
09/16 08:36:57 AM: edges-spr2_loss: training: 0.231150 validation: 0.320342
09/16 08:36:57 AM: macro_avg: validation: 0.819768
09/16 08:36:57 AM: micro_avg: validation: 0.000000
09/16 08:36:57 AM: edges-spr2_mcc: training: 0.774946 validation: 0.716052
09/16 08:36:57 AM: edges-spr2_acc: training: 0.125648 validation: 0.073016
09/16 08:36:57 AM: edges-spr2_precision: training: 0.868030 validation: 0.835986
09/16 08:36:57 AM: edges-spr2_recall: training: 0.843854 validation: 0.804168
09/16 08:36:57 AM: edges-spr2_f1: training: 0.855771 validation: 0.819768
09/16 08:36:57 AM: Global learning rate: 2.5e-05
09/16 08:36:57 AM: Saving checkpoints to: ./experiments/spr2-mrpc-mix/run
09/16 08:36:57 AM: Stopped training after 16 validation checks
09/16 08:36:57 AM: Trained edges-spr2 for 1600 batches or 22.857 epochs
09/16 08:36:57 AM: ***** VALIDATION RESULTS *****
09/16 08:36:57 AM: edges-spr2_f1 (for best val pass 6): edges-spr2_loss: 0.31339, macro_avg: 0.82648, micro_avg: 0.00000, edges-spr2_mcc: 0.72690, edges-spr2_acc: 0.09206, edges-spr2_precision: 0.84397, edges-spr2_recall: 0.80970, edges-spr2_f1: 0.82648
09/16 08:36:57 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.34045, macro_avg: 0.80162, micro_avg: 0.00000, edges-spr2_mcc: 0.69727, edges-spr2_acc: 0.09206, edges-spr2_precision: 0.85242, edges-spr2_recall: 0.75654, edges-spr2_f1: 0.80162
09/16 08:36:57 AM: macro_avg (for best val pass 6): edges-spr2_loss: 0.31339, macro_avg: 0.82648, micro_avg: 0.00000, edges-spr2_mcc: 0.72690, edges-spr2_acc: 0.09206, edges-spr2_precision: 0.84397, edges-spr2_recall: 0.80970, edges-spr2_f1: 0.82648
09/16 08:36:57 AM: Evaluating...
09/16 08:36:57 AM: Loaded model state from ./experiments/spr2-mrpc-mix/run/edges-spr2/model_state_target_train_val_6.best.th
09/16 08:36:57 AM: Evaluating on: edges-spr2, split: val
09/16 08:36:58 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:36:58 AM: Finished evaluating on: edges-spr2
09/16 08:36:58 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:36:58 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-mrpc-mix/run
09/16 08:36:58 AM: Wrote all preds for split 'val' to ./experiments/spr2-mrpc-mix/run
09/16 08:36:58 AM: Evaluating on: edges-spr2, split: test
09/16 08:36:59 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:36:59 AM: Finished evaluating on: edges-spr2
09/16 08:36:59 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:36:59 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-mrpc-mix/run
09/16 08:36:59 AM: Wrote all preds for split 'test' to ./experiments/spr2-mrpc-mix/run
09/16 08:36:59 AM: Writing results for split 'val' to ./experiments/spr2-mrpc-mix/results.tsv
09/16 08:36:59 AM: micro_avg: 0.000, macro_avg: 0.826, edges-spr2_mcc: 0.727, edges-spr2_acc: 0.092, edges-spr2_precision: 0.844, edges-spr2_recall: 0.810, edges-spr2_f1: 0.826
09/16 08:36:59 AM: Done!
09/16 08:36:59 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
