09/16 08:49:20 AM: Git branch: master
09/16 08:49:20 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:49:21 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-hotpot-top/",
  "exp_name": "experiments/spr2-hotpot-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-hotpot-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/hotpot",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/spr2-hotpot-top__run",
  "run_dir": "./experiments/spr2-hotpot-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:49:21 AM: Saved config to ./experiments/spr2-hotpot-top/run/params.conf
09/16 08:49:21 AM: Using random seed 1234
09/16 08:49:23 AM: Using GPU 0
09/16 08:49:23 AM: Loading tasks...
09/16 08:49:23 AM: Writing pre-preprocessed tasks to ./experiments/spr2-hotpot-top/
09/16 08:49:23 AM: 	Creating task edges-spr2 from scratch.
09/16 08:49:23 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:49:23 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:49:23 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:49:23 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:49:23 AM: 	Finished loading tasks: edges-spr2.
09/16 08:49:23 AM: 	Building vocab from scratch.
09/16 08:49:23 AM: 	Counting units for task edges-spr2.
09/16 08:49:23 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:49:24 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:49:24 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:49:24 AM: 	Saved vocab to ./experiments/spr2-hotpot-top/vocab
09/16 08:49:24 AM: Loading token dictionary from ./experiments/spr2-hotpot-top/vocab.
09/16 08:49:24 AM: 	Loaded vocab from ./experiments/spr2-hotpot-top/vocab
09/16 08:49:24 AM: 	Vocab namespace tokens: size 7943
09/16 08:49:24 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:49:24 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:49:24 AM: 	Vocab namespace chars: size 65
09/16 08:49:24 AM: 	Finished building vocab.
09/16 08:49:24 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:49:25 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-hotpot-top/preproc/edges-spr2__train_data
09/16 08:49:25 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:49:25 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-hotpot-top/preproc/edges-spr2__val_data
09/16 08:49:25 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:49:25 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-hotpot-top/preproc/edges-spr2__test_data
09/16 08:49:25 AM: 	Finished indexing tasks
09/16 08:49:25 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:49:25 AM: 	  Training on 
09/16 08:49:25 AM: 	  Evaluating on edges-spr2
09/16 08:49:25 AM: 	Finished loading tasks in 2.483s
09/16 08:49:25 AM: 	 Tasks: ['edges-spr2']
09/16 08:49:25 AM: Building model...
09/16 08:49:25 AM: Using BERT model (bert-base-uncased).
09/16 08:49:25 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:49:25 AM: models/hotpot
09/16 08:49:25 AM: loading configuration file models/hotpot/config.json
09/16 08:49:25 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:49:25 AM: loading weights file models/hotpot/pytorch_model.bin
09/16 08:49:36 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpel3w8qz2
09/16 08:49:39 AM: copying /tmp/tmpel3w8qz2 to cache at ./experiments/spr2-hotpot-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:49:39 AM: creating metadata file for ./experiments/spr2-hotpot-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:49:39 AM: removing temp file /tmp/tmpel3w8qz2
09/16 08:49:39 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-hotpot-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:49:39 AM: Initializing parameters
09/16 08:49:39 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:49:39 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:49:39 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:49:39 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:49:39 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:49:39 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:49:39 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:49:44 AM: Model specification:
09/16 08:49:44 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:49:44 AM: Model parameters:
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:49:44 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:49:44 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:49:44 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:49:44 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:49:44 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:49:44 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:49:44 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:49:44 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:49:44 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:49:44 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:49:44 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:49:44 AM: Total number of parameters: 110144020 (1.10144e+08)
09/16 08:49:44 AM: Number of trainable parameters: 661780 (661780)
09/16 08:49:44 AM: Finished building model in 18.973s
09/16 08:49:44 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:49:45 AM: patience = 9
09/16 08:49:45 AM: val_interval = 100
09/16 08:49:45 AM: max_vals = 100
09/16 08:49:45 AM: cuda_device = 0
09/16 08:49:45 AM: grad_norm = 5.0
09/16 08:49:45 AM: grad_clipping = None
09/16 08:49:45 AM: lr_decay = 0.99
09/16 08:49:45 AM: min_lr = 1e-06
09/16 08:49:45 AM: keep_all_checkpoints = 0
09/16 08:49:45 AM: val_data_limit = 5000
09/16 08:49:45 AM: max_epochs = -1
09/16 08:49:45 AM: dec_val_scale = 250
09/16 08:49:45 AM: training_data_fraction = 1
09/16 08:49:45 AM: type = adam
09/16 08:49:45 AM: parameter_groups = None
09/16 08:49:45 AM: Number of trainable parameters: 661780
09/16 08:49:45 AM: infer_type_and_cast = True
09/16 08:49:45 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:49:45 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:49:45 AM: lr = 0.0001
09/16 08:49:45 AM: amsgrad = True
09/16 08:49:45 AM: type = reduce_on_plateau
09/16 08:49:45 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:49:45 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:49:45 AM: mode = max
09/16 08:49:45 AM: factor = 0.5
09/16 08:49:45 AM: patience = 3
09/16 08:49:45 AM: threshold = 0.0001
09/16 08:49:45 AM: threshold_mode = abs
09/16 08:49:45 AM: verbose = True
09/16 08:49:45 AM: type = adam
09/16 08:49:45 AM: parameter_groups = None
09/16 08:49:45 AM: Number of trainable parameters: 661780
09/16 08:49:45 AM: infer_type_and_cast = True
09/16 08:49:45 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:49:45 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:49:45 AM: lr = 0.0001
09/16 08:49:45 AM: amsgrad = True
09/16 08:49:45 AM: type = reduce_on_plateau
09/16 08:49:45 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:49:45 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:49:45 AM: mode = max
09/16 08:49:45 AM: factor = 0.5
09/16 08:49:45 AM: patience = 3
09/16 08:49:45 AM: threshold = 0.0001
09/16 08:49:45 AM: threshold_mode = abs
09/16 08:49:45 AM: verbose = True
09/16 08:49:45 AM: Starting training without restoring from a checkpoint.
09/16 08:49:45 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:49:45 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:49:54 AM: ***** Step 100 / Validation 1 *****
09/16 08:49:54 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:49:54 AM: Validating...
09/16 08:49:55 AM: Evaluate: task edges-spr2, batch 6 (10): mcc: 0.6482, acc: 0.0372, precision: 0.7962, recall: 0.7680, f1: 0.7819, edges-spr2_loss: 0.3538
09/16 08:49:56 AM: Best result seen so far for edges-spr2.
09/16 08:49:56 AM: Best result seen so far for micro.
09/16 08:49:56 AM: Best result seen so far for macro.
09/16 08:49:56 AM: Updating LR scheduler:
09/16 08:49:56 AM: 	Best result seen so far for macro_avg: 0.777
09/16 08:49:56 AM: 	# validation passes without improvement: 0
09/16 08:49:56 AM: edges-spr2_loss: training: 0.395644 validation: 0.368495
09/16 08:49:56 AM: macro_avg: validation: 0.776617
09/16 08:49:56 AM: micro_avg: validation: 0.000000
09/16 08:49:56 AM: edges-spr2_mcc: training: 0.584929 validation: 0.646366
09/16 08:49:56 AM: edges-spr2_acc: training: 0.024531 validation: 0.042857
09/16 08:49:56 AM: edges-spr2_precision: training: 0.755159 validation: 0.786524
09/16 08:49:56 AM: edges-spr2_recall: training: 0.709669 validation: 0.766957
09/16 08:49:56 AM: edges-spr2_f1: training: 0.731708 validation: 0.776617
09/16 08:49:56 AM: Global learning rate: 0.0001
09/16 08:49:56 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:50:04 AM: ***** Step 200 / Validation 2 *****
09/16 08:50:04 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:50:04 AM: Validating...
09/16 08:50:05 AM: Evaluate: task edges-spr2, batch 7 (10): mcc: 0.6763, acc: 0.0751, precision: 0.8457, recall: 0.7416, f1: 0.7902, edges-spr2_loss: 0.3274
09/16 08:50:05 AM: Best result seen so far for edges-spr2.
09/16 08:50:05 AM: Best result seen so far for macro.
09/16 08:50:05 AM: Updating LR scheduler:
09/16 08:50:05 AM: 	Best result seen so far for macro_avg: 0.778
09/16 08:50:05 AM: 	# validation passes without improvement: 0
09/16 08:50:05 AM: edges-spr2_loss: training: 0.349623 validation: 0.348170
09/16 08:50:05 AM: macro_avg: validation: 0.777753
09/16 08:50:05 AM: micro_avg: validation: 0.000000
09/16 08:50:05 AM: edges-spr2_mcc: training: 0.645102 validation: 0.662058
09/16 08:50:05 AM: edges-spr2_acc: training: 0.047891 validation: 0.068254
09/16 08:50:05 AM: edges-spr2_precision: training: 0.796757 validation: 0.832242
09/16 08:50:05 AM: edges-spr2_recall: training: 0.744480 validation: 0.729960
09/16 08:50:05 AM: edges-spr2_f1: training: 0.769732 validation: 0.777753
09/16 08:50:05 AM: Global learning rate: 0.0001
09/16 08:50:05 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:50:15 AM: ***** Step 300 / Validation 3 *****
09/16 08:50:15 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:50:15 AM: Validating...
09/16 08:50:15 AM: Evaluate: task edges-spr2, batch 4 (10): mcc: 0.6846, acc: 0.0505, precision: 0.8254, recall: 0.7842, f1: 0.8043, edges-spr2_loss: 0.3226
09/16 08:50:16 AM: Best result seen so far for edges-spr2.
09/16 08:50:16 AM: Best result seen so far for macro.
09/16 08:50:16 AM: Updating LR scheduler:
09/16 08:50:16 AM: 	Best result seen so far for macro_avg: 0.796
09/16 08:50:16 AM: 	# validation passes without improvement: 0
09/16 08:50:16 AM: edges-spr2_loss: training: 0.333973 validation: 0.338464
09/16 08:50:16 AM: macro_avg: validation: 0.796294
09/16 08:50:16 AM: micro_avg: validation: 0.000000
09/16 08:50:16 AM: edges-spr2_mcc: training: 0.661459 validation: 0.680313
09/16 08:50:16 AM: edges-spr2_acc: training: 0.053518 validation: 0.060317
09/16 08:50:16 AM: edges-spr2_precision: training: 0.811254 validation: 0.816860
09/16 08:50:16 AM: edges-spr2_recall: training: 0.750305 validation: 0.776738
09/16 08:50:16 AM: edges-spr2_f1: training: 0.779590 validation: 0.796294
09/16 08:50:16 AM: Global learning rate: 0.0001
09/16 08:50:16 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:50:24 AM: ***** Step 400 / Validation 4 *****
09/16 08:50:24 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:50:24 AM: Validating...
09/16 08:50:25 AM: Evaluate: task edges-spr2, batch 10 (10): mcc: 0.6819, acc: 0.0730, precision: 0.8429, recall: 0.7459, f1: 0.7914, edges-spr2_loss: 0.3346
09/16 08:50:25 AM: Updating LR scheduler:
09/16 08:50:25 AM: 	Best result seen so far for macro_avg: 0.796
09/16 08:50:25 AM: 	# validation passes without improvement: 1
09/16 08:50:25 AM: edges-spr2_loss: training: 0.324691 validation: 0.334552
09/16 08:50:25 AM: macro_avg: validation: 0.791427
09/16 08:50:25 AM: micro_avg: validation: 0.000000
09/16 08:50:25 AM: edges-spr2_mcc: training: 0.670384 validation: 0.681900
09/16 08:50:25 AM: edges-spr2_acc: training: 0.055650 validation: 0.073016
09/16 08:50:25 AM: edges-spr2_precision: training: 0.814316 validation: 0.842864
09/16 08:50:25 AM: edges-spr2_recall: training: 0.759391 validation: 0.745907
09/16 08:50:25 AM: edges-spr2_f1: training: 0.785895 validation: 0.791427
09/16 08:50:25 AM: Global learning rate: 0.0001
09/16 08:50:25 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:50:34 AM: ***** Step 500 / Validation 5 *****
09/16 08:50:34 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:50:34 AM: Validating...
09/16 08:50:34 AM: Updating LR scheduler:
09/16 08:50:34 AM: 	Best result seen so far for macro_avg: 0.796
09/16 08:50:34 AM: 	# validation passes without improvement: 2
09/16 08:50:34 AM: edges-spr2_loss: training: 0.320515 validation: 0.331959
09/16 08:50:34 AM: macro_avg: validation: 0.791332
09/16 08:50:34 AM: micro_avg: validation: 0.000000
09/16 08:50:34 AM: edges-spr2_mcc: training: 0.672163 validation: 0.686843
09/16 08:50:34 AM: edges-spr2_acc: training: 0.057078 validation: 0.080952
09/16 08:50:34 AM: edges-spr2_precision: training: 0.816885 validation: 0.858671
09/16 08:50:34 AM: edges-spr2_recall: training: 0.759425 validation: 0.733787
09/16 08:50:34 AM: edges-spr2_f1: training: 0.787108 validation: 0.791332
09/16 08:50:34 AM: Global learning rate: 0.0001
09/16 08:50:34 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:50:35 AM: Update 512: task edges-spr2, batch 12 (512): mcc: 0.6741, acc: 0.0668, precision: 0.8265, recall: 0.7507, f1: 0.7868, edges-spr2_loss: 0.3146
09/16 08:50:42 AM: ***** Step 600 / Validation 6 *****
09/16 08:50:42 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:50:42 AM: Validating...
09/16 08:50:43 AM: Updating LR scheduler:
09/16 08:50:43 AM: 	Best result seen so far for macro_avg: 0.796
09/16 08:50:43 AM: 	# validation passes without improvement: 3
09/16 08:50:43 AM: edges-spr2_loss: training: 0.316725 validation: 0.330560
09/16 08:50:43 AM: macro_avg: validation: 0.789298
09/16 08:50:43 AM: micro_avg: validation: 0.000000
09/16 08:50:43 AM: edges-spr2_mcc: training: 0.679115 validation: 0.684212
09/16 08:50:43 AM: edges-spr2_acc: training: 0.062553 validation: 0.069841
09/16 08:50:43 AM: edges-spr2_precision: training: 0.820299 validation: 0.857963
09/16 08:50:43 AM: edges-spr2_recall: training: 0.764806 validation: 0.730810
09/16 08:50:43 AM: edges-spr2_f1: training: 0.791581 validation: 0.789298
09/16 08:50:43 AM: Global learning rate: 0.0001
09/16 08:50:43 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:50:45 AM: Update 627: task edges-spr2, batch 27 (627): mcc: 0.6845, acc: 0.0557, precision: 0.8252, recall: 0.7678, f1: 0.7954, edges-spr2_loss: 0.3102
09/16 08:50:51 AM: ***** Step 700 / Validation 7 *****
09/16 08:50:51 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:50:51 AM: Validating...
09/16 08:50:52 AM: Best result seen so far for edges-spr2.
09/16 08:50:52 AM: Best result seen so far for macro.
09/16 08:50:52 AM: Updating LR scheduler:
09/16 08:50:52 AM: 	Best result seen so far for macro_avg: 0.802
09/16 08:50:52 AM: 	# validation passes without improvement: 0
09/16 08:50:52 AM: edges-spr2_loss: training: 0.312591 validation: 0.327192
09/16 08:50:52 AM: macro_avg: validation: 0.802402
09/16 08:50:52 AM: micro_avg: validation: 0.000000
09/16 08:50:52 AM: edges-spr2_mcc: training: 0.683123 validation: 0.694887
09/16 08:50:52 AM: edges-spr2_acc: training: 0.060628 validation: 0.082540
09/16 08:50:52 AM: edges-spr2_precision: training: 0.823246 validation: 0.841026
09/16 08:50:52 AM: edges-spr2_recall: training: 0.767428 validation: 0.767170
09/16 08:50:52 AM: edges-spr2_f1: training: 0.794357 validation: 0.802402
09/16 08:50:52 AM: Global learning rate: 0.0001
09/16 08:50:52 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:50:55 AM: Update 737: task edges-spr2, batch 37 (737): mcc: 0.6790, acc: 0.0597, precision: 0.8210, recall: 0.7638, f1: 0.7914, edges-spr2_loss: 0.3155
09/16 08:51:00 AM: ***** Step 800 / Validation 8 *****
09/16 08:51:00 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:51:00 AM: Validating...
09/16 08:51:01 AM: Best result seen so far for edges-spr2.
09/16 08:51:01 AM: Best result seen so far for macro.
09/16 08:51:01 AM: Updating LR scheduler:
09/16 08:51:01 AM: 	Best result seen so far for macro_avg: 0.805
09/16 08:51:01 AM: 	# validation passes without improvement: 0
09/16 08:51:01 AM: edges-spr2_loss: training: 0.310657 validation: 0.327138
09/16 08:51:01 AM: macro_avg: validation: 0.804610
09/16 08:51:01 AM: micro_avg: validation: 0.000000
09/16 08:51:01 AM: edges-spr2_mcc: training: 0.685130 validation: 0.695065
09/16 08:51:01 AM: edges-spr2_acc: training: 0.067874 validation: 0.055556
09/16 08:51:01 AM: edges-spr2_precision: training: 0.825358 validation: 0.831631
09/16 08:51:01 AM: edges-spr2_recall: training: 0.767418 validation: 0.779290
09/16 08:51:01 AM: edges-spr2_f1: training: 0.795334 validation: 0.804610
09/16 08:51:01 AM: Global learning rate: 0.0001
09/16 08:51:01 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:51:06 AM: Update 847: task edges-spr2, batch 47 (847): mcc: 0.6789, acc: 0.0617, precision: 0.8180, recall: 0.7675, f1: 0.7919, edges-spr2_loss: 0.3125
09/16 08:51:09 AM: ***** Step 900 / Validation 9 *****
09/16 08:51:09 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:51:09 AM: Validating...
09/16 08:51:10 AM: Best result seen so far for edges-spr2.
09/16 08:51:10 AM: Best result seen so far for macro.
09/16 08:51:10 AM: Updating LR scheduler:
09/16 08:51:10 AM: 	Best result seen so far for macro_avg: 0.808
09/16 08:51:10 AM: 	# validation passes without improvement: 0
09/16 08:51:10 AM: edges-spr2_loss: training: 0.308452 validation: 0.324491
09/16 08:51:10 AM: macro_avg: validation: 0.808045
09/16 08:51:10 AM: micro_avg: validation: 0.000000
09/16 08:51:10 AM: edges-spr2_mcc: training: 0.684340 validation: 0.699473
09/16 08:51:10 AM: edges-spr2_acc: training: 0.065115 validation: 0.063492
09/16 08:51:10 AM: edges-spr2_precision: training: 0.822084 validation: 0.831496
09/16 08:51:10 AM: edges-spr2_recall: training: 0.769757 validation: 0.785881
09/16 08:51:10 AM: edges-spr2_f1: training: 0.795060 validation: 0.808045
09/16 08:51:10 AM: Global learning rate: 0.0001
09/16 08:51:10 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:51:16 AM: Update 971: task edges-spr2, batch 71 (971): mcc: 0.6859, acc: 0.0655, precision: 0.8233, recall: 0.7721, f1: 0.7969, edges-spr2_loss: 0.3087
09/16 08:51:18 AM: ***** Step 1000 / Validation 10 *****
09/16 08:51:18 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:51:18 AM: Validating...
09/16 08:51:19 AM: Updating LR scheduler:
09/16 08:51:19 AM: 	Best result seen so far for macro_avg: 0.808
09/16 08:51:19 AM: 	# validation passes without improvement: 1
09/16 08:51:19 AM: edges-spr2_loss: training: 0.308183 validation: 0.326118
09/16 08:51:19 AM: macro_avg: validation: 0.806695
09/16 08:51:19 AM: micro_avg: validation: 0.000000
09/16 08:51:19 AM: edges-spr2_mcc: training: 0.685728 validation: 0.700737
09/16 08:51:19 AM: edges-spr2_acc: training: 0.062864 validation: 0.084127
09/16 08:51:19 AM: edges-spr2_precision: training: 0.823864 validation: 0.842556
09/16 08:51:19 AM: edges-spr2_recall: training: 0.771563 validation: 0.773761
09/16 08:51:19 AM: edges-spr2_f1: training: 0.796856 validation: 0.806695
09/16 08:51:19 AM: Global learning rate: 0.0001
09/16 08:51:19 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:51:26 AM: Update 1086: task edges-spr2, batch 86 (1086): mcc: 0.6845, acc: 0.0658, precision: 0.8223, recall: 0.7696, f1: 0.7951, edges-spr2_loss: 0.3071
09/16 08:51:27 AM: ***** Step 1100 / Validation 11 *****
09/16 08:51:27 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:51:27 AM: Validating...
09/16 08:51:27 AM: Updating LR scheduler:
09/16 08:51:27 AM: 	Best result seen so far for macro_avg: 0.808
09/16 08:51:27 AM: 	# validation passes without improvement: 2
09/16 08:51:27 AM: edges-spr2_loss: training: 0.306175 validation: 0.325699
09/16 08:51:27 AM: macro_avg: validation: 0.804020
09/16 08:51:27 AM: micro_avg: validation: 0.000000
09/16 08:51:27 AM: edges-spr2_mcc: training: 0.686768 validation: 0.698540
09/16 08:51:27 AM: edges-spr2_acc: training: 0.066260 validation: 0.095238
09/16 08:51:27 AM: edges-spr2_precision: training: 0.823549 validation: 0.846660
09/16 08:51:27 AM: edges-spr2_recall: training: 0.771594 validation: 0.765469
09/16 08:51:27 AM: edges-spr2_f1: training: 0.796725 validation: 0.804020
09/16 08:51:27 AM: Global learning rate: 0.0001
09/16 08:51:27 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:51:36 AM: ***** Step 1200 / Validation 12 *****
09/16 08:51:36 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:51:36 AM: Validating...
09/16 08:51:36 AM: Evaluate: task edges-spr2, batch 1 (10): mcc: 0.7080, acc: 0.0541, precision: 0.8316, recall: 0.8162, f1: 0.8238, edges-spr2_loss: 0.3104
09/16 08:51:37 AM: Best result seen so far for edges-spr2.
09/16 08:51:37 AM: Best result seen so far for macro.
09/16 08:51:37 AM: Updating LR scheduler:
09/16 08:51:37 AM: 	Best result seen so far for macro_avg: 0.811
09/16 08:51:37 AM: 	# validation passes without improvement: 0
09/16 08:51:37 AM: edges-spr2_loss: training: 0.307703 validation: 0.323052
09/16 08:51:37 AM: macro_avg: validation: 0.810622
09/16 08:51:37 AM: micro_avg: validation: 0.000000
09/16 08:51:37 AM: edges-spr2_mcc: training: 0.683767 validation: 0.703445
09/16 08:51:37 AM: edges-spr2_acc: training: 0.063940 validation: 0.069841
09/16 08:51:37 AM: edges-spr2_precision: training: 0.820794 validation: 0.833858
09/16 08:51:37 AM: edges-spr2_recall: training: 0.771403 validation: 0.788646
09/16 08:51:37 AM: edges-spr2_f1: training: 0.795333 validation: 0.810622
09/16 08:51:37 AM: Global learning rate: 0.0001
09/16 08:51:37 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:51:44 AM: ***** Step 1300 / Validation 13 *****
09/16 08:51:44 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:51:44 AM: Validating...
09/16 08:51:45 AM: Updating LR scheduler:
09/16 08:51:45 AM: 	Best result seen so far for macro_avg: 0.811
09/16 08:51:45 AM: 	# validation passes without improvement: 1
09/16 08:51:45 AM: edges-spr2_loss: training: 0.302500 validation: 0.325475
09/16 08:51:45 AM: macro_avg: validation: 0.798645
09/16 08:51:45 AM: micro_avg: validation: 0.000000
09/16 08:51:45 AM: edges-spr2_mcc: training: 0.693168 validation: 0.693394
09/16 08:51:45 AM: edges-spr2_acc: training: 0.067435 validation: 0.077778
09/16 08:51:45 AM: edges-spr2_precision: training: 0.827174 validation: 0.851638
09/16 08:51:45 AM: edges-spr2_recall: training: 0.776421 validation: 0.751860
09/16 08:51:45 AM: edges-spr2_f1: training: 0.800995 validation: 0.798645
09/16 08:51:45 AM: Global learning rate: 0.0001
09/16 08:51:45 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:51:46 AM: Update 1314: task edges-spr2, batch 14 (1314): mcc: 0.7118, acc: 0.0799, precision: 0.8401, recall: 0.7951, f1: 0.8170, edges-spr2_loss: 0.2951
09/16 08:51:52 AM: ***** Step 1400 / Validation 14 *****
09/16 08:51:52 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:51:52 AM: Validating...
09/16 08:51:53 AM: Updating LR scheduler:
09/16 08:51:53 AM: 	Best result seen so far for macro_avg: 0.811
09/16 08:51:53 AM: 	# validation passes without improvement: 2
09/16 08:51:53 AM: edges-spr2_loss: training: 0.301278 validation: 0.323070
09/16 08:51:53 AM: macro_avg: validation: 0.806380
09/16 08:51:53 AM: micro_avg: validation: 0.000000
09/16 08:51:53 AM: edges-spr2_mcc: training: 0.694999 validation: 0.701877
09/16 08:51:53 AM: edges-spr2_acc: training: 0.070141 validation: 0.068254
09/16 08:51:53 AM: edges-spr2_precision: training: 0.827421 validation: 0.847994
09/16 08:51:53 AM: edges-spr2_recall: training: 0.779854 validation: 0.768658
09/16 08:51:53 AM: edges-spr2_f1: training: 0.802934 validation: 0.806380
09/16 08:51:53 AM: Global learning rate: 0.0001
09/16 08:51:53 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:51:56 AM: Update 1425: task edges-spr2, batch 25 (1425): mcc: 0.6927, acc: 0.0761, precision: 0.8296, recall: 0.7729, f1: 0.8003, edges-spr2_loss: 0.2983
09/16 08:52:01 AM: ***** Step 1500 / Validation 15 *****
09/16 08:52:01 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:52:01 AM: Validating...
09/16 08:52:02 AM: Best result seen so far for edges-spr2.
09/16 08:52:02 AM: Best result seen so far for macro.
09/16 08:52:02 AM: Updating LR scheduler:
09/16 08:52:02 AM: 	Best result seen so far for macro_avg: 0.815
09/16 08:52:02 AM: 	# validation passes without improvement: 0
09/16 08:52:02 AM: edges-spr2_loss: training: 0.301350 validation: 0.320775
09/16 08:52:02 AM: macro_avg: validation: 0.814598
09/16 08:52:02 AM: micro_avg: validation: 0.000000
09/16 08:52:02 AM: edges-spr2_mcc: training: 0.691052 validation: 0.708353
09/16 08:52:02 AM: edges-spr2_acc: training: 0.067347 validation: 0.074603
09/16 08:52:02 AM: edges-spr2_precision: training: 0.826153 validation: 0.832593
09/16 08:52:02 AM: edges-spr2_recall: training: 0.775784 validation: 0.797363
09/16 08:52:02 AM: edges-spr2_f1: training: 0.800177 validation: 0.814598
09/16 08:52:02 AM: Global learning rate: 0.0001
09/16 08:52:02 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:52:06 AM: Update 1541: task edges-spr2, batch 41 (1541): mcc: 0.6944, acc: 0.0712, precision: 0.8287, recall: 0.7752, f1: 0.8011, edges-spr2_loss: 0.3012
09/16 08:52:10 AM: ***** Step 1600 / Validation 16 *****
09/16 08:52:10 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:52:10 AM: Validating...
09/16 08:52:11 AM: Updating LR scheduler:
09/16 08:52:11 AM: 	Best result seen so far for macro_avg: 0.815
09/16 08:52:11 AM: 	# validation passes without improvement: 1
09/16 08:52:11 AM: edges-spr2_loss: training: 0.300986 validation: 0.320742
09/16 08:52:11 AM: macro_avg: validation: 0.812650
09/16 08:52:11 AM: micro_avg: validation: 0.000000
09/16 08:52:11 AM: edges-spr2_mcc: training: 0.693508 validation: 0.706955
09/16 08:52:11 AM: edges-spr2_acc: training: 0.072683 validation: 0.060317
09/16 08:52:11 AM: edges-spr2_precision: training: 0.827697 validation: 0.837204
09/16 08:52:11 AM: edges-spr2_recall: training: 0.776333 validation: 0.789496
09/16 08:52:11 AM: edges-spr2_f1: training: 0.801193 validation: 0.812650
09/16 08:52:11 AM: Global learning rate: 0.0001
09/16 08:52:11 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:52:16 AM: Update 1656: task edges-spr2, batch 56 (1656): mcc: 0.6968, acc: 0.0724, precision: 0.8281, recall: 0.7810, f1: 0.8039, edges-spr2_loss: 0.2978
09/16 08:52:20 AM: ***** Step 1700 / Validation 17 *****
09/16 08:52:20 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:52:20 AM: Validating...
09/16 08:52:21 AM: Updating LR scheduler:
09/16 08:52:21 AM: 	Best result seen so far for macro_avg: 0.815
09/16 08:52:21 AM: 	# validation passes without improvement: 2
09/16 08:52:21 AM: edges-spr2_loss: training: 0.299494 validation: 0.320402
09/16 08:52:21 AM: macro_avg: validation: 0.809425
09/16 08:52:21 AM: micro_avg: validation: 0.000000
09/16 08:52:21 AM: edges-spr2_mcc: training: 0.693929 validation: 0.701167
09/16 08:52:21 AM: edges-spr2_acc: training: 0.071550 validation: 0.079365
09/16 08:52:21 AM: edges-spr2_precision: training: 0.827349 validation: 0.831093
09/16 08:52:21 AM: edges-spr2_recall: training: 0.777564 validation: 0.788858
09/16 08:52:21 AM: edges-spr2_f1: training: 0.801685 validation: 0.809425
09/16 08:52:21 AM: Global learning rate: 0.0001
09/16 08:52:21 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:52:26 AM: Update 1765: task edges-spr2, batch 65 (1765): mcc: 0.6935, acc: 0.0597, precision: 0.8250, recall: 0.7811, f1: 0.8024, edges-spr2_loss: 0.3004
09/16 08:52:28 AM: ***** Step 1800 / Validation 18 *****
09/16 08:52:28 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:52:28 AM: Validating...
09/16 08:52:29 AM: Updating LR scheduler:
09/16 08:52:29 AM: 	Best result seen so far for macro_avg: 0.815
09/16 08:52:29 AM: 	# validation passes without improvement: 3
09/16 08:52:29 AM: edges-spr2_loss: training: 0.298001 validation: 0.324945
09/16 08:52:29 AM: macro_avg: validation: 0.797130
09/16 08:52:29 AM: micro_avg: validation: 0.000000
09/16 08:52:29 AM: edges-spr2_mcc: training: 0.697070 validation: 0.693674
09/16 08:52:29 AM: edges-spr2_acc: training: 0.064372 validation: 0.084127
09/16 08:52:29 AM: edges-spr2_precision: training: 0.826049 validation: 0.858440
09/16 08:52:29 AM: edges-spr2_recall: training: 0.783953 validation: 0.743993
09/16 08:52:29 AM: edges-spr2_f1: training: 0.804451 validation: 0.797130
09/16 08:52:29 AM: Global learning rate: 0.0001
09/16 08:52:29 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:52:36 AM: Update 1888: task edges-spr2, batch 88 (1888): mcc: 0.6967, acc: 0.0698, precision: 0.8303, recall: 0.7791, f1: 0.8039, edges-spr2_loss: 0.2982
09/16 08:52:38 AM: ***** Step 1900 / Validation 19 *****
09/16 08:52:38 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:52:38 AM: Validating...
09/16 08:52:38 AM: Updating LR scheduler:
09/16 08:52:38 AM: 	Best result seen so far for macro_avg: 0.815
09/16 08:52:38 AM: 	# validation passes without improvement: 0
09/16 08:52:38 AM: edges-spr2_loss: training: 0.300484 validation: 0.318297
09/16 08:52:38 AM: macro_avg: validation: 0.811281
09/16 08:52:38 AM: micro_avg: validation: 0.000000
09/16 08:52:38 AM: edges-spr2_mcc: training: 0.692805 validation: 0.706386
09/16 08:52:38 AM: edges-spr2_acc: training: 0.068633 validation: 0.071429
09/16 08:52:38 AM: edges-spr2_precision: training: 0.827391 validation: 0.841792
09/16 08:52:38 AM: edges-spr2_recall: training: 0.776464 validation: 0.782905
09/16 08:52:38 AM: edges-spr2_f1: training: 0.801119 validation: 0.811281
09/16 08:52:38 AM: Global learning rate: 5e-05
09/16 08:52:38 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:52:46 AM: Update 1997: task edges-spr2, batch 97 (1997): mcc: 0.6999, acc: 0.0691, precision: 0.8302, recall: 0.7831, f1: 0.8060, edges-spr2_loss: 0.2948
09/16 08:52:46 AM: ***** Step 2000 / Validation 20 *****
09/16 08:52:46 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:52:46 AM: Validating...
09/16 08:52:47 AM: Updating LR scheduler:
09/16 08:52:47 AM: 	Best result seen so far for macro_avg: 0.815
09/16 08:52:47 AM: 	# validation passes without improvement: 1
09/16 08:52:47 AM: edges-spr2_loss: training: 0.295293 validation: 0.318135
09/16 08:52:47 AM: macro_avg: validation: 0.808166
09/16 08:52:47 AM: micro_avg: validation: 0.000000
09/16 08:52:47 AM: edges-spr2_mcc: training: 0.698969 validation: 0.703287
09/16 08:52:47 AM: edges-spr2_acc: training: 0.068402 validation: 0.066667
09/16 08:52:47 AM: edges-spr2_precision: training: 0.829988 validation: 0.845012
09/16 08:52:47 AM: edges-spr2_recall: training: 0.782137 validation: 0.774399
09/16 08:52:47 AM: edges-spr2_f1: training: 0.805352 validation: 0.808166
09/16 08:52:47 AM: Global learning rate: 5e-05
09/16 08:52:47 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:52:54 AM: ***** Step 2100 / Validation 21 *****
09/16 08:52:54 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:52:54 AM: Validating...
09/16 08:52:55 AM: Updating LR scheduler:
09/16 08:52:55 AM: 	Best result seen so far for macro_avg: 0.815
09/16 08:52:55 AM: 	# validation passes without improvement: 2
09/16 08:52:55 AM: edges-spr2_loss: training: 0.295391 validation: 0.318353
09/16 08:52:55 AM: macro_avg: validation: 0.809054
09/16 08:52:55 AM: micro_avg: validation: 0.000000
09/16 08:52:55 AM: edges-spr2_mcc: training: 0.696062 validation: 0.707302
09/16 08:52:55 AM: edges-spr2_acc: training: 0.071429 validation: 0.082540
09/16 08:52:55 AM: edges-spr2_precision: training: 0.829274 validation: 0.855248
09/16 08:52:55 AM: edges-spr2_recall: training: 0.778641 validation: 0.767595
09/16 08:52:55 AM: edges-spr2_f1: training: 0.803160 validation: 0.809054
09/16 08:52:55 AM: Global learning rate: 5e-05
09/16 08:52:55 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:52:56 AM: Update 2104: task edges-spr2, batch 4 (2104): mcc: 0.6389, acc: 0.0398, precision: 0.7986, recall: 0.7274, f1: 0.7613, edges-spr2_loss: 0.3286
09/16 08:53:03 AM: ***** Step 2200 / Validation 22 *****
09/16 08:53:03 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:53:03 AM: Validating...
09/16 08:53:04 AM: Updating LR scheduler:
09/16 08:53:04 AM: 	Best result seen so far for macro_avg: 0.815
09/16 08:53:04 AM: 	# validation passes without improvement: 3
09/16 08:53:04 AM: edges-spr2_loss: training: 0.295825 validation: 0.316840
09/16 08:53:04 AM: macro_avg: validation: 0.811601
09/16 08:53:04 AM: micro_avg: validation: 0.000000
09/16 08:53:04 AM: edges-spr2_mcc: training: 0.697683 validation: 0.706202
09/16 08:53:04 AM: edges-spr2_acc: training: 0.073897 validation: 0.066667
09/16 08:53:04 AM: edges-spr2_precision: training: 0.830281 validation: 0.839545
09/16 08:53:04 AM: edges-spr2_recall: training: 0.779710 validation: 0.785456
09/16 08:53:04 AM: edges-spr2_f1: training: 0.804201 validation: 0.811601
09/16 08:53:04 AM: Global learning rate: 5e-05
09/16 08:53:04 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:53:06 AM: Update 2235: task edges-spr2, batch 35 (2235): mcc: 0.7067, acc: 0.0802, precision: 0.8338, recall: 0.7879, f1: 0.8102, edges-spr2_loss: 0.2922
09/16 08:53:11 AM: ***** Step 2300 / Validation 23 *****
09/16 08:53:11 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:53:11 AM: Validating...
09/16 08:53:12 AM: Updating LR scheduler:
09/16 08:53:12 AM: 	Best result seen so far for macro_avg: 0.815
09/16 08:53:12 AM: 	# validation passes without improvement: 0
09/16 08:53:12 AM: edges-spr2_loss: training: 0.292903 validation: 0.316291
09/16 08:53:12 AM: macro_avg: validation: 0.813870
09/16 08:53:12 AM: micro_avg: validation: 0.000000
09/16 08:53:12 AM: edges-spr2_mcc: training: 0.703333 validation: 0.708060
09/16 08:53:12 AM: edges-spr2_acc: training: 0.074889 validation: 0.055556
09/16 08:53:12 AM: edges-spr2_precision: training: 0.833761 validation: 0.835273
09/16 08:53:12 AM: edges-spr2_recall: training: 0.783980 validation: 0.793536
09/16 08:53:12 AM: edges-spr2_f1: training: 0.808105 validation: 0.813870
09/16 08:53:12 AM: Global learning rate: 2.5e-05
09/16 08:53:12 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:53:16 AM: Update 2354: task edges-spr2, batch 54 (2354): mcc: 0.6975, acc: 0.0692, precision: 0.8281, recall: 0.7816, f1: 0.8042, edges-spr2_loss: 0.2939
09/16 08:53:20 AM: ***** Step 2400 / Validation 24 *****
09/16 08:53:20 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:53:20 AM: Validating...
09/16 08:53:20 AM: Updating LR scheduler:
09/16 08:53:20 AM: 	Best result seen so far for macro_avg: 0.815
09/16 08:53:20 AM: 	# validation passes without improvement: 1
09/16 08:53:20 AM: edges-spr2_loss: training: 0.292195 validation: 0.317056
09/16 08:53:20 AM: macro_avg: validation: 0.810955
09/16 08:53:20 AM: micro_avg: validation: 0.000000
09/16 08:53:20 AM: edges-spr2_mcc: training: 0.700993 validation: 0.707464
09/16 08:53:20 AM: edges-spr2_acc: training: 0.072116 validation: 0.077778
09/16 08:53:20 AM: edges-spr2_precision: training: 0.829606 validation: 0.847312
09/16 08:53:20 AM: edges-spr2_recall: training: 0.784978 validation: 0.777589
09/16 08:53:20 AM: edges-spr2_f1: training: 0.806675 validation: 0.810955
09/16 08:53:20 AM: Global learning rate: 2.5e-05
09/16 08:53:20 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:53:26 AM: Update 2474: task edges-spr2, batch 74 (2474): mcc: 0.6977, acc: 0.0709, precision: 0.8305, recall: 0.7798, f1: 0.8043, edges-spr2_loss: 0.2958
09/16 08:53:28 AM: ***** Step 2500 / Validation 25 *****
09/16 08:53:28 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:53:28 AM: Validating...
09/16 08:53:29 AM: Updating LR scheduler:
09/16 08:53:29 AM: 	Best result seen so far for macro_avg: 0.815
09/16 08:53:29 AM: 	# validation passes without improvement: 2
09/16 08:53:29 AM: Ran out of early stopping patience. Stopping training.
09/16 08:53:29 AM: edges-spr2_loss: training: 0.294611 validation: 0.317264
09/16 08:53:29 AM: macro_avg: validation: 0.810411
09/16 08:53:29 AM: micro_avg: validation: 0.000000
09/16 08:53:29 AM: edges-spr2_mcc: training: 0.701206 validation: 0.705294
09/16 08:53:29 AM: edges-spr2_acc: training: 0.075783 validation: 0.066667
09/16 08:53:29 AM: edges-spr2_precision: training: 0.832216 validation: 0.841888
09/16 08:53:29 AM: edges-spr2_recall: training: 0.782724 validation: 0.781204
09/16 08:53:29 AM: edges-spr2_f1: training: 0.806711 validation: 0.810411
09/16 08:53:29 AM: Global learning rate: 2.5e-05
09/16 08:53:29 AM: Saving checkpoints to: ./experiments/spr2-hotpot-top/run
09/16 08:53:29 AM: Stopped training after 25 validation checks
09/16 08:53:29 AM: Trained edges-spr2 for 2500 batches or 35.714 epochs
09/16 08:53:29 AM: ***** VALIDATION RESULTS *****
09/16 08:53:29 AM: edges-spr2_f1 (for best val pass 15): edges-spr2_loss: 0.32077, macro_avg: 0.81460, micro_avg: 0.00000, edges-spr2_mcc: 0.70835, edges-spr2_acc: 0.07460, edges-spr2_precision: 0.83259, edges-spr2_recall: 0.79736, edges-spr2_f1: 0.81460
09/16 08:53:29 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.36850, macro_avg: 0.77662, micro_avg: 0.00000, edges-spr2_mcc: 0.64637, edges-spr2_acc: 0.04286, edges-spr2_precision: 0.78652, edges-spr2_recall: 0.76696, edges-spr2_f1: 0.77662
09/16 08:53:29 AM: macro_avg (for best val pass 15): edges-spr2_loss: 0.32077, macro_avg: 0.81460, micro_avg: 0.00000, edges-spr2_mcc: 0.70835, edges-spr2_acc: 0.07460, edges-spr2_precision: 0.83259, edges-spr2_recall: 0.79736, edges-spr2_f1: 0.81460
09/16 08:53:29 AM: Evaluating...
09/16 08:53:29 AM: Loaded model state from ./experiments/spr2-hotpot-top/run/edges-spr2/model_state_target_train_val_15.best.th
09/16 08:53:29 AM: Evaluating on: edges-spr2, split: val
09/16 08:53:30 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:53:30 AM: Finished evaluating on: edges-spr2
09/16 08:53:30 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:53:30 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-hotpot-top/run
09/16 08:53:30 AM: Wrote all preds for split 'val' to ./experiments/spr2-hotpot-top/run
09/16 08:53:30 AM: Evaluating on: edges-spr2, split: test
09/16 08:53:31 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:53:31 AM: Finished evaluating on: edges-spr2
09/16 08:53:31 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:53:31 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-hotpot-top/run
09/16 08:53:31 AM: Wrote all preds for split 'test' to ./experiments/spr2-hotpot-top/run
09/16 08:53:31 AM: Writing results for split 'val' to ./experiments/spr2-hotpot-top/results.tsv
09/16 08:53:31 AM: micro_avg: 0.000, macro_avg: 0.815, edges-spr2_mcc: 0.708, edges-spr2_acc: 0.075, edges-spr2_precision: 0.833, edges-spr2_recall: 0.797, edges-spr2_f1: 0.815
09/16 08:53:31 AM: Done!
09/16 08:53:31 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
