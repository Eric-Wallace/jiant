09/16 08:35:00 AM: Git branch: master
09/16 08:35:00 AM: Git SHA: a6b97574b819abe0c17f2f3300d1097e5c87dbde
09/16 08:35:00 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-sts-only/",
  "exp_name": "experiments/rel-semeval-sts-only",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-sts-only/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/sts",
  "pytorch_transformers_output_mode": "only",
  "remote_log_name": "experiments/rel-semeval-sts-only__run",
  "run_dir": "./experiments/rel-semeval-sts-only/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:35:00 AM: Saved config to ./experiments/rel-semeval-sts-only/run/params.conf
09/16 08:35:00 AM: Using random seed 1234
09/16 08:35:01 AM: Using GPU 0
09/16 08:35:01 AM: Loading tasks...
09/16 08:35:01 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-sts-only/
09/16 08:35:01 AM: 	Creating task edges-rel-semeval from scratch.
09/16 08:35:01 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 08:35:01 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 08:35:01 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 08:35:01 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 08:35:01 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 08:35:01 AM: 	Building vocab from scratch.
09/16 08:35:01 AM: 	Counting units for task edges-rel-semeval.
09/16 08:35:01 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 08:35:02 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:02 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:35:02 AM: 	Saved vocab to ./experiments/rel-semeval-sts-only/vocab
09/16 08:35:02 AM: Loading token dictionary from ./experiments/rel-semeval-sts-only/vocab.
09/16 08:35:02 AM: 	Loaded vocab from ./experiments/rel-semeval-sts-only/vocab
09/16 08:35:02 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:35:02 AM: 	Vocab namespace tokens: size 16020
09/16 08:35:02 AM: 	Vocab namespace chars: size 59
09/16 08:35:02 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 08:35:02 AM: 	Finished building vocab.
09/16 08:35:02 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 08:35:03 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-sts-only/preproc/edges-rel-semeval__train_data
09/16 08:35:03 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 08:35:03 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-sts-only/preproc/edges-rel-semeval__val_data
09/16 08:35:03 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 08:35:04 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-sts-only/preproc/edges-rel-semeval__test_data
09/16 08:35:04 AM: 	Finished indexing tasks
09/16 08:35:04 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 08:35:04 AM: 	  Training on 
09/16 08:35:04 AM: 	  Evaluating on edges-rel-semeval
09/16 08:35:04 AM: 	Finished loading tasks in 2.899s
09/16 08:35:04 AM: 	 Tasks: ['edges-rel-semeval']
09/16 08:35:04 AM: Building model...
09/16 08:35:04 AM: Using BERT model (bert-base-uncased).
09/16 08:35:04 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:35:04 AM: models/sts
09/16 08:35:04 AM: loading configuration file models/sts/config.json
09/16 08:35:04 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "sts-b",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 1,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:35:04 AM: loading weights file models/sts/pytorch_model.bin
09/16 08:35:07 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmp4jxtdtjz
09/16 08:35:09 AM: copying /tmp/tmp4jxtdtjz to cache at ./experiments/rel-semeval-sts-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:09 AM: creating metadata file for ./experiments/rel-semeval-sts-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:09 AM: removing temp file /tmp/tmp4jxtdtjz
09/16 08:35:09 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-sts-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:35:09 AM: Initializing parameters
09/16 08:35:09 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:35:09 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:35:09 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:35:09 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:35:09 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:35:09 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:35:09 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 08:35:13 AM: Model specification:
09/16 08:35:13 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 08:35:13 AM: Model parameters:
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:35:13 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 08:35:13 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 08:35:13 AM: Total number of parameters: 110143763 (1.10144e+08)
09/16 08:35:13 AM: Number of trainable parameters: 661523 (661523)
09/16 08:35:13 AM: Finished building model in 9.695s
09/16 08:35:13 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 08:35:14 AM: patience = 9
09/16 08:35:14 AM: val_interval = 100
09/16 08:35:14 AM: max_vals = 100
09/16 08:35:14 AM: cuda_device = 0
09/16 08:35:14 AM: grad_norm = 5.0
09/16 08:35:14 AM: grad_clipping = None
09/16 08:35:14 AM: lr_decay = 0.99
09/16 08:35:14 AM: min_lr = 1e-06
09/16 08:35:14 AM: keep_all_checkpoints = 0
09/16 08:35:14 AM: val_data_limit = 5000
09/16 08:35:14 AM: max_epochs = -1
09/16 08:35:14 AM: dec_val_scale = 250
09/16 08:35:14 AM: training_data_fraction = 1
09/16 08:35:14 AM: type = adam
09/16 08:35:14 AM: parameter_groups = None
09/16 08:35:14 AM: Number of trainable parameters: 661523
09/16 08:35:14 AM: infer_type_and_cast = True
09/16 08:35:14 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:14 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:14 AM: lr = 0.0001
09/16 08:35:14 AM: amsgrad = True
09/16 08:35:14 AM: type = reduce_on_plateau
09/16 08:35:14 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:14 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:14 AM: mode = max
09/16 08:35:14 AM: factor = 0.5
09/16 08:35:14 AM: patience = 3
09/16 08:35:14 AM: threshold = 0.0001
09/16 08:35:14 AM: threshold_mode = abs
09/16 08:35:14 AM: verbose = True
09/16 08:35:14 AM: type = adam
09/16 08:35:14 AM: parameter_groups = None
09/16 08:35:14 AM: Number of trainable parameters: 661523
09/16 08:35:14 AM: infer_type_and_cast = True
09/16 08:35:14 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:14 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:14 AM: lr = 0.0001
09/16 08:35:14 AM: amsgrad = True
09/16 08:35:14 AM: type = reduce_on_plateau
09/16 08:35:14 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:35:14 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:35:14 AM: mode = max
09/16 08:35:14 AM: factor = 0.5
09/16 08:35:14 AM: patience = 3
09/16 08:35:14 AM: threshold = 0.0001
09/16 08:35:14 AM: threshold_mode = abs
09/16 08:35:14 AM: verbose = True
09/16 08:35:14 AM: Starting training without restoring from a checkpoint.
09/16 08:35:14 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 08:35:14 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 08:35:17 AM: ***** Step 100 / Validation 1 *****
09/16 08:35:17 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:17 AM: Validating...
09/16 08:35:17 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:17 AM: Best result seen so far for micro.
09/16 08:35:17 AM: Best result seen so far for macro.
09/16 08:35:17 AM: Updating LR scheduler:
09/16 08:35:17 AM: 	Best result seen so far for macro_avg: 0.000
09/16 08:35:17 AM: 	# validation passes without improvement: 0
09/16 08:35:17 AM: edges-rel-semeval_loss: training: 0.283220 validation: 0.187433
09/16 08:35:17 AM: macro_avg: validation: 0.000000
09/16 08:35:17 AM: micro_avg: validation: 0.000000
09/16 08:35:17 AM: edges-rel-semeval_mcc: training: 0.009325 validation: 0.000000
09/16 08:35:17 AM: edges-rel-semeval_acc: training: 0.005361 validation: 0.000000
09/16 08:35:17 AM: edges-rel-semeval_precision: training: 0.062625 validation: 0.000000
09/16 08:35:17 AM: edges-rel-semeval_recall: training: 0.049511 validation: 0.000000
09/16 08:35:17 AM: edges-rel-semeval_f1: training: 0.055301 validation: 0.000000
09/16 08:35:17 AM: Global learning rate: 0.0001
09/16 08:35:17 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:35:19 AM: ***** Step 200 / Validation 2 *****
09/16 08:35:19 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:19 AM: Validating...
09/16 08:35:19 AM: Updating LR scheduler:
09/16 08:35:19 AM: 	Best result seen so far for macro_avg: 0.000
09/16 08:35:19 AM: 	# validation passes without improvement: 1
09/16 08:35:19 AM: edges-rel-semeval_loss: training: 0.186133 validation: 0.174140
09/16 08:35:19 AM: macro_avg: validation: 0.000000
09/16 08:35:19 AM: micro_avg: validation: 0.000000
09/16 08:35:19 AM: edges-rel-semeval_mcc: training: 0.011201 validation: 0.000000
09/16 08:35:19 AM: edges-rel-semeval_acc: training: 0.000625 validation: 0.000000
09/16 08:35:19 AM: edges-rel-semeval_precision: training: 0.285714 validation: 0.000000
09/16 08:35:19 AM: edges-rel-semeval_recall: training: 0.000625 validation: 0.000000
09/16 08:35:19 AM: edges-rel-semeval_f1: training: 0.001247 validation: 0.000000
09/16 08:35:19 AM: Global learning rate: 0.0001
09/16 08:35:19 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:35:22 AM: ***** Step 300 / Validation 3 *****
09/16 08:35:22 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:22 AM: Validating...
09/16 08:35:22 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:22 AM: Best result seen so far for macro.
09/16 08:35:22 AM: Updating LR scheduler:
09/16 08:35:22 AM: 	Best result seen so far for macro_avg: 0.049
09/16 08:35:22 AM: 	# validation passes without improvement: 0
09/16 08:35:22 AM: edges-rel-semeval_loss: training: 0.170701 validation: 0.158681
09/16 08:35:22 AM: macro_avg: validation: 0.049111
09/16 08:35:22 AM: micro_avg: validation: 0.000000
09/16 08:35:22 AM: edges-rel-semeval_mcc: training: 0.089457 validation: 0.146466
09/16 08:35:22 AM: edges-rel-semeval_acc: training: 0.012299 validation: 0.025239
09/16 08:35:22 AM: edges-rel-semeval_precision: training: 0.701754 validation: 0.906250
09/16 08:35:22 AM: edges-rel-semeval_recall: training: 0.012614 validation: 0.025239
09/16 08:35:22 AM: edges-rel-semeval_f1: training: 0.024783 validation: 0.049111
09/16 08:35:22 AM: Global learning rate: 0.0001
09/16 08:35:22 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:35:24 AM: Update 388: task edges-rel-semeval, batch 88 (388): mcc: 0.2310, acc: 0.0724, precision: 0.7729, recall: 0.0749, f1: 0.1366, edges-rel-semeval_loss: 0.1545
09/16 08:35:24 AM: ***** Step 400 / Validation 4 *****
09/16 08:35:24 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:24 AM: Validating...
09/16 08:35:25 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:25 AM: Best result seen so far for macro.
09/16 08:35:25 AM: Updating LR scheduler:
09/16 08:35:25 AM: 	Best result seen so far for macro_avg: 0.130
09/16 08:35:25 AM: 	# validation passes without improvement: 0
09/16 08:35:25 AM: edges-rel-semeval_loss: training: 0.154140 validation: 0.145581
09/16 08:35:25 AM: macro_avg: validation: 0.130016
09/16 08:35:25 AM: micro_avg: validation: 0.000000
09/16 08:35:25 AM: edges-rel-semeval_mcc: training: 0.234847 validation: 0.234085
09/16 08:35:25 AM: edges-rel-semeval_acc: training: 0.075938 validation: 0.070496
09/16 08:35:25 AM: edges-rel-semeval_precision: training: 0.766871 validation: 0.835052
09/16 08:35:25 AM: edges-rel-semeval_recall: training: 0.078125 validation: 0.070496
09/16 08:35:25 AM: edges-rel-semeval_f1: training: 0.141804 validation: 0.130016
09/16 08:35:25 AM: Global learning rate: 0.0001
09/16 08:35:25 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:35:27 AM: ***** Step 500 / Validation 5 *****
09/16 08:35:27 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:27 AM: Validating...
09/16 08:35:28 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:28 AM: Best result seen so far for macro.
09/16 08:35:28 AM: Updating LR scheduler:
09/16 08:35:28 AM: 	Best result seen so far for macro_avg: 0.203
09/16 08:35:28 AM: 	# validation passes without improvement: 0
09/16 08:35:28 AM: edges-rel-semeval_loss: training: 0.143628 validation: 0.136948
09/16 08:35:28 AM: macro_avg: validation: 0.203209
09/16 08:35:28 AM: micro_avg: validation: 0.000000
09/16 08:35:28 AM: edges-rel-semeval_mcc: training: 0.302521 validation: 0.299614
09/16 08:35:28 AM: edges-rel-semeval_acc: training: 0.125512 validation: 0.114883
09/16 08:35:28 AM: edges-rel-semeval_precision: training: 0.762963 validation: 0.831250
09/16 08:35:28 AM: edges-rel-semeval_recall: training: 0.129927 validation: 0.115753
09/16 08:35:28 AM: edges-rel-semeval_f1: training: 0.222043 validation: 0.203209
09/16 08:35:28 AM: Global learning rate: 0.0001
09/16 08:35:28 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:35:30 AM: ***** Step 600 / Validation 6 *****
09/16 08:35:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:30 AM: Validating...
09/16 08:35:30 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:30 AM: Best result seen so far for macro.
09/16 08:35:30 AM: Updating LR scheduler:
09/16 08:35:30 AM: 	Best result seen so far for macro_avg: 0.269
09/16 08:35:30 AM: 	# validation passes without improvement: 0
09/16 08:35:30 AM: edges-rel-semeval_loss: training: 0.134409 validation: 0.130474
09/16 08:35:30 AM: macro_avg: validation: 0.269287
09/16 08:35:30 AM: micro_avg: validation: 0.000000
09/16 08:35:30 AM: edges-rel-semeval_mcc: training: 0.362575 validation: 0.351707
09/16 08:35:30 AM: edges-rel-semeval_acc: training: 0.183750 validation: 0.156658
09/16 08:35:30 AM: edges-rel-semeval_precision: training: 0.749383 validation: 0.822222
09/16 08:35:30 AM: edges-rel-semeval_recall: training: 0.189688 validation: 0.161010
09/16 08:35:30 AM: edges-rel-semeval_f1: training: 0.302743 validation: 0.269287
09/16 08:35:30 AM: Global learning rate: 0.0001
09/16 08:35:30 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:35:33 AM: ***** Step 700 / Validation 7 *****
09/16 08:35:33 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:33 AM: Validating...
09/16 08:35:33 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:33 AM: Best result seen so far for macro.
09/16 08:35:33 AM: Updating LR scheduler:
09/16 08:35:33 AM: 	Best result seen so far for macro_avg: 0.325
09/16 08:35:33 AM: 	# validation passes without improvement: 0
09/16 08:35:33 AM: edges-rel-semeval_loss: training: 0.125174 validation: 0.126264
09/16 08:35:33 AM: macro_avg: validation: 0.324965
09/16 08:35:33 AM: micro_avg: validation: 0.000000
09/16 08:35:33 AM: edges-rel-semeval_mcc: training: 0.415192 validation: 0.393974
09/16 08:35:33 AM: edges-rel-semeval_acc: training: 0.230527 validation: 0.200174
09/16 08:35:33 AM: edges-rel-semeval_precision: training: 0.771023 validation: 0.817544
09/16 08:35:33 AM: edges-rel-semeval_recall: training: 0.239987 validation: 0.202785
09/16 08:35:33 AM: edges-rel-semeval_f1: training: 0.366041 validation: 0.324965
09/16 08:35:33 AM: Global learning rate: 0.0001
09/16 08:35:33 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:35:34 AM: Update 743: task edges-rel-semeval, batch 43 (743): mcc: 0.4728, acc: 0.2827, precision: 0.8004, recall: 0.2972, f1: 0.4335, edges-rel-semeval_loss: 0.1204
09/16 08:35:35 AM: ***** Step 800 / Validation 8 *****
09/16 08:35:35 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:35 AM: Validating...
09/16 08:35:35 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:35 AM: Best result seen so far for macro.
09/16 08:35:35 AM: Updating LR scheduler:
09/16 08:35:35 AM: 	Best result seen so far for macro_avg: 0.373
09/16 08:35:35 AM: 	# validation passes without improvement: 0
09/16 08:35:35 AM: edges-rel-semeval_loss: training: 0.121102 validation: 0.121961
09/16 08:35:35 AM: macro_avg: validation: 0.373064
09/16 08:35:35 AM: micro_avg: validation: 0.000000
09/16 08:35:35 AM: edges-rel-semeval_mcc: training: 0.455694 validation: 0.432124
09/16 08:35:35 AM: edges-rel-semeval_acc: training: 0.268437 validation: 0.240209
09/16 08:35:35 AM: edges-rel-semeval_precision: training: 0.782571 validation: 0.824405
09/16 08:35:35 AM: edges-rel-semeval_recall: training: 0.283437 validation: 0.241079
09/16 08:35:35 AM: edges-rel-semeval_f1: training: 0.416150 validation: 0.373064
09/16 08:35:35 AM: Global learning rate: 0.0001
09/16 08:35:35 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:35:38 AM: ***** Step 900 / Validation 9 *****
09/16 08:35:38 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:38 AM: Validating...
09/16 08:35:39 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:39 AM: Best result seen so far for macro.
09/16 08:35:39 AM: Updating LR scheduler:
09/16 08:35:39 AM: 	Best result seen so far for macro_avg: 0.390
09/16 08:35:39 AM: 	# validation passes without improvement: 0
09/16 08:35:39 AM: edges-rel-semeval_loss: training: 0.115170 validation: 0.120247
09/16 08:35:39 AM: macro_avg: validation: 0.389508
09/16 08:35:39 AM: micro_avg: validation: 0.000000
09/16 08:35:39 AM: edges-rel-semeval_mcc: training: 0.464020 validation: 0.437088
09/16 08:35:39 AM: edges-rel-semeval_acc: training: 0.284768 validation: 0.254134
09/16 08:35:39 AM: edges-rel-semeval_precision: training: 0.764189 validation: 0.789894
09/16 08:35:39 AM: edges-rel-semeval_recall: training: 0.301482 validation: 0.258486
09/16 08:35:39 AM: edges-rel-semeval_f1: training: 0.432384 validation: 0.389508
09/16 08:35:39 AM: Global learning rate: 0.0001
09/16 08:35:39 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:35:40 AM: ***** Step 1000 / Validation 10 *****
09/16 08:35:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:40 AM: Validating...
09/16 08:35:41 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:41 AM: Best result seen so far for macro.
09/16 08:35:41 AM: Updating LR scheduler:
09/16 08:35:41 AM: 	Best result seen so far for macro_avg: 0.410
09/16 08:35:41 AM: 	# validation passes without improvement: 0
09/16 08:35:41 AM: edges-rel-semeval_loss: training: 0.109042 validation: 0.118581
09/16 08:35:41 AM: macro_avg: validation: 0.410323
09/16 08:35:41 AM: micro_avg: validation: 0.000000
09/16 08:35:41 AM: edges-rel-semeval_mcc: training: 0.521890 validation: 0.453562
09/16 08:35:41 AM: edges-rel-semeval_acc: training: 0.336875 validation: 0.272411
09/16 08:35:41 AM: edges-rel-semeval_precision: training: 0.806770 validation: 0.793017
09/16 08:35:41 AM: edges-rel-semeval_recall: training: 0.357500 validation: 0.276762
09/16 08:35:41 AM: edges-rel-semeval_f1: training: 0.495453 validation: 0.410323
09/16 08:35:41 AM: Global learning rate: 0.0001
09/16 08:35:41 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:35:43 AM: ***** Step 1100 / Validation 11 *****
09/16 08:35:43 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:43 AM: Validating...
09/16 08:35:44 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:44 AM: Best result seen so far for macro.
09/16 08:35:44 AM: Updating LR scheduler:
09/16 08:35:44 AM: 	Best result seen so far for macro_avg: 0.451
09/16 08:35:44 AM: 	# validation passes without improvement: 0
09/16 08:35:44 AM: edges-rel-semeval_loss: training: 0.107130 validation: 0.116511
09/16 08:35:44 AM: macro_avg: validation: 0.451137
09/16 08:35:44 AM: micro_avg: validation: 0.000000
09/16 08:35:44 AM: edges-rel-semeval_mcc: training: 0.522529 validation: 0.479181
09/16 08:35:44 AM: edges-rel-semeval_acc: training: 0.352570 validation: 0.308094
09/16 08:35:44 AM: edges-rel-semeval_precision: training: 0.778144 validation: 0.767782
09/16 08:35:44 AM: edges-rel-semeval_recall: training: 0.372753 validation: 0.319408
09/16 08:35:44 AM: edges-rel-semeval_f1: training: 0.504051 validation: 0.451137
09/16 08:35:44 AM: Global learning rate: 0.0001
09/16 08:35:44 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:35:44 AM: Update 1115: task edges-rel-semeval, batch 15 (1115): mcc: 0.6020, acc: 0.4375, precision: 0.8327, recall: 0.4563, f1: 0.5895, edges-rel-semeval_loss: 0.0975
09/16 08:35:46 AM: ***** Step 1200 / Validation 12 *****
09/16 08:35:46 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:46 AM: Validating...
09/16 08:35:46 AM: Updating LR scheduler:
09/16 08:35:46 AM: 	Best result seen so far for macro_avg: 0.451
09/16 08:35:46 AM: 	# validation passes without improvement: 1
09/16 08:35:46 AM: edges-rel-semeval_loss: training: 0.102397 validation: 0.115972
09/16 08:35:46 AM: macro_avg: validation: 0.440101
09/16 08:35:46 AM: micro_avg: validation: 0.000000
09/16 08:35:46 AM: edges-rel-semeval_mcc: training: 0.557835 validation: 0.477472
09/16 08:35:46 AM: edges-rel-semeval_acc: training: 0.381563 validation: 0.295909
09/16 08:35:46 AM: edges-rel-semeval_precision: training: 0.798666 validation: 0.798627
09/16 08:35:46 AM: edges-rel-semeval_recall: training: 0.411563 validation: 0.303742
09/16 08:35:46 AM: edges-rel-semeval_f1: training: 0.543205 validation: 0.440101
09/16 08:35:46 AM: Global learning rate: 0.0001
09/16 08:35:46 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:35:49 AM: ***** Step 1300 / Validation 13 *****
09/16 08:35:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:49 AM: Validating...
09/16 08:35:49 AM: Updating LR scheduler:
09/16 08:35:49 AM: 	Best result seen so far for macro_avg: 0.451
09/16 08:35:49 AM: 	# validation passes without improvement: 2
09/16 08:35:49 AM: edges-rel-semeval_loss: training: 0.099686 validation: 0.114834
09/16 08:35:49 AM: macro_avg: validation: 0.447930
09/16 08:35:49 AM: micro_avg: validation: 0.000000
09/16 08:35:49 AM: edges-rel-semeval_mcc: training: 0.555487 validation: 0.484252
09/16 08:35:49 AM: edges-rel-semeval_acc: training: 0.385052 validation: 0.301131
09/16 08:35:49 AM: edges-rel-semeval_precision: training: 0.785459 validation: 0.802247
09/16 08:35:49 AM: edges-rel-semeval_recall: training: 0.415642 validation: 0.310705
09/16 08:35:49 AM: edges-rel-semeval_f1: training: 0.543617 validation: 0.447930
09/16 08:35:49 AM: Global learning rate: 0.0001
09/16 08:35:49 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:35:52 AM: ***** Step 1400 / Validation 14 *****
09/16 08:35:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:52 AM: Validating...
09/16 08:35:52 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:52 AM: Best result seen so far for macro.
09/16 08:35:52 AM: Updating LR scheduler:
09/16 08:35:52 AM: 	Best result seen so far for macro_avg: 0.470
09/16 08:35:52 AM: 	# validation passes without improvement: 0
09/16 08:35:52 AM: edges-rel-semeval_loss: training: 0.095323 validation: 0.114035
09/16 08:35:52 AM: macro_avg: validation: 0.469807
09/16 08:35:52 AM: micro_avg: validation: 0.000000
09/16 08:35:52 AM: edges-rel-semeval_mcc: training: 0.588328 validation: 0.493476
09/16 08:35:52 AM: edges-rel-semeval_acc: training: 0.416250 validation: 0.328111
09/16 08:35:52 AM: edges-rel-semeval_precision: training: 0.811299 validation: 0.767258
09/16 08:35:52 AM: edges-rel-semeval_recall: training: 0.448750 validation: 0.338555
09/16 08:35:52 AM: edges-rel-semeval_f1: training: 0.577867 validation: 0.469807
09/16 08:35:52 AM: Global learning rate: 0.0001
09/16 08:35:52 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:35:54 AM: Update 1479: task edges-rel-semeval, batch 79 (1479): mcc: 0.5795, acc: 0.4185, precision: 0.7970, recall: 0.4442, f1: 0.5705, edges-rel-semeval_loss: 0.0969
09/16 08:35:55 AM: ***** Step 1500 / Validation 15 *****
09/16 08:35:55 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:55 AM: Validating...
09/16 08:35:55 AM: Best result seen so far for edges-rel-semeval.
09/16 08:35:55 AM: Best result seen so far for macro.
09/16 08:35:55 AM: Updating LR scheduler:
09/16 08:35:55 AM: 	Best result seen so far for macro_avg: 0.471
09/16 08:35:55 AM: 	# validation passes without improvement: 0
09/16 08:35:55 AM: edges-rel-semeval_loss: training: 0.097341 validation: 0.113128
09/16 08:35:55 AM: macro_avg: validation: 0.471236
09/16 08:35:55 AM: micro_avg: validation: 0.000000
09/16 08:35:55 AM: edges-rel-semeval_mcc: training: 0.578802 validation: 0.500329
09/16 08:35:55 AM: edges-rel-semeval_acc: training: 0.417500 validation: 0.325500
09/16 08:35:55 AM: edges-rel-semeval_precision: training: 0.793430 validation: 0.793814
09/16 08:35:55 AM: edges-rel-semeval_recall: training: 0.445312 validation: 0.335074
09/16 08:35:55 AM: edges-rel-semeval_f1: training: 0.570456 validation: 0.471236
09/16 08:35:55 AM: Global learning rate: 0.0001
09/16 08:35:55 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:35:59 AM: ***** Step 1600 / Validation 16 *****
09/16 08:35:59 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:35:59 AM: Validating...
09/16 08:36:00 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:00 AM: Best result seen so far for macro.
09/16 08:36:00 AM: Updating LR scheduler:
09/16 08:36:00 AM: 	Best result seen so far for macro_avg: 0.490
09/16 08:36:00 AM: 	# validation passes without improvement: 0
09/16 08:36:00 AM: edges-rel-semeval_loss: training: 0.089241 validation: 0.113013
09/16 08:36:00 AM: macro_avg: validation: 0.489724
09/16 08:36:00 AM: micro_avg: validation: 0.000000
09/16 08:36:00 AM: edges-rel-semeval_mcc: training: 0.610128 validation: 0.505897
09/16 08:36:00 AM: edges-rel-semeval_acc: training: 0.441501 validation: 0.350740
09/16 08:36:00 AM: edges-rel-semeval_precision: training: 0.816810 validation: 0.752708
09/16 08:36:00 AM: edges-rel-semeval_recall: training: 0.478083 validation: 0.362924
09/16 08:36:00 AM: edges-rel-semeval_f1: training: 0.603143 validation: 0.489724
09/16 08:36:00 AM: Global learning rate: 0.0001
09/16 08:36:00 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:02 AM: ***** Step 1700 / Validation 17 *****
09/16 08:36:02 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:02 AM: Validating...
09/16 08:36:02 AM: Updating LR scheduler:
09/16 08:36:02 AM: 	Best result seen so far for macro_avg: 0.490
09/16 08:36:02 AM: 	# validation passes without improvement: 1
09/16 08:36:02 AM: edges-rel-semeval_loss: training: 0.091763 validation: 0.113946
09/16 08:36:02 AM: macro_avg: validation: 0.470874
09/16 08:36:02 AM: micro_avg: validation: 0.000000
09/16 08:36:02 AM: edges-rel-semeval_mcc: training: 0.611656 validation: 0.496528
09/16 08:36:02 AM: edges-rel-semeval_acc: training: 0.460313 validation: 0.328111
09/16 08:36:02 AM: edges-rel-semeval_precision: training: 0.802355 validation: 0.777555
09/16 08:36:02 AM: edges-rel-semeval_recall: training: 0.489688 validation: 0.337685
09/16 08:36:02 AM: edges-rel-semeval_f1: training: 0.608189 validation: 0.470874
09/16 08:36:02 AM: Global learning rate: 0.0001
09/16 08:36:02 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:04 AM: Update 1752: task edges-rel-semeval, batch 52 (1752): mcc: 0.6374, acc: 0.4826, precision: 0.8247, recall: 0.5150, f1: 0.6340, edges-rel-semeval_loss: 0.0872
09/16 08:36:05 AM: ***** Step 1800 / Validation 18 *****
09/16 08:36:05 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:05 AM: Validating...
09/16 08:36:06 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:06 AM: Best result seen so far for macro.
09/16 08:36:06 AM: Updating LR scheduler:
09/16 08:36:06 AM: 	Best result seen so far for macro_avg: 0.491
09/16 08:36:06 AM: 	# validation passes without improvement: 0
09/16 08:36:06 AM: edges-rel-semeval_loss: training: 0.086219 validation: 0.113379
09/16 08:36:06 AM: macro_avg: validation: 0.491004
09/16 08:36:06 AM: micro_avg: validation: 0.000000
09/16 08:36:06 AM: edges-rel-semeval_mcc: training: 0.640342 validation: 0.503582
09/16 08:36:06 AM: edges-rel-semeval_acc: training: 0.485967 validation: 0.356832
09/16 08:36:06 AM: edges-rel-semeval_precision: training: 0.824088 validation: 0.736934
09/16 08:36:06 AM: edges-rel-semeval_recall: training: 0.520025 validation: 0.368146
09/16 08:36:06 AM: edges-rel-semeval_f1: training: 0.637664 validation: 0.491004
09/16 08:36:06 AM: Global learning rate: 0.0001
09/16 08:36:06 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:08 AM: ***** Step 1900 / Validation 19 *****
09/16 08:36:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:08 AM: Validating...
09/16 08:36:08 AM: Updating LR scheduler:
09/16 08:36:08 AM: 	Best result seen so far for macro_avg: 0.491
09/16 08:36:08 AM: 	# validation passes without improvement: 1
09/16 08:36:08 AM: edges-rel-semeval_loss: training: 0.087827 validation: 0.113329
09/16 08:36:08 AM: macro_avg: validation: 0.479092
09/16 08:36:08 AM: micro_avg: validation: 0.000000
09/16 08:36:08 AM: edges-rel-semeval_mcc: training: 0.621420 validation: 0.499947
09/16 08:36:08 AM: edges-rel-semeval_acc: training: 0.465313 validation: 0.340296
09/16 08:36:08 AM: edges-rel-semeval_precision: training: 0.793975 validation: 0.763810
09/16 08:36:08 AM: edges-rel-semeval_recall: training: 0.510625 validation: 0.348999
09/16 08:36:08 AM: edges-rel-semeval_f1: training: 0.621529 validation: 0.479092
09/16 08:36:08 AM: Global learning rate: 0.0001
09/16 08:36:08 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:11 AM: ***** Step 2000 / Validation 20 *****
09/16 08:36:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:11 AM: Validating...
09/16 08:36:12 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:12 AM: Best result seen so far for macro.
09/16 08:36:12 AM: Updating LR scheduler:
09/16 08:36:12 AM: 	Best result seen so far for macro_avg: 0.494
09/16 08:36:12 AM: 	# validation passes without improvement: 0
09/16 08:36:12 AM: edges-rel-semeval_loss: training: 0.082118 validation: 0.113852
09/16 08:36:12 AM: macro_avg: validation: 0.494474
09/16 08:36:12 AM: micro_avg: validation: 0.000000
09/16 08:36:12 AM: edges-rel-semeval_mcc: training: 0.662041 validation: 0.508142
09/16 08:36:12 AM: edges-rel-semeval_acc: training: 0.509303 validation: 0.355091
09/16 08:36:12 AM: edges-rel-semeval_precision: training: 0.842906 validation: 0.745614
09/16 08:36:12 AM: edges-rel-semeval_recall: training: 0.541470 validation: 0.369887
09/16 08:36:12 AM: edges-rel-semeval_f1: training: 0.659370 validation: 0.494474
09/16 08:36:12 AM: Global learning rate: 0.0001
09/16 08:36:12 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:14 AM: ***** Step 2100 / Validation 21 *****
09/16 08:36:14 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:14 AM: Validating...
09/16 08:36:14 AM: Evaluate: task edges-rel-semeval, batch 16 (36): mcc: 0.5475, acc: 0.3887, precision: 0.7992, recall: 0.3965, f1: 0.5300, edges-rel-semeval_loss: 0.1089
09/16 08:36:15 AM: Updating LR scheduler:
09/16 08:36:15 AM: 	Best result seen so far for macro_avg: 0.494
09/16 08:36:15 AM: 	# validation passes without improvement: 1
09/16 08:36:15 AM: edges-rel-semeval_loss: training: 0.082872 validation: 0.114142
09/16 08:36:15 AM: macro_avg: validation: 0.483871
09/16 08:36:15 AM: micro_avg: validation: 0.000000
09/16 08:36:15 AM: edges-rel-semeval_mcc: training: 0.647605 validation: 0.505303
09/16 08:36:15 AM: edges-rel-semeval_acc: training: 0.499688 validation: 0.345518
09/16 08:36:15 AM: edges-rel-semeval_precision: training: 0.805735 validation: 0.771429
09/16 08:36:15 AM: edges-rel-semeval_recall: training: 0.544375 validation: 0.352480
09/16 08:36:15 AM: edges-rel-semeval_f1: training: 0.649758 validation: 0.483871
09/16 08:36:15 AM: Global learning rate: 0.0001
09/16 08:36:15 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:17 AM: ***** Step 2200 / Validation 22 *****
09/16 08:36:17 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:17 AM: Validating...
09/16 08:36:18 AM: Updating LR scheduler:
09/16 08:36:18 AM: 	Best result seen so far for macro_avg: 0.494
09/16 08:36:18 AM: 	# validation passes without improvement: 2
09/16 08:36:18 AM: edges-rel-semeval_loss: training: 0.080401 validation: 0.114151
09/16 08:36:18 AM: macro_avg: validation: 0.493310
09/16 08:36:18 AM: micro_avg: validation: 0.000000
09/16 08:36:18 AM: edges-rel-semeval_mcc: training: 0.652669 validation: 0.506856
09/16 08:36:18 AM: edges-rel-semeval_acc: training: 0.505519 validation: 0.353351
09/16 08:36:18 AM: edges-rel-semeval_precision: training: 0.810233 validation: 0.743860
09/16 08:36:18 AM: edges-rel-semeval_recall: training: 0.549354 validation: 0.369017
09/16 08:36:18 AM: edges-rel-semeval_f1: training: 0.654764 validation: 0.493310
09/16 08:36:18 AM: Global learning rate: 0.0001
09/16 08:36:18 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:20 AM: ***** Step 2300 / Validation 23 *****
09/16 08:36:20 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:20 AM: Validating...
09/16 08:36:20 AM: Updating LR scheduler:
09/16 08:36:20 AM: 	Best result seen so far for macro_avg: 0.494
09/16 08:36:20 AM: 	# validation passes without improvement: 3
09/16 08:36:20 AM: edges-rel-semeval_loss: training: 0.079876 validation: 0.115391
09/16 08:36:20 AM: macro_avg: validation: 0.494186
09/16 08:36:20 AM: micro_avg: validation: 0.000000
09/16 08:36:20 AM: edges-rel-semeval_mcc: training: 0.658555 validation: 0.507641
09/16 08:36:20 AM: edges-rel-semeval_acc: training: 0.507500 validation: 0.356832
09/16 08:36:20 AM: edges-rel-semeval_precision: training: 0.816092 validation: 0.744308
09/16 08:36:20 AM: edges-rel-semeval_recall: training: 0.554688 validation: 0.369887
09/16 08:36:20 AM: edges-rel-semeval_f1: training: 0.660465 validation: 0.494186
09/16 08:36:20 AM: Global learning rate: 0.0001
09/16 08:36:20 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:24 AM: ***** Step 2400 / Validation 24 *****
09/16 08:36:24 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:24 AM: Validating...
09/16 08:36:24 AM: Evaluate: task edges-rel-semeval, batch 24 (36): mcc: 0.5289, acc: 0.3750, precision: 0.7807, recall: 0.3802, f1: 0.5114, edges-rel-semeval_loss: 0.1121
09/16 08:36:24 AM: Updating LR scheduler:
09/16 08:36:24 AM: 	Best result seen so far for macro_avg: 0.494
09/16 08:36:24 AM: 	# validation passes without improvement: 0
09/16 08:36:24 AM: edges-rel-semeval_loss: training: 0.076326 validation: 0.114740
09/16 08:36:24 AM: macro_avg: validation: 0.492380
09/16 08:36:24 AM: micro_avg: validation: 0.000000
09/16 08:36:24 AM: edges-rel-semeval_mcc: training: 0.678070 validation: 0.508266
09/16 08:36:24 AM: edges-rel-semeval_acc: training: 0.531693 validation: 0.354221
09/16 08:36:24 AM: edges-rel-semeval_precision: training: 0.823503 validation: 0.754040
09/16 08:36:24 AM: edges-rel-semeval_recall: training: 0.581205 validation: 0.365535
09/16 08:36:24 AM: edges-rel-semeval_f1: training: 0.681457 validation: 0.492380
09/16 08:36:24 AM: Global learning rate: 5e-05
09/16 08:36:24 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:27 AM: ***** Step 2500 / Validation 25 *****
09/16 08:36:27 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:27 AM: Validating...
09/16 08:36:27 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:27 AM: Best result seen so far for macro.
09/16 08:36:27 AM: Updating LR scheduler:
09/16 08:36:27 AM: 	Best result seen so far for macro_avg: 0.506
09/16 08:36:27 AM: 	# validation passes without improvement: 0
09/16 08:36:27 AM: edges-rel-semeval_loss: training: 0.075067 validation: 0.113674
09/16 08:36:27 AM: macro_avg: validation: 0.505774
09/16 08:36:27 AM: micro_avg: validation: 0.000000
09/16 08:36:27 AM: edges-rel-semeval_mcc: training: 0.686220 validation: 0.518269
09/16 08:36:27 AM: edges-rel-semeval_acc: training: 0.545312 validation: 0.368146
09/16 08:36:27 AM: edges-rel-semeval_precision: training: 0.831421 validation: 0.751286
09/16 08:36:27 AM: edges-rel-semeval_recall: training: 0.588750 validation: 0.381201
09/16 08:36:27 AM: edges-rel-semeval_f1: training: 0.689352 validation: 0.505774
09/16 08:36:27 AM: Global learning rate: 5e-05
09/16 08:36:27 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:30 AM: ***** Step 2600 / Validation 26 *****
09/16 08:36:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:30 AM: Validating...
09/16 08:36:30 AM: Updating LR scheduler:
09/16 08:36:30 AM: 	Best result seen so far for macro_avg: 0.506
09/16 08:36:30 AM: 	# validation passes without improvement: 1
09/16 08:36:30 AM: edges-rel-semeval_loss: training: 0.075278 validation: 0.115039
09/16 08:36:30 AM: macro_avg: validation: 0.501448
09/16 08:36:30 AM: micro_avg: validation: 0.000000
09/16 08:36:30 AM: edges-rel-semeval_mcc: training: 0.686347 validation: 0.514392
09/16 08:36:30 AM: edges-rel-semeval_acc: training: 0.539893 validation: 0.364665
09/16 08:36:30 AM: edges-rel-semeval_precision: training: 0.827891 validation: 0.749135
09/16 08:36:30 AM: edges-rel-semeval_recall: training: 0.591612 validation: 0.376849
09/16 08:36:30 AM: edges-rel-semeval_f1: training: 0.690086 validation: 0.501448
09/16 08:36:30 AM: Global learning rate: 5e-05
09/16 08:36:30 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:32 AM: ***** Step 2700 / Validation 27 *****
09/16 08:36:32 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:32 AM: Validating...
09/16 08:36:33 AM: Updating LR scheduler:
09/16 08:36:33 AM: 	Best result seen so far for macro_avg: 0.506
09/16 08:36:33 AM: 	# validation passes without improvement: 2
09/16 08:36:33 AM: edges-rel-semeval_loss: training: 0.072285 validation: 0.114521
09/16 08:36:33 AM: macro_avg: validation: 0.505774
09/16 08:36:33 AM: micro_avg: validation: 0.000000
09/16 08:36:33 AM: edges-rel-semeval_mcc: training: 0.702821 validation: 0.518269
09/16 08:36:33 AM: edges-rel-semeval_acc: training: 0.560000 validation: 0.368146
09/16 08:36:33 AM: edges-rel-semeval_precision: training: 0.849714 validation: 0.751286
09/16 08:36:33 AM: edges-rel-semeval_recall: training: 0.602500 validation: 0.381201
09/16 08:36:33 AM: edges-rel-semeval_f1: training: 0.705065 validation: 0.505774
09/16 08:36:33 AM: Global learning rate: 5e-05
09/16 08:36:33 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:34 AM: Update 2772: task edges-rel-semeval, batch 72 (2772): mcc: 0.6916, acc: 0.5490, precision: 0.8332, recall: 0.5964, f1: 0.6952, edges-rel-semeval_loss: 0.0743
09/16 08:36:36 AM: ***** Step 2800 / Validation 28 *****
09/16 08:36:36 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:36 AM: Validating...
09/16 08:36:36 AM: Updating LR scheduler:
09/16 08:36:36 AM: 	Best result seen so far for macro_avg: 0.506
09/16 08:36:36 AM: 	# validation passes without improvement: 3
09/16 08:36:36 AM: edges-rel-semeval_loss: training: 0.073749 validation: 0.115103
09/16 08:36:36 AM: macro_avg: validation: 0.492853
09/16 08:36:36 AM: micro_avg: validation: 0.000000
09/16 08:36:36 AM: edges-rel-semeval_mcc: training: 0.686494 validation: 0.501173
09/16 08:36:36 AM: edges-rel-semeval_acc: training: 0.541154 validation: 0.357702
09/16 08:36:36 AM: edges-rel-semeval_precision: training: 0.831996 validation: 0.718333
09/16 08:36:36 AM: edges-rel-semeval_recall: training: 0.588773 validation: 0.375109
09/16 08:36:36 AM: edges-rel-semeval_f1: training: 0.689566 validation: 0.492853
09/16 08:36:36 AM: Global learning rate: 5e-05
09/16 08:36:36 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:38 AM: ***** Step 2900 / Validation 29 *****
09/16 08:36:38 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:38 AM: Validating...
09/16 08:36:38 AM: Updating LR scheduler:
09/16 08:36:38 AM: 	Best result seen so far for macro_avg: 0.506
09/16 08:36:38 AM: 	# validation passes without improvement: 0
09/16 08:36:38 AM: edges-rel-semeval_loss: training: 0.070327 validation: 0.115390
09/16 08:36:38 AM: macro_avg: validation: 0.504865
09/16 08:36:38 AM: micro_avg: validation: 0.000000
09/16 08:36:38 AM: edges-rel-semeval_mcc: training: 0.714139 validation: 0.514687
09/16 08:36:38 AM: edges-rel-semeval_acc: training: 0.577812 validation: 0.369887
09/16 08:36:38 AM: edges-rel-semeval_precision: training: 0.848976 validation: 0.737458
09/16 08:36:38 AM: edges-rel-semeval_recall: training: 0.621875 validation: 0.383812
09/16 08:36:38 AM: edges-rel-semeval_f1: training: 0.717893 validation: 0.504865
09/16 08:36:38 AM: Global learning rate: 2.5e-05
09/16 08:36:38 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:41 AM: ***** Step 3000 / Validation 30 *****
09/16 08:36:41 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:41 AM: Validating...
09/16 08:36:41 AM: Best result seen so far for edges-rel-semeval.
09/16 08:36:41 AM: Best result seen so far for macro.
09/16 08:36:41 AM: Updating LR scheduler:
09/16 08:36:41 AM: 	Best result seen so far for macro_avg: 0.514
09/16 08:36:41 AM: 	# validation passes without improvement: 0
09/16 08:36:41 AM: edges-rel-semeval_loss: training: 0.071114 validation: 0.114726
09/16 08:36:41 AM: macro_avg: validation: 0.514350
09/16 08:36:41 AM: micro_avg: validation: 0.000000
09/16 08:36:41 AM: edges-rel-semeval_mcc: training: 0.710556 validation: 0.520296
09/16 08:36:41 AM: edges-rel-semeval_acc: training: 0.567813 validation: 0.380331
09/16 08:36:41 AM: edges-rel-semeval_precision: training: 0.847276 validation: 0.727707
09/16 08:36:41 AM: edges-rel-semeval_recall: training: 0.617188 validation: 0.397737
09/16 08:36:41 AM: edges-rel-semeval_f1: training: 0.714157 validation: 0.514350
09/16 08:36:41 AM: Global learning rate: 2.5e-05
09/16 08:36:41 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:44 AM: ***** Step 3100 / Validation 31 *****
09/16 08:36:44 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:44 AM: Validating...
09/16 08:36:44 AM: Evaluate: task edges-rel-semeval, batch 7 (36): mcc: 0.5626, acc: 0.4152, precision: 0.7966, recall: 0.4196, f1: 0.5497, edges-rel-semeval_loss: 0.1001
09/16 08:36:45 AM: Updating LR scheduler:
09/16 08:36:45 AM: 	Best result seen so far for macro_avg: 0.514
09/16 08:36:45 AM: 	# validation passes without improvement: 1
09/16 08:36:45 AM: edges-rel-semeval_loss: training: 0.068561 validation: 0.115255
09/16 08:36:45 AM: macro_avg: validation: 0.500854
09/16 08:36:45 AM: micro_avg: validation: 0.000000
09/16 08:36:45 AM: edges-rel-semeval_mcc: training: 0.724857 validation: 0.508654
09/16 08:36:45 AM: edges-rel-semeval_acc: training: 0.585620 validation: 0.366406
09/16 08:36:45 AM: edges-rel-semeval_precision: training: 0.852680 validation: 0.723684
09/16 08:36:45 AM: edges-rel-semeval_recall: training: 0.637023 validation: 0.382942
09/16 08:36:45 AM: edges-rel-semeval_f1: training: 0.729242 validation: 0.500854
09/16 08:36:45 AM: Global learning rate: 2.5e-05
09/16 08:36:45 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:46 AM: ***** Step 3200 / Validation 32 *****
09/16 08:36:46 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:46 AM: Validating...
09/16 08:36:47 AM: Updating LR scheduler:
09/16 08:36:47 AM: 	Best result seen so far for macro_avg: 0.514
09/16 08:36:47 AM: 	# validation passes without improvement: 2
09/16 08:36:47 AM: edges-rel-semeval_loss: training: 0.068294 validation: 0.115337
09/16 08:36:47 AM: macro_avg: validation: 0.503137
09/16 08:36:47 AM: micro_avg: validation: 0.000000
09/16 08:36:47 AM: edges-rel-semeval_mcc: training: 0.719595 validation: 0.511801
09/16 08:36:47 AM: edges-rel-semeval_acc: training: 0.581875 validation: 0.367276
09/16 08:36:47 AM: edges-rel-semeval_precision: training: 0.847507 validation: 0.730132
09/16 08:36:47 AM: edges-rel-semeval_recall: training: 0.632187 validation: 0.383812
09/16 08:36:47 AM: edges-rel-semeval_f1: training: 0.724181 validation: 0.503137
09/16 08:36:47 AM: Global learning rate: 2.5e-05
09/16 08:36:47 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:49 AM: ***** Step 3300 / Validation 33 *****
09/16 08:36:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:49 AM: Validating...
09/16 08:36:50 AM: Updating LR scheduler:
09/16 08:36:50 AM: 	Best result seen so far for macro_avg: 0.514
09/16 08:36:50 AM: 	# validation passes without improvement: 3
09/16 08:36:50 AM: edges-rel-semeval_loss: training: 0.067637 validation: 0.115713
09/16 08:36:50 AM: macro_avg: validation: 0.505695
09/16 08:36:50 AM: micro_avg: validation: 0.000000
09/16 08:36:50 AM: edges-rel-semeval_mcc: training: 0.728243 validation: 0.514117
09/16 08:36:50 AM: edges-rel-semeval_acc: training: 0.591611 validation: 0.369887
09/16 08:36:50 AM: edges-rel-semeval_precision: training: 0.849958 validation: 0.731466
09/16 08:36:50 AM: edges-rel-semeval_recall: training: 0.644907 validation: 0.386423
09/16 08:36:50 AM: edges-rel-semeval_f1: training: 0.733369 validation: 0.505695
09/16 08:36:50 AM: Global learning rate: 2.5e-05
09/16 08:36:50 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:52 AM: ***** Step 3400 / Validation 34 *****
09/16 08:36:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:52 AM: Validating...
09/16 08:36:52 AM: Updating LR scheduler:
09/16 08:36:52 AM: 	Best result seen so far for macro_avg: 0.514
09/16 08:36:52 AM: 	# validation passes without improvement: 0
09/16 08:36:52 AM: edges-rel-semeval_loss: training: 0.067278 validation: 0.116048
09/16 08:36:52 AM: macro_avg: validation: 0.500862
09/16 08:36:52 AM: micro_avg: validation: 0.000000
09/16 08:36:52 AM: edges-rel-semeval_mcc: training: 0.727039 validation: 0.511299
09/16 08:36:52 AM: edges-rel-semeval_acc: training: 0.595313 validation: 0.363795
09/16 08:36:52 AM: edges-rel-semeval_precision: training: 0.856783 validation: 0.736486
09/16 08:36:52 AM: edges-rel-semeval_recall: training: 0.637500 validation: 0.379460
09/16 08:36:52 AM: edges-rel-semeval_f1: training: 0.731052 validation: 0.500862
09/16 08:36:52 AM: Global learning rate: 1.25e-05
09/16 08:36:52 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:54 AM: Update 3451: task edges-rel-semeval, batch 51 (3451): mcc: 0.7193, acc: 0.5827, precision: 0.8464, recall: 0.6326, f1: 0.7240, edges-rel-semeval_loss: 0.0679
09/16 08:36:55 AM: ***** Step 3500 / Validation 35 *****
09/16 08:36:55 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:55 AM: Validating...
09/16 08:36:55 AM: Updating LR scheduler:
09/16 08:36:55 AM: 	Best result seen so far for macro_avg: 0.514
09/16 08:36:55 AM: 	# validation passes without improvement: 1
09/16 08:36:55 AM: edges-rel-semeval_loss: training: 0.067532 validation: 0.115605
09/16 08:36:55 AM: macro_avg: validation: 0.509960
09/16 08:36:55 AM: micro_avg: validation: 0.000000
09/16 08:36:55 AM: edges-rel-semeval_mcc: training: 0.727080 validation: 0.518627
09/16 08:36:55 AM: edges-rel-semeval_acc: training: 0.590981 validation: 0.375979
09/16 08:36:55 AM: edges-rel-semeval_precision: training: 0.854254 validation: 0.736842
09/16 08:36:55 AM: edges-rel-semeval_recall: training: 0.639546 validation: 0.389904
09/16 08:36:55 AM: edges-rel-semeval_f1: training: 0.731470 validation: 0.509960
09/16 08:36:55 AM: Global learning rate: 1.25e-05
09/16 08:36:55 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:36:57 AM: ***** Step 3600 / Validation 36 *****
09/16 08:36:57 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:36:57 AM: Validating...
09/16 08:36:57 AM: Updating LR scheduler:
09/16 08:36:57 AM: 	Best result seen so far for macro_avg: 0.514
09/16 08:36:57 AM: 	# validation passes without improvement: 2
09/16 08:36:57 AM: edges-rel-semeval_loss: training: 0.067034 validation: 0.115607
09/16 08:36:57 AM: macro_avg: validation: 0.501695
09/16 08:36:57 AM: micro_avg: validation: 0.000000
09/16 08:36:57 AM: edges-rel-semeval_mcc: training: 0.730309 validation: 0.507547
09/16 08:36:57 AM: edges-rel-semeval_acc: training: 0.592500 validation: 0.369017
09/16 08:36:57 AM: edges-rel-semeval_precision: training: 0.863060 validation: 0.714976
09/16 08:36:57 AM: edges-rel-semeval_recall: training: 0.638125 validation: 0.386423
09/16 08:36:57 AM: edges-rel-semeval_f1: training: 0.733741 validation: 0.501695
09/16 08:36:57 AM: Global learning rate: 1.25e-05
09/16 08:36:57 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:37:00 AM: ***** Step 3700 / Validation 37 *****
09/16 08:37:00 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:00 AM: Validating...
09/16 08:37:00 AM: Updating LR scheduler:
09/16 08:37:00 AM: 	Best result seen so far for macro_avg: 0.514
09/16 08:37:00 AM: 	# validation passes without improvement: 3
09/16 08:37:00 AM: edges-rel-semeval_loss: training: 0.066647 validation: 0.115845
09/16 08:37:00 AM: macro_avg: validation: 0.503695
09/16 08:37:00 AM: micro_avg: validation: 0.000000
09/16 08:37:00 AM: edges-rel-semeval_mcc: training: 0.731872 validation: 0.511446
09/16 08:37:00 AM: edges-rel-semeval_acc: training: 0.600126 validation: 0.369887
09/16 08:37:00 AM: edges-rel-semeval_precision: training: 0.856545 validation: 0.726229
09/16 08:37:00 AM: edges-rel-semeval_recall: training: 0.645853 validation: 0.385553
09/16 08:37:00 AM: edges-rel-semeval_f1: training: 0.736426 validation: 0.503695
09/16 08:37:00 AM: Global learning rate: 1.25e-05
09/16 08:37:00 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:37:02 AM: ***** Step 3800 / Validation 38 *****
09/16 08:37:02 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:02 AM: Validating...
09/16 08:37:03 AM: Updating LR scheduler:
09/16 08:37:03 AM: 	Best result seen so far for macro_avg: 0.514
09/16 08:37:03 AM: 	# validation passes without improvement: 0
09/16 08:37:03 AM: edges-rel-semeval_loss: training: 0.066310 validation: 0.115960
09/16 08:37:03 AM: macro_avg: validation: 0.504843
09/16 08:37:03 AM: micro_avg: validation: 0.000000
09/16 08:37:03 AM: edges-rel-semeval_mcc: training: 0.723679 validation: 0.513346
09/16 08:37:03 AM: edges-rel-semeval_acc: training: 0.587812 validation: 0.370757
09/16 08:37:03 AM: edges-rel-semeval_precision: training: 0.844792 validation: 0.731023
09/16 08:37:03 AM: edges-rel-semeval_recall: training: 0.641250 validation: 0.385553
09/16 08:37:03 AM: edges-rel-semeval_f1: training: 0.729082 validation: 0.504843
09/16 08:37:03 AM: Global learning rate: 6.25e-06
09/16 08:37:03 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:37:05 AM: Update 3871: task edges-rel-semeval, batch 71 (3871): mcc: 0.7342, acc: 0.5992, precision: 0.8642, recall: 0.6438, f1: 0.7379, edges-rel-semeval_loss: 0.0655
09/16 08:37:05 AM: ***** Step 3900 / Validation 39 *****
09/16 08:37:05 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:05 AM: Validating...
09/16 08:37:06 AM: Updating LR scheduler:
09/16 08:37:06 AM: 	Best result seen so far for macro_avg: 0.514
09/16 08:37:06 AM: 	# validation passes without improvement: 1
09/16 08:37:06 AM: edges-rel-semeval_loss: training: 0.065581 validation: 0.115488
09/16 08:37:06 AM: macro_avg: validation: 0.511549
09/16 08:37:06 AM: micro_avg: validation: 0.000000
09/16 08:37:06 AM: edges-rel-semeval_mcc: training: 0.735148 validation: 0.517544
09/16 08:37:06 AM: edges-rel-semeval_acc: training: 0.600442 validation: 0.378590
09/16 08:37:06 AM: edges-rel-semeval_precision: training: 0.862795 validation: 0.725240
09/16 08:37:06 AM: edges-rel-semeval_recall: training: 0.646484 validation: 0.395126
09/16 08:37:06 AM: edges-rel-semeval_f1: training: 0.739138 validation: 0.511549
09/16 08:37:06 AM: Global learning rate: 6.25e-06
09/16 08:37:06 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:37:08 AM: ***** Step 4000 / Validation 40 *****
09/16 08:37:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:37:08 AM: Validating...
09/16 08:37:08 AM: Updating LR scheduler:
09/16 08:37:08 AM: 	Best result seen so far for macro_avg: 0.514
09/16 08:37:08 AM: 	# validation passes without improvement: 2
09/16 08:37:08 AM: Ran out of early stopping patience. Stopping training.
09/16 08:37:08 AM: edges-rel-semeval_loss: training: 0.065435 validation: 0.115958
09/16 08:37:08 AM: macro_avg: validation: 0.504566
09/16 08:37:08 AM: micro_avg: validation: 0.000000
09/16 08:37:08 AM: edges-rel-semeval_mcc: training: 0.745405 validation: 0.513531
09/16 08:37:08 AM: edges-rel-semeval_acc: training: 0.614375 validation: 0.369017
09/16 08:37:08 AM: edges-rel-semeval_precision: training: 0.861831 validation: 0.733002
09/16 08:37:08 AM: edges-rel-semeval_recall: training: 0.664688 validation: 0.384682
09/16 08:37:08 AM: edges-rel-semeval_f1: training: 0.750529 validation: 0.504566
09/16 08:37:08 AM: Global learning rate: 6.25e-06
09/16 08:37:08 AM: Saving checkpoints to: ./experiments/rel-semeval-sts-only/run
09/16 08:37:08 AM: Stopped training after 40 validation checks
09/16 08:37:08 AM: Trained edges-rel-semeval for 4000 batches or 18.605 epochs
09/16 08:37:08 AM: ***** VALIDATION RESULTS *****
09/16 08:37:08 AM: edges-rel-semeval_f1 (for best val pass 30): edges-rel-semeval_loss: 0.11473, macro_avg: 0.51435, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.52030, edges-rel-semeval_acc: 0.38033, edges-rel-semeval_precision: 0.72771, edges-rel-semeval_recall: 0.39774, edges-rel-semeval_f1: 0.51435
09/16 08:37:08 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.18743, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 08:37:08 AM: macro_avg (for best val pass 30): edges-rel-semeval_loss: 0.11473, macro_avg: 0.51435, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.52030, edges-rel-semeval_acc: 0.38033, edges-rel-semeval_precision: 0.72771, edges-rel-semeval_recall: 0.39774, edges-rel-semeval_f1: 0.51435
09/16 08:37:08 AM: Evaluating...
09/16 08:37:08 AM: Loaded model state from ./experiments/rel-semeval-sts-only/run/edges-rel-semeval/model_state_target_train_val_30.best.th
09/16 08:37:08 AM: Evaluating on: edges-rel-semeval, split: val
09/16 08:37:09 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:37:09 AM: Finished evaluating on: edges-rel-semeval
09/16 08:37:09 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 08:37:09 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-sts-only/run
09/16 08:37:09 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-sts-only/run
09/16 08:37:09 AM: Evaluating on: edges-rel-semeval, split: test
09/16 08:37:10 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:37:10 AM: Finished evaluating on: edges-rel-semeval
09/16 08:37:10 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 08:37:10 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-sts-only/run
09/16 08:37:10 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-sts-only/run
09/16 08:37:10 AM: Writing results for split 'val' to ./experiments/rel-semeval-sts-only/results.tsv
09/16 08:37:10 AM: micro_avg: 0.000, macro_avg: 0.514, edges-rel-semeval_mcc: 0.520, edges-rel-semeval_acc: 0.380, edges-rel-semeval_precision: 0.728, edges-rel-semeval_recall: 0.398, edges-rel-semeval_f1: 0.514
09/16 08:37:10 AM: Done!
09/16 08:37:10 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
