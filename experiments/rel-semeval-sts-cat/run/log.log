09/16 12:09:09 PM: Git branch: master
09/16 12:09:09 PM: Git SHA: 93c1dfd555f3458ddbb66d458dfeca984f2d8527
09/16 12:09:09 PM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-sts-cat/",
  "exp_name": "experiments/rel-semeval-sts-cat",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-sts-cat/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/sts",
  "pytorch_transformers_output_mode": "cat",
  "remote_log_name": "experiments/rel-semeval-sts-cat__run",
  "run_dir": "./experiments/rel-semeval-sts-cat/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 12:09:09 PM: Saved config to ./experiments/rel-semeval-sts-cat/run/params.conf
09/16 12:09:09 PM: Using random seed 1234
09/16 12:09:38 PM: Using GPU 0
09/16 12:09:38 PM: Loading tasks...
09/16 12:09:38 PM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-sts-cat/
09/16 12:09:38 PM: 	Creating task edges-rel-semeval from scratch.
09/16 12:09:38 PM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 12:09:38 PM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 12:09:38 PM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 12:09:38 PM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 12:09:38 PM: 	Finished loading tasks: edges-rel-semeval.
09/16 12:09:38 PM: 	Building vocab from scratch.
09/16 12:09:38 PM: 	Counting units for task edges-rel-semeval.
09/16 12:09:38 PM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 12:09:39 PM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 12:09:39 PM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 12:09:40 PM: 	Saved vocab to ./experiments/rel-semeval-sts-cat/vocab
09/16 12:09:40 PM: Loading token dictionary from ./experiments/rel-semeval-sts-cat/vocab.
09/16 12:09:40 PM: 	Loaded vocab from ./experiments/rel-semeval-sts-cat/vocab
09/16 12:09:40 PM: 	Vocab namespace tokens: size 16020
09/16 12:09:40 PM: 	Vocab namespace bert_uncased: size 30524
09/16 12:09:40 PM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 12:09:40 PM: 	Vocab namespace chars: size 59
09/16 12:09:40 PM: 	Finished building vocab.
09/16 12:09:40 PM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 12:09:41 PM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-sts-cat/preproc/edges-rel-semeval__train_data
09/16 12:09:41 PM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 12:09:42 PM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-sts-cat/preproc/edges-rel-semeval__val_data
09/16 12:09:42 PM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 12:09:42 PM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-sts-cat/preproc/edges-rel-semeval__test_data
09/16 12:09:42 PM: 	Finished indexing tasks
09/16 12:09:42 PM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 12:09:42 PM: 	  Training on 
09/16 12:09:42 PM: 	  Evaluating on edges-rel-semeval
09/16 12:09:42 PM: 	Finished loading tasks in 4.429s
09/16 12:09:42 PM: 	 Tasks: ['edges-rel-semeval']
09/16 12:09:42 PM: Building model...
09/16 12:09:42 PM: Using BERT model (bert-base-uncased).
09/16 12:09:42 PM: LOADING A FUNETUNED MODEL from: 
09/16 12:09:42 PM: models/sts
09/16 12:09:42 PM: loading configuration file models/sts/config.json
09/16 12:09:42 PM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "sts-b",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 1,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 12:09:42 PM: loading weights file models/sts/pytorch_model.bin
09/16 12:09:48 PM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpq1m3ekni
09/16 12:09:49 PM: copying /tmp/tmpq1m3ekni to cache at ./experiments/rel-semeval-sts-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 12:09:49 PM: creating metadata file for ./experiments/rel-semeval-sts-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 12:09:49 PM: removing temp file /tmp/tmpq1m3ekni
09/16 12:09:49 PM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-sts-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 12:09:49 PM: Initializing parameters
09/16 12:09:49 PM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 12:09:49 PM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 12:09:49 PM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 12:09:49 PM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 12:09:49 PM:    _text_field_embedder.model.pooler.dense.bias
09/16 12:09:49 PM:    _text_field_embedder.model.pooler.dense.weight
09/16 12:09:49 PM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 12:10:12 PM: Model specification:
09/16 12:10:12 PM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 12:10:12 PM: Model parameters:
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 12:10:12 PM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 12:10:12 PM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 12:10:12 PM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 12:10:12 PM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 12:10:12 PM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 12:10:12 PM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 12:10:12 PM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 12:10:12 PM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 12:10:12 PM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 12:10:12 PM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 12:10:12 PM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 12:10:12 PM: Total number of parameters: 110536979 (1.10537e+08)
09/16 12:10:12 PM: Number of trainable parameters: 1054739 (1.05474e+06)
09/16 12:10:12 PM: Finished building model in 29.632s
09/16 12:10:12 PM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 12:10:13 PM: patience = 9
09/16 12:10:13 PM: val_interval = 100
09/16 12:10:13 PM: max_vals = 100
09/16 12:10:13 PM: cuda_device = 0
09/16 12:10:13 PM: grad_norm = 5.0
09/16 12:10:13 PM: grad_clipping = None
09/16 12:10:13 PM: lr_decay = 0.99
09/16 12:10:13 PM: min_lr = 1e-06
09/16 12:10:13 PM: keep_all_checkpoints = 0
09/16 12:10:13 PM: val_data_limit = 5000
09/16 12:10:13 PM: max_epochs = -1
09/16 12:10:13 PM: dec_val_scale = 250
09/16 12:10:13 PM: training_data_fraction = 1
09/16 12:10:13 PM: type = adam
09/16 12:10:13 PM: parameter_groups = None
09/16 12:10:13 PM: Number of trainable parameters: 1054739
09/16 12:10:13 PM: infer_type_and_cast = True
09/16 12:10:13 PM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 12:10:13 PM: CURRENTLY DEFINED PARAMETERS: 
09/16 12:10:13 PM: lr = 0.0001
09/16 12:10:13 PM: amsgrad = True
09/16 12:10:13 PM: type = reduce_on_plateau
09/16 12:10:13 PM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 12:10:13 PM: CURRENTLY DEFINED PARAMETERS: 
09/16 12:10:13 PM: mode = max
09/16 12:10:13 PM: factor = 0.5
09/16 12:10:13 PM: patience = 3
09/16 12:10:13 PM: threshold = 0.0001
09/16 12:10:13 PM: threshold_mode = abs
09/16 12:10:13 PM: verbose = True
09/16 12:10:13 PM: type = adam
09/16 12:10:13 PM: parameter_groups = None
09/16 12:10:13 PM: Number of trainable parameters: 1054739
09/16 12:10:13 PM: infer_type_and_cast = True
09/16 12:10:13 PM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 12:10:13 PM: CURRENTLY DEFINED PARAMETERS: 
09/16 12:10:13 PM: lr = 0.0001
09/16 12:10:13 PM: amsgrad = True
09/16 12:10:13 PM: type = reduce_on_plateau
09/16 12:10:13 PM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 12:10:13 PM: CURRENTLY DEFINED PARAMETERS: 
09/16 12:10:13 PM: mode = max
09/16 12:10:13 PM: factor = 0.5
09/16 12:10:13 PM: patience = 3
09/16 12:10:13 PM: threshold = 0.0001
09/16 12:10:13 PM: threshold_mode = abs
09/16 12:10:13 PM: verbose = True
09/16 12:10:13 PM: Starting training without restoring from a checkpoint.
09/16 12:10:13 PM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 12:10:13 PM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 12:10:23 PM: Update 30: task edges-rel-semeval, batch 30 (30): mcc: 0.0089, acc: 0.0086, precision: 0.0608, recall: 0.0644, f1: 0.0626, edges-rel-semeval_loss: 0.3433
09/16 12:10:28 PM: ***** Step 100 / Validation 1 *****
09/16 12:10:28 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:10:28 PM: Validating...
09/16 12:10:33 PM: Evaluate: task edges-rel-semeval, batch 31 (36): mcc: 0.0000, acc: 0.0000, precision: 0.0000, recall: 0.0000, f1: 0.0000, edges-rel-semeval_loss: 0.1812
09/16 12:10:34 PM: Best result seen so far for edges-rel-semeval.
09/16 12:10:34 PM: Best result seen so far for micro.
09/16 12:10:34 PM: Best result seen so far for macro.
09/16 12:10:34 PM: Updating LR scheduler:
09/16 12:10:34 PM: 	Best result seen so far for macro_avg: 0.000
09/16 12:10:34 PM: 	# validation passes without improvement: 0
09/16 12:10:34 PM: edges-rel-semeval_loss: training: 0.243992 validation: 0.181570
09/16 12:10:34 PM: macro_avg: validation: 0.000000
09/16 12:10:34 PM: micro_avg: validation: 0.000000
09/16 12:10:34 PM: edges-rel-semeval_mcc: training: 0.004715 validation: 0.000000
09/16 12:10:34 PM: edges-rel-semeval_acc: training: 0.002523 validation: 0.000000
09/16 12:10:34 PM: edges-rel-semeval_precision: training: 0.060790 validation: 0.000000
09/16 12:10:34 PM: edges-rel-semeval_recall: training: 0.018921 validation: 0.000000
09/16 12:10:34 PM: edges-rel-semeval_f1: training: 0.028860 validation: 0.000000
09/16 12:10:34 PM: Global learning rate: 0.0001
09/16 12:10:34 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:10:43 PM: Update 181: task edges-rel-semeval, batch 81 (181): mcc: 0.0715, acc: 0.0054, precision: 1.0000, recall: 0.0054, f1: 0.0107, edges-rel-semeval_loss: 0.1787
09/16 12:10:44 PM: ***** Step 200 / Validation 2 *****
09/16 12:10:44 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:10:44 PM: Validating...
09/16 12:10:48 PM: Best result seen so far for edges-rel-semeval.
09/16 12:10:49 PM: Best result seen so far for macro.
09/16 12:10:49 PM: Updating LR scheduler:
09/16 12:10:49 PM: 	Best result seen so far for macro_avg: 0.062
09/16 12:10:49 PM: 	# validation passes without improvement: 0
09/16 12:10:49 PM: edges-rel-semeval_loss: training: 0.176445 validation: 0.155347
09/16 12:10:49 PM: macro_avg: validation: 0.062133
09/16 12:10:49 PM: micro_avg: validation: 0.000000
09/16 12:10:49 PM: edges-rel-semeval_mcc: training: 0.079510 validation: 0.162863
09/16 12:10:49 PM: edges-rel-semeval_acc: training: 0.008125 validation: 0.032202
09/16 12:10:49 PM: edges-rel-semeval_precision: training: 0.838710 validation: 0.880952
09/16 12:10:49 PM: edges-rel-semeval_recall: training: 0.008125 validation: 0.032202
09/16 12:10:49 PM: edges-rel-semeval_f1: training: 0.016094 validation: 0.062133
09/16 12:10:49 PM: Global learning rate: 0.0001
09/16 12:10:49 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:10:53 PM: Update 232: task edges-rel-semeval, batch 32 (232): mcc: 0.2374, acc: 0.0744, precision: 0.8065, recall: 0.0754, f1: 0.1379, edges-rel-semeval_loss: 0.1543
09/16 12:10:58 PM: ***** Step 300 / Validation 3 *****
09/16 12:11:00 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:11:00 PM: Validating...
09/16 12:11:03 PM: Evaluate: task edges-rel-semeval, batch 30 (36): mcc: 0.3362, acc: 0.1406, precision: 0.8457, recall: 0.1427, f1: 0.2442, edges-rel-semeval_loss: 0.1325
09/16 12:11:04 PM: Best result seen so far for edges-rel-semeval.
09/16 12:11:05 PM: Best result seen so far for macro.
09/16 12:11:05 PM: Updating LR scheduler:
09/16 12:11:05 PM: 	Best result seen so far for macro_avg: 0.231
09/16 12:11:05 PM: 	# validation passes without improvement: 0
09/16 12:11:05 PM: edges-rel-semeval_loss: training: 0.149508 validation: 0.133473
09/16 12:11:05 PM: macro_avg: validation: 0.230712
09/16 12:11:05 PM: micro_avg: validation: 0.000000
09/16 12:11:05 PM: edges-rel-semeval_mcc: training: 0.278554 validation: 0.321869
09/16 12:11:05 PM: edges-rel-semeval_acc: training: 0.105960 validation: 0.132289
09/16 12:11:05 PM: edges-rel-semeval_precision: training: 0.780320 validation: 0.827957
09/16 12:11:05 PM: edges-rel-semeval_recall: training: 0.107537 validation: 0.134030
09/16 12:11:05 PM: edges-rel-semeval_f1: training: 0.189024 validation: 0.230712
09/16 12:11:05 PM: Global learning rate: 0.0001
09/16 12:11:05 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:11:12 PM: ***** Step 400 / Validation 4 *****
09/16 12:11:12 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:11:12 PM: Validating...
09/16 12:11:13 PM: Evaluate: task edges-rel-semeval, batch 14 (36): mcc: 0.4640, acc: 0.2500, precision: 0.8846, recall: 0.2567, f1: 0.3979, edges-rel-semeval_loss: 0.1178
09/16 12:11:15 PM: Best result seen so far for edges-rel-semeval.
09/16 12:11:15 PM: Best result seen so far for macro.
09/16 12:11:15 PM: Updating LR scheduler:
09/16 12:11:15 PM: 	Best result seen so far for macro_avg: 0.354
09/16 12:11:15 PM: 	# validation passes without improvement: 0
09/16 12:11:15 PM: edges-rel-semeval_loss: training: 0.130441 validation: 0.120192
09/16 12:11:15 PM: macro_avg: validation: 0.353836
09/16 12:11:15 PM: micro_avg: validation: 0.000000
09/16 12:11:15 PM: edges-rel-semeval_mcc: training: 0.418278 validation: 0.424854
09/16 12:11:15 PM: edges-rel-semeval_acc: training: 0.222812 validation: 0.218451
09/16 12:11:15 PM: edges-rel-semeval_precision: training: 0.813747 validation: 0.859060
09/16 12:11:15 PM: edges-rel-semeval_recall: training: 0.229375 validation: 0.222802
09/16 12:11:15 PM: edges-rel-semeval_f1: training: 0.357874 validation: 0.353836
09/16 12:11:15 PM: Global learning rate: 0.0001
09/16 12:11:15 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:11:23 PM: Update 488: task edges-rel-semeval, batch 88 (488): mcc: 0.4825, acc: 0.2867, precision: 0.8249, recall: 0.2992, f1: 0.4392, edges-rel-semeval_loss: 0.1188
09/16 12:11:24 PM: ***** Step 500 / Validation 5 *****
09/16 12:11:24 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:11:24 PM: Validating...
09/16 12:11:28 PM: Best result seen so far for edges-rel-semeval.
09/16 12:11:28 PM: Best result seen so far for macro.
09/16 12:11:28 PM: Updating LR scheduler:
09/16 12:11:28 PM: 	Best result seen so far for macro_avg: 0.452
09/16 12:11:28 PM: 	# validation passes without improvement: 0
09/16 12:11:28 PM: edges-rel-semeval_loss: training: 0.118273 validation: 0.110551
09/16 12:11:28 PM: macro_avg: validation: 0.452442
09/16 12:11:28 PM: micro_avg: validation: 0.000000
09/16 12:11:28 PM: edges-rel-semeval_mcc: training: 0.484858 validation: 0.501355
09/16 12:11:28 PM: edges-rel-semeval_acc: training: 0.289499 validation: 0.301131
09/16 12:11:28 PM: edges-rel-semeval_precision: training: 0.820972 validation: 0.864865
09/16 12:11:28 PM: edges-rel-semeval_recall: training: 0.303690 validation: 0.306353
09/16 12:11:28 PM: edges-rel-semeval_f1: training: 0.443370 validation: 0.452442
09/16 12:11:28 PM: Global learning rate: 0.0001
09/16 12:11:28 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:11:33 PM: Update 577: task edges-rel-semeval, batch 77 (577): mcc: 0.5424, acc: 0.3547, precision: 0.8349, recall: 0.3713, f1: 0.5140, edges-rel-semeval_loss: 0.1075
09/16 12:11:35 PM: ***** Step 600 / Validation 6 *****
09/16 12:11:35 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:11:35 PM: Validating...
09/16 12:11:39 PM: Best result seen so far for edges-rel-semeval.
09/16 12:11:39 PM: Best result seen so far for macro.
09/16 12:11:39 PM: Updating LR scheduler:
09/16 12:11:39 PM: 	Best result seen so far for macro_avg: 0.501
09/16 12:11:39 PM: 	# validation passes without improvement: 0
09/16 12:11:39 PM: edges-rel-semeval_loss: training: 0.107168 validation: 0.103874
09/16 12:11:39 PM: macro_avg: validation: 0.500615
09/16 12:11:39 PM: micro_avg: validation: 0.000000
09/16 12:11:39 PM: edges-rel-semeval_mcc: training: 0.540959 validation: 0.535873
09/16 12:11:39 PM: edges-rel-semeval_acc: training: 0.355938 validation: 0.347258
09/16 12:11:39 PM: edges-rel-semeval_precision: training: 0.829847 validation: 0.853249
09/16 12:11:39 PM: edges-rel-semeval_recall: training: 0.371875 validation: 0.354221
09/16 12:11:39 PM: edges-rel-semeval_f1: training: 0.513595 validation: 0.500615
09/16 12:11:39 PM: Global learning rate: 0.0001
09/16 12:11:39 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:11:43 PM: Update 650: task edges-rel-semeval, batch 50 (650): mcc: 0.5664, acc: 0.3826, precision: 0.8263, recall: 0.4087, f1: 0.5468, edges-rel-semeval_loss: 0.1035
09/16 12:11:47 PM: ***** Step 700 / Validation 7 *****
09/16 12:11:47 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:11:47 PM: Validating...
09/16 12:11:51 PM: Best result seen so far for edges-rel-semeval.
09/16 12:11:51 PM: Best result seen so far for macro.
09/16 12:11:51 PM: Updating LR scheduler:
09/16 12:11:51 PM: 	Best result seen so far for macro_avg: 0.544
09/16 12:11:51 PM: 	# validation passes without improvement: 0
09/16 12:11:51 PM: edges-rel-semeval_loss: training: 0.098567 validation: 0.098660
09/16 12:11:51 PM: macro_avg: validation: 0.543746
09/16 12:11:51 PM: micro_avg: validation: 0.000000
09/16 12:11:51 PM: edges-rel-semeval_mcc: training: 0.597643 validation: 0.565899
09/16 12:11:51 PM: edges-rel-semeval_acc: training: 0.418165 validation: 0.392515
09/16 12:11:51 PM: edges-rel-semeval_precision: training: 0.849665 validation: 0.835740
09/16 12:11:51 PM: edges-rel-semeval_recall: training: 0.440240 validation: 0.402959
09/16 12:11:51 PM: edges-rel-semeval_f1: training: 0.579975 validation: 0.543746
09/16 12:11:51 PM: Global learning rate: 0.0001
09/16 12:11:51 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:11:54 PM: Update 739: task edges-rel-semeval, batch 39 (739): mcc: 0.6412, acc: 0.4639, precision: 0.8741, recall: 0.4896, f1: 0.6276, edges-rel-semeval_loss: 0.0915
09/16 12:11:58 PM: ***** Step 800 / Validation 8 *****
09/16 12:11:58 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:11:58 PM: Validating...
09/16 12:12:02 PM: Best result seen so far for edges-rel-semeval.
09/16 12:12:02 PM: Best result seen so far for macro.
09/16 12:12:02 PM: Updating LR scheduler:
09/16 12:12:02 PM: 	Best result seen so far for macro_avg: 0.580
09/16 12:12:02 PM: 	# validation passes without improvement: 0
09/16 12:12:02 PM: edges-rel-semeval_loss: training: 0.091742 validation: 0.094751
09/16 12:12:02 PM: macro_avg: validation: 0.579977
09/16 12:12:02 PM: micro_avg: validation: 0.000000
09/16 12:12:02 PM: edges-rel-semeval_mcc: training: 0.628789 validation: 0.598857
09/16 12:12:02 PM: edges-rel-semeval_acc: training: 0.455313 validation: 0.426458
09/16 12:12:02 PM: edges-rel-semeval_precision: training: 0.855796 validation: 0.855688
09/16 12:12:02 PM: edges-rel-semeval_recall: training: 0.482188 validation: 0.438642
09/16 12:12:02 PM: edges-rel-semeval_f1: training: 0.616830 validation: 0.579977
09/16 12:12:02 PM: Global learning rate: 0.0001
09/16 12:12:02 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:12:04 PM: Update 829: task edges-rel-semeval, batch 29 (829): mcc: 0.6300, acc: 0.4698, precision: 0.8404, recall: 0.4935, f1: 0.6219, edges-rel-semeval_loss: 0.0900
09/16 12:12:13 PM: ***** Step 900 / Validation 9 *****
09/16 12:12:13 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:12:13 PM: Validating...
09/16 12:12:16 PM: Best result seen so far for edges-rel-semeval.
09/16 12:12:18 PM: Best result seen so far for macro.
09/16 12:12:18 PM: Updating LR scheduler:
09/16 12:12:18 PM: 	Best result seen so far for macro_avg: 0.606
09/16 12:12:18 PM: 	# validation passes without improvement: 0
09/16 12:12:18 PM: edges-rel-semeval_loss: training: 0.087204 validation: 0.091631
09/16 12:12:18 PM: macro_avg: validation: 0.605618
09/16 12:12:18 PM: micro_avg: validation: 0.000000
09/16 12:12:18 PM: edges-rel-semeval_mcc: training: 0.644318 validation: 0.619305
09/16 12:12:18 PM: edges-rel-semeval_acc: training: 0.482498 validation: 0.456049
09/16 12:12:18 PM: edges-rel-semeval_precision: training: 0.846917 validation: 0.854200
09/16 12:12:18 PM: edges-rel-semeval_recall: training: 0.511195 validation: 0.469104
09/16 12:12:18 PM: edges-rel-semeval_f1: training: 0.637562 validation: 0.605618
09/16 12:12:18 PM: Global learning rate: 0.0001
09/16 12:12:18 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:12:18 PM: Update 901: task edges-rel-semeval, batch 1 (901): mcc: 0.6411, acc: 0.5312, precision: 0.8095, recall: 0.5312, f1: 0.6415, edges-rel-semeval_loss: 0.0806
09/16 12:12:25 PM: ***** Step 1000 / Validation 10 *****
09/16 12:12:25 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:12:25 PM: Validating...
09/16 12:12:28 PM: Evaluate: task edges-rel-semeval, batch 29 (36): mcc: 0.6523, acc: 0.5075, precision: 0.8417, recall: 0.5269, f1: 0.6481, edges-rel-semeval_loss: 0.0866
09/16 12:12:30 PM: Best result seen so far for edges-rel-semeval.
09/16 12:12:30 PM: Best result seen so far for macro.
09/16 12:12:30 PM: Updating LR scheduler:
09/16 12:12:30 PM: 	Best result seen so far for macro_avg: 0.631
09/16 12:12:30 PM: 	# validation passes without improvement: 0
09/16 12:12:30 PM: edges-rel-semeval_loss: training: 0.078327 validation: 0.088948
09/16 12:12:30 PM: macro_avg: validation: 0.630670
09/16 12:12:30 PM: micro_avg: validation: 0.000000
09/16 12:12:30 PM: edges-rel-semeval_mcc: training: 0.696813 validation: 0.635620
09/16 12:12:30 PM: edges-rel-semeval_acc: training: 0.546562 validation: 0.486510
09/16 12:12:30 PM: edges-rel-semeval_precision: training: 0.873046 validation: 0.830725
09/16 12:12:30 PM: edges-rel-semeval_recall: training: 0.575938 validation: 0.508268
09/16 12:12:30 PM: edges-rel-semeval_f1: training: 0.694031 validation: 0.630670
09/16 12:12:30 PM: Global learning rate: 0.0001
09/16 12:12:30 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:12:38 PM: ***** Step 1100 / Validation 11 *****
09/16 12:12:38 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:12:38 PM: Validating...
09/16 12:12:39 PM: Evaluate: task edges-rel-semeval, batch 13 (36): mcc: 0.6894, acc: 0.5481, precision: 0.8650, recall: 0.5697, f1: 0.6870, edges-rel-semeval_loss: 0.0812
09/16 12:12:41 PM: Best result seen so far for edges-rel-semeval.
09/16 12:12:41 PM: Best result seen so far for macro.
09/16 12:12:41 PM: Updating LR scheduler:
09/16 12:12:41 PM: 	Best result seen so far for macro_avg: 0.647
09/16 12:12:41 PM: 	# validation passes without improvement: 0
09/16 12:12:41 PM: edges-rel-semeval_loss: training: 0.075940 validation: 0.087125
09/16 12:12:41 PM: macro_avg: validation: 0.646996
09/16 12:12:41 PM: micro_avg: validation: 0.000000
09/16 12:12:41 PM: edges-rel-semeval_mcc: training: 0.703020 validation: 0.651613
09/16 12:12:41 PM: edges-rel-semeval_acc: training: 0.560076 validation: 0.503916
09/16 12:12:41 PM: edges-rel-semeval_precision: training: 0.866327 validation: 0.843357
09/16 12:12:41 PM: edges-rel-semeval_recall: training: 0.590665 validation: 0.524804
09/16 12:12:41 PM: edges-rel-semeval_f1: training: 0.702419 validation: 0.646996
09/16 12:12:41 PM: Global learning rate: 0.0001
09/16 12:12:41 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:12:48 PM: ***** Step 1200 / Validation 12 *****
09/16 12:12:51 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:12:51 PM: Validating...
09/16 12:12:51 PM: Evaluate: task edges-rel-semeval, batch 1 (36): mcc: 0.7302, acc: 0.5938, precision: 0.8400, recall: 0.6562, f1: 0.7368, edges-rel-semeval_loss: 0.0751
09/16 12:12:54 PM: Best result seen so far for edges-rel-semeval.
09/16 12:12:55 PM: Best result seen so far for macro.
09/16 12:12:55 PM: Updating LR scheduler:
09/16 12:12:55 PM: 	Best result seen so far for macro_avg: 0.655
09/16 12:12:55 PM: 	# validation passes without improvement: 0
09/16 12:12:55 PM: edges-rel-semeval_loss: training: 0.070647 validation: 0.085663
09/16 12:12:55 PM: macro_avg: validation: 0.655082
09/16 12:12:55 PM: micro_avg: validation: 0.000000
09/16 12:12:55 PM: edges-rel-semeval_mcc: training: 0.736115 validation: 0.656080
09/16 12:12:55 PM: edges-rel-semeval_acc: training: 0.603125 validation: 0.517842
09/16 12:12:55 PM: edges-rel-semeval_precision: training: 0.878997 validation: 0.829333
09/16 12:12:55 PM: edges-rel-semeval_recall: training: 0.635625 validation: 0.541340
09/16 12:12:55 PM: edges-rel-semeval_f1: training: 0.737758 validation: 0.655082
09/16 12:12:55 PM: Global learning rate: 0.0001
09/16 12:12:55 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:13:01 PM: Update 1279: task edges-rel-semeval, batch 79 (1279): mcc: 0.7199, acc: 0.5763, precision: 0.8707, recall: 0.6151, f1: 0.7209, edges-rel-semeval_loss: 0.0720
09/16 12:13:03 PM: ***** Step 1300 / Validation 13 *****
09/16 12:13:03 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:13:03 PM: Validating...
09/16 12:13:07 PM: Best result seen so far for edges-rel-semeval.
09/16 12:13:07 PM: Best result seen so far for macro.
09/16 12:13:07 PM: Updating LR scheduler:
09/16 12:13:07 PM: 	Best result seen so far for macro_avg: 0.661
09/16 12:13:07 PM: 	# validation passes without improvement: 0
09/16 12:13:07 PM: edges-rel-semeval_loss: training: 0.070374 validation: 0.083677
09/16 12:13:07 PM: macro_avg: validation: 0.660990
09/16 12:13:07 PM: micro_avg: validation: 0.000000
09/16 12:13:07 PM: edges-rel-semeval_mcc: training: 0.724244 validation: 0.664751
09/16 12:13:07 PM: edges-rel-semeval_acc: training: 0.581205 validation: 0.521323
09/16 12:13:07 PM: edges-rel-semeval_precision: training: 0.870697 validation: 0.850685
09/16 12:13:07 PM: edges-rel-semeval_recall: training: 0.622201 validation: 0.540470
09/16 12:13:07 PM: edges-rel-semeval_f1: training: 0.725768 validation: 0.660990
09/16 12:13:07 PM: Global learning rate: 0.0001
09/16 12:13:07 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:13:11 PM: Update 1354: task edges-rel-semeval, batch 54 (1354): mcc: 0.7661, acc: 0.6412, precision: 0.8941, recall: 0.6742, f1: 0.7687, edges-rel-semeval_loss: 0.0643
09/16 12:13:16 PM: ***** Step 1400 / Validation 14 *****
09/16 12:13:16 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:13:16 PM: Validating...
09/16 12:13:20 PM: Best result seen so far for edges-rel-semeval.
09/16 12:13:20 PM: Best result seen so far for macro.
09/16 12:13:20 PM: Updating LR scheduler:
09/16 12:13:20 PM: 	Best result seen so far for macro_avg: 0.662
09/16 12:13:20 PM: 	# validation passes without improvement: 0
09/16 12:13:20 PM: edges-rel-semeval_loss: training: 0.063313 validation: 0.083601
09/16 12:13:20 PM: macro_avg: validation: 0.662076
09/16 12:13:20 PM: micro_avg: validation: 0.000000
09/16 12:13:20 PM: edges-rel-semeval_mcc: training: 0.771573 validation: 0.664832
09/16 12:13:20 PM: edges-rel-semeval_acc: training: 0.646875 validation: 0.523934
09/16 12:13:20 PM: edges-rel-semeval_precision: training: 0.895773 validation: 0.845737
09/16 12:13:20 PM: edges-rel-semeval_recall: training: 0.682187 validation: 0.543951
09/16 12:13:20 PM: edges-rel-semeval_f1: training: 0.774525 validation: 0.662076
09/16 12:13:20 PM: Global learning rate: 0.0001
09/16 12:13:20 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:13:23 PM: Update 1445: task edges-rel-semeval, batch 45 (1445): mcc: 0.7676, acc: 0.6465, precision: 0.8739, recall: 0.6931, f1: 0.7730, edges-rel-semeval_loss: 0.0634
09/16 12:13:27 PM: ***** Step 1500 / Validation 15 *****
09/16 12:13:27 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:13:27 PM: Validating...
09/16 12:13:30 PM: Best result seen so far for edges-rel-semeval.
09/16 12:13:30 PM: Best result seen so far for macro.
09/16 12:13:30 PM: Updating LR scheduler:
09/16 12:13:30 PM: 	Best result seen so far for macro_avg: 0.664
09/16 12:13:30 PM: 	# validation passes without improvement: 0
09/16 12:13:30 PM: edges-rel-semeval_loss: training: 0.063772 validation: 0.082567
09/16 12:13:30 PM: macro_avg: validation: 0.663843
09/16 12:13:30 PM: micro_avg: validation: 0.000000
09/16 12:13:30 PM: edges-rel-semeval_mcc: training: 0.759901 validation: 0.666606
09/16 12:13:30 PM: edges-rel-semeval_acc: training: 0.635625 validation: 0.530896
09/16 12:13:30 PM: edges-rel-semeval_precision: training: 0.873245 validation: 0.847297
09/16 12:13:30 PM: edges-rel-semeval_recall: training: 0.680313 validation: 0.545692
09/16 12:13:30 PM: edges-rel-semeval_f1: training: 0.764799 validation: 0.663843
09/16 12:13:30 PM: Global learning rate: 0.0001
09/16 12:13:30 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:13:33 PM: Update 1518: task edges-rel-semeval, batch 18 (1518): mcc: 0.7954, acc: 0.6819, precision: 0.9014, recall: 0.7185, f1: 0.7996, edges-rel-semeval_loss: 0.0546
09/16 12:13:39 PM: ***** Step 1600 / Validation 16 *****
09/16 12:13:39 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:13:39 PM: Validating...
09/16 12:13:43 PM: Best result seen so far for edges-rel-semeval.
09/16 12:13:43 PM: Best result seen so far for macro.
09/16 12:13:43 PM: Updating LR scheduler:
09/16 12:13:43 PM: 	Best result seen so far for macro_avg: 0.673
09/16 12:13:43 PM: 	# validation passes without improvement: 0
09/16 12:13:43 PM: edges-rel-semeval_loss: training: 0.056567 validation: 0.083611
09/16 12:13:43 PM: macro_avg: validation: 0.673257
09/16 12:13:43 PM: micro_avg: validation: 0.000000
09/16 12:13:43 PM: edges-rel-semeval_mcc: training: 0.797904 validation: 0.673004
09/16 12:13:43 PM: edges-rel-semeval_acc: training: 0.682435 validation: 0.543951
09/16 12:13:43 PM: edges-rel-semeval_precision: training: 0.900667 validation: 0.836999
09/16 12:13:43 PM: edges-rel-semeval_recall: training: 0.723431 validation: 0.563098
09/16 12:13:43 PM: edges-rel-semeval_f1: training: 0.802378 validation: 0.673257
09/16 12:13:43 PM: Global learning rate: 0.0001
09/16 12:13:43 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:13:43 PM: Update 1604: task edges-rel-semeval, batch 4 (1604): mcc: 0.7734, acc: 0.6719, precision: 0.8738, recall: 0.7031, f1: 0.7792, edges-rel-semeval_loss: 0.0603
09/16 12:13:50 PM: ***** Step 1700 / Validation 17 *****
09/16 12:13:50 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:13:50 PM: Validating...
09/16 12:13:53 PM: Evaluate: task edges-rel-semeval, batch 36 (36): mcc: 0.6667, acc: 0.5413, precision: 0.8349, recall: 0.5544, f1: 0.6663, edges-rel-semeval_loss: 0.0818
09/16 12:13:53 PM: Updating LR scheduler:
09/16 12:13:53 PM: 	Best result seen so far for macro_avg: 0.673
09/16 12:13:53 PM: 	# validation passes without improvement: 1
09/16 12:13:53 PM: edges-rel-semeval_loss: training: 0.059689 validation: 0.081786
09/16 12:13:53 PM: macro_avg: validation: 0.666318
09/16 12:13:53 PM: micro_avg: validation: 0.000000
09/16 12:13:53 PM: edges-rel-semeval_mcc: training: 0.770587 validation: 0.666658
09/16 12:13:53 PM: edges-rel-semeval_acc: training: 0.646250 validation: 0.541340
09/16 12:13:53 PM: edges-rel-semeval_precision: training: 0.874022 validation: 0.834862
09/16 12:13:53 PM: edges-rel-semeval_recall: training: 0.698125 validation: 0.554395
09/16 12:13:53 PM: edges-rel-semeval_f1: training: 0.776234 validation: 0.666318
09/16 12:13:53 PM: Global learning rate: 0.0001
09/16 12:13:53 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:14:01 PM: ***** Step 1800 / Validation 18 *****
09/16 12:14:01 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:14:02 PM: Validating...
09/16 12:14:03 PM: Evaluate: task edges-rel-semeval, batch 17 (36): mcc: 0.7047, acc: 0.5938, precision: 0.8268, recall: 0.6232, f1: 0.7107, edges-rel-semeval_loss: 0.0769
09/16 12:14:05 PM: Best result seen so far for edges-rel-semeval.
09/16 12:14:05 PM: Best result seen so far for macro.
09/16 12:14:05 PM: Updating LR scheduler:
09/16 12:14:05 PM: 	Best result seen so far for macro_avg: 0.679
09/16 12:14:05 PM: 	# validation passes without improvement: 0
09/16 12:14:05 PM: edges-rel-semeval_loss: training: 0.054481 validation: 0.082207
09/16 12:14:05 PM: macro_avg: validation: 0.678843
09/16 12:14:05 PM: micro_avg: validation: 0.000000
09/16 12:14:05 PM: edges-rel-semeval_mcc: training: 0.796479 validation: 0.674327
09/16 12:14:05 PM: edges-rel-semeval_acc: training: 0.681804 validation: 0.552654
09/16 12:14:05 PM: edges-rel-semeval_precision: training: 0.894675 validation: 0.813869
09/16 12:14:05 PM: edges-rel-semeval_recall: training: 0.725954 validation: 0.582245
09/16 12:14:05 PM: edges-rel-semeval_f1: training: 0.801532 validation: 0.678843
09/16 12:14:05 PM: Global learning rate: 0.0001
09/16 12:14:05 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:14:13 PM: ***** Step 1900 / Validation 19 *****
09/16 12:14:13 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:14:13 PM: Validating...
09/16 12:14:13 PM: Evaluate: task edges-rel-semeval, batch 7 (36): mcc: 0.7455, acc: 0.6250, precision: 0.8841, recall: 0.6473, f1: 0.7474, edges-rel-semeval_loss: 0.0680
09/16 12:14:16 PM: Best result seen so far for edges-rel-semeval.
09/16 12:14:17 PM: Best result seen so far for macro.
09/16 12:14:17 PM: Updating LR scheduler:
09/16 12:14:17 PM: 	Best result seen so far for macro_avg: 0.686
09/16 12:14:17 PM: 	# validation passes without improvement: 0
09/16 12:14:17 PM: edges-rel-semeval_loss: training: 0.055499 validation: 0.080446
09/16 12:14:17 PM: macro_avg: validation: 0.686094
09/16 12:14:17 PM: micro_avg: validation: 0.000000
09/16 12:14:17 PM: edges-rel-semeval_mcc: training: 0.793771 validation: 0.683355
09/16 12:14:17 PM: edges-rel-semeval_acc: training: 0.679375 validation: 0.563969
09/16 12:14:17 PM: edges-rel-semeval_precision: training: 0.885389 validation: 0.831475
09/16 12:14:17 PM: edges-rel-semeval_recall: training: 0.729062 validation: 0.583986
09/16 12:14:17 PM: edges-rel-semeval_f1: training: 0.799657 validation: 0.686094
09/16 12:14:17 PM: Global learning rate: 0.0001
09/16 12:14:17 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:14:23 PM: Update 1964: task edges-rel-semeval, batch 64 (1964): mcc: 0.8099, acc: 0.6974, precision: 0.8967, recall: 0.7479, f1: 0.8156, edges-rel-semeval_loss: 0.0521
09/16 12:14:26 PM: ***** Step 2000 / Validation 20 *****
09/16 12:14:26 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:14:26 PM: Validating...
09/16 12:14:29 PM: Updating LR scheduler:
09/16 12:14:29 PM: 	Best result seen so far for macro_avg: 0.686
09/16 12:14:29 PM: 	# validation passes without improvement: 1
09/16 12:14:29 PM: edges-rel-semeval_loss: training: 0.050216 validation: 0.080679
09/16 12:14:29 PM: macro_avg: validation: 0.676319
09/16 12:14:29 PM: micro_avg: validation: 0.000000
09/16 12:14:29 PM: edges-rel-semeval_mcc: training: 0.821686 validation: 0.675048
09/16 12:14:29 PM: edges-rel-semeval_acc: training: 0.712394 validation: 0.549173
09/16 12:14:29 PM: edges-rel-semeval_precision: training: 0.908885 validation: 0.833121
09/16 12:14:29 PM: edges-rel-semeval_recall: training: 0.758120 validation: 0.569191
09/16 12:14:29 PM: edges-rel-semeval_f1: training: 0.826685 validation: 0.676319
09/16 12:14:29 PM: Global learning rate: 0.0001
09/16 12:14:29 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:14:33 PM: Update 2054: task edges-rel-semeval, batch 54 (2054): mcc: 0.8308, acc: 0.7297, precision: 0.9101, recall: 0.7731, f1: 0.8360, edges-rel-semeval_loss: 0.0483
09/16 12:14:36 PM: ***** Step 2100 / Validation 21 *****
09/16 12:14:36 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:14:36 PM: Validating...
09/16 12:14:40 PM: Updating LR scheduler:
09/16 12:14:40 PM: 	Best result seen so far for macro_avg: 0.686
09/16 12:14:40 PM: 	# validation passes without improvement: 2
09/16 12:14:40 PM: edges-rel-semeval_loss: training: 0.049666 validation: 0.080953
09/16 12:14:40 PM: macro_avg: validation: 0.672123
09/16 12:14:40 PM: micro_avg: validation: 0.000000
09/16 12:14:40 PM: edges-rel-semeval_mcc: training: 0.827188 validation: 0.668589
09/16 12:14:40 PM: edges-rel-semeval_acc: training: 0.722500 validation: 0.544822
09/16 12:14:40 PM: edges-rel-semeval_precision: training: 0.909293 validation: 0.815136
09/16 12:14:40 PM: edges-rel-semeval_recall: training: 0.767500 validation: 0.571802
09/16 12:14:40 PM: edges-rel-semeval_f1: training: 0.832401 validation: 0.672123
09/16 12:14:40 PM: Global learning rate: 0.0001
09/16 12:14:40 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:14:43 PM: Update 2143: task edges-rel-semeval, batch 43 (2143): mcc: 0.7995, acc: 0.6904, precision: 0.8879, recall: 0.7369, f1: 0.8054, edges-rel-semeval_loss: 0.0531
09/16 12:14:49 PM: ***** Step 2200 / Validation 22 *****
09/16 12:14:49 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:14:49 PM: Validating...
09/16 12:14:52 PM: Best result seen so far for edges-rel-semeval.
09/16 12:14:53 PM: Best result seen so far for macro.
09/16 12:14:53 PM: Updating LR scheduler:
09/16 12:14:53 PM: 	Best result seen so far for macro_avg: 0.701
09/16 12:14:53 PM: 	# validation passes without improvement: 0
09/16 12:14:53 PM: edges-rel-semeval_loss: training: 0.049052 validation: 0.079218
09/16 12:14:53 PM: macro_avg: validation: 0.701478
09/16 12:14:53 PM: micro_avg: validation: 0.000000
09/16 12:14:53 PM: edges-rel-semeval_mcc: training: 0.817000 validation: 0.693859
09/16 12:14:53 PM: edges-rel-semeval_acc: training: 0.710817 validation: 0.581375
09/16 12:14:53 PM: edges-rel-semeval_precision: training: 0.894231 validation: 0.808173
09/16 12:14:53 PM: edges-rel-semeval_recall: training: 0.762535 validation: 0.619669
09/16 12:14:53 PM: edges-rel-semeval_f1: training: 0.823149 validation: 0.701478
09/16 12:14:53 PM: Global learning rate: 0.0001
09/16 12:14:53 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:14:53 PM: Update 2209: task edges-rel-semeval, batch 9 (2209): mcc: 0.8493, acc: 0.7569, precision: 0.9035, recall: 0.8125, f1: 0.8556, edges-rel-semeval_loss: 0.0461
09/16 12:15:00 PM: ***** Step 2300 / Validation 23 *****
09/16 12:15:00 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:15:00 PM: Validating...
09/16 12:15:03 PM: Evaluate: task edges-rel-semeval, batch 35 (36): mcc: 0.6789, acc: 0.5634, precision: 0.8123, recall: 0.5911, f1: 0.6842, edges-rel-semeval_loss: 0.0795
09/16 12:15:04 PM: Updating LR scheduler:
09/16 12:15:04 PM: 	Best result seen so far for macro_avg: 0.701
09/16 12:15:04 PM: 	# validation passes without improvement: 1
09/16 12:15:04 PM: edges-rel-semeval_loss: training: 0.048430 validation: 0.080867
09/16 12:15:04 PM: macro_avg: validation: 0.678427
09/16 12:15:04 PM: micro_avg: validation: 0.000000
09/16 12:15:04 PM: edges-rel-semeval_mcc: training: 0.824243 validation: 0.672811
09/16 12:15:04 PM: edges-rel-semeval_acc: training: 0.718437 validation: 0.557006
09/16 12:15:04 PM: edges-rel-semeval_precision: training: 0.897604 validation: 0.805988
09/16 12:15:04 PM: edges-rel-semeval_recall: training: 0.772500 validation: 0.585727
09/16 12:15:04 PM: edges-rel-semeval_f1: training: 0.830366 validation: 0.678427
09/16 12:15:04 PM: Global learning rate: 0.0001
09/16 12:15:04 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:15:12 PM: ***** Step 2400 / Validation 24 *****
09/16 12:15:12 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:15:12 PM: Validating...
09/16 12:15:14 PM: Evaluate: task edges-rel-semeval, batch 18 (36): mcc: 0.7195, acc: 0.6007, precision: 0.8775, recall: 0.6094, f1: 0.7193, edges-rel-semeval_loss: 0.0748
09/16 12:15:15 PM: Updating LR scheduler:
09/16 12:15:15 PM: 	Best result seen so far for macro_avg: 0.701
09/16 12:15:15 PM: 	# validation passes without improvement: 2
09/16 12:15:15 PM: edges-rel-semeval_loss: training: 0.044624 validation: 0.081469
09/16 12:15:15 PM: macro_avg: validation: 0.669125
09/16 12:15:15 PM: micro_avg: validation: 0.000000
09/16 12:15:15 PM: edges-rel-semeval_mcc: training: 0.840247 validation: 0.671212
09/16 12:15:15 PM: edges-rel-semeval_acc: training: 0.742353 validation: 0.537859
09/16 12:15:15 PM: edges-rel-semeval_precision: training: 0.902500 validation: 0.847797
09/16 12:15:15 PM: edges-rel-semeval_recall: training: 0.796910 validation: 0.552655
09/16 12:15:15 PM: edges-rel-semeval_f1: training: 0.846424 validation: 0.669125
09/16 12:15:15 PM: Global learning rate: 0.0001
09/16 12:15:15 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:15:23 PM: ***** Step 2500 / Validation 25 *****
09/16 12:15:23 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:15:23 PM: Validating...
09/16 12:15:24 PM: Evaluate: task edges-rel-semeval, batch 7 (36): mcc: 0.7285, acc: 0.6027, precision: 0.8704, recall: 0.6295, f1: 0.7306, edges-rel-semeval_loss: 0.0674
09/16 12:15:27 PM: Updating LR scheduler:
09/16 12:15:27 PM: 	Best result seen so far for macro_avg: 0.701
09/16 12:15:27 PM: 	# validation passes without improvement: 3
09/16 12:15:27 PM: edges-rel-semeval_loss: training: 0.044071 validation: 0.079802
09/16 12:15:27 PM: macro_avg: validation: 0.692308
09/16 12:15:27 PM: micro_avg: validation: 0.000000
09/16 12:15:27 PM: edges-rel-semeval_mcc: training: 0.845926 validation: 0.688200
09/16 12:15:27 PM: edges-rel-semeval_acc: training: 0.753125 validation: 0.574413
09/16 12:15:27 PM: edges-rel-semeval_precision: training: 0.914275 validation: 0.827086
09/16 12:15:27 PM: edges-rel-semeval_recall: training: 0.796562 validation: 0.595300
09/16 12:15:27 PM: edges-rel-semeval_f1: training: 0.851369 validation: 0.692308
09/16 12:15:27 PM: Global learning rate: 0.0001
09/16 12:15:27 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:15:34 PM: Update 2581: task edges-rel-semeval, batch 81 (2581): mcc: 0.8265, acc: 0.7304, precision: 0.8911, recall: 0.7823, f1: 0.8332, edges-rel-semeval_loss: 0.0462
09/16 12:15:35 PM: ***** Step 2600 / Validation 26 *****
09/16 12:15:35 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:15:35 PM: Validating...
09/16 12:15:39 PM: Updating LR scheduler:
09/16 12:15:39 PM: 	Best result seen so far for macro_avg: 0.701
09/16 12:15:39 PM: 	# validation passes without improvement: 0
09/16 12:15:39 PM: edges-rel-semeval_loss: training: 0.045683 validation: 0.080748
09/16 12:15:39 PM: macro_avg: validation: 0.692961
09/16 12:15:39 PM: micro_avg: validation: 0.000000
09/16 12:15:39 PM: edges-rel-semeval_mcc: training: 0.830646 validation: 0.686747
09/16 12:15:39 PM: edges-rel-semeval_acc: training: 0.735099 validation: 0.573542
09/16 12:15:39 PM: edges-rel-semeval_precision: training: 0.893419 validation: 0.812646
09/16 12:15:39 PM: edges-rel-semeval_recall: training: 0.787764 validation: 0.604003
09/16 12:15:39 PM: edges-rel-semeval_f1: training: 0.837272 validation: 0.692961
09/16 12:15:39 PM: Global learning rate: 5e-05
09/16 12:15:39 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:15:44 PM: Update 2661: task edges-rel-semeval, batch 61 (2661): mcc: 0.8637, acc: 0.7772, precision: 0.9209, recall: 0.8227, f1: 0.8690, edges-rel-semeval_loss: 0.0403
09/16 12:15:47 PM: ***** Step 2700 / Validation 27 *****
09/16 12:15:49 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:15:49 PM: Validating...
09/16 12:15:52 PM: Updating LR scheduler:
09/16 12:15:53 PM: 	Best result seen so far for macro_avg: 0.701
09/16 12:15:53 PM: 	# validation passes without improvement: 1
09/16 12:15:53 PM: edges-rel-semeval_loss: training: 0.040631 validation: 0.079607
09/16 12:15:53 PM: macro_avg: validation: 0.695257
09/16 12:15:53 PM: micro_avg: validation: 0.000000
09/16 12:15:53 PM: edges-rel-semeval_mcc: training: 0.860579 validation: 0.690831
09/16 12:15:53 PM: edges-rel-semeval_acc: training: 0.772813 validation: 0.571802
09/16 12:15:53 PM: edges-rel-semeval_precision: training: 0.916609 validation: 0.827131
09/16 12:15:53 PM: edges-rel-semeval_recall: training: 0.820938 validation: 0.599652
09/16 12:15:53 PM: edges-rel-semeval_f1: training: 0.866139 validation: 0.695257
09/16 12:15:53 PM: Global learning rate: 5e-05
09/16 12:15:53 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:15:54 PM: Update 2707: task edges-rel-semeval, batch 7 (2707): mcc: 0.8640, acc: 0.7634, precision: 0.9378, recall: 0.8080, f1: 0.8681, edges-rel-semeval_loss: 0.0406
09/16 12:16:02 PM: ***** Step 2800 / Validation 28 *****
09/16 12:16:02 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:16:02 PM: Validating...
09/16 12:16:04 PM: Evaluate: task edges-rel-semeval, batch 18 (36): mcc: 0.7320, acc: 0.6250, precision: 0.8503, recall: 0.6510, f1: 0.7375, edges-rel-semeval_loss: 0.0725
09/16 12:16:06 PM: Updating LR scheduler:
09/16 12:16:06 PM: 	Best result seen so far for macro_avg: 0.701
09/16 12:16:06 PM: 	# validation passes without improvement: 2
09/16 12:16:06 PM: edges-rel-semeval_loss: training: 0.039464 validation: 0.079554
09/16 12:16:06 PM: macro_avg: validation: 0.696473
09/16 12:16:06 PM: micro_avg: validation: 0.000000
09/16 12:16:06 PM: edges-rel-semeval_mcc: training: 0.869400 validation: 0.689735
09/16 12:16:06 PM: edges-rel-semeval_acc: training: 0.783349 validation: 0.574413
09/16 12:16:06 PM: edges-rel-semeval_precision: training: 0.923860 validation: 0.811343
09/16 12:16:06 PM: edges-rel-semeval_recall: training: 0.830337 validation: 0.610096
09/16 12:16:06 PM: edges-rel-semeval_f1: training: 0.874606 validation: 0.696473
09/16 12:16:06 PM: Global learning rate: 5e-05
09/16 12:16:06 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:16:14 PM: Update 2891: task edges-rel-semeval, batch 91 (2891): mcc: 0.8772, acc: 0.7970, precision: 0.9247, recall: 0.8438, f1: 0.8824, edges-rel-semeval_loss: 0.0369
09/16 12:16:15 PM: ***** Step 2900 / Validation 29 *****
09/16 12:16:16 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:16:16 PM: Validating...
09/16 12:16:22 PM: Updating LR scheduler:
09/16 12:16:22 PM: 	Best result seen so far for macro_avg: 0.701
09/16 12:16:22 PM: 	# validation passes without improvement: 3
09/16 12:16:22 PM: edges-rel-semeval_loss: training: 0.036874 validation: 0.080935
09/16 12:16:22 PM: macro_avg: validation: 0.699950
09/16 12:16:22 PM: micro_avg: validation: 0.000000
09/16 12:16:22 PM: edges-rel-semeval_mcc: training: 0.877013 validation: 0.695728
09/16 12:16:22 PM: edges-rel-semeval_acc: training: 0.796250 validation: 0.580505
09/16 12:16:22 PM: edges-rel-semeval_precision: training: 0.924051 validation: 0.832134
09/16 12:16:22 PM: edges-rel-semeval_recall: training: 0.844063 validation: 0.604003
09/16 12:16:22 PM: edges-rel-semeval_f1: training: 0.882247 validation: 0.699950
09/16 12:16:22 PM: Global learning rate: 5e-05
09/16 12:16:22 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:16:24 PM: Update 2913: task edges-rel-semeval, batch 13 (2913): mcc: 0.8659, acc: 0.7909, precision: 0.9153, recall: 0.8317, f1: 0.8715, edges-rel-semeval_loss: 0.0379
09/16 12:16:34 PM: Update 2986: task edges-rel-semeval, batch 86 (2986): mcc: 0.8619, acc: 0.7758, precision: 0.9123, recall: 0.8274, f1: 0.8678, edges-rel-semeval_loss: 0.0394
09/16 12:16:36 PM: ***** Step 3000 / Validation 30 *****
09/16 12:16:36 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:16:36 PM: Validating...
09/16 12:16:41 PM: Updating LR scheduler:
09/16 12:16:41 PM: 	Best result seen so far for macro_avg: 0.701
09/16 12:16:41 PM: 	# validation passes without improvement: 0
09/16 12:16:41 PM: edges-rel-semeval_loss: training: 0.039334 validation: 0.080006
09/16 12:16:41 PM: macro_avg: validation: 0.694000
09/16 12:16:41 PM: micro_avg: validation: 0.000000
09/16 12:16:41 PM: edges-rel-semeval_mcc: training: 0.861825 validation: 0.688074
09/16 12:16:41 PM: edges-rel-semeval_acc: training: 0.775312 validation: 0.569191
09/16 12:16:41 PM: edges-rel-semeval_precision: training: 0.913299 validation: 0.815511
09/16 12:16:41 PM: edges-rel-semeval_recall: training: 0.826250 validation: 0.604003
09/16 12:16:41 PM: edges-rel-semeval_f1: training: 0.867596 validation: 0.694000
09/16 12:16:41 PM: Global learning rate: 2.5e-05
09/16 12:16:41 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:16:46 PM: Update 3011: task edges-rel-semeval, batch 11 (3011): mcc: 0.8427, acc: 0.7337, precision: 0.9053, recall: 0.7988, f1: 0.8487, edges-rel-semeval_loss: 0.0414
09/16 12:16:56 PM: Update 3086: task edges-rel-semeval, batch 86 (3086): mcc: 0.8800, acc: 0.7951, precision: 0.9262, recall: 0.8476, f1: 0.8851, edges-rel-semeval_loss: 0.0358
09/16 12:16:59 PM: ***** Step 3100 / Validation 31 *****
09/16 12:16:59 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:16:59 PM: Validating...
09/16 12:17:05 PM: Updating LR scheduler:
09/16 12:17:05 PM: 	Best result seen so far for macro_avg: 0.701
09/16 12:17:05 PM: 	# validation passes without improvement: 1
09/16 12:17:05 PM: edges-rel-semeval_loss: training: 0.035789 validation: 0.080324
09/16 12:17:05 PM: macro_avg: validation: 0.698637
09/16 12:17:05 PM: micro_avg: validation: 0.000000
09/16 12:17:05 PM: edges-rel-semeval_mcc: training: 0.880385 validation: 0.694500
09/16 12:17:05 PM: edges-rel-semeval_acc: training: 0.795333 validation: 0.576153
09/16 12:17:05 PM: edges-rel-semeval_precision: training: 0.925112 validation: 0.831731
09/16 12:17:05 PM: edges-rel-semeval_recall: training: 0.849259 validation: 0.602263
09/16 12:17:05 PM: edges-rel-semeval_f1: training: 0.885564 validation: 0.698637
09/16 12:17:05 PM: Global learning rate: 2.5e-05
09/16 12:17:05 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:17:07 PM: Update 3117: task edges-rel-semeval, batch 17 (3117): mcc: 0.8630, acc: 0.7776, precision: 0.9146, recall: 0.8272, f1: 0.8687, edges-rel-semeval_loss: 0.0369
09/16 12:17:17 PM: Update 3194: task edges-rel-semeval, batch 94 (3194): mcc: 0.8763, acc: 0.7972, precision: 0.9226, recall: 0.8441, f1: 0.8816, edges-rel-semeval_loss: 0.0366
09/16 12:17:17 PM: ***** Step 3200 / Validation 32 *****
09/16 12:17:17 PM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 12:17:17 PM: Validating...
09/16 12:17:22 PM: Updating LR scheduler:
09/16 12:17:22 PM: 	Best result seen so far for macro_avg: 0.701
09/16 12:17:22 PM: 	# validation passes without improvement: 2
09/16 12:17:22 PM: Ran out of early stopping patience. Stopping training.
09/16 12:17:22 PM: edges-rel-semeval_loss: training: 0.036534 validation: 0.080207
09/16 12:17:22 PM: macro_avg: validation: 0.699502
09/16 12:17:22 PM: micro_avg: validation: 0.000000
09/16 12:17:22 PM: edges-rel-semeval_mcc: training: 0.875523 validation: 0.693161
09/16 12:17:22 PM: edges-rel-semeval_acc: training: 0.796250 validation: 0.580505
09/16 12:17:22 PM: edges-rel-semeval_precision: training: 0.921790 validation: 0.816492
09/16 12:17:22 PM: edges-rel-semeval_recall: training: 0.843437 validation: 0.611836
09/16 12:17:22 PM: edges-rel-semeval_f1: training: 0.880875 validation: 0.699502
09/16 12:17:22 PM: Global learning rate: 2.5e-05
09/16 12:17:22 PM: Saving checkpoints to: ./experiments/rel-semeval-sts-cat/run
09/16 12:17:22 PM: Stopped training after 32 validation checks
09/16 12:17:22 PM: Trained edges-rel-semeval for 3200 batches or 14.884 epochs
09/16 12:17:22 PM: ***** VALIDATION RESULTS *****
09/16 12:17:22 PM: edges-rel-semeval_f1 (for best val pass 22): edges-rel-semeval_loss: 0.07922, macro_avg: 0.70148, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.69386, edges-rel-semeval_acc: 0.58138, edges-rel-semeval_precision: 0.80817, edges-rel-semeval_recall: 0.61967, edges-rel-semeval_f1: 0.70148
09/16 12:17:22 PM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.18157, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 12:17:22 PM: macro_avg (for best val pass 22): edges-rel-semeval_loss: 0.07922, macro_avg: 0.70148, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.69386, edges-rel-semeval_acc: 0.58138, edges-rel-semeval_precision: 0.80817, edges-rel-semeval_recall: 0.61967, edges-rel-semeval_f1: 0.70148
09/16 12:17:22 PM: Evaluating...
09/16 12:17:22 PM: Loaded model state from ./experiments/rel-semeval-sts-cat/run/edges-rel-semeval/model_state_target_train_val_22.best.th
09/16 12:17:22 PM: Evaluating on: edges-rel-semeval, split: val
09/16 12:17:27 PM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 12:17:28 PM: Finished evaluating on: edges-rel-semeval
09/16 12:17:28 PM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 12:17:28 PM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-sts-cat/run
09/16 12:17:28 PM: Wrote all preds for split 'val' to ./experiments/rel-semeval-sts-cat/run
09/16 12:17:28 PM: Evaluating on: edges-rel-semeval, split: test
09/16 12:17:41 PM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 12:17:41 PM: Finished evaluating on: edges-rel-semeval
09/16 12:17:41 PM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 12:17:42 PM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-sts-cat/run
09/16 12:17:42 PM: Wrote all preds for split 'test' to ./experiments/rel-semeval-sts-cat/run
09/16 12:17:42 PM: Writing results for split 'val' to ./experiments/rel-semeval-sts-cat/results.tsv
09/16 12:17:42 PM: micro_avg: 0.000, macro_avg: 0.701, edges-rel-semeval_mcc: 0.694, edges-rel-semeval_acc: 0.581, edges-rel-semeval_precision: 0.808, edges-rel-semeval_recall: 0.620, edges-rel-semeval_f1: 0.701
09/16 12:17:42 PM: Done!
09/16 12:17:42 PM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
