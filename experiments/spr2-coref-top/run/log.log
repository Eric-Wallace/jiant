09/16 08:38:59 AM: Git branch: master
09/16 08:38:59 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:38:59 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-coref-top/",
  "exp_name": "experiments/spr2-coref-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-coref-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/coref",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/spr2-coref-top__run",
  "run_dir": "./experiments/spr2-coref-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:38:59 AM: Saved config to ./experiments/spr2-coref-top/run/params.conf
09/16 08:38:59 AM: Using random seed 1234
09/16 08:39:01 AM: Using GPU 0
09/16 08:39:01 AM: Loading tasks...
09/16 08:39:01 AM: Writing pre-preprocessed tasks to ./experiments/spr2-coref-top/
09/16 08:39:01 AM: 	Creating task edges-spr2 from scratch.
09/16 08:39:01 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:39:01 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:39:02 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:39:02 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:39:02 AM: 	Finished loading tasks: edges-spr2.
09/16 08:39:02 AM: 	Building vocab from scratch.
09/16 08:39:02 AM: 	Counting units for task edges-spr2.
09/16 08:39:02 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:39:03 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:39:03 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:39:03 AM: 	Saved vocab to ./experiments/spr2-coref-top/vocab
09/16 08:39:03 AM: Loading token dictionary from ./experiments/spr2-coref-top/vocab.
09/16 08:39:03 AM: 	Loaded vocab from ./experiments/spr2-coref-top/vocab
09/16 08:39:03 AM: 	Vocab namespace tokens: size 7943
09/16 08:39:03 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:39:03 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:39:03 AM: 	Vocab namespace chars: size 65
09/16 08:39:03 AM: 	Finished building vocab.
09/16 08:39:03 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:39:04 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-coref-top/preproc/edges-spr2__train_data
09/16 08:39:04 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:39:04 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-coref-top/preproc/edges-spr2__val_data
09/16 08:39:04 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:39:04 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-coref-top/preproc/edges-spr2__test_data
09/16 08:39:04 AM: 	Finished indexing tasks
09/16 08:39:04 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:39:04 AM: 	  Training on 
09/16 08:39:04 AM: 	  Evaluating on edges-spr2
09/16 08:39:04 AM: 	Finished loading tasks in 2.356s
09/16 08:39:04 AM: 	 Tasks: ['edges-spr2']
09/16 08:39:04 AM: Building model...
09/16 08:39:04 AM: Using BERT model (bert-base-uncased).
09/16 08:39:04 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:39:04 AM: models/coref
09/16 08:39:04 AM: loading configuration file models/coref/config.json
09/16 08:39:04 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:39:04 AM: loading weights file models/coref/pytorch_model.bin
09/16 08:39:15 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpulw1ib6w
09/16 08:39:17 AM: copying /tmp/tmpulw1ib6w to cache at ./experiments/spr2-coref-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:39:18 AM: creating metadata file for ./experiments/spr2-coref-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:39:18 AM: removing temp file /tmp/tmpulw1ib6w
09/16 08:39:18 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-coref-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:39:18 AM: Initializing parameters
09/16 08:39:18 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:39:18 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:39:18 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:39:18 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:39:18 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:39:18 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:39:18 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:39:23 AM: Model specification:
09/16 08:39:23 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:39:23 AM: Model parameters:
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:39:23 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:39:23 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:39:23 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:39:23 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:39:23 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:39:23 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:39:23 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:39:23 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:39:23 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:39:23 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:39:23 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:39:23 AM: Total number of parameters: 110144020 (1.10144e+08)
09/16 08:39:23 AM: Number of trainable parameters: 661780 (661780)
09/16 08:39:23 AM: Finished building model in 18.921s
09/16 08:39:23 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:39:24 AM: patience = 9
09/16 08:39:24 AM: val_interval = 100
09/16 08:39:24 AM: max_vals = 100
09/16 08:39:24 AM: cuda_device = 0
09/16 08:39:24 AM: grad_norm = 5.0
09/16 08:39:24 AM: grad_clipping = None
09/16 08:39:24 AM: lr_decay = 0.99
09/16 08:39:24 AM: min_lr = 1e-06
09/16 08:39:24 AM: keep_all_checkpoints = 0
09/16 08:39:24 AM: val_data_limit = 5000
09/16 08:39:24 AM: max_epochs = -1
09/16 08:39:24 AM: dec_val_scale = 250
09/16 08:39:24 AM: training_data_fraction = 1
09/16 08:39:24 AM: type = adam
09/16 08:39:24 AM: parameter_groups = None
09/16 08:39:24 AM: Number of trainable parameters: 661780
09/16 08:39:24 AM: infer_type_and_cast = True
09/16 08:39:24 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:39:24 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:39:24 AM: lr = 0.0001
09/16 08:39:24 AM: amsgrad = True
09/16 08:39:24 AM: type = reduce_on_plateau
09/16 08:39:24 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:39:24 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:39:24 AM: mode = max
09/16 08:39:24 AM: factor = 0.5
09/16 08:39:24 AM: patience = 3
09/16 08:39:24 AM: threshold = 0.0001
09/16 08:39:24 AM: threshold_mode = abs
09/16 08:39:24 AM: verbose = True
09/16 08:39:24 AM: type = adam
09/16 08:39:24 AM: parameter_groups = None
09/16 08:39:24 AM: Number of trainable parameters: 661780
09/16 08:39:24 AM: infer_type_and_cast = True
09/16 08:39:24 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:39:24 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:39:24 AM: lr = 0.0001
09/16 08:39:24 AM: amsgrad = True
09/16 08:39:24 AM: type = reduce_on_plateau
09/16 08:39:24 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:39:24 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:39:24 AM: mode = max
09/16 08:39:24 AM: factor = 0.5
09/16 08:39:24 AM: patience = 3
09/16 08:39:24 AM: threshold = 0.0001
09/16 08:39:24 AM: threshold_mode = abs
09/16 08:39:24 AM: verbose = True
09/16 08:39:24 AM: Starting training without restoring from a checkpoint.
09/16 08:39:24 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:39:24 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:39:33 AM: ***** Step 100 / Validation 1 *****
09/16 08:39:33 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:39:33 AM: Validating...
09/16 08:39:34 AM: Evaluate: task edges-spr2, batch 7 (10): mcc: 0.7043, acc: 0.0711, precision: 0.8522, recall: 0.7740, f1: 0.8112, edges-spr2_loss: 0.3137
09/16 08:39:34 AM: Best result seen so far for edges-spr2.
09/16 08:39:34 AM: Best result seen so far for micro.
09/16 08:39:34 AM: Best result seen so far for macro.
09/16 08:39:34 AM: Updating LR scheduler:
09/16 08:39:34 AM: 	Best result seen so far for macro_avg: 0.798
09/16 08:39:34 AM: 	# validation passes without improvement: 0
09/16 08:39:34 AM: edges-spr2_loss: training: 0.377887 validation: 0.343671
09/16 08:39:34 AM: macro_avg: validation: 0.798170
09/16 08:39:34 AM: micro_avg: validation: 0.000000
09/16 08:39:34 AM: edges-spr2_mcc: training: 0.619147 validation: 0.689205
09/16 08:39:34 AM: edges-spr2_acc: training: 0.043000 validation: 0.073016
09/16 08:39:34 AM: edges-spr2_precision: training: 0.779976 validation: 0.839671
09/16 08:39:34 AM: edges-spr2_recall: training: 0.728215 validation: 0.760578
09/16 08:39:34 AM: edges-spr2_f1: training: 0.753207 validation: 0.798170
09/16 08:39:34 AM: Global learning rate: 0.0001
09/16 08:39:34 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:39:42 AM: ***** Step 200 / Validation 2 *****
09/16 08:39:42 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:39:42 AM: Validating...
09/16 08:39:43 AM: Best result seen so far for edges-spr2.
09/16 08:39:43 AM: Best result seen so far for macro.
09/16 08:39:43 AM: Updating LR scheduler:
09/16 08:39:43 AM: 	Best result seen so far for macro_avg: 0.812
09/16 08:39:43 AM: 	# validation passes without improvement: 0
09/16 08:39:43 AM: edges-spr2_loss: training: 0.316778 validation: 0.326279
09/16 08:39:43 AM: macro_avg: validation: 0.812135
09/16 08:39:43 AM: micro_avg: validation: 0.000000
09/16 08:39:43 AM: edges-spr2_mcc: training: 0.689159 validation: 0.708042
09/16 08:39:43 AM: edges-spr2_acc: training: 0.065904 validation: 0.088889
09/16 08:39:43 AM: edges-spr2_precision: training: 0.824865 validation: 0.843879
09/16 08:39:43 AM: edges-spr2_recall: training: 0.773763 validation: 0.782692
09/16 08:39:43 AM: edges-spr2_f1: training: 0.798497 validation: 0.812135
09/16 08:39:43 AM: Global learning rate: 0.0001
09/16 08:39:43 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:39:44 AM: Update 205: task edges-spr2, batch 5 (205): mcc: 0.7130, acc: 0.0620, precision: 0.8400, recall: 0.7914, f1: 0.8150, edges-spr2_loss: 0.2994
09/16 08:39:52 AM: ***** Step 300 / Validation 3 *****
09/16 08:39:52 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:39:52 AM: Validating...
09/16 08:39:53 AM: Best result seen so far for edges-spr2.
09/16 08:39:53 AM: Best result seen so far for macro.
09/16 08:39:53 AM: Updating LR scheduler:
09/16 08:39:53 AM: 	Best result seen so far for macro_avg: 0.816
09/16 08:39:53 AM: 	# validation passes without improvement: 0
09/16 08:39:53 AM: edges-spr2_loss: training: 0.300287 validation: 0.320887
09/16 08:39:53 AM: macro_avg: validation: 0.815983
09/16 08:39:53 AM: micro_avg: validation: 0.000000
09/16 08:39:53 AM: edges-spr2_mcc: training: 0.705483 validation: 0.712260
09/16 08:39:53 AM: edges-spr2_acc: training: 0.075605 validation: 0.104762
09/16 08:39:53 AM: edges-spr2_precision: training: 0.834864 validation: 0.840930
09/16 08:39:53 AM: edges-spr2_recall: training: 0.785303 validation: 0.792473
09/16 08:39:53 AM: edges-spr2_f1: training: 0.809326 validation: 0.815983
09/16 08:39:53 AM: Global learning rate: 0.0001
09/16 08:39:53 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:39:54 AM: Update 307: task edges-spr2, batch 7 (307): mcc: 0.7123, acc: 0.0652, precision: 0.8256, recall: 0.8070, f1: 0.8162, edges-spr2_loss: 0.2880
09/16 08:40:01 AM: ***** Step 400 / Validation 4 *****
09/16 08:40:01 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:40:01 AM: Validating...
09/16 08:40:02 AM: Best result seen so far for edges-spr2.
09/16 08:40:02 AM: Best result seen so far for macro.
09/16 08:40:02 AM: Updating LR scheduler:
09/16 08:40:02 AM: 	Best result seen so far for macro_avg: 0.818
09/16 08:40:02 AM: 	# validation passes without improvement: 0
09/16 08:40:02 AM: edges-spr2_loss: training: 0.291850 validation: 0.315249
09/16 08:40:02 AM: macro_avg: validation: 0.818082
09/16 08:40:02 AM: micro_avg: validation: 0.000000
09/16 08:40:02 AM: edges-spr2_mcc: training: 0.713759 validation: 0.716078
09/16 08:40:02 AM: edges-spr2_acc: training: 0.075989 validation: 0.098413
09/16 08:40:02 AM: edges-spr2_precision: training: 0.836037 validation: 0.845160
09/16 08:40:02 AM: edges-spr2_recall: training: 0.795640 validation: 0.792686
09/16 08:40:02 AM: edges-spr2_f1: training: 0.815338 validation: 0.818082
09/16 08:40:02 AM: Global learning rate: 0.0001
09/16 08:40:02 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:40:04 AM: Update 418: task edges-spr2, batch 18 (418): mcc: 0.7141, acc: 0.0831, precision: 0.8362, recall: 0.7972, f1: 0.8162, edges-spr2_loss: 0.2909
09/16 08:40:11 AM: ***** Step 500 / Validation 5 *****
09/16 08:40:11 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:40:11 AM: Validating...
09/16 08:40:12 AM: Best result seen so far for edges-spr2.
09/16 08:40:12 AM: Best result seen so far for macro.
09/16 08:40:12 AM: Updating LR scheduler:
09/16 08:40:12 AM: 	Best result seen so far for macro_avg: 0.819
09/16 08:40:12 AM: 	# validation passes without improvement: 0
09/16 08:40:12 AM: edges-spr2_loss: training: 0.286040 validation: 0.313318
09/16 08:40:12 AM: macro_avg: validation: 0.818877
09/16 08:40:12 AM: micro_avg: validation: 0.000000
09/16 08:40:12 AM: edges-spr2_mcc: training: 0.717574 validation: 0.716341
09/16 08:40:12 AM: edges-spr2_acc: training: 0.079938 validation: 0.096825
09/16 08:40:12 AM: edges-spr2_precision: training: 0.838660 validation: 0.842058
09/16 08:40:12 AM: edges-spr2_recall: training: 0.798503 validation: 0.796938
09/16 08:40:12 AM: edges-spr2_f1: training: 0.818089 validation: 0.818877
09/16 08:40:12 AM: Global learning rate: 0.0001
09/16 08:40:12 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:40:14 AM: Update 522: task edges-spr2, batch 22 (522): mcc: 0.7249, acc: 0.1034, precision: 0.8415, recall: 0.8049, f1: 0.8228, edges-spr2_loss: 0.2821
09/16 08:40:20 AM: ***** Step 600 / Validation 6 *****
09/16 08:40:20 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:40:20 AM: Validating...
09/16 08:40:21 AM: Best result seen so far for edges-spr2.
09/16 08:40:21 AM: Best result seen so far for macro.
09/16 08:40:21 AM: Updating LR scheduler:
09/16 08:40:21 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:40:21 AM: 	# validation passes without improvement: 0
09/16 08:40:21 AM: edges-spr2_loss: training: 0.280806 validation: 0.310474
09/16 08:40:21 AM: macro_avg: validation: 0.821261
09/16 08:40:21 AM: micro_avg: validation: 0.000000
09/16 08:40:21 AM: edges-spr2_mcc: training: 0.724679 validation: 0.719452
09/16 08:40:21 AM: edges-spr2_acc: training: 0.090589 validation: 0.077778
09/16 08:40:21 AM: edges-spr2_precision: training: 0.839612 validation: 0.841894
09/16 08:40:21 AM: edges-spr2_recall: training: 0.807116 validation: 0.801616
09/16 08:40:21 AM: edges-spr2_f1: training: 0.823044 validation: 0.821261
09/16 08:40:21 AM: Global learning rate: 0.0001
09/16 08:40:21 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:40:24 AM: Update 631: task edges-spr2, batch 31 (631): mcc: 0.7281, acc: 0.0770, precision: 0.8440, recall: 0.8075, f1: 0.8253, edges-spr2_loss: 0.2771
09/16 08:40:30 AM: ***** Step 700 / Validation 7 *****
09/16 08:40:30 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:40:30 AM: Validating...
09/16 08:40:31 AM: Updating LR scheduler:
09/16 08:40:31 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:40:31 AM: 	# validation passes without improvement: 1
09/16 08:40:31 AM: edges-spr2_loss: training: 0.276562 validation: 0.309475
09/16 08:40:31 AM: macro_avg: validation: 0.819643
09/16 08:40:31 AM: micro_avg: validation: 0.000000
09/16 08:40:31 AM: edges-spr2_mcc: training: 0.727941 validation: 0.717811
09/16 08:40:31 AM: edges-spr2_acc: training: 0.086508 validation: 0.090476
09/16 08:40:31 AM: edges-spr2_precision: training: 0.843390 validation: 0.843919
09/16 08:40:31 AM: edges-spr2_recall: training: 0.807517 validation: 0.796726
09/16 08:40:31 AM: edges-spr2_f1: training: 0.825064 validation: 0.819643
09/16 08:40:31 AM: Global learning rate: 0.0001
09/16 08:40:31 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:40:34 AM: Update 733: task edges-spr2, batch 33 (733): mcc: 0.7198, acc: 0.0803, precision: 0.8368, recall: 0.8037, f1: 0.8199, edges-spr2_loss: 0.2822
09/16 08:40:40 AM: ***** Step 800 / Validation 8 *****
09/16 08:40:40 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:40:40 AM: Validating...
09/16 08:40:41 AM: Updating LR scheduler:
09/16 08:40:41 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:40:41 AM: 	# validation passes without improvement: 2
09/16 08:40:41 AM: edges-spr2_loss: training: 0.273910 validation: 0.311653
09/16 08:40:41 AM: macro_avg: validation: 0.818332
09/16 08:40:41 AM: micro_avg: validation: 0.000000
09/16 08:40:41 AM: edges-spr2_mcc: training: 0.729693 validation: 0.716849
09/16 08:40:41 AM: edges-spr2_acc: training: 0.089405 validation: 0.088889
09/16 08:40:41 AM: edges-spr2_precision: training: 0.843010 validation: 0.846906
09/16 08:40:41 AM: edges-spr2_recall: training: 0.810272 validation: 0.791622
09/16 08:40:41 AM: edges-spr2_f1: training: 0.826317 validation: 0.818332
09/16 08:40:41 AM: Global learning rate: 0.0001
09/16 08:40:41 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:40:45 AM: Update 841: task edges-spr2, batch 41 (841): mcc: 0.7297, acc: 0.0798, precision: 0.8459, recall: 0.8069, f1: 0.8260, edges-spr2_loss: 0.2740
09/16 08:40:50 AM: ***** Step 900 / Validation 9 *****
09/16 08:40:50 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:40:50 AM: Validating...
09/16 08:40:51 AM: Updating LR scheduler:
09/16 08:40:51 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:40:51 AM: 	# validation passes without improvement: 3
09/16 08:40:51 AM: edges-spr2_loss: training: 0.270787 validation: 0.315744
09/16 08:40:51 AM: macro_avg: validation: 0.820271
09/16 08:40:51 AM: micro_avg: validation: 0.000000
09/16 08:40:51 AM: edges-spr2_mcc: training: 0.733478 validation: 0.718968
09/16 08:40:51 AM: edges-spr2_acc: training: 0.088962 validation: 0.088889
09/16 08:40:51 AM: edges-spr2_precision: training: 0.847461 validation: 0.845252
09/16 08:40:51 AM: edges-spr2_recall: training: 0.809652 validation: 0.796726
09/16 08:40:51 AM: edges-spr2_f1: training: 0.828125 validation: 0.820271
09/16 08:40:51 AM: Global learning rate: 0.0001
09/16 08:40:51 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:40:55 AM: Update 945: task edges-spr2, batch 45 (945): mcc: 0.7303, acc: 0.0900, precision: 0.8442, recall: 0.8103, f1: 0.8269, edges-spr2_loss: 0.2720
09/16 08:41:00 AM: ***** Step 1000 / Validation 10 *****
09/16 08:41:00 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:41:00 AM: Validating...
09/16 08:41:01 AM: Updating LR scheduler:
09/16 08:41:01 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:41:01 AM: 	# validation passes without improvement: 0
09/16 08:41:01 AM: edges-spr2_loss: training: 0.270067 validation: 0.310424
09/16 08:41:01 AM: macro_avg: validation: 0.816830
09/16 08:41:01 AM: micro_avg: validation: 0.000000
09/16 08:41:01 AM: edges-spr2_mcc: training: 0.733078 validation: 0.715014
09/16 08:41:01 AM: edges-spr2_acc: training: 0.094782 validation: 0.088889
09/16 08:41:01 AM: edges-spr2_precision: training: 0.846970 validation: 0.847349
09/16 08:41:01 AM: edges-spr2_recall: training: 0.811386 validation: 0.788433
09/16 08:41:01 AM: edges-spr2_f1: training: 0.828796 validation: 0.816830
09/16 08:41:01 AM: Global learning rate: 5e-05
09/16 08:41:01 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:41:05 AM: Update 1049: task edges-spr2, batch 49 (1049): mcc: 0.7309, acc: 0.0862, precision: 0.8454, recall: 0.8080, f1: 0.8263, edges-spr2_loss: 0.2693
09/16 08:41:09 AM: ***** Step 1100 / Validation 11 *****
09/16 08:41:09 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:41:09 AM: Validating...
09/16 08:41:10 AM: Updating LR scheduler:
09/16 08:41:10 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:41:10 AM: 	# validation passes without improvement: 1
09/16 08:41:10 AM: edges-spr2_loss: training: 0.265960 validation: 0.310796
09/16 08:41:10 AM: macro_avg: validation: 0.819859
09/16 08:41:10 AM: micro_avg: validation: 0.000000
09/16 08:41:10 AM: edges-spr2_mcc: training: 0.736170 validation: 0.719115
09/16 08:41:10 AM: edges-spr2_acc: training: 0.091543 validation: 0.085714
09/16 08:41:10 AM: edges-spr2_precision: training: 0.847780 validation: 0.847989
09/16 08:41:10 AM: edges-spr2_recall: training: 0.813227 validation: 0.793536
09/16 08:41:10 AM: edges-spr2_f1: training: 0.830144 validation: 0.819859
09/16 08:41:10 AM: Global learning rate: 5e-05
09/16 08:41:10 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:41:15 AM: Update 1149: task edges-spr2, batch 49 (1149): mcc: 0.7342, acc: 0.0963, precision: 0.8472, recall: 0.8108, f1: 0.8286, edges-spr2_loss: 0.2670
09/16 08:41:19 AM: ***** Step 1200 / Validation 12 *****
09/16 08:41:19 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:41:19 AM: Validating...
09/16 08:41:20 AM: Updating LR scheduler:
09/16 08:41:20 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:41:20 AM: 	# validation passes without improvement: 2
09/16 08:41:20 AM: edges-spr2_loss: training: 0.264298 validation: 0.311564
09/16 08:41:20 AM: macro_avg: validation: 0.820061
09/16 08:41:20 AM: micro_avg: validation: 0.000000
09/16 08:41:20 AM: edges-spr2_mcc: training: 0.738073 validation: 0.717307
09/16 08:41:20 AM: edges-spr2_acc: training: 0.096328 validation: 0.082540
09/16 08:41:20 AM: edges-spr2_precision: training: 0.849733 validation: 0.839608
09/16 08:41:20 AM: edges-spr2_recall: training: 0.814153 validation: 0.801403
09/16 08:41:20 AM: edges-spr2_f1: training: 0.831563 validation: 0.820061
09/16 08:41:20 AM: Global learning rate: 5e-05
09/16 08:41:20 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:41:25 AM: Update 1256: task edges-spr2, batch 56 (1256): mcc: 0.7451, acc: 0.1011, precision: 0.8523, recall: 0.8210, f1: 0.8364, edges-spr2_loss: 0.2625
09/16 08:41:29 AM: ***** Step 1300 / Validation 13 *****
09/16 08:41:29 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:41:29 AM: Validating...
09/16 08:41:30 AM: Updating LR scheduler:
09/16 08:41:30 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:41:30 AM: 	# validation passes without improvement: 3
09/16 08:41:30 AM: edges-spr2_loss: training: 0.262899 validation: 0.312197
09/16 08:41:30 AM: macro_avg: validation: 0.819125
09/16 08:41:30 AM: micro_avg: validation: 0.000000
09/16 08:41:30 AM: edges-spr2_mcc: training: 0.742497 validation: 0.716562
09/16 08:41:30 AM: edges-spr2_acc: training: 0.099568 validation: 0.076190
09/16 08:41:30 AM: edges-spr2_precision: training: 0.851327 validation: 0.841633
09/16 08:41:30 AM: edges-spr2_recall: training: 0.817945 validation: 0.797789
09/16 08:41:30 AM: edges-spr2_f1: training: 0.834302 validation: 0.819125
09/16 08:41:30 AM: Global learning rate: 5e-05
09/16 08:41:30 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:41:35 AM: Update 1354: task edges-spr2, batch 54 (1354): mcc: 0.7428, acc: 0.0962, precision: 0.8538, recall: 0.8158, f1: 0.8344, edges-spr2_loss: 0.2632
09/16 08:41:39 AM: ***** Step 1400 / Validation 14 *****
09/16 08:41:39 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:41:39 AM: Validating...
09/16 08:41:40 AM: Updating LR scheduler:
09/16 08:41:40 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:41:40 AM: 	# validation passes without improvement: 0
09/16 08:41:40 AM: edges-spr2_loss: training: 0.261573 validation: 0.310270
09/16 08:41:40 AM: macro_avg: validation: 0.818532
09/16 08:41:40 AM: micro_avg: validation: 0.000000
09/16 08:41:40 AM: edges-spr2_mcc: training: 0.743514 validation: 0.717470
09/16 08:41:40 AM: edges-spr2_acc: training: 0.095982 validation: 0.085714
09/16 08:41:40 AM: edges-spr2_precision: training: 0.852189 validation: 0.848312
09/16 08:41:40 AM: edges-spr2_recall: training: 0.819220 validation: 0.790772
09/16 08:41:40 AM: edges-spr2_f1: training: 0.835379 validation: 0.818532
09/16 08:41:40 AM: Global learning rate: 2.5e-05
09/16 08:41:40 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:41:45 AM: Update 1456: task edges-spr2, batch 56 (1456): mcc: 0.7451, acc: 0.1030, precision: 0.8563, recall: 0.8167, f1: 0.8361, edges-spr2_loss: 0.2598
09/16 08:41:49 AM: ***** Step 1500 / Validation 15 *****
09/16 08:41:49 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:41:49 AM: Validating...
09/16 08:41:50 AM: Updating LR scheduler:
09/16 08:41:50 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:41:50 AM: 	# validation passes without improvement: 1
09/16 08:41:50 AM: edges-spr2_loss: training: 0.258681 validation: 0.309971
09/16 08:41:50 AM: macro_avg: validation: 0.821192
09/16 08:41:50 AM: micro_avg: validation: 0.000000
09/16 08:41:50 AM: edges-spr2_mcc: training: 0.745183 validation: 0.718656
09/16 08:41:50 AM: edges-spr2_acc: training: 0.099064 validation: 0.082540
09/16 08:41:50 AM: edges-spr2_precision: training: 0.854929 validation: 0.838953
09/16 08:41:50 AM: edges-spr2_recall: training: 0.818355 validation: 0.804168
09/16 08:41:50 AM: edges-spr2_f1: training: 0.836242 validation: 0.821192
09/16 08:41:50 AM: Global learning rate: 2.5e-05
09/16 08:41:50 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:41:55 AM: Update 1557: task edges-spr2, batch 57 (1557): mcc: 0.7429, acc: 0.1034, precision: 0.8522, recall: 0.8172, f1: 0.8343, edges-spr2_loss: 0.2607
09/16 08:41:58 AM: ***** Step 1600 / Validation 16 *****
09/16 08:41:58 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:41:58 AM: Validating...
09/16 08:41:59 AM: Updating LR scheduler:
09/16 08:41:59 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:41:59 AM: 	# validation passes without improvement: 2
09/16 08:41:59 AM: Ran out of early stopping patience. Stopping training.
09/16 08:41:59 AM: edges-spr2_loss: training: 0.260259 validation: 0.309596
09/16 08:41:59 AM: macro_avg: validation: 0.821055
09/16 08:41:59 AM: micro_avg: validation: 0.000000
09/16 08:41:59 AM: edges-spr2_mcc: training: 0.743743 validation: 0.719243
09/16 08:41:59 AM: edges-spr2_acc: training: 0.102763 validation: 0.073016
09/16 08:41:59 AM: edges-spr2_precision: training: 0.852798 validation: 0.842164
09/16 08:41:59 AM: edges-spr2_recall: training: 0.817994 validation: 0.800978
09/16 08:41:59 AM: edges-spr2_f1: training: 0.835033 validation: 0.821055
09/16 08:41:59 AM: Global learning rate: 2.5e-05
09/16 08:41:59 AM: Saving checkpoints to: ./experiments/spr2-coref-top/run
09/16 08:41:59 AM: Stopped training after 16 validation checks
09/16 08:41:59 AM: Trained edges-spr2 for 1600 batches or 22.857 epochs
09/16 08:41:59 AM: ***** VALIDATION RESULTS *****
09/16 08:41:59 AM: edges-spr2_f1 (for best val pass 6): edges-spr2_loss: 0.31047, macro_avg: 0.82126, micro_avg: 0.00000, edges-spr2_mcc: 0.71945, edges-spr2_acc: 0.07778, edges-spr2_precision: 0.84189, edges-spr2_recall: 0.80162, edges-spr2_f1: 0.82126
09/16 08:41:59 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.34367, macro_avg: 0.79817, micro_avg: 0.00000, edges-spr2_mcc: 0.68921, edges-spr2_acc: 0.07302, edges-spr2_precision: 0.83967, edges-spr2_recall: 0.76058, edges-spr2_f1: 0.79817
09/16 08:41:59 AM: macro_avg (for best val pass 6): edges-spr2_loss: 0.31047, macro_avg: 0.82126, micro_avg: 0.00000, edges-spr2_mcc: 0.71945, edges-spr2_acc: 0.07778, edges-spr2_precision: 0.84189, edges-spr2_recall: 0.80162, edges-spr2_f1: 0.82126
09/16 08:41:59 AM: Evaluating...
09/16 08:41:59 AM: Loaded model state from ./experiments/spr2-coref-top/run/edges-spr2/model_state_target_train_val_6.best.th
09/16 08:41:59 AM: Evaluating on: edges-spr2, split: val
09/16 08:42:00 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:42:00 AM: Finished evaluating on: edges-spr2
09/16 08:42:00 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:42:00 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-coref-top/run
09/16 08:42:00 AM: Wrote all preds for split 'val' to ./experiments/spr2-coref-top/run
09/16 08:42:00 AM: Evaluating on: edges-spr2, split: test
09/16 08:42:01 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:42:01 AM: Finished evaluating on: edges-spr2
09/16 08:42:01 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:42:01 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-coref-top/run
09/16 08:42:01 AM: Wrote all preds for split 'test' to ./experiments/spr2-coref-top/run
09/16 08:42:01 AM: Writing results for split 'val' to ./experiments/spr2-coref-top/results.tsv
09/16 08:42:01 AM: micro_avg: 0.000, macro_avg: 0.821, edges-spr2_mcc: 0.719, edges-spr2_acc: 0.078, edges-spr2_precision: 0.842, edges-spr2_recall: 0.802, edges-spr2_f1: 0.821
09/16 08:42:01 AM: Done!
09/16 08:42:01 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
