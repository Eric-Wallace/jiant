09/16 07:58:13 AM: Git branch: master
09/16 07:58:13 AM: Git SHA: a6b97574b819abe0c17f2f3300d1097e5c87dbde
09/16 07:58:13 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-mnli-only/",
  "exp_name": "experiments/rel-semeval-mnli-only",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-mnli-only/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/mnli",
  "pytorch_transformers_output_mode": "only",
  "remote_log_name": "experiments/rel-semeval-mnli-only__run",
  "run_dir": "./experiments/rel-semeval-mnli-only/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 07:58:13 AM: Saved config to ./experiments/rel-semeval-mnli-only/run/params.conf
09/16 07:58:13 AM: Using random seed 1234
09/16 07:58:14 AM: Using GPU 0
09/16 07:58:14 AM: Loading tasks...
09/16 07:58:14 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-mnli-only/
09/16 07:58:14 AM: 	Creating task edges-rel-semeval from scratch.
09/16 07:58:14 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 07:58:14 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 07:58:14 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 07:58:14 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 07:58:14 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 07:58:14 AM: 	Building vocab from scratch.
09/16 07:58:14 AM: 	Counting units for task edges-rel-semeval.
09/16 07:58:14 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 07:58:15 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:58:15 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 07:58:16 AM: 	Saved vocab to ./experiments/rel-semeval-mnli-only/vocab
09/16 07:58:16 AM: Loading token dictionary from ./experiments/rel-semeval-mnli-only/vocab.
09/16 07:58:16 AM: 	Loaded vocab from ./experiments/rel-semeval-mnli-only/vocab
09/16 07:58:16 AM: 	Vocab namespace bert_uncased: size 30524
09/16 07:58:16 AM: 	Vocab namespace tokens: size 16020
09/16 07:58:16 AM: 	Vocab namespace chars: size 59
09/16 07:58:16 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 07:58:16 AM: 	Finished building vocab.
09/16 07:58:16 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 07:58:16 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-mnli-only/preproc/edges-rel-semeval__train_data
09/16 07:58:16 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 07:58:17 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-mnli-only/preproc/edges-rel-semeval__val_data
09/16 07:58:17 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 07:58:17 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-mnli-only/preproc/edges-rel-semeval__test_data
09/16 07:58:17 AM: 	Finished indexing tasks
09/16 07:58:17 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 07:58:17 AM: 	  Training on 
09/16 07:58:17 AM: 	  Evaluating on edges-rel-semeval
09/16 07:58:17 AM: 	Finished loading tasks in 2.843s
09/16 07:58:17 AM: 	 Tasks: ['edges-rel-semeval']
09/16 07:58:17 AM: Building model...
09/16 07:58:17 AM: Using BERT model (bert-base-uncased).
09/16 07:58:17 AM: LOADING A FUNETUNED MODEL from: 
09/16 07:58:17 AM: models/mnli
09/16 07:58:17 AM: loading configuration file models/mnli/config.json
09/16 07:58:17 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "mnli",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 3,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 07:58:17 AM: loading weights file models/mnli/pytorch_model.bin
09/16 07:58:20 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpfww3pn0b
09/16 07:58:22 AM: copying /tmp/tmpfww3pn0b to cache at ./experiments/rel-semeval-mnli-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:58:22 AM: creating metadata file for ./experiments/rel-semeval-mnli-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:58:22 AM: removing temp file /tmp/tmpfww3pn0b
09/16 07:58:22 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-mnli-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:58:22 AM: Initializing parameters
09/16 07:58:22 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 07:58:22 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 07:58:22 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 07:58:22 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 07:58:22 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 07:58:22 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 07:58:22 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 07:58:27 AM: Model specification:
09/16 07:58:27 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 07:58:27 AM: Model parameters:
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:58:27 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 07:58:27 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 07:58:27 AM: Total number of parameters: 110143763 (1.10144e+08)
09/16 07:58:27 AM: Number of trainable parameters: 661523 (661523)
09/16 07:58:27 AM: Finished building model in 10.136s
09/16 07:58:27 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 07:58:28 AM: patience = 9
09/16 07:58:28 AM: val_interval = 100
09/16 07:58:28 AM: max_vals = 100
09/16 07:58:28 AM: cuda_device = 0
09/16 07:58:28 AM: grad_norm = 5.0
09/16 07:58:28 AM: grad_clipping = None
09/16 07:58:28 AM: lr_decay = 0.99
09/16 07:58:28 AM: min_lr = 1e-06
09/16 07:58:28 AM: keep_all_checkpoints = 0
09/16 07:58:28 AM: val_data_limit = 5000
09/16 07:58:28 AM: max_epochs = -1
09/16 07:58:28 AM: dec_val_scale = 250
09/16 07:58:28 AM: training_data_fraction = 1
09/16 07:58:28 AM: type = adam
09/16 07:58:28 AM: parameter_groups = None
09/16 07:58:28 AM: Number of trainable parameters: 661523
09/16 07:58:28 AM: infer_type_and_cast = True
09/16 07:58:28 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:58:28 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:58:28 AM: lr = 0.0001
09/16 07:58:28 AM: amsgrad = True
09/16 07:58:28 AM: type = reduce_on_plateau
09/16 07:58:28 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:58:28 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:58:28 AM: mode = max
09/16 07:58:28 AM: factor = 0.5
09/16 07:58:28 AM: patience = 3
09/16 07:58:28 AM: threshold = 0.0001
09/16 07:58:28 AM: threshold_mode = abs
09/16 07:58:28 AM: verbose = True
09/16 07:58:28 AM: type = adam
09/16 07:58:28 AM: parameter_groups = None
09/16 07:58:28 AM: Number of trainable parameters: 661523
09/16 07:58:28 AM: infer_type_and_cast = True
09/16 07:58:28 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:58:28 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:58:28 AM: lr = 0.0001
09/16 07:58:28 AM: amsgrad = True
09/16 07:58:28 AM: type = reduce_on_plateau
09/16 07:58:28 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:58:28 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:58:28 AM: mode = max
09/16 07:58:28 AM: factor = 0.5
09/16 07:58:28 AM: patience = 3
09/16 07:58:28 AM: threshold = 0.0001
09/16 07:58:28 AM: threshold_mode = abs
09/16 07:58:28 AM: verbose = True
09/16 07:58:28 AM: Starting training without restoring from a checkpoint.
09/16 07:58:28 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 07:58:28 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 07:58:33 AM: ***** Step 100 / Validation 1 *****
09/16 07:58:33 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:33 AM: Validating...
09/16 07:58:34 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:34 AM: Best result seen so far for micro.
09/16 07:58:34 AM: Best result seen so far for macro.
09/16 07:58:34 AM: Updating LR scheduler:
09/16 07:58:34 AM: 	Best result seen so far for macro_avg: 0.000
09/16 07:58:34 AM: 	# validation passes without improvement: 0
09/16 07:58:34 AM: edges-rel-semeval_loss: training: 0.283420 validation: 0.187447
09/16 07:58:34 AM: macro_avg: validation: 0.000000
09/16 07:58:34 AM: micro_avg: validation: 0.000000
09/16 07:58:34 AM: edges-rel-semeval_mcc: training: 0.011778 validation: 0.000000
09/16 07:58:34 AM: edges-rel-semeval_acc: training: 0.005676 validation: 0.000000
09/16 07:58:34 AM: edges-rel-semeval_precision: training: 0.065235 validation: 0.000000
09/16 07:58:34 AM: edges-rel-semeval_recall: training: 0.051719 validation: 0.000000
09/16 07:58:34 AM: edges-rel-semeval_f1: training: 0.057696 validation: 0.000000
09/16 07:58:34 AM: Global learning rate: 0.0001
09/16 07:58:34 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:58:38 AM: Update 200: task edges-rel-semeval, batch 100 (200): mcc: 0.0112, acc: 0.0006, precision: 0.2857, recall: 0.0006, f1: 0.0012, edges-rel-semeval_loss: 0.1862
09/16 07:58:38 AM: ***** Step 200 / Validation 2 *****
09/16 07:58:38 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:38 AM: Validating...
09/16 07:58:39 AM: Updating LR scheduler:
09/16 07:58:39 AM: 	Best result seen so far for macro_avg: 0.000
09/16 07:58:39 AM: 	# validation passes without improvement: 1
09/16 07:58:39 AM: edges-rel-semeval_loss: training: 0.186195 validation: 0.174172
09/16 07:58:39 AM: macro_avg: validation: 0.000000
09/16 07:58:39 AM: micro_avg: validation: 0.000000
09/16 07:58:39 AM: edges-rel-semeval_mcc: training: 0.011201 validation: 0.000000
09/16 07:58:39 AM: edges-rel-semeval_acc: training: 0.000625 validation: 0.000000
09/16 07:58:39 AM: edges-rel-semeval_precision: training: 0.285714 validation: 0.000000
09/16 07:58:39 AM: edges-rel-semeval_recall: training: 0.000625 validation: 0.000000
09/16 07:58:39 AM: edges-rel-semeval_f1: training: 0.001247 validation: 0.000000
09/16 07:58:39 AM: Global learning rate: 0.0001
09/16 07:58:39 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:58:43 AM: ***** Step 300 / Validation 3 *****
09/16 07:58:43 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:43 AM: Validating...
09/16 07:58:44 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:44 AM: Best result seen so far for macro.
09/16 07:58:44 AM: Updating LR scheduler:
09/16 07:58:44 AM: 	Best result seen so far for macro_avg: 0.046
09/16 07:58:44 AM: 	# validation passes without improvement: 0
09/16 07:58:44 AM: edges-rel-semeval_loss: training: 0.170711 validation: 0.158765
09/16 07:58:44 AM: macro_avg: validation: 0.045763
09/16 07:58:44 AM: micro_avg: validation: 0.000000
09/16 07:58:44 AM: edges-rel-semeval_mcc: training: 0.087679 validation: 0.138198
09/16 07:58:44 AM: edges-rel-semeval_acc: training: 0.012299 validation: 0.023499
09/16 07:58:44 AM: edges-rel-semeval_precision: training: 0.677966 validation: 0.870968
09/16 07:58:44 AM: edges-rel-semeval_recall: training: 0.012614 validation: 0.023499
09/16 07:58:44 AM: edges-rel-semeval_f1: training: 0.024768 validation: 0.045763
09/16 07:58:44 AM: Global learning rate: 0.0001
09/16 07:58:44 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:58:48 AM: ***** Step 400 / Validation 4 *****
09/16 07:58:48 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:48 AM: Validating...
09/16 07:58:48 AM: Evaluate: task edges-rel-semeval, batch 2 (36): mcc: 0.2542, acc: 0.0938, precision: 0.7500, recall: 0.0938, f1: 0.1667, edges-rel-semeval_loss: 0.1396
09/16 07:58:49 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:49 AM: Best result seen so far for macro.
09/16 07:58:49 AM: Updating LR scheduler:
09/16 07:58:49 AM: 	Best result seen so far for macro_avg: 0.133
09/16 07:58:49 AM: 	# validation passes without improvement: 0
09/16 07:58:49 AM: edges-rel-semeval_loss: training: 0.154175 validation: 0.145615
09/16 07:58:49 AM: macro_avg: validation: 0.132906
09/16 07:58:49 AM: micro_avg: validation: 0.000000
09/16 07:58:49 AM: edges-rel-semeval_mcc: training: 0.234605 validation: 0.236159
09/16 07:58:49 AM: edges-rel-semeval_acc: training: 0.074688 validation: 0.072237
09/16 07:58:49 AM: edges-rel-semeval_precision: training: 0.782051 validation: 0.830000
09/16 07:58:49 AM: edges-rel-semeval_recall: training: 0.076250 validation: 0.072237
09/16 07:58:49 AM: edges-rel-semeval_f1: training: 0.138952 validation: 0.132906
09/16 07:58:49 AM: Global learning rate: 0.0001
09/16 07:58:49 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:58:53 AM: ***** Step 500 / Validation 5 *****
09/16 07:58:53 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:53 AM: Validating...
09/16 07:58:54 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:54 AM: Best result seen so far for macro.
09/16 07:58:54 AM: Updating LR scheduler:
09/16 07:58:54 AM: 	Best result seen so far for macro_avg: 0.197
09/16 07:58:54 AM: 	# validation passes without improvement: 0
09/16 07:58:54 AM: edges-rel-semeval_loss: training: 0.143740 validation: 0.136993
09/16 07:58:54 AM: macro_avg: validation: 0.197399
09/16 07:58:54 AM: micro_avg: validation: 0.000000
09/16 07:58:54 AM: edges-rel-semeval_mcc: training: 0.302521 validation: 0.292065
09/16 07:58:54 AM: edges-rel-semeval_acc: training: 0.125197 validation: 0.111401
09/16 07:58:54 AM: edges-rel-semeval_precision: training: 0.762963 validation: 0.816456
09/16 07:58:54 AM: edges-rel-semeval_recall: training: 0.129927 validation: 0.112272
09/16 07:58:54 AM: edges-rel-semeval_f1: training: 0.222043 validation: 0.197399
09/16 07:58:54 AM: Global learning rate: 0.0001
09/16 07:58:54 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:58:56 AM: ***** Step 600 / Validation 6 *****
09/16 07:58:56 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:58:56 AM: Validating...
09/16 07:58:57 AM: Best result seen so far for edges-rel-semeval.
09/16 07:58:57 AM: Best result seen so far for macro.
09/16 07:58:57 AM: Updating LR scheduler:
09/16 07:58:57 AM: 	Best result seen so far for macro_avg: 0.270
09/16 07:58:57 AM: 	# validation passes without improvement: 0
09/16 07:58:57 AM: edges-rel-semeval_loss: training: 0.134453 validation: 0.130508
09/16 07:58:57 AM: macro_avg: validation: 0.269679
09/16 07:58:57 AM: micro_avg: validation: 0.000000
09/16 07:58:57 AM: edges-rel-semeval_mcc: training: 0.365406 validation: 0.353479
09/16 07:58:57 AM: edges-rel-semeval_acc: training: 0.186250 validation: 0.156658
09/16 07:58:57 AM: edges-rel-semeval_precision: training: 0.753071 validation: 0.829596
09/16 07:58:57 AM: edges-rel-semeval_recall: training: 0.191563 validation: 0.161010
09/16 07:58:57 AM: edges-rel-semeval_f1: training: 0.305431 validation: 0.269679
09/16 07:58:57 AM: Global learning rate: 0.0001
09/16 07:58:57 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:58:58 AM: Update 623: task edges-rel-semeval, batch 23 (623): mcc: 0.4077, acc: 0.2188, precision: 0.7727, recall: 0.2310, f1: 0.3556, edges-rel-semeval_loss: 0.1293
09/16 07:59:02 AM: ***** Step 700 / Validation 7 *****
09/16 07:59:02 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:02 AM: Validating...
09/16 07:59:03 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:03 AM: Best result seen so far for macro.
09/16 07:59:03 AM: Updating LR scheduler:
09/16 07:59:03 AM: 	Best result seen so far for macro_avg: 0.325
09/16 07:59:03 AM: 	# validation passes without improvement: 0
09/16 07:59:03 AM: edges-rel-semeval_loss: training: 0.125283 validation: 0.126276
09/16 07:59:03 AM: macro_avg: validation: 0.325419
09/16 07:59:03 AM: micro_avg: validation: 0.000000
09/16 07:59:03 AM: edges-rel-semeval_mcc: training: 0.416125 validation: 0.395537
09/16 07:59:03 AM: edges-rel-semeval_acc: training: 0.229896 validation: 0.200174
09/16 07:59:03 AM: edges-rel-semeval_precision: training: 0.772267 validation: 0.823322
09/16 07:59:03 AM: edges-rel-semeval_recall: training: 0.240618 validation: 0.202785
09/16 07:59:03 AM: edges-rel-semeval_f1: training: 0.366915 validation: 0.325419
09/16 07:59:03 AM: Global learning rate: 0.0001
09/16 07:59:03 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:59:06 AM: ***** Step 800 / Validation 8 *****
09/16 07:59:06 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:06 AM: Validating...
09/16 07:59:07 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:07 AM: Best result seen so far for macro.
09/16 07:59:07 AM: Updating LR scheduler:
09/16 07:59:07 AM: 	Best result seen so far for macro_avg: 0.374
09/16 07:59:07 AM: 	# validation passes without improvement: 0
09/16 07:59:07 AM: edges-rel-semeval_loss: training: 0.121174 validation: 0.121994
09/16 07:59:07 AM: macro_avg: validation: 0.374497
09/16 07:59:07 AM: micro_avg: validation: 0.000000
09/16 07:59:07 AM: edges-rel-semeval_mcc: training: 0.455887 validation: 0.431867
09/16 07:59:07 AM: edges-rel-semeval_acc: training: 0.268750 validation: 0.241950
09/16 07:59:07 AM: edges-rel-semeval_precision: training: 0.781599 validation: 0.818182
09/16 07:59:07 AM: edges-rel-semeval_recall: training: 0.284063 validation: 0.242820
09/16 07:59:07 AM: edges-rel-semeval_f1: training: 0.416686 validation: 0.374497
09/16 07:59:07 AM: Global learning rate: 0.0001
09/16 07:59:07 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:59:08 AM: Update 825: task edges-rel-semeval, batch 25 (825): mcc: 0.4542, acc: 0.2775, precision: 0.7649, recall: 0.2887, f1: 0.4192, edges-rel-semeval_loss: 0.1175
09/16 07:59:11 AM: ***** Step 900 / Validation 9 *****
09/16 07:59:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:11 AM: Validating...
09/16 07:59:12 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:12 AM: Best result seen so far for macro.
09/16 07:59:12 AM: Updating LR scheduler:
09/16 07:59:12 AM: 	Best result seen so far for macro_avg: 0.392
09/16 07:59:12 AM: 	# validation passes without improvement: 0
09/16 07:59:12 AM: edges-rel-semeval_loss: training: 0.115182 validation: 0.120258
09/16 07:59:12 AM: macro_avg: validation: 0.392131
09/16 07:59:12 AM: micro_avg: validation: 0.000000
09/16 07:59:12 AM: edges-rel-semeval_mcc: training: 0.467135 validation: 0.440241
09/16 07:59:12 AM: edges-rel-semeval_acc: training: 0.288553 validation: 0.255875
09/16 07:59:12 AM: edges-rel-semeval_precision: training: 0.766059 validation: 0.795213
09/16 07:59:12 AM: edges-rel-semeval_recall: training: 0.304636 validation: 0.260226
09/16 07:59:12 AM: edges-rel-semeval_f1: training: 0.435921 validation: 0.392131
09/16 07:59:12 AM: Global learning rate: 0.0001
09/16 07:59:12 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:59:15 AM: ***** Step 1000 / Validation 10 *****
09/16 07:59:15 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:15 AM: Validating...
09/16 07:59:16 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:16 AM: Best result seen so far for macro.
09/16 07:59:16 AM: Updating LR scheduler:
09/16 07:59:16 AM: 	Best result seen so far for macro_avg: 0.411
09/16 07:59:16 AM: 	# validation passes without improvement: 0
09/16 07:59:16 AM: edges-rel-semeval_loss: training: 0.109080 validation: 0.118633
09/16 07:59:16 AM: macro_avg: validation: 0.410587
09/16 07:59:16 AM: micro_avg: validation: 0.000000
09/16 07:59:16 AM: edges-rel-semeval_mcc: training: 0.521042 validation: 0.454198
09/16 07:59:16 AM: edges-rel-semeval_acc: training: 0.334375 validation: 0.269800
09/16 07:59:16 AM: edges-rel-semeval_precision: training: 0.806360 validation: 0.795000
09/16 07:59:16 AM: edges-rel-semeval_recall: training: 0.356562 validation: 0.276762
09/16 07:59:16 AM: edges-rel-semeval_f1: training: 0.494475 validation: 0.410587
09/16 07:59:16 AM: Global learning rate: 0.0001
09/16 07:59:16 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:59:18 AM: Update 1022: task edges-rel-semeval, batch 22 (1022): mcc: 0.4766, acc: 0.3196, precision: 0.7335, recall: 0.3324, f1: 0.4575, edges-rel-semeval_loss: 0.1111
09/16 07:59:21 AM: ***** Step 1100 / Validation 11 *****
09/16 07:59:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:21 AM: Validating...
09/16 07:59:21 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:21 AM: Best result seen so far for macro.
09/16 07:59:21 AM: Updating LR scheduler:
09/16 07:59:21 AM: 	Best result seen so far for macro_avg: 0.457
09/16 07:59:21 AM: 	# validation passes without improvement: 0
09/16 07:59:21 AM: edges-rel-semeval_loss: training: 0.107189 validation: 0.116574
09/16 07:59:21 AM: macro_avg: validation: 0.457108
09/16 07:59:21 AM: micro_avg: validation: 0.000000
09/16 07:59:21 AM: edges-rel-semeval_mcc: training: 0.521197 validation: 0.484751
09/16 07:59:21 AM: edges-rel-semeval_acc: training: 0.354147 validation: 0.312446
09/16 07:59:21 AM: edges-rel-semeval_precision: training: 0.775805 validation: 0.772257
09/16 07:59:21 AM: edges-rel-semeval_recall: training: 0.372122 validation: 0.324630
09/16 07:59:21 AM: edges-rel-semeval_f1: training: 0.502984 validation: 0.457108
09/16 07:59:21 AM: Global learning rate: 0.0001
09/16 07:59:21 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:59:26 AM: ***** Step 1200 / Validation 12 *****
09/16 07:59:26 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:26 AM: Validating...
09/16 07:59:26 AM: Updating LR scheduler:
09/16 07:59:26 AM: 	Best result seen so far for macro_avg: 0.457
09/16 07:59:26 AM: 	# validation passes without improvement: 1
09/16 07:59:26 AM: edges-rel-semeval_loss: training: 0.102292 validation: 0.116027
09/16 07:59:26 AM: macro_avg: validation: 0.440806
09/16 07:59:26 AM: micro_avg: validation: 0.000000
09/16 07:59:26 AM: edges-rel-semeval_mcc: training: 0.556426 validation: 0.477713
09/16 07:59:26 AM: edges-rel-semeval_acc: training: 0.380000 validation: 0.297650
09/16 07:59:26 AM: edges-rel-semeval_precision: training: 0.801227 validation: 0.797267
09/16 07:59:26 AM: edges-rel-semeval_recall: training: 0.408125 validation: 0.304613
09/16 07:59:26 AM: edges-rel-semeval_f1: training: 0.540787 validation: 0.440806
09/16 07:59:26 AM: Global learning rate: 0.0001
09/16 07:59:26 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:59:28 AM: Update 1258: task edges-rel-semeval, batch 58 (1258): mcc: 0.5470, acc: 0.3793, precision: 0.7747, recall: 0.4095, f1: 0.5358, edges-rel-semeval_loss: 0.1018
09/16 07:59:30 AM: ***** Step 1300 / Validation 13 *****
09/16 07:59:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:30 AM: Validating...
09/16 07:59:30 AM: Updating LR scheduler:
09/16 07:59:30 AM: 	Best result seen so far for macro_avg: 0.457
09/16 07:59:30 AM: 	# validation passes without improvement: 2
09/16 07:59:30 AM: edges-rel-semeval_loss: training: 0.099701 validation: 0.114909
09/16 07:59:30 AM: macro_avg: validation: 0.451815
09/16 07:59:30 AM: micro_avg: validation: 0.000000
09/16 07:59:30 AM: edges-rel-semeval_mcc: training: 0.553649 validation: 0.487612
09/16 07:59:30 AM: edges-rel-semeval_acc: training: 0.385367 validation: 0.305483
09/16 07:59:30 AM: edges-rel-semeval_precision: training: 0.780806 validation: 0.804009
09/16 07:59:30 AM: edges-rel-semeval_recall: training: 0.415642 validation: 0.314186
09/16 07:59:30 AM: edges-rel-semeval_f1: training: 0.542498 validation: 0.451815
09/16 07:59:30 AM: Global learning rate: 0.0001
09/16 07:59:30 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:59:34 AM: ***** Step 1400 / Validation 14 *****
09/16 07:59:34 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:34 AM: Validating...
09/16 07:59:35 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:35 AM: Best result seen so far for macro.
09/16 07:59:35 AM: Updating LR scheduler:
09/16 07:59:35 AM: 	Best result seen so far for macro_avg: 0.473
09/16 07:59:35 AM: 	# validation passes without improvement: 0
09/16 07:59:35 AM: edges-rel-semeval_loss: training: 0.095346 validation: 0.114024
09/16 07:59:35 AM: macro_avg: validation: 0.472508
09/16 07:59:35 AM: micro_avg: validation: 0.000000
09/16 07:59:35 AM: edges-rel-semeval_mcc: training: 0.589761 validation: 0.496750
09/16 07:59:35 AM: edges-rel-semeval_acc: training: 0.419687 validation: 0.328111
09/16 07:59:35 AM: edges-rel-semeval_precision: training: 0.809630 validation: 0.772727
09/16 07:59:35 AM: edges-rel-semeval_recall: training: 0.451875 validation: 0.340296
09/16 07:59:35 AM: edges-rel-semeval_f1: training: 0.580024 validation: 0.472508
09/16 07:59:35 AM: Global learning rate: 0.0001
09/16 07:59:35 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:59:38 AM: Update 1493: task edges-rel-semeval, batch 93 (1493): mcc: 0.5766, acc: 0.4143, precision: 0.7932, recall: 0.4422, f1: 0.5679, edges-rel-semeval_loss: 0.0973
09/16 07:59:38 AM: ***** Step 1500 / Validation 15 *****
09/16 07:59:38 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:38 AM: Validating...
09/16 07:59:39 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:39 AM: Best result seen so far for macro.
09/16 07:59:39 AM: Updating LR scheduler:
09/16 07:59:39 AM: 	Best result seen so far for macro_avg: 0.473
09/16 07:59:39 AM: 	# validation passes without improvement: 0
09/16 07:59:39 AM: edges-rel-semeval_loss: training: 0.097257 validation: 0.113232
09/16 07:59:39 AM: macro_avg: validation: 0.473395
09/16 07:59:39 AM: micro_avg: validation: 0.000000
09/16 07:59:39 AM: edges-rel-semeval_mcc: training: 0.576495 validation: 0.502533
09/16 07:59:39 AM: edges-rel-semeval_acc: training: 0.415000 validation: 0.326371
09/16 07:59:39 AM: edges-rel-semeval_precision: training: 0.792389 validation: 0.796296
09/16 07:59:39 AM: edges-rel-semeval_recall: training: 0.442500 validation: 0.336815
09/16 07:59:39 AM: edges-rel-semeval_f1: training: 0.567876 validation: 0.473395
09/16 07:59:39 AM: Global learning rate: 0.0001
09/16 07:59:39 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:59:43 AM: ***** Step 1600 / Validation 16 *****
09/16 07:59:43 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:43 AM: Validating...
09/16 07:59:44 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:44 AM: Best result seen so far for macro.
09/16 07:59:44 AM: Updating LR scheduler:
09/16 07:59:44 AM: 	Best result seen so far for macro_avg: 0.487
09/16 07:59:44 AM: 	# validation passes without improvement: 0
09/16 07:59:44 AM: edges-rel-semeval_loss: training: 0.089239 validation: 0.113068
09/16 07:59:44 AM: macro_avg: validation: 0.487375
09/16 07:59:44 AM: micro_avg: validation: 0.000000
09/16 07:59:44 AM: edges-rel-semeval_mcc: training: 0.608724 validation: 0.503288
09/16 07:59:44 AM: edges-rel-semeval_acc: training: 0.439609 validation: 0.349869
09/16 07:59:44 AM: edges-rel-semeval_precision: training: 0.814416 validation: 0.749097
09/16 07:59:44 AM: edges-rel-semeval_recall: training: 0.477452 validation: 0.361184
09/16 07:59:44 AM: edges-rel-semeval_f1: training: 0.601988 validation: 0.487375
09/16 07:59:44 AM: Global learning rate: 0.0001
09/16 07:59:44 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:59:46 AM: ***** Step 1700 / Validation 17 *****
09/16 07:59:46 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:46 AM: Validating...
09/16 07:59:47 AM: Updating LR scheduler:
09/16 07:59:47 AM: 	Best result seen so far for macro_avg: 0.487
09/16 07:59:47 AM: 	# validation passes without improvement: 1
09/16 07:59:47 AM: edges-rel-semeval_loss: training: 0.091776 validation: 0.114127
09/16 07:59:47 AM: macro_avg: validation: 0.469586
09/16 07:59:47 AM: micro_avg: validation: 0.000000
09/16 07:59:47 AM: edges-rel-semeval_mcc: training: 0.614554 validation: 0.496018
09/16 07:59:47 AM: edges-rel-semeval_acc: training: 0.460000 validation: 0.328111
09/16 07:59:47 AM: edges-rel-semeval_precision: training: 0.809721 validation: 0.779798
09/16 07:59:47 AM: edges-rel-semeval_recall: training: 0.489375 validation: 0.335944
09/16 07:59:47 AM: edges-rel-semeval_f1: training: 0.610051 validation: 0.469586
09/16 07:59:47 AM: Global learning rate: 0.0001
09/16 07:59:47 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:59:48 AM: Update 1721: task edges-rel-semeval, batch 21 (1721): mcc: 0.6053, acc: 0.4463, precision: 0.7990, recall: 0.4821, f1: 0.6014, edges-rel-semeval_loss: 0.0895
09/16 07:59:52 AM: ***** Step 1800 / Validation 18 *****
09/16 07:59:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:52 AM: Validating...
09/16 07:59:52 AM: Best result seen so far for edges-rel-semeval.
09/16 07:59:52 AM: Best result seen so far for macro.
09/16 07:59:52 AM: Updating LR scheduler:
09/16 07:59:52 AM: 	Best result seen so far for macro_avg: 0.491
09/16 07:59:52 AM: 	# validation passes without improvement: 0
09/16 07:59:52 AM: edges-rel-semeval_loss: training: 0.086143 validation: 0.113557
09/16 07:59:52 AM: macro_avg: validation: 0.491228
09/16 07:59:52 AM: micro_avg: validation: 0.000000
09/16 07:59:52 AM: edges-rel-semeval_mcc: training: 0.641886 validation: 0.506225
09/16 07:59:52 AM: edges-rel-semeval_acc: training: 0.484705 validation: 0.352480
09/16 07:59:52 AM: edges-rel-semeval_precision: training: 0.825349 validation: 0.748663
09/16 07:59:52 AM: edges-rel-semeval_recall: training: 0.521602 validation: 0.365535
09/16 07:59:52 AM: edges-rel-semeval_f1: training: 0.639227 validation: 0.491228
09/16 07:59:52 AM: Global learning rate: 0.0001
09/16 07:59:52 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:59:57 AM: ***** Step 1900 / Validation 19 *****
09/16 07:59:57 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:59:57 AM: Validating...
09/16 07:59:58 AM: Updating LR scheduler:
09/16 07:59:58 AM: 	Best result seen so far for macro_avg: 0.491
09/16 07:59:58 AM: 	# validation passes without improvement: 1
09/16 07:59:58 AM: edges-rel-semeval_loss: training: 0.087950 validation: 0.113337
09/16 07:59:58 AM: macro_avg: validation: 0.482430
09/16 07:59:58 AM: micro_avg: validation: 0.000000
09/16 07:59:58 AM: edges-rel-semeval_mcc: training: 0.622448 validation: 0.502623
09/16 07:59:58 AM: edges-rel-semeval_acc: training: 0.465938 validation: 0.339426
09/16 07:59:58 AM: edges-rel-semeval_precision: training: 0.797264 validation: 0.764151
09/16 07:59:58 AM: edges-rel-semeval_recall: training: 0.510000 validation: 0.352480
09/16 07:59:58 AM: edges-rel-semeval_f1: training: 0.622070 validation: 0.482430
09/16 07:59:58 AM: Global learning rate: 0.0001
09/16 07:59:58 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 07:59:59 AM: Update 1936: task edges-rel-semeval, batch 36 (1936): mcc: 0.6349, acc: 0.4791, precision: 0.8247, recall: 0.5111, f1: 0.6311, edges-rel-semeval_loss: 0.0860
09/16 08:00:01 AM: ***** Step 2000 / Validation 20 *****
09/16 08:00:01 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:01 AM: Validating...
09/16 08:00:01 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:01 AM: Best result seen so far for macro.
09/16 08:00:01 AM: Updating LR scheduler:
09/16 08:00:01 AM: 	Best result seen so far for macro_avg: 0.498
09/16 08:00:01 AM: 	# validation passes without improvement: 0
09/16 08:00:01 AM: edges-rel-semeval_loss: training: 0.082089 validation: 0.113910
09/16 08:00:01 AM: macro_avg: validation: 0.497690
09/16 08:00:01 AM: micro_avg: validation: 0.000000
09/16 08:00:01 AM: edges-rel-semeval_mcc: training: 0.658911 validation: 0.509362
09/16 08:00:01 AM: edges-rel-semeval_acc: training: 0.507096 validation: 0.359443
09/16 08:00:01 AM: edges-rel-semeval_precision: training: 0.836585 validation: 0.739280
09/16 08:00:01 AM: edges-rel-semeval_recall: training: 0.540839 validation: 0.375109
09/16 08:00:01 AM: edges-rel-semeval_f1: training: 0.656962 validation: 0.497690
09/16 08:00:01 AM: Global learning rate: 0.0001
09/16 08:00:01 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:00:06 AM: ***** Step 2100 / Validation 21 *****
09/16 08:00:06 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:06 AM: Validating...
09/16 08:00:07 AM: Updating LR scheduler:
09/16 08:00:07 AM: 	Best result seen so far for macro_avg: 0.498
09/16 08:00:07 AM: 	# validation passes without improvement: 1
09/16 08:00:07 AM: edges-rel-semeval_loss: training: 0.082762 validation: 0.114188
09/16 08:00:07 AM: macro_avg: validation: 0.491415
09/16 08:00:07 AM: micro_avg: validation: 0.000000
09/16 08:00:07 AM: edges-rel-semeval_mcc: training: 0.649464 validation: 0.510576
09/16 08:00:07 AM: edges-rel-semeval_acc: training: 0.500938 validation: 0.348999
09/16 08:00:07 AM: edges-rel-semeval_precision: training: 0.810811 validation: 0.768519
09/16 08:00:07 AM: edges-rel-semeval_recall: training: 0.543750 validation: 0.361184
09/16 08:00:07 AM: edges-rel-semeval_f1: training: 0.650954 validation: 0.491415
09/16 08:00:07 AM: Global learning rate: 0.0001
09/16 08:00:07 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:00:09 AM: Update 2153: task edges-rel-semeval, batch 53 (2153): mcc: 0.6207, acc: 0.4727, precision: 0.7882, recall: 0.5135, f1: 0.6219, edges-rel-semeval_loss: 0.0848
09/16 08:00:11 AM: ***** Step 2200 / Validation 22 *****
09/16 08:00:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:11 AM: Validating...
09/16 08:00:12 AM: Updating LR scheduler:
09/16 08:00:12 AM: 	Best result seen so far for macro_avg: 0.498
09/16 08:00:12 AM: 	# validation passes without improvement: 2
09/16 08:00:12 AM: edges-rel-semeval_loss: training: 0.080407 validation: 0.114356
09/16 08:00:12 AM: macro_avg: validation: 0.495935
09/16 08:00:12 AM: micro_avg: validation: 0.000000
09/16 08:00:12 AM: edges-rel-semeval_mcc: training: 0.659544 validation: 0.509210
09/16 08:00:12 AM: edges-rel-semeval_acc: training: 0.514033 validation: 0.359443
09/16 08:00:12 AM: edges-rel-semeval_precision: training: 0.817844 validation: 0.745201
09/16 08:00:12 AM: edges-rel-semeval_recall: training: 0.555030 validation: 0.371628
09/16 08:00:12 AM: edges-rel-semeval_f1: training: 0.661281 validation: 0.495935
09/16 08:00:12 AM: Global learning rate: 0.0001
09/16 08:00:12 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:00:16 AM: ***** Step 2300 / Validation 23 *****
09/16 08:00:16 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:16 AM: Validating...
09/16 08:00:16 AM: Updating LR scheduler:
09/16 08:00:16 AM: 	Best result seen so far for macro_avg: 0.498
09/16 08:00:16 AM: 	# validation passes without improvement: 3
09/16 08:00:16 AM: edges-rel-semeval_loss: training: 0.079810 validation: 0.115634
09/16 08:00:16 AM: macro_avg: validation: 0.493627
09/16 08:00:16 AM: micro_avg: validation: 0.000000
09/16 08:00:16 AM: edges-rel-semeval_mcc: training: 0.658139 validation: 0.505941
09/16 08:00:16 AM: edges-rel-semeval_acc: training: 0.506563 validation: 0.357702
09/16 08:00:16 AM: edges-rel-semeval_precision: training: 0.820382 validation: 0.738302
09/16 08:00:16 AM: edges-rel-semeval_recall: training: 0.550937 validation: 0.370757
09/16 08:00:16 AM: edges-rel-semeval_f1: training: 0.659189 validation: 0.493627
09/16 08:00:16 AM: Global learning rate: 0.0001
09/16 08:00:16 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:00:19 AM: Update 2377: task edges-rel-semeval, batch 77 (2377): mcc: 0.6781, acc: 0.5310, precision: 0.8249, recall: 0.5803, f1: 0.6813, edges-rel-semeval_loss: 0.0772
09/16 08:00:21 AM: ***** Step 2400 / Validation 24 *****
09/16 08:00:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:21 AM: Validating...
09/16 08:00:22 AM: Updating LR scheduler:
09/16 08:00:22 AM: 	Best result seen so far for macro_avg: 0.498
09/16 08:00:22 AM: 	# validation passes without improvement: 0
09/16 08:00:22 AM: edges-rel-semeval_loss: training: 0.076294 validation: 0.114909
09/16 08:00:22 AM: macro_avg: validation: 0.495316
09/16 08:00:22 AM: micro_avg: validation: 0.000000
09/16 08:00:22 AM: edges-rel-semeval_mcc: training: 0.681962 validation: 0.511139
09/16 08:00:22 AM: edges-rel-semeval_acc: training: 0.534532 validation: 0.353351
09/16 08:00:22 AM: edges-rel-semeval_precision: training: 0.825778 validation: 0.756708
09/16 08:00:22 AM: edges-rel-semeval_recall: training: 0.585935 validation: 0.368146
09/16 08:00:22 AM: edges-rel-semeval_f1: training: 0.685482 validation: 0.495316
09/16 08:00:22 AM: Global learning rate: 5e-05
09/16 08:00:22 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:00:25 AM: ***** Step 2500 / Validation 25 *****
09/16 08:00:25 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:25 AM: Validating...
09/16 08:00:25 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:25 AM: Best result seen so far for macro.
09/16 08:00:25 AM: Updating LR scheduler:
09/16 08:00:25 AM: 	Best result seen so far for macro_avg: 0.501
09/16 08:00:25 AM: 	# validation passes without improvement: 0
09/16 08:00:25 AM: edges-rel-semeval_loss: training: 0.075118 validation: 0.113873
09/16 08:00:25 AM: macro_avg: validation: 0.501160
09/16 08:00:25 AM: micro_avg: validation: 0.000000
09/16 08:00:25 AM: edges-rel-semeval_mcc: training: 0.685894 validation: 0.514617
09/16 08:00:25 AM: edges-rel-semeval_acc: training: 0.545000 validation: 0.361184
09/16 08:00:25 AM: edges-rel-semeval_precision: training: 0.829451 validation: 0.751304
09/16 08:00:25 AM: edges-rel-semeval_recall: training: 0.589688 validation: 0.375979
09/16 08:00:25 AM: edges-rel-semeval_f1: training: 0.689315 validation: 0.501160
09/16 08:00:25 AM: Global learning rate: 5e-05
09/16 08:00:25 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:00:30 AM: Update 2581: task edges-rel-semeval, batch 81 (2581): mcc: 0.6833, acc: 0.5373, precision: 0.8239, recall: 0.5895, f1: 0.6873, edges-rel-semeval_loss: 0.0760
09/16 08:00:30 AM: ***** Step 2600 / Validation 26 *****
09/16 08:00:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:30 AM: Validating...
09/16 08:00:31 AM: Updating LR scheduler:
09/16 08:00:31 AM: 	Best result seen so far for macro_avg: 0.501
09/16 08:00:31 AM: 	# validation passes without improvement: 1
09/16 08:00:31 AM: edges-rel-semeval_loss: training: 0.075209 validation: 0.115227
09/16 08:00:31 AM: macro_avg: validation: 0.497973
09/16 08:00:31 AM: micro_avg: validation: 0.000000
09/16 08:00:31 AM: edges-rel-semeval_mcc: training: 0.688776 validation: 0.510559
09/16 08:00:31 AM: edges-rel-semeval_acc: training: 0.543046 validation: 0.358573
09/16 08:00:31 AM: edges-rel-semeval_precision: training: 0.826562 validation: 0.743945
09/16 08:00:31 AM: edges-rel-semeval_recall: training: 0.596657 validation: 0.374238
09/16 08:00:31 AM: edges-rel-semeval_f1: training: 0.693040 validation: 0.497973
09/16 08:00:31 AM: Global learning rate: 5e-05
09/16 08:00:31 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:00:34 AM: ***** Step 2700 / Validation 27 *****
09/16 08:00:34 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:34 AM: Validating...
09/16 08:00:36 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:36 AM: Best result seen so far for macro.
09/16 08:00:36 AM: Updating LR scheduler:
09/16 08:00:36 AM: 	Best result seen so far for macro_avg: 0.507
09/16 08:00:36 AM: 	# validation passes without improvement: 0
09/16 08:00:36 AM: edges-rel-semeval_loss: training: 0.072274 validation: 0.114722
09/16 08:00:36 AM: macro_avg: validation: 0.507205
09/16 08:00:36 AM: micro_avg: validation: 0.000000
09/16 08:00:36 AM: edges-rel-semeval_mcc: training: 0.704983 validation: 0.519315
09/16 08:00:36 AM: edges-rel-semeval_acc: training: 0.562813 validation: 0.367276
09/16 08:00:36 AM: edges-rel-semeval_precision: training: 0.851982 validation: 0.750853
09/16 08:00:36 AM: edges-rel-semeval_recall: training: 0.604375 validation: 0.382942
09/16 08:00:36 AM: edges-rel-semeval_f1: training: 0.707130 validation: 0.507205
09/16 08:00:36 AM: Global learning rate: 5e-05
09/16 08:00:36 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:00:39 AM: ***** Step 2800 / Validation 28 *****
09/16 08:00:39 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:39 AM: Validating...
09/16 08:00:39 AM: Updating LR scheduler:
09/16 08:00:39 AM: 	Best result seen so far for macro_avg: 0.507
09/16 08:00:39 AM: 	# validation passes without improvement: 1
09/16 08:00:39 AM: edges-rel-semeval_loss: training: 0.073717 validation: 0.115302
09/16 08:00:39 AM: macro_avg: validation: 0.504269
09/16 08:00:39 AM: micro_avg: validation: 0.000000
09/16 08:00:39 AM: edges-rel-semeval_mcc: training: 0.686891 validation: 0.512394
09/16 08:00:39 AM: edges-rel-semeval_acc: training: 0.542416 validation: 0.366406
09/16 08:00:39 AM: edges-rel-semeval_precision: training: 0.831186 validation: 0.728618
09/16 08:00:39 AM: edges-rel-semeval_recall: training: 0.590035 validation: 0.385553
09/16 08:00:39 AM: edges-rel-semeval_f1: training: 0.690151 validation: 0.504269
09/16 08:00:39 AM: Global learning rate: 5e-05
09/16 08:00:39 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:00:40 AM: Update 2807: task edges-rel-semeval, batch 7 (2807): mcc: 0.7376, acc: 0.5893, precision: 0.8727, recall: 0.6429, f1: 0.7404, edges-rel-semeval_loss: 0.0678
09/16 08:00:43 AM: ***** Step 2900 / Validation 29 *****
09/16 08:00:43 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:43 AM: Validating...
09/16 08:00:45 AM: Updating LR scheduler:
09/16 08:00:45 AM: 	Best result seen so far for macro_avg: 0.507
09/16 08:00:45 AM: 	# validation passes without improvement: 2
09/16 08:00:45 AM: edges-rel-semeval_loss: training: 0.070344 validation: 0.115640
09/16 08:00:45 AM: macro_avg: validation: 0.507172
09/16 08:00:45 AM: micro_avg: validation: 0.000000
09/16 08:00:45 AM: edges-rel-semeval_mcc: training: 0.714887 validation: 0.517894
09/16 08:00:45 AM: edges-rel-semeval_acc: training: 0.579375 validation: 0.371628
09/16 08:00:45 AM: edges-rel-semeval_precision: training: 0.848575 validation: 0.744108
09/16 08:00:45 AM: edges-rel-semeval_recall: training: 0.623438 validation: 0.384682
09/16 08:00:45 AM: edges-rel-semeval_f1: training: 0.718789 validation: 0.507172
09/16 08:00:45 AM: Global learning rate: 5e-05
09/16 08:00:45 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:00:46 AM: ***** Step 3000 / Validation 30 *****
09/16 08:00:46 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:46 AM: Validating...
09/16 08:00:47 AM: Best result seen so far for edges-rel-semeval.
09/16 08:00:47 AM: Best result seen so far for macro.
09/16 08:00:47 AM: Updating LR scheduler:
09/16 08:00:47 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:00:47 AM: 	# validation passes without improvement: 0
09/16 08:00:47 AM: edges-rel-semeval_loss: training: 0.071704 validation: 0.114571
09/16 08:00:47 AM: macro_avg: validation: 0.521595
09/16 08:00:47 AM: micro_avg: validation: 0.000000
09/16 08:00:47 AM: edges-rel-semeval_mcc: training: 0.708524 validation: 0.524009
09/16 08:00:47 AM: edges-rel-semeval_acc: training: 0.566562 validation: 0.389034
09/16 08:00:47 AM: edges-rel-semeval_precision: training: 0.844473 validation: 0.716895
09/16 08:00:47 AM: edges-rel-semeval_recall: training: 0.615937 validation: 0.409922
09/16 08:00:47 AM: edges-rel-semeval_f1: training: 0.712324 validation: 0.521595
09/16 08:00:47 AM: Global learning rate: 5e-05
09/16 08:00:47 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:00:49 AM: ***** Step 3100 / Validation 31 *****
09/16 08:00:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:49 AM: Validating...
09/16 08:00:49 AM: Updating LR scheduler:
09/16 08:00:49 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:00:49 AM: 	# validation passes without improvement: 1
09/16 08:00:49 AM: edges-rel-semeval_loss: training: 0.068982 validation: 0.115895
09/16 08:00:49 AM: macro_avg: validation: 0.514254
09/16 08:00:49 AM: micro_avg: validation: 0.000000
09/16 08:00:49 AM: edges-rel-semeval_mcc: training: 0.722914 validation: 0.518422
09/16 08:00:49 AM: edges-rel-semeval_acc: training: 0.583097 validation: 0.378590
09/16 08:00:49 AM: edges-rel-semeval_precision: training: 0.852119 validation: 0.718750
09/16 08:00:49 AM: edges-rel-semeval_recall: training: 0.634185 validation: 0.400348
09/16 08:00:49 AM: edges-rel-semeval_f1: training: 0.727174 validation: 0.514254
09/16 08:00:49 AM: Global learning rate: 5e-05
09/16 08:00:49 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:00:50 AM: Update 3133: task edges-rel-semeval, batch 33 (3133): mcc: 0.7192, acc: 0.5805, precision: 0.8438, recall: 0.6345, f1: 0.7243, edges-rel-semeval_loss: 0.0705
09/16 08:00:51 AM: ***** Step 3200 / Validation 32 *****
09/16 08:00:51 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:51 AM: Validating...
09/16 08:00:51 AM: Updating LR scheduler:
09/16 08:00:51 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:00:51 AM: 	# validation passes without improvement: 2
09/16 08:00:51 AM: edges-rel-semeval_loss: training: 0.069504 validation: 0.115717
09/16 08:00:51 AM: macro_avg: validation: 0.513865
09/16 08:00:51 AM: micro_avg: validation: 0.000000
09/16 08:00:51 AM: edges-rel-semeval_mcc: training: 0.713897 validation: 0.521306
09/16 08:00:51 AM: edges-rel-semeval_acc: training: 0.576875 validation: 0.373368
09/16 08:00:51 AM: edges-rel-semeval_precision: training: 0.838817 validation: 0.734628
09/16 08:00:51 AM: edges-rel-semeval_recall: training: 0.629375 validation: 0.395126
09/16 08:00:51 AM: edges-rel-semeval_f1: training: 0.719157 validation: 0.513865
09/16 08:00:51 AM: Global learning rate: 5e-05
09/16 08:00:51 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:00:53 AM: ***** Step 3300 / Validation 33 *****
09/16 08:00:53 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:53 AM: Validating...
09/16 08:00:54 AM: Updating LR scheduler:
09/16 08:00:54 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:00:54 AM: 	# validation passes without improvement: 3
09/16 08:00:54 AM: edges-rel-semeval_loss: training: 0.067882 validation: 0.116669
09/16 08:00:54 AM: macro_avg: validation: 0.514092
09/16 08:00:54 AM: micro_avg: validation: 0.000000
09/16 08:00:54 AM: edges-rel-semeval_mcc: training: 0.724695 validation: 0.520471
09/16 08:00:54 AM: edges-rel-semeval_acc: training: 0.590665 validation: 0.374238
09/16 08:00:54 AM: edges-rel-semeval_precision: training: 0.843170 validation: 0.729600
09/16 08:00:54 AM: edges-rel-semeval_recall: training: 0.644276 validation: 0.396867
09/16 08:00:54 AM: edges-rel-semeval_f1: training: 0.730425 validation: 0.514092
09/16 08:00:54 AM: Global learning rate: 5e-05
09/16 08:00:54 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:00:55 AM: ***** Step 3400 / Validation 34 *****
09/16 08:00:55 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:55 AM: Validating...
09/16 08:00:56 AM: Updating LR scheduler:
09/16 08:00:56 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:00:56 AM: 	# validation passes without improvement: 0
09/16 08:00:56 AM: edges-rel-semeval_loss: training: 0.067767 validation: 0.117063
09/16 08:00:56 AM: macro_avg: validation: 0.500287
09/16 08:00:56 AM: micro_avg: validation: 0.000000
09/16 08:00:56 AM: edges-rel-semeval_mcc: training: 0.722366 validation: 0.511009
09/16 08:00:56 AM: edges-rel-semeval_acc: training: 0.590313 validation: 0.362054
09/16 08:00:56 AM: edges-rel-semeval_precision: training: 0.851091 validation: 0.737288
09/16 08:00:56 AM: edges-rel-semeval_recall: training: 0.634063 validation: 0.378590
09/16 08:00:56 AM: edges-rel-semeval_f1: training: 0.726719 validation: 0.500287
09/16 08:00:56 AM: Global learning rate: 2.5e-05
09/16 08:00:56 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:00:58 AM: ***** Step 3500 / Validation 35 *****
09/16 08:00:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:00:58 AM: Validating...
09/16 08:00:59 AM: Updating LR scheduler:
09/16 08:00:59 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:00:59 AM: 	# validation passes without improvement: 1
09/16 08:00:59 AM: edges-rel-semeval_loss: training: 0.067443 validation: 0.116188
09/16 08:00:59 AM: macro_avg: validation: 0.514640
09/16 08:00:59 AM: micro_avg: validation: 0.000000
09/16 08:00:59 AM: edges-rel-semeval_mcc: training: 0.725168 validation: 0.520763
09/16 08:00:59 AM: edges-rel-semeval_acc: training: 0.590665 validation: 0.379460
09/16 08:00:59 AM: edges-rel-semeval_precision: training: 0.848144 validation: 0.728868
09/16 08:00:59 AM: edges-rel-semeval_recall: training: 0.641123 validation: 0.397737
09/16 08:00:59 AM: edges-rel-semeval_f1: training: 0.730244 validation: 0.514640
09/16 08:00:59 AM: Global learning rate: 2.5e-05
09/16 08:00:59 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:01:00 AM: Update 3555: task edges-rel-semeval, batch 55 (3555): mcc: 0.7380, acc: 0.6034, precision: 0.8681, recall: 0.6472, f1: 0.7415, edges-rel-semeval_loss: 0.0645
09/16 08:01:00 AM: ***** Step 3600 / Validation 36 *****
09/16 08:01:00 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:00 AM: Validating...
09/16 08:01:01 AM: Updating LR scheduler:
09/16 08:01:01 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:01:01 AM: 	# validation passes without improvement: 2
09/16 08:01:01 AM: edges-rel-semeval_loss: training: 0.066312 validation: 0.116779
09/16 08:01:01 AM: macro_avg: validation: 0.501134
09/16 08:01:01 AM: micro_avg: validation: 0.000000
09/16 08:01:01 AM: edges-rel-semeval_mcc: training: 0.731009 validation: 0.507857
09/16 08:01:01 AM: edges-rel-semeval_acc: training: 0.593125 validation: 0.367276
09/16 08:01:01 AM: edges-rel-semeval_precision: training: 0.856965 validation: 0.718699
09/16 08:01:01 AM: edges-rel-semeval_recall: training: 0.644063 validation: 0.384682
09/16 08:01:01 AM: edges-rel-semeval_f1: training: 0.735415 validation: 0.501134
09/16 08:01:01 AM: Global learning rate: 2.5e-05
09/16 08:01:01 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:01:03 AM: ***** Step 3700 / Validation 37 *****
09/16 08:01:03 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:03 AM: Validating...
09/16 08:01:03 AM: Updating LR scheduler:
09/16 08:01:03 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:01:03 AM: 	# validation passes without improvement: 3
09/16 08:01:03 AM: edges-rel-semeval_loss: training: 0.065932 validation: 0.116691
09/16 08:01:03 AM: macro_avg: validation: 0.507684
09/16 08:01:03 AM: micro_avg: validation: 0.000000
09/16 08:01:03 AM: edges-rel-semeval_mcc: training: 0.736188 validation: 0.516134
09/16 08:01:03 AM: edges-rel-semeval_acc: training: 0.603595 validation: 0.370757
09/16 08:01:03 AM: edges-rel-semeval_precision: training: 0.857439 validation: 0.733553
09/16 08:01:03 AM: edges-rel-semeval_recall: training: 0.652476 validation: 0.388164
09/16 08:01:03 AM: edges-rel-semeval_f1: training: 0.741046 validation: 0.507684
09/16 08:01:03 AM: Global learning rate: 2.5e-05
09/16 08:01:03 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:01:05 AM: ***** Step 3800 / Validation 38 *****
09/16 08:01:05 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:05 AM: Validating...
09/16 08:01:06 AM: Updating LR scheduler:
09/16 08:01:06 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:01:06 AM: 	# validation passes without improvement: 0
09/16 08:01:06 AM: edges-rel-semeval_loss: training: 0.065280 validation: 0.116790
09/16 08:01:06 AM: macro_avg: validation: 0.504556
09/16 08:01:06 AM: micro_avg: validation: 0.000000
09/16 08:01:06 AM: edges-rel-semeval_mcc: training: 0.725250 validation: 0.512869
09/16 08:01:06 AM: edges-rel-semeval_acc: training: 0.593750 validation: 0.370757
09/16 08:01:06 AM: edges-rel-semeval_precision: training: 0.839951 validation: 0.729819
09/16 08:01:06 AM: edges-rel-semeval_recall: training: 0.647812 validation: 0.385553
09/16 08:01:06 AM: edges-rel-semeval_f1: training: 0.731475 validation: 0.504556
09/16 08:01:06 AM: Global learning rate: 1.25e-05
09/16 08:01:06 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:01:08 AM: ***** Step 3900 / Validation 39 *****
09/16 08:01:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:08 AM: Validating...
09/16 08:01:09 AM: Updating LR scheduler:
09/16 08:01:09 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:01:09 AM: 	# validation passes without improvement: 1
09/16 08:01:09 AM: edges-rel-semeval_loss: training: 0.064505 validation: 0.116214
09/16 08:01:09 AM: macro_avg: validation: 0.516527
09/16 08:01:09 AM: micro_avg: validation: 0.000000
09/16 08:01:09 AM: edges-rel-semeval_mcc: training: 0.737187 validation: 0.521477
09/16 08:01:09 AM: edges-rel-semeval_acc: training: 0.604226 validation: 0.382071
09/16 08:01:09 AM: edges-rel-semeval_precision: training: 0.859576 validation: 0.724843
09/16 08:01:09 AM: edges-rel-semeval_recall: training: 0.652476 validation: 0.401218
09/16 08:01:09 AM: edges-rel-semeval_f1: training: 0.741843 validation: 0.516527
09/16 08:01:09 AM: Global learning rate: 1.25e-05
09/16 08:01:09 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:01:10 AM: Update 3975: task edges-rel-semeval, batch 75 (3975): mcc: 0.7507, acc: 0.6242, precision: 0.8640, recall: 0.6721, f1: 0.7560, edges-rel-semeval_loss: 0.0646
09/16 08:01:10 AM: ***** Step 4000 / Validation 40 *****
09/16 08:01:10 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:01:10 AM: Validating...
09/16 08:01:10 AM: Updating LR scheduler:
09/16 08:01:10 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:01:10 AM: 	# validation passes without improvement: 2
09/16 08:01:10 AM: Ran out of early stopping patience. Stopping training.
09/16 08:01:10 AM: edges-rel-semeval_loss: training: 0.063817 validation: 0.116938
09/16 08:01:10 AM: macro_avg: validation: 0.509132
09/16 08:01:10 AM: micro_avg: validation: 0.000000
09/16 08:01:10 AM: edges-rel-semeval_mcc: training: 0.750439 validation: 0.518538
09/16 08:01:10 AM: edges-rel-semeval_acc: training: 0.620313 validation: 0.372498
09/16 08:01:10 AM: edges-rel-semeval_precision: training: 0.864386 validation: 0.739635
09/16 08:01:10 AM: edges-rel-semeval_recall: training: 0.671250 validation: 0.388164
09/16 08:01:10 AM: edges-rel-semeval_f1: training: 0.755673 validation: 0.509132
09/16 08:01:10 AM: Global learning rate: 1.25e-05
09/16 08:01:10 AM: Saving checkpoints to: ./experiments/rel-semeval-mnli-only/run
09/16 08:01:11 AM: Stopped training after 40 validation checks
09/16 08:01:11 AM: Trained edges-rel-semeval for 4000 batches or 18.605 epochs
09/16 08:01:11 AM: ***** VALIDATION RESULTS *****
09/16 08:01:11 AM: edges-rel-semeval_f1 (for best val pass 30): edges-rel-semeval_loss: 0.11457, macro_avg: 0.52159, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.52401, edges-rel-semeval_acc: 0.38903, edges-rel-semeval_precision: 0.71689, edges-rel-semeval_recall: 0.40992, edges-rel-semeval_f1: 0.52159
09/16 08:01:11 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.18745, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 08:01:11 AM: macro_avg (for best val pass 30): edges-rel-semeval_loss: 0.11457, macro_avg: 0.52159, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.52401, edges-rel-semeval_acc: 0.38903, edges-rel-semeval_precision: 0.71689, edges-rel-semeval_recall: 0.40992, edges-rel-semeval_f1: 0.52159
09/16 08:01:11 AM: Evaluating...
09/16 08:01:11 AM: Loaded model state from ./experiments/rel-semeval-mnli-only/run/edges-rel-semeval/model_state_target_train_val_30.best.th
09/16 08:01:11 AM: Evaluating on: edges-rel-semeval, split: val
09/16 08:01:11 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:01:11 AM: Finished evaluating on: edges-rel-semeval
09/16 08:01:11 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 08:01:11 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-mnli-only/run
09/16 08:01:11 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-mnli-only/run
09/16 08:01:11 AM: Evaluating on: edges-rel-semeval, split: test
09/16 08:01:12 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:01:12 AM: Finished evaluating on: edges-rel-semeval
09/16 08:01:12 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 08:01:12 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-mnli-only/run
09/16 08:01:12 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-mnli-only/run
09/16 08:01:12 AM: Writing results for split 'val' to ./experiments/rel-semeval-mnli-only/results.tsv
09/16 08:01:12 AM: micro_avg: 0.000, macro_avg: 0.522, edges-rel-semeval_mcc: 0.524, edges-rel-semeval_acc: 0.389, edges-rel-semeval_precision: 0.717, edges-rel-semeval_recall: 0.410, edges-rel-semeval_f1: 0.522
09/16 08:01:12 AM: Done!
09/16 08:01:12 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
