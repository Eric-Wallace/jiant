09/16 07:34:39 AM: Git branch: master
09/16 07:34:39 AM: Git SHA: 6a6c097582fb44e9e93b08dab8c29a3ff91459bf
09/16 07:34:40 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/",
  "exp_name": "experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/RANDOM_WITH_GOOD_EMBEDDINGS",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top__run",
  "run_dir": "./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 07:34:40 AM: Saved config to ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run/params.conf
09/16 07:34:40 AM: Using random seed 1234
09/16 07:34:41 AM: Using GPU 0
09/16 07:34:41 AM: Loading tasks...
09/16 07:34:41 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/
09/16 07:34:41 AM: 	Creating task edges-rel-semeval from scratch.
09/16 07:34:41 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 07:34:41 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 07:34:41 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 07:34:41 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 07:34:41 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 07:34:41 AM: 	Building vocab from scratch.
09/16 07:34:41 AM: 	Counting units for task edges-rel-semeval.
09/16 07:34:41 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 07:34:42 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:34:42 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 07:34:42 AM: 	Saved vocab to ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/vocab
09/16 07:34:42 AM: Loading token dictionary from ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/vocab.
09/16 07:34:42 AM: 	Loaded vocab from ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/vocab
09/16 07:34:42 AM: 	Vocab namespace bert_uncased: size 30524
09/16 07:34:42 AM: 	Vocab namespace tokens: size 16020
09/16 07:34:42 AM: 	Vocab namespace chars: size 59
09/16 07:34:42 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 07:34:42 AM: 	Finished building vocab.
09/16 07:34:42 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 07:34:43 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/preproc/edges-rel-semeval__train_data
09/16 07:34:43 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 07:34:43 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/preproc/edges-rel-semeval__val_data
09/16 07:34:43 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 07:34:44 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/preproc/edges-rel-semeval__test_data
09/16 07:34:44 AM: 	Finished indexing tasks
09/16 07:34:44 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 07:34:44 AM: 	  Training on 
09/16 07:34:44 AM: 	  Evaluating on edges-rel-semeval
09/16 07:34:44 AM: 	Finished loading tasks in 3.114s
09/16 07:34:44 AM: 	 Tasks: ['edges-rel-semeval']
09/16 07:34:44 AM: Building model...
09/16 07:34:44 AM: Using BERT model (bert-base-uncased).
09/16 07:34:44 AM: LOADING A RANDOMLY WEIGHTS BERT
09/16 07:34:46 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json not found in cache or force_download set to True, downloading to /tmp/tmpjudo039n
09/16 07:34:47 AM: copying /tmp/tmpjudo039n to cache at ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 07:34:47 AM: creating metadata file for ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 07:34:47 AM: removing temp file /tmp/tmpjudo039n
09/16 07:34:47 AM: loading configuration file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json from cache at ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 07:34:47 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 07:34:49 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin not found in cache or force_download set to True, downloading to /tmp/tmp7jufetkk
09/16 07:35:33 AM: copying /tmp/tmp7jufetkk to cache at ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 07:35:33 AM: creating metadata file for ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 07:35:33 AM: removing temp file /tmp/tmp7jufetkk
09/16 07:35:33 AM: loading weights file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin from cache at ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 07:35:37 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpcyg0bdbi
09/16 07:35:41 AM: copying /tmp/tmpcyg0bdbi to cache at ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:35:41 AM: creating metadata file for ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:35:41 AM: removing temp file /tmp/tmpcyg0bdbi
09/16 07:35:41 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:35:41 AM: Initializing parameters
09/16 07:35:41 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 07:35:41 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 07:35:41 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 07:35:41 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 07:35:41 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 07:35:41 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 07:35:41 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 07:35:45 AM: Model specification:
09/16 07:35:45 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 07:35:45 AM: Model parameters:
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:35:45 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:35:45 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 07:35:45 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:35:45 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 07:35:45 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:35:45 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 07:35:45 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:35:45 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 07:35:45 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:35:45 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 07:35:45 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 07:35:45 AM: Total number of parameters: 110143763 (1.10144e+08)
09/16 07:35:45 AM: Number of trainable parameters: 661523 (661523)
09/16 07:35:45 AM: Finished building model in 61.664s
09/16 07:35:45 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 07:35:46 AM: patience = 9
09/16 07:35:46 AM: val_interval = 100
09/16 07:35:46 AM: max_vals = 100
09/16 07:35:46 AM: cuda_device = 0
09/16 07:35:46 AM: grad_norm = 5.0
09/16 07:35:46 AM: grad_clipping = None
09/16 07:35:46 AM: lr_decay = 0.99
09/16 07:35:46 AM: min_lr = 1e-06
09/16 07:35:46 AM: keep_all_checkpoints = 0
09/16 07:35:46 AM: val_data_limit = 5000
09/16 07:35:46 AM: max_epochs = -1
09/16 07:35:46 AM: dec_val_scale = 250
09/16 07:35:46 AM: training_data_fraction = 1
09/16 07:35:46 AM: type = adam
09/16 07:35:46 AM: parameter_groups = None
09/16 07:35:46 AM: Number of trainable parameters: 661523
09/16 07:35:46 AM: infer_type_and_cast = True
09/16 07:35:46 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:35:46 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:35:46 AM: lr = 0.0001
09/16 07:35:46 AM: amsgrad = True
09/16 07:35:46 AM: type = reduce_on_plateau
09/16 07:35:46 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:35:46 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:35:46 AM: mode = max
09/16 07:35:46 AM: factor = 0.5
09/16 07:35:46 AM: patience = 3
09/16 07:35:46 AM: threshold = 0.0001
09/16 07:35:46 AM: threshold_mode = abs
09/16 07:35:46 AM: verbose = True
09/16 07:35:46 AM: type = adam
09/16 07:35:46 AM: parameter_groups = None
09/16 07:35:46 AM: Number of trainable parameters: 661523
09/16 07:35:46 AM: infer_type_and_cast = True
09/16 07:35:46 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:35:46 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:35:46 AM: lr = 0.0001
09/16 07:35:46 AM: amsgrad = True
09/16 07:35:46 AM: type = reduce_on_plateau
09/16 07:35:46 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:35:46 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:35:46 AM: mode = max
09/16 07:35:46 AM: factor = 0.5
09/16 07:35:46 AM: patience = 3
09/16 07:35:46 AM: threshold = 0.0001
09/16 07:35:46 AM: threshold_mode = abs
09/16 07:35:46 AM: verbose = True
09/16 07:35:46 AM: Starting training without restoring from a checkpoint.
09/16 07:35:46 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 07:35:46 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 07:35:52 AM: ***** Step 100 / Validation 1 *****
09/16 07:35:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:35:52 AM: Validating...
09/16 07:35:54 AM: Best result seen so far for edges-rel-semeval.
09/16 07:35:54 AM: Best result seen so far for micro.
09/16 07:35:54 AM: Best result seen so far for macro.
09/16 07:35:54 AM: Updating LR scheduler:
09/16 07:35:54 AM: 	Best result seen so far for macro_avg: 0.000
09/16 07:35:54 AM: 	# validation passes without improvement: 0
09/16 07:35:54 AM: edges-rel-semeval_loss: training: 0.245977 validation: 0.195376
09/16 07:35:54 AM: macro_avg: validation: 0.000000
09/16 07:35:54 AM: micro_avg: validation: 0.000000
09/16 07:35:54 AM: edges-rel-semeval_mcc: training: 0.003005 validation: 0.000000
09/16 07:35:54 AM: edges-rel-semeval_acc: training: 0.001261 validation: 0.000000
09/16 07:35:54 AM: edges-rel-semeval_precision: training: 0.059002 validation: 0.000000
09/16 07:35:54 AM: edges-rel-semeval_recall: training: 0.012299 validation: 0.000000
09/16 07:35:54 AM: edges-rel-semeval_f1: training: 0.020355 validation: 0.000000
09/16 07:35:54 AM: Global learning rate: 0.0001
09/16 07:35:54 AM: Saving checkpoints to: ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run
09/16 07:35:56 AM: Update 133: task edges-rel-semeval, batch 33 (133): mcc: 0.0000, acc: 0.0000, precision: 0.0000, recall: 0.0000, f1: 0.0000, edges-rel-semeval_loss: 0.1998
09/16 07:36:00 AM: ***** Step 200 / Validation 2 *****
09/16 07:36:00 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:00 AM: Validating...
09/16 07:36:02 AM: Updating LR scheduler:
09/16 07:36:02 AM: 	Best result seen so far for macro_avg: 0.000
09/16 07:36:02 AM: 	# validation passes without improvement: 1
09/16 07:36:02 AM: edges-rel-semeval_loss: training: 0.197950 validation: 0.191073
09/16 07:36:02 AM: macro_avg: validation: 0.000000
09/16 07:36:02 AM: micro_avg: validation: 0.000000
09/16 07:36:02 AM: edges-rel-semeval_mcc: training: 0.000000 validation: 0.000000
09/16 07:36:02 AM: edges-rel-semeval_acc: training: 0.000000 validation: 0.000000
09/16 07:36:02 AM: edges-rel-semeval_precision: training: 0.000000 validation: 0.000000
09/16 07:36:02 AM: edges-rel-semeval_recall: training: 0.000000 validation: 0.000000
09/16 07:36:02 AM: edges-rel-semeval_f1: training: 0.000000 validation: 0.000000
09/16 07:36:02 AM: Global learning rate: 0.0001
09/16 07:36:02 AM: Saving checkpoints to: ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run
09/16 07:36:06 AM: Update 262: task edges-rel-semeval, batch 62 (262): mcc: 0.0000, acc: 0.0000, precision: 0.0000, recall: 0.0000, f1: 0.0000, edges-rel-semeval_loss: 0.1939
09/16 07:36:08 AM: ***** Step 300 / Validation 3 *****
09/16 07:36:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:08 AM: Validating...
09/16 07:36:11 AM: Updating LR scheduler:
09/16 07:36:11 AM: 	Best result seen so far for macro_avg: 0.000
09/16 07:36:11 AM: 	# validation passes without improvement: 2
09/16 07:36:11 AM: edges-rel-semeval_loss: training: 0.193845 validation: 0.188790
09/16 07:36:11 AM: macro_avg: validation: 0.000000
09/16 07:36:11 AM: micro_avg: validation: 0.000000
09/16 07:36:11 AM: edges-rel-semeval_mcc: training: 0.000000 validation: 0.000000
09/16 07:36:11 AM: edges-rel-semeval_acc: training: 0.000000 validation: 0.000000
09/16 07:36:11 AM: edges-rel-semeval_precision: training: 0.000000 validation: 0.000000
09/16 07:36:11 AM: edges-rel-semeval_recall: training: 0.000000 validation: 0.000000
09/16 07:36:11 AM: edges-rel-semeval_f1: training: 0.000000 validation: 0.000000
09/16 07:36:11 AM: Global learning rate: 0.0001
09/16 07:36:11 AM: Saving checkpoints to: ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run
09/16 07:36:16 AM: ***** Step 400 / Validation 4 *****
09/16 07:36:16 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:16 AM: Validating...
09/16 07:36:16 AM: Evaluate: task edges-rel-semeval, batch 4 (36): mcc: 0.0000, acc: 0.0000, precision: 0.0000, recall: 0.0000, f1: 0.0000, edges-rel-semeval_loss: 0.1811
09/16 07:36:19 AM: Updating LR scheduler:
09/16 07:36:19 AM: 	Best result seen so far for macro_avg: 0.000
09/16 07:36:19 AM: 	# validation passes without improvement: 3
09/16 07:36:19 AM: edges-rel-semeval_loss: training: 0.189525 validation: 0.185315
09/16 07:36:19 AM: macro_avg: validation: 0.000000
09/16 07:36:19 AM: micro_avg: validation: 0.000000
09/16 07:36:19 AM: edges-rel-semeval_mcc: training: 0.046128 validation: 0.000000
09/16 07:36:19 AM: edges-rel-semeval_acc: training: 0.003438 validation: 0.000000
09/16 07:36:19 AM: edges-rel-semeval_precision: training: 0.687500 validation: 0.000000
09/16 07:36:19 AM: edges-rel-semeval_recall: training: 0.003437 validation: 0.000000
09/16 07:36:19 AM: edges-rel-semeval_f1: training: 0.006841 validation: 0.000000
09/16 07:36:19 AM: Global learning rate: 0.0001
09/16 07:36:19 AM: Saving checkpoints to: ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run
09/16 07:36:24 AM: ***** Step 500 / Validation 5 *****
09/16 07:36:24 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:24 AM: Validating...
09/16 07:36:26 AM: Evaluate: task edges-rel-semeval, batch 28 (36): mcc: 0.0000, acc: 0.0000, precision: 0.0000, recall: 0.0000, f1: 0.0000, edges-rel-semeval_loss: 0.1832
09/16 07:36:27 AM: Updating LR scheduler:
09/16 07:36:27 AM: 	Best result seen so far for macro_avg: 0.000
09/16 07:36:27 AM: 	# validation passes without improvement: 0
09/16 07:36:27 AM: edges-rel-semeval_loss: training: 0.189529 validation: 0.183360
09/16 07:36:27 AM: macro_avg: validation: 0.000000
09/16 07:36:27 AM: micro_avg: validation: 0.000000
09/16 07:36:27 AM: edges-rel-semeval_mcc: training: 0.006012 validation: 0.000000
09/16 07:36:27 AM: edges-rel-semeval_acc: training: 0.000315 validation: 0.000000
09/16 07:36:27 AM: edges-rel-semeval_precision: training: 0.200000 validation: 0.000000
09/16 07:36:27 AM: edges-rel-semeval_recall: training: 0.000315 validation: 0.000000
09/16 07:36:27 AM: edges-rel-semeval_f1: training: 0.000630 validation: 0.000000
09/16 07:36:27 AM: Global learning rate: 5e-05
09/16 07:36:27 AM: Saving checkpoints to: ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run
09/16 07:36:31 AM: ***** Step 600 / Validation 6 *****
09/16 07:36:31 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:31 AM: Validating...
09/16 07:36:34 AM: Best result seen so far for edges-rel-semeval.
09/16 07:36:34 AM: Best result seen so far for macro.
09/16 07:36:34 AM: Updating LR scheduler:
09/16 07:36:34 AM: 	Best result seen so far for macro_avg: 0.002
09/16 07:36:34 AM: 	# validation passes without improvement: 0
09/16 07:36:34 AM: edges-rel-semeval_loss: training: 0.185818 validation: 0.181112
09/16 07:36:34 AM: macro_avg: validation: 0.001739
09/16 07:36:34 AM: micro_avg: validation: 0.000000
09/16 07:36:34 AM: edges-rel-semeval_mcc: training: 0.051405 validation: 0.028715
09/16 07:36:34 AM: edges-rel-semeval_acc: training: 0.006250 validation: 0.000870
09/16 07:36:34 AM: edges-rel-semeval_precision: training: 0.500000 validation: 1.000000
09/16 07:36:34 AM: edges-rel-semeval_recall: training: 0.006250 validation: 0.000870
09/16 07:36:34 AM: edges-rel-semeval_f1: training: 0.012346 validation: 0.001739
09/16 07:36:34 AM: Global learning rate: 5e-05
09/16 07:36:34 AM: Saving checkpoints to: ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run
09/16 07:36:36 AM: Update 643: task edges-rel-semeval, batch 43 (643): mcc: 0.0780, acc: 0.0124, precision: 0.5667, recall: 0.0124, f1: 0.0242, edges-rel-semeval_loss: 0.1809
09/16 07:36:40 AM: ***** Step 700 / Validation 7 *****
09/16 07:36:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:40 AM: Validating...
09/16 07:36:43 AM: Best result seen so far for edges-rel-semeval.
09/16 07:36:43 AM: Best result seen so far for macro.
09/16 07:36:43 AM: Updating LR scheduler:
09/16 07:36:43 AM: 	Best result seen so far for macro_avg: 0.007
09/16 07:36:43 AM: 	# validation passes without improvement: 0
09/16 07:36:43 AM: edges-rel-semeval_loss: training: 0.182119 validation: 0.179212
09/16 07:36:43 AM: macro_avg: validation: 0.006938
09/16 07:36:43 AM: micro_avg: validation: 0.000000
09/16 07:36:43 AM: edges-rel-semeval_mcc: training: 0.077469 validation: 0.057434
09/16 07:36:43 AM: edges-rel-semeval_acc: training: 0.011353 validation: 0.003481
09/16 07:36:43 AM: edges-rel-semeval_precision: training: 0.587302 validation: 1.000000
09/16 07:36:43 AM: edges-rel-semeval_recall: training: 0.011668 validation: 0.003481
09/16 07:36:43 AM: edges-rel-semeval_f1: training: 0.022882 validation: 0.006938
09/16 07:36:43 AM: Global learning rate: 5e-05
09/16 07:36:43 AM: Saving checkpoints to: ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run
09/16 07:36:46 AM: Update 774: task edges-rel-semeval, batch 74 (774): mcc: 0.0900, acc: 0.0165, precision: 0.5652, recall: 0.0165, f1: 0.0320, edges-rel-semeval_loss: 0.1816
09/16 07:36:48 AM: ***** Step 800 / Validation 8 *****
09/16 07:36:48 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:48 AM: Validating...
09/16 07:36:50 AM: Best result seen so far for edges-rel-semeval.
09/16 07:36:50 AM: Best result seen so far for macro.
09/16 07:36:50 AM: Updating LR scheduler:
09/16 07:36:50 AM: 	Best result seen so far for macro_avg: 0.014
09/16 07:36:50 AM: 	# validation passes without improvement: 0
09/16 07:36:50 AM: edges-rel-semeval_loss: training: 0.181666 validation: 0.177990
09/16 07:36:50 AM: macro_avg: validation: 0.013829
09/16 07:36:50 AM: micro_avg: validation: 0.000000
09/16 07:36:50 AM: edges-rel-semeval_mcc: training: 0.089748 validation: 0.081231
09/16 07:36:50 AM: edges-rel-semeval_acc: training: 0.015625 validation: 0.006963
09/16 07:36:50 AM: edges-rel-semeval_precision: training: 0.588235 validation: 1.000000
09/16 07:36:50 AM: edges-rel-semeval_recall: training: 0.015625 validation: 0.006963
09/16 07:36:50 AM: edges-rel-semeval_f1: training: 0.030441 validation: 0.013829
09/16 07:36:50 AM: Global learning rate: 5e-05
09/16 07:36:50 AM: Saving checkpoints to: ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run
09/16 07:36:56 AM: ***** Step 900 / Validation 9 *****
09/16 07:36:56 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:36:56 AM: Validating...
09/16 07:36:56 AM: Evaluate: task edges-rel-semeval, batch 4 (36): mcc: 0.0966, acc: 0.0156, precision: 0.6667, recall: 0.0156, f1: 0.0305, edges-rel-semeval_loss: 0.1705
09/16 07:36:59 AM: Best result seen so far for edges-rel-semeval.
09/16 07:36:59 AM: Best result seen so far for macro.
09/16 07:36:59 AM: Updating LR scheduler:
09/16 07:36:59 AM: 	Best result seen so far for macro_avg: 0.016
09/16 07:36:59 AM: 	# validation passes without improvement: 0
09/16 07:36:59 AM: edges-rel-semeval_loss: training: 0.180386 validation: 0.176572
09/16 07:36:59 AM: macro_avg: validation: 0.015531
09/16 07:36:59 AM: micro_avg: validation: 0.000000
09/16 07:36:59 AM: edges-rel-semeval_mcc: training: 0.087560 validation: 0.081237
09/16 07:36:59 AM: edges-rel-semeval_acc: training: 0.015453 validation: 0.007833
09/16 07:36:59 AM: edges-rel-semeval_precision: training: 0.569767 validation: 0.900000
09/16 07:36:59 AM: edges-rel-semeval_recall: training: 0.015453 validation: 0.007833
09/16 07:36:59 AM: edges-rel-semeval_f1: training: 0.030089 validation: 0.015531
09/16 07:36:59 AM: Global learning rate: 5e-05
09/16 07:36:59 AM: Saving checkpoints to: ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run
09/16 07:37:04 AM: ***** Step 1000 / Validation 10 *****
09/16 07:37:04 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:37:04 AM: Validating...
09/16 07:37:06 AM: Best result seen so far for edges-rel-semeval.
09/16 07:37:06 AM: Best result seen so far for macro.
09/16 07:37:06 AM: Updating LR scheduler:
09/16 07:37:06 AM: 	Best result seen so far for macro_avg: 0.019
09/16 07:37:06 AM: 	# validation passes without improvement: 0
09/16 07:37:06 AM: edges-rel-semeval_loss: training: 0.179929 validation: 0.175186
09/16 07:37:06 AM: macro_avg: validation: 0.018949
09/16 07:37:06 AM: micro_avg: validation: 0.000000
09/16 07:37:06 AM: edges-rel-semeval_mcc: training: 0.074535 validation: 0.090745
09/16 07:37:06 AM: edges-rel-semeval_acc: training: 0.011875 validation: 0.009574
09/16 07:37:06 AM: edges-rel-semeval_precision: training: 0.542857 validation: 0.916667
09/16 07:37:06 AM: edges-rel-semeval_recall: training: 0.011875 validation: 0.009574
09/16 07:37:06 AM: edges-rel-semeval_f1: training: 0.023242 validation: 0.018949
09/16 07:37:06 AM: Global learning rate: 5e-05
09/16 07:37:06 AM: Saving checkpoints to: ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run
09/16 07:37:06 AM: Update 1001: task edges-rel-semeval, batch 1 (1001): mcc: 0.0000, acc: 0.0000, precision: 0.0000, recall: 0.0000, f1: 0.0000, edges-rel-semeval_loss: 0.1906
09/16 07:37:12 AM: ***** Step 1100 / Validation 11 *****
09/16 07:37:12 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:37:12 AM: Validating...
09/16 07:37:14 AM: Best result seen so far for edges-rel-semeval.
09/16 07:37:15 AM: Best result seen so far for macro.
09/16 07:37:15 AM: Updating LR scheduler:
09/16 07:37:15 AM: 	Best result seen so far for macro_avg: 0.029
09/16 07:37:15 AM: 	# validation passes without improvement: 0
09/16 07:37:15 AM: edges-rel-semeval_loss: training: 0.176830 validation: 0.173878
09/16 07:37:15 AM: macro_avg: validation: 0.029110
09/16 07:37:15 AM: micro_avg: validation: 0.000000
09/16 07:37:15 AM: edges-rel-semeval_mcc: training: 0.101162 validation: 0.111305
09/16 07:37:15 AM: edges-rel-semeval_acc: training: 0.018606 validation: 0.014795
09/16 07:37:15 AM: edges-rel-semeval_precision: training: 0.621053 validation: 0.894737
09/16 07:37:15 AM: edges-rel-semeval_recall: training: 0.018606 validation: 0.014795
09/16 07:37:15 AM: edges-rel-semeval_f1: training: 0.036130 validation: 0.029110
09/16 07:37:15 AM: Global learning rate: 5e-05
09/16 07:37:15 AM: Saving checkpoints to: ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run
09/16 07:37:16 AM: Update 1136: task edges-rel-semeval, batch 36 (1136): mcc: 0.0879, acc: 0.0165, precision: 0.5429, recall: 0.0165, f1: 0.0320, edges-rel-semeval_loss: 0.1775
09/16 07:37:20 AM: ***** Step 1200 / Validation 12 *****
09/16 07:37:20 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:37:20 AM: Validating...
09/16 07:37:22 AM: Best result seen so far for edges-rel-semeval.
09/16 07:37:22 AM: Best result seen so far for macro.
09/16 07:37:22 AM: Updating LR scheduler:
09/16 07:37:22 AM: 	Best result seen so far for macro_avg: 0.039
09/16 07:37:22 AM: 	# validation passes without improvement: 0
09/16 07:37:22 AM: edges-rel-semeval_loss: training: 0.176205 validation: 0.172366
09/16 07:37:22 AM: macro_avg: validation: 0.039216
09/16 07:37:22 AM: micro_avg: validation: 0.000000
09/16 07:37:22 AM: edges-rel-semeval_mcc: training: 0.094378 validation: 0.134558
09/16 07:37:22 AM: edges-rel-semeval_acc: training: 0.015938 validation: 0.020017
09/16 07:37:22 AM: edges-rel-semeval_precision: training: 0.629630 validation: 0.958333
09/16 07:37:22 AM: edges-rel-semeval_recall: training: 0.015937 validation: 0.020017
09/16 07:37:22 AM: edges-rel-semeval_f1: training: 0.031088 validation: 0.039216
09/16 07:37:22 AM: Global learning rate: 5e-05
09/16 07:37:22 AM: Saving checkpoints to: ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run
09/16 07:37:26 AM: Update 1286: task edges-rel-semeval, batch 86 (1286): mcc: 0.1385, acc: 0.0331, precision: 0.6434, recall: 0.0334, f1: 0.0636, edges-rel-semeval_loss: 0.1731
09/16 07:37:28 AM: ***** Step 1300 / Validation 13 *****
09/16 07:37:28 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:37:28 AM: Validating...
09/16 07:37:30 AM: Updating LR scheduler:
09/16 07:37:30 AM: 	Best result seen so far for macro_avg: 0.039
09/16 07:37:30 AM: 	# validation passes without improvement: 1
09/16 07:37:30 AM: edges-rel-semeval_loss: training: 0.172923 validation: 0.171502
09/16 07:37:30 AM: macro_avg: validation: 0.035867
09/16 07:37:30 AM: micro_avg: validation: 0.000000
09/16 07:37:30 AM: edges-rel-semeval_mcc: training: 0.133874 validation: 0.128285
09/16 07:37:30 AM: edges-rel-semeval_acc: training: 0.030590 validation: 0.018277
09/16 07:37:30 AM: edges-rel-semeval_precision: training: 0.649007 validation: 0.954545
09/16 07:37:30 AM: edges-rel-semeval_recall: training: 0.030905 validation: 0.018277
09/16 07:37:30 AM: edges-rel-semeval_f1: training: 0.059001 validation: 0.035867
09/16 07:37:30 AM: Global learning rate: 5e-05
09/16 07:37:30 AM: Saving checkpoints to: ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run
09/16 07:37:35 AM: ***** Step 1400 / Validation 14 *****
09/16 07:37:35 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:37:35 AM: Validating...
09/16 07:37:36 AM: Evaluate: task edges-rel-semeval, batch 18 (36): mcc: 0.1767, acc: 0.0347, precision: 0.9524, recall: 0.0347, f1: 0.0670, edges-rel-semeval_loss: 0.1696
09/16 07:37:38 AM: Best result seen so far for edges-rel-semeval.
09/16 07:37:38 AM: Best result seen so far for macro.
09/16 07:37:38 AM: Updating LR scheduler:
09/16 07:37:38 AM: 	Best result seen so far for macro_avg: 0.069
09/16 07:37:38 AM: 	# validation passes without improvement: 0
09/16 07:37:38 AM: edges-rel-semeval_loss: training: 0.173111 validation: 0.170906
09/16 07:37:38 AM: macro_avg: validation: 0.068677
09/16 07:37:38 AM: micro_avg: validation: 0.000000
09/16 07:37:38 AM: edges-rel-semeval_mcc: training: 0.121366 validation: 0.174729
09/16 07:37:38 AM: edges-rel-semeval_acc: training: 0.026562 validation: 0.035683
09/16 07:37:38 AM: edges-rel-semeval_precision: training: 0.625000 validation: 0.911111
09/16 07:37:38 AM: edges-rel-semeval_recall: training: 0.026563 validation: 0.035683
09/16 07:37:38 AM: edges-rel-semeval_f1: training: 0.050959 validation: 0.068677
09/16 07:37:38 AM: Global learning rate: 5e-05
09/16 07:37:38 AM: Saving checkpoints to: ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run
09/16 07:37:43 AM: ***** Step 1500 / Validation 15 *****
09/16 07:37:43 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:37:43 AM: Validating...
09/16 07:37:45 AM: Best result seen so far for edges-rel-semeval.
09/16 07:37:45 AM: Best result seen so far for macro.
09/16 07:37:45 AM: Updating LR scheduler:
09/16 07:37:45 AM: 	Best result seen so far for macro_avg: 0.075
09/16 07:37:45 AM: 	# validation passes without improvement: 0
09/16 07:37:45 AM: edges-rel-semeval_loss: training: 0.171786 validation: 0.169802
09/16 07:37:45 AM: macro_avg: validation: 0.075188
09/16 07:37:45 AM: micro_avg: validation: 0.000000
09/16 07:37:45 AM: edges-rel-semeval_mcc: training: 0.127602 validation: 0.186019
09/16 07:37:45 AM: edges-rel-semeval_acc: training: 0.027500 validation: 0.039164
09/16 07:37:45 AM: edges-rel-semeval_precision: training: 0.654412 validation: 0.937500
09/16 07:37:45 AM: edges-rel-semeval_recall: training: 0.027812 validation: 0.039164
09/16 07:37:45 AM: edges-rel-semeval_f1: training: 0.053357 validation: 0.075188
09/16 07:37:45 AM: Global learning rate: 5e-05
09/16 07:37:45 AM: Saving checkpoints to: ./experiments/rel-semeval-RANDOM_WITH_GOOD_EMBEDDINGS-top/run
09/16 07:37:47 AM: Update 1512: task edges-rel-semeval, batch 12 (1512): mcc: 0.1523, acc: 0.0310, precision: 0.7500, recall: 0.0338, f1: 0.0647, edges-rel-semeval_loss: 0.1652
09/16 07:37:51 AM: ***** Step 1600 / Validation 16 *****
09/16 07:37:51 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:37:51 AM: Validating...
