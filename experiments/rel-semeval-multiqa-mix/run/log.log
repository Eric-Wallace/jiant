09/16 08:47:21 AM: Git branch: master
09/16 08:47:21 AM: Git SHA: a6b97574b819abe0c17f2f3300d1097e5c87dbde
09/16 08:47:21 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-multiqa-mix/",
  "exp_name": "experiments/rel-semeval-multiqa-mix",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-multiqa-mix/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/multiqa",
  "pytorch_transformers_output_mode": "mix",
  "remote_log_name": "experiments/rel-semeval-multiqa-mix__run",
  "run_dir": "./experiments/rel-semeval-multiqa-mix/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:47:21 AM: Saved config to ./experiments/rel-semeval-multiqa-mix/run/params.conf
09/16 08:47:21 AM: Using random seed 1234
09/16 08:47:22 AM: Using GPU 0
09/16 08:47:22 AM: Loading tasks...
09/16 08:47:22 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-multiqa-mix/
09/16 08:47:22 AM: 	Creating task edges-rel-semeval from scratch.
09/16 08:47:22 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 08:47:22 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 08:47:22 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 08:47:22 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 08:47:22 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 08:47:22 AM: 	Building vocab from scratch.
09/16 08:47:22 AM: 	Counting units for task edges-rel-semeval.
09/16 08:47:22 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 08:47:23 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:47:23 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:47:23 AM: 	Saved vocab to ./experiments/rel-semeval-multiqa-mix/vocab
09/16 08:47:23 AM: Loading token dictionary from ./experiments/rel-semeval-multiqa-mix/vocab.
09/16 08:47:23 AM: 	Loaded vocab from ./experiments/rel-semeval-multiqa-mix/vocab
09/16 08:47:23 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:47:23 AM: 	Vocab namespace tokens: size 16020
09/16 08:47:23 AM: 	Vocab namespace chars: size 59
09/16 08:47:23 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 08:47:23 AM: 	Finished building vocab.
09/16 08:47:23 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 08:47:24 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-multiqa-mix/preproc/edges-rel-semeval__train_data
09/16 08:47:24 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 08:47:24 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-multiqa-mix/preproc/edges-rel-semeval__val_data
09/16 08:47:24 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 08:47:24 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-multiqa-mix/preproc/edges-rel-semeval__test_data
09/16 08:47:24 AM: 	Finished indexing tasks
09/16 08:47:24 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 08:47:24 AM: 	  Training on 
09/16 08:47:24 AM: 	  Evaluating on edges-rel-semeval
09/16 08:47:24 AM: 	Finished loading tasks in 2.792s
09/16 08:47:24 AM: 	 Tasks: ['edges-rel-semeval']
09/16 08:47:24 AM: Building model...
09/16 08:47:24 AM: Using BERT model (bert-base-uncased).
09/16 08:47:24 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:47:24 AM: models/multiqa
09/16 08:47:24 AM: loading configuration file models/multiqa/config.json
09/16 08:47:24 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:47:24 AM: loading weights file models/multiqa/pytorch_model.bin
09/16 08:47:28 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpomnxpry1
09/16 08:47:29 AM: copying /tmp/tmpomnxpry1 to cache at ./experiments/rel-semeval-multiqa-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:47:29 AM: creating metadata file for ./experiments/rel-semeval-multiqa-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:47:29 AM: removing temp file /tmp/tmpomnxpry1
09/16 08:47:29 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-multiqa-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:47:30 AM: NOTE: pytorch_transformers_output_mode='mix', so scalar mixing weights will be fine-tuned even if BERT model is frozen.
09/16 08:47:30 AM: Initializing parameters
09/16 08:47:30 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:47:30 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:47:30 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:47:30 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:47:30 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:47:30 AM:    _text_field_embedder.scalar_mix.gamma
09/16 08:47:30 AM:    _text_field_embedder.scalar_mix.scalar_parameters.0
09/16 08:47:30 AM:    _text_field_embedder.scalar_mix.scalar_parameters.1
09/16 08:47:30 AM:    _text_field_embedder.scalar_mix.scalar_parameters.10
09/16 08:47:30 AM:    _text_field_embedder.scalar_mix.scalar_parameters.11
09/16 08:47:30 AM:    _text_field_embedder.scalar_mix.scalar_parameters.12
09/16 08:47:30 AM:    _text_field_embedder.scalar_mix.scalar_parameters.2
09/16 08:47:30 AM:    _text_field_embedder.scalar_mix.scalar_parameters.3
09/16 08:47:30 AM:    _text_field_embedder.scalar_mix.scalar_parameters.4
09/16 08:47:30 AM:    _text_field_embedder.scalar_mix.scalar_parameters.5
09/16 08:47:30 AM:    _text_field_embedder.scalar_mix.scalar_parameters.6
09/16 08:47:30 AM:    _text_field_embedder.scalar_mix.scalar_parameters.7
09/16 08:47:30 AM:    _text_field_embedder.scalar_mix.scalar_parameters.8
09/16 08:47:30 AM:    _text_field_embedder.scalar_mix.scalar_parameters.9
09/16 08:47:30 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 08:47:34 AM: Model specification:
09/16 08:47:34 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
      (scalar_mix): ScalarMix(
        (scalar_parameters): ParameterList(
            (0): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (1): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (2): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (3): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (4): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (5): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (6): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (7): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (8): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (9): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (10): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (11): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (12): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 08:47:34 AM: Model parameters:
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.scalar_mix.gamma: Trainable parameter, count 1 with torch.Size([1])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.0: Trainable parameter, count 1 with torch.Size([1])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.1: Trainable parameter, count 1 with torch.Size([1])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.2: Trainable parameter, count 1 with torch.Size([1])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.3: Trainable parameter, count 1 with torch.Size([1])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.4: Trainable parameter, count 1 with torch.Size([1])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.5: Trainable parameter, count 1 with torch.Size([1])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.6: Trainable parameter, count 1 with torch.Size([1])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.7: Trainable parameter, count 1 with torch.Size([1])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.8: Trainable parameter, count 1 with torch.Size([1])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.9: Trainable parameter, count 1 with torch.Size([1])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.10: Trainable parameter, count 1 with torch.Size([1])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.11: Trainable parameter, count 1 with torch.Size([1])
09/16 08:47:34 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.12: Trainable parameter, count 1 with torch.Size([1])
09/16 08:47:34 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:47:34 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:47:34 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:47:34 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:47:34 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:47:34 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:47:34 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:47:34 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:47:34 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 08:47:34 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 08:47:34 AM: Total number of parameters: 110143777 (1.10144e+08)
09/16 08:47:34 AM: Number of trainable parameters: 661537 (661537)
09/16 08:47:34 AM: Finished building model in 9.245s
09/16 08:47:34 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 08:47:35 AM: patience = 9
09/16 08:47:35 AM: val_interval = 100
09/16 08:47:35 AM: max_vals = 100
09/16 08:47:35 AM: cuda_device = 0
09/16 08:47:35 AM: grad_norm = 5.0
09/16 08:47:35 AM: grad_clipping = None
09/16 08:47:35 AM: lr_decay = 0.99
09/16 08:47:35 AM: min_lr = 1e-06
09/16 08:47:35 AM: keep_all_checkpoints = 0
09/16 08:47:35 AM: val_data_limit = 5000
09/16 08:47:35 AM: max_epochs = -1
09/16 08:47:35 AM: dec_val_scale = 250
09/16 08:47:35 AM: training_data_fraction = 1
09/16 08:47:35 AM: type = adam
09/16 08:47:35 AM: parameter_groups = None
09/16 08:47:35 AM: Number of trainable parameters: 661537
09/16 08:47:35 AM: infer_type_and_cast = True
09/16 08:47:35 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:47:35 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:47:35 AM: lr = 0.0001
09/16 08:47:35 AM: amsgrad = True
09/16 08:47:35 AM: type = reduce_on_plateau
09/16 08:47:35 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:47:35 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:47:35 AM: mode = max
09/16 08:47:35 AM: factor = 0.5
09/16 08:47:35 AM: patience = 3
09/16 08:47:35 AM: threshold = 0.0001
09/16 08:47:35 AM: threshold_mode = abs
09/16 08:47:35 AM: verbose = True
09/16 08:47:35 AM: type = adam
09/16 08:47:35 AM: parameter_groups = None
09/16 08:47:35 AM: Number of trainable parameters: 661537
09/16 08:47:35 AM: infer_type_and_cast = True
09/16 08:47:35 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:47:35 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:47:35 AM: lr = 0.0001
09/16 08:47:35 AM: amsgrad = True
09/16 08:47:35 AM: type = reduce_on_plateau
09/16 08:47:35 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:47:35 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:47:35 AM: mode = max
09/16 08:47:35 AM: factor = 0.5
09/16 08:47:35 AM: patience = 3
09/16 08:47:35 AM: threshold = 0.0001
09/16 08:47:35 AM: threshold_mode = abs
09/16 08:47:35 AM: verbose = True
09/16 08:47:35 AM: Starting training without restoring from a checkpoint.
09/16 08:47:35 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 08:47:35 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 08:47:40 AM: ***** Step 100 / Validation 1 *****
09/16 08:47:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:47:40 AM: Validating...
09/16 08:47:42 AM: Best result seen so far for edges-rel-semeval.
09/16 08:47:42 AM: Best result seen so far for micro.
09/16 08:47:42 AM: Best result seen so far for macro.
09/16 08:47:42 AM: Updating LR scheduler:
09/16 08:47:42 AM: 	Best result seen so far for macro_avg: 0.000
09/16 08:47:42 AM: 	# validation passes without improvement: 0
09/16 08:47:42 AM: edges-rel-semeval_loss: training: 0.243955 validation: 0.175992
09/16 08:47:42 AM: macro_avg: validation: 0.000000
09/16 08:47:42 AM: micro_avg: validation: 0.000000
09/16 08:47:42 AM: edges-rel-semeval_mcc: training: 0.005911 validation: 0.000000
09/16 08:47:42 AM: edges-rel-semeval_acc: training: 0.002208 validation: 0.000000
09/16 08:47:42 AM: edges-rel-semeval_precision: training: 0.062274 validation: 0.000000
09/16 08:47:42 AM: edges-rel-semeval_recall: training: 0.021760 validation: 0.000000
09/16 08:47:42 AM: edges-rel-semeval_f1: training: 0.032251 validation: 0.000000
09/16 08:47:42 AM: Global learning rate: 0.0001
09/16 08:47:42 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:47:45 AM: Update 163: task edges-rel-semeval, batch 63 (163): mcc: 0.1065, acc: 0.0139, precision: 0.8750, recall: 0.0139, f1: 0.0273, edges-rel-semeval_loss: 0.1728
09/16 08:47:46 AM: ***** Step 200 / Validation 2 *****
09/16 08:47:46 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:47:46 AM: Validating...
09/16 08:47:49 AM: Best result seen so far for edges-rel-semeval.
09/16 08:47:49 AM: Best result seen so far for macro.
09/16 08:47:49 AM: Updating LR scheduler:
09/16 08:47:49 AM: 	Best result seen so far for macro_avg: 0.163
09/16 08:47:49 AM: 	# validation passes without improvement: 0
09/16 08:47:49 AM: edges-rel-semeval_loss: training: 0.167054 validation: 0.142171
09/16 08:47:49 AM: macro_avg: validation: 0.163492
09/16 08:47:49 AM: micro_avg: validation: 0.000000
09/16 08:47:49 AM: edges-rel-semeval_mcc: training: 0.154777 validation: 0.280223
09/16 08:47:49 AM: edges-rel-semeval_acc: training: 0.030000 validation: 0.089643
09/16 08:47:49 AM: edges-rel-semeval_precision: training: 0.857143 validation: 0.927928
09/16 08:47:49 AM: edges-rel-semeval_recall: training: 0.030000 validation: 0.089643
09/16 08:47:49 AM: edges-rel-semeval_f1: training: 0.057971 validation: 0.163492
09/16 08:47:49 AM: Global learning rate: 0.0001
09/16 08:47:49 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:47:54 AM: ***** Step 300 / Validation 3 *****
09/16 08:47:54 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:47:54 AM: Validating...
09/16 08:47:55 AM: Evaluate: task edges-rel-semeval, batch 12 (36): mcc: 0.4550, acc: 0.2344, precision: 0.9278, recall: 0.2344, f1: 0.3742, edges-rel-semeval_loss: 0.1157
09/16 08:47:56 AM: Best result seen so far for edges-rel-semeval.
09/16 08:47:56 AM: Best result seen so far for macro.
09/16 08:47:56 AM: Updating LR scheduler:
09/16 08:47:56 AM: 	Best result seen so far for macro_avg: 0.321
09/16 08:47:56 AM: 	# validation passes without improvement: 0
09/16 08:47:56 AM: edges-rel-semeval_loss: training: 0.139389 validation: 0.120504
09/16 08:47:56 AM: macro_avg: validation: 0.320917
09/16 08:47:56 AM: micro_avg: validation: 0.000000
09/16 08:47:56 AM: edges-rel-semeval_mcc: training: 0.364517 validation: 0.409247
09/16 08:47:56 AM: edges-rel-semeval_acc: training: 0.162409 validation: 0.194082
09/16 08:47:56 AM: edges-rel-semeval_precision: training: 0.844444 validation: 0.906883
09/16 08:47:56 AM: edges-rel-semeval_recall: training: 0.167770 validation: 0.194952
09/16 08:47:56 AM: edges-rel-semeval_f1: training: 0.279926 validation: 0.320917
09/16 08:47:56 AM: Global learning rate: 0.0001
09/16 08:47:56 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:48:01 AM: ***** Step 400 / Validation 4 *****
09/16 08:48:01 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:01 AM: Validating...
09/16 08:48:03 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:03 AM: Best result seen so far for macro.
09/16 08:48:03 AM: Updating LR scheduler:
09/16 08:48:03 AM: 	Best result seen so far for macro_avg: 0.471
09/16 08:48:03 AM: 	# validation passes without improvement: 0
09/16 08:48:03 AM: edges-rel-semeval_loss: training: 0.120041 validation: 0.106248
09/16 08:48:03 AM: macro_avg: validation: 0.471346
09/16 08:48:03 AM: micro_avg: validation: 0.000000
09/16 08:48:03 AM: edges-rel-semeval_mcc: training: 0.488939 validation: 0.524727
09/16 08:48:03 AM: edges-rel-semeval_acc: training: 0.285625 validation: 0.315927
09/16 08:48:03 AM: edges-rel-semeval_precision: training: 0.852518 validation: 0.905941
09/16 08:48:03 AM: edges-rel-semeval_recall: training: 0.296250 validation: 0.318538
09/16 08:48:03 AM: edges-rel-semeval_f1: training: 0.439703 validation: 0.471346
09/16 08:48:03 AM: Global learning rate: 0.0001
09/16 08:48:03 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:48:05 AM: Update 431: task edges-rel-semeval, batch 31 (431): mcc: 0.5086, acc: 0.3126, precision: 0.8532, recall: 0.3198, f1: 0.4653, edges-rel-semeval_loss: 0.1155
09/16 08:48:08 AM: ***** Step 500 / Validation 5 *****
09/16 08:48:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:08 AM: Validating...
09/16 08:48:10 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:10 AM: Best result seen so far for macro.
09/16 08:48:10 AM: Updating LR scheduler:
09/16 08:48:10 AM: 	Best result seen so far for macro_avg: 0.543
09/16 08:48:10 AM: 	# validation passes without improvement: 0
09/16 08:48:10 AM: edges-rel-semeval_loss: training: 0.109793 validation: 0.097299
09/16 08:48:10 AM: macro_avg: validation: 0.543346
09/16 08:48:10 AM: micro_avg: validation: 0.000000
09/16 08:48:10 AM: edges-rel-semeval_mcc: training: 0.548506 validation: 0.581209
09/16 08:48:10 AM: edges-rel-semeval_acc: training: 0.357301 validation: 0.384682
09/16 08:48:10 AM: edges-rel-semeval_precision: training: 0.860414 validation: 0.910020
09/16 08:48:10 AM: edges-rel-semeval_recall: training: 0.367392 validation: 0.387293
09/16 08:48:10 AM: edges-rel-semeval_f1: training: 0.514917 validation: 0.543346
09/16 08:48:10 AM: Global learning rate: 0.0001
09/16 08:48:10 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:48:15 AM: Update 598: task edges-rel-semeval, batch 98 (598): mcc: 0.5941, acc: 0.4225, precision: 0.8414, recall: 0.4397, f1: 0.5776, edges-rel-semeval_loss: 0.0986
09/16 08:48:15 AM: ***** Step 600 / Validation 6 *****
09/16 08:48:15 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:15 AM: Validating...
09/16 08:48:17 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:17 AM: Best result seen so far for macro.
09/16 08:48:17 AM: Updating LR scheduler:
09/16 08:48:17 AM: 	Best result seen so far for macro_avg: 0.599
09/16 08:48:17 AM: 	# validation passes without improvement: 0
09/16 08:48:17 AM: edges-rel-semeval_loss: training: 0.098576 validation: 0.090554
09/16 08:48:17 AM: macro_avg: validation: 0.598961
09/16 08:48:17 AM: micro_avg: validation: 0.000000
09/16 08:48:17 AM: edges-rel-semeval_mcc: training: 0.593945 validation: 0.620749
09/16 08:48:17 AM: edges-rel-semeval_acc: training: 0.423125 validation: 0.446475
09/16 08:48:17 AM: edges-rel-semeval_precision: training: 0.840597 validation: 0.888699
09/16 08:48:17 AM: edges-rel-semeval_recall: training: 0.440000 validation: 0.451697
09/16 08:48:17 AM: edges-rel-semeval_f1: training: 0.577641 validation: 0.598961
09/16 08:48:17 AM: Global learning rate: 0.0001
09/16 08:48:17 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:48:23 AM: ***** Step 700 / Validation 7 *****
09/16 08:48:23 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:23 AM: Validating...
09/16 08:48:25 AM: Evaluate: task edges-rel-semeval, batch 36 (36): mcc: 0.6359, acc: 0.4708, precision: 0.8824, recall: 0.4769, f1: 0.6192, edges-rel-semeval_loss: 0.0859
09/16 08:48:25 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:25 AM: Best result seen so far for macro.
09/16 08:48:25 AM: Updating LR scheduler:
09/16 08:48:25 AM: 	Best result seen so far for macro_avg: 0.619
09/16 08:48:25 AM: 	# validation passes without improvement: 0
09/16 08:48:25 AM: edges-rel-semeval_loss: training: 0.091731 validation: 0.085934
09/16 08:48:25 AM: macro_avg: validation: 0.619209
09/16 08:48:25 AM: micro_avg: validation: 0.000000
09/16 08:48:25 AM: edges-rel-semeval_mcc: training: 0.632613 validation: 0.635879
09/16 08:48:25 AM: edges-rel-semeval_acc: training: 0.462630 validation: 0.470844
09/16 08:48:25 AM: edges-rel-semeval_precision: training: 0.863176 validation: 0.882448
09/16 08:48:25 AM: edges-rel-semeval_recall: training: 0.483444 validation: 0.476936
09/16 08:48:25 AM: edges-rel-semeval_f1: training: 0.619770 validation: 0.619209
09/16 08:48:25 AM: Global learning rate: 0.0001
09/16 08:48:25 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:48:29 AM: ***** Step 800 / Validation 8 *****
09/16 08:48:29 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:29 AM: Validating...
09/16 08:48:32 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:32 AM: Best result seen so far for macro.
09/16 08:48:32 AM: Updating LR scheduler:
09/16 08:48:32 AM: 	Best result seen so far for macro_avg: 0.674
09/16 08:48:32 AM: 	# validation passes without improvement: 0
09/16 08:48:32 AM: edges-rel-semeval_loss: training: 0.086642 validation: 0.080659
09/16 08:48:32 AM: macro_avg: validation: 0.673536
09/16 08:48:32 AM: micro_avg: validation: 0.000000
09/16 08:48:32 AM: edges-rel-semeval_mcc: training: 0.661693 validation: 0.682872
09/16 08:48:32 AM: edges-rel-semeval_acc: training: 0.500938 validation: 0.533507
09/16 08:48:32 AM: edges-rel-semeval_precision: training: 0.864546 validation: 0.893525
09/16 08:48:32 AM: edges-rel-semeval_recall: training: 0.526563 validation: 0.540470
09/16 08:48:32 AM: edges-rel-semeval_f1: training: 0.654496 validation: 0.673536
09/16 08:48:32 AM: Global learning rate: 0.0001
09/16 08:48:32 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:48:35 AM: Update 861: task edges-rel-semeval, batch 61 (861): mcc: 0.6657, acc: 0.5153, precision: 0.8555, recall: 0.5387, f1: 0.6611, edges-rel-semeval_loss: 0.0848
09/16 08:48:37 AM: ***** Step 900 / Validation 9 *****
09/16 08:48:37 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:37 AM: Validating...
09/16 08:48:39 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:39 AM: Best result seen so far for macro.
09/16 08:48:39 AM: Updating LR scheduler:
09/16 08:48:39 AM: 	Best result seen so far for macro_avg: 0.682
09/16 08:48:39 AM: 	# validation passes without improvement: 0
09/16 08:48:39 AM: edges-rel-semeval_loss: training: 0.083612 validation: 0.078371
09/16 08:48:39 AM: macro_avg: validation: 0.682454
09/16 08:48:39 AM: micro_avg: validation: 0.000000
09/16 08:48:39 AM: edges-rel-semeval_mcc: training: 0.671287 validation: 0.690512
09/16 08:48:39 AM: edges-rel-semeval_acc: training: 0.521602 validation: 0.543951
09/16 08:48:39 AM: edges-rel-semeval_precision: training: 0.857426 validation: 0.894217
09/16 08:48:39 AM: edges-rel-semeval_recall: training: 0.546200 validation: 0.551784
09/16 08:48:39 AM: edges-rel-semeval_f1: training: 0.667309 validation: 0.682454
09/16 08:48:39 AM: Global learning rate: 0.0001
09/16 08:48:39 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:48:44 AM: ***** Step 1000 / Validation 10 *****
09/16 08:48:44 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:44 AM: Validating...
09/16 08:48:45 AM: Evaluate: task edges-rel-semeval, batch 17 (36): mcc: 0.7167, acc: 0.5735, precision: 0.9037, recall: 0.5864, f1: 0.7113, edges-rel-semeval_loss: 0.0724
09/16 08:48:47 AM: Updating LR scheduler:
09/16 08:48:47 AM: 	Best result seen so far for macro_avg: 0.682
09/16 08:48:47 AM: 	# validation passes without improvement: 1
09/16 08:48:47 AM: edges-rel-semeval_loss: training: 0.076818 validation: 0.076449
09/16 08:48:47 AM: macro_avg: validation: 0.681283
09/16 08:48:47 AM: micro_avg: validation: 0.000000
09/16 08:48:47 AM: edges-rel-semeval_mcc: training: 0.709401 validation: 0.687655
09/16 08:48:47 AM: edges-rel-semeval_acc: training: 0.567813 validation: 0.542211
09/16 08:48:47 AM: edges-rel-semeval_precision: training: 0.874254 validation: 0.883495
09/16 08:48:47 AM: edges-rel-semeval_recall: training: 0.595312 validation: 0.554395
09/16 08:48:47 AM: edges-rel-semeval_f1: training: 0.708310 validation: 0.681283
09/16 08:48:47 AM: Global learning rate: 0.0001
09/16 08:48:47 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:48:52 AM: ***** Step 1100 / Validation 11 *****
09/16 08:48:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:52 AM: Validating...
09/16 08:48:54 AM: Best result seen so far for edges-rel-semeval.
09/16 08:48:54 AM: Best result seen so far for macro.
09/16 08:48:54 AM: Updating LR scheduler:
09/16 08:48:54 AM: 	Best result seen so far for macro_avg: 0.708
09/16 08:48:54 AM: 	# validation passes without improvement: 0
09/16 08:48:54 AM: edges-rel-semeval_loss: training: 0.075347 validation: 0.074726
09/16 08:48:54 AM: macro_avg: validation: 0.708114
09/16 08:48:54 AM: micro_avg: validation: 0.000000
09/16 08:48:54 AM: edges-rel-semeval_mcc: training: 0.700022 validation: 0.712911
09/16 08:48:54 AM: edges-rel-semeval_acc: training: 0.562283 validation: 0.573542
09/16 08:48:54 AM: edges-rel-semeval_precision: training: 0.854809 validation: 0.897196
09/16 08:48:54 AM: edges-rel-semeval_recall: training: 0.594134 validation: 0.584856
09/16 08:48:54 AM: edges-rel-semeval_f1: training: 0.701023 validation: 0.708114
09/16 08:48:54 AM: Global learning rate: 0.0001
09/16 08:48:54 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:48:55 AM: Update 1122: task edges-rel-semeval, batch 22 (1122): mcc: 0.7263, acc: 0.5938, precision: 0.8790, recall: 0.6193, f1: 0.7267, edges-rel-semeval_loss: 0.0712
09/16 08:48:59 AM: ***** Step 1200 / Validation 12 *****
09/16 08:48:59 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:48:59 AM: Validating...
09/16 08:49:01 AM: Updating LR scheduler:
09/16 08:49:01 AM: 	Best result seen so far for macro_avg: 0.708
09/16 08:49:01 AM: 	# validation passes without improvement: 1
09/16 08:49:01 AM: edges-rel-semeval_loss: training: 0.072078 validation: 0.073093
09/16 08:49:01 AM: macro_avg: validation: 0.702815
09/16 08:49:01 AM: micro_avg: validation: 0.000000
09/16 08:49:01 AM: edges-rel-semeval_mcc: training: 0.727572 validation: 0.704967
09/16 08:49:01 AM: edges-rel-semeval_acc: training: 0.590625 validation: 0.565709
09/16 08:49:01 AM: edges-rel-semeval_precision: training: 0.873473 validation: 0.876463
09/16 08:49:01 AM: edges-rel-semeval_recall: training: 0.625625 validation: 0.586597
09/16 08:49:01 AM: edges-rel-semeval_f1: training: 0.729060 validation: 0.702815
09/16 08:49:01 AM: Global learning rate: 0.0001
09/16 08:49:01 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:49:05 AM: Update 1288: task edges-rel-semeval, batch 88 (1288): mcc: 0.7108, acc: 0.5767, precision: 0.8561, recall: 0.6108, f1: 0.7130, edges-rel-semeval_loss: 0.0728
09/16 08:49:07 AM: ***** Step 1300 / Validation 13 *****
09/16 08:49:07 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:49:07 AM: Validating...
09/16 08:49:09 AM: Best result seen so far for edges-rel-semeval.
09/16 08:49:09 AM: Best result seen so far for macro.
09/16 08:49:09 AM: Updating LR scheduler:
09/16 08:49:09 AM: 	Best result seen so far for macro_avg: 0.728
09/16 08:49:09 AM: 	# validation passes without improvement: 0
09/16 08:49:09 AM: edges-rel-semeval_loss: training: 0.071988 validation: 0.070537
09/16 08:49:09 AM: macro_avg: validation: 0.728383
09/16 08:49:09 AM: micro_avg: validation: 0.000000
09/16 08:49:09 AM: edges-rel-semeval_mcc: training: 0.717707 validation: 0.727389
09/16 08:49:09 AM: edges-rel-semeval_acc: training: 0.584674 validation: 0.600522
09/16 08:49:09 AM: edges-rel-semeval_precision: training: 0.856337 validation: 0.876377
09/16 08:49:09 AM: edges-rel-semeval_recall: training: 0.622201 validation: 0.623151
09/16 08:49:09 AM: edges-rel-semeval_f1: training: 0.720731 validation: 0.728383
09/16 08:49:09 AM: Global learning rate: 0.0001
09/16 08:49:09 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:49:14 AM: ***** Step 1400 / Validation 14 *****
09/16 08:49:14 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:49:14 AM: Validating...
09/16 08:49:15 AM: Evaluate: task edges-rel-semeval, batch 21 (36): mcc: 0.7547, acc: 0.6324, precision: 0.9185, recall: 0.6369, f1: 0.7522, edges-rel-semeval_loss: 0.0659
09/16 08:49:16 AM: Updating LR scheduler:
09/16 08:49:16 AM: 	Best result seen so far for macro_avg: 0.728
09/16 08:49:16 AM: 	# validation passes without improvement: 1
09/16 08:49:16 AM: edges-rel-semeval_loss: training: 0.067089 validation: 0.070829
09/16 08:49:16 AM: macro_avg: validation: 0.713987
09/16 08:49:16 AM: micro_avg: validation: 0.000000
09/16 08:49:16 AM: edges-rel-semeval_mcc: training: 0.745416 validation: 0.717111
09/16 08:49:16 AM: edges-rel-semeval_acc: training: 0.613437 validation: 0.588338
09/16 08:49:16 AM: edges-rel-semeval_precision: training: 0.874062 validation: 0.891786
09/16 08:49:16 AM: edges-rel-semeval_recall: training: 0.655000 validation: 0.595300
09/16 08:49:16 AM: edges-rel-semeval_f1: training: 0.748839 validation: 0.713987
09/16 08:49:16 AM: Global learning rate: 0.0001
09/16 08:49:16 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:49:21 AM: ***** Step 1500 / Validation 15 *****
09/16 08:49:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:49:21 AM: Validating...
09/16 08:49:23 AM: Updating LR scheduler:
09/16 08:49:23 AM: 	Best result seen so far for macro_avg: 0.728
09/16 08:49:23 AM: 	# validation passes without improvement: 2
09/16 08:49:23 AM: edges-rel-semeval_loss: training: 0.066387 validation: 0.069203
09/16 08:49:23 AM: macro_avg: validation: 0.721362
09/16 08:49:23 AM: micro_avg: validation: 0.000000
09/16 08:49:23 AM: edges-rel-semeval_mcc: training: 0.752549 validation: 0.722626
09/16 08:49:23 AM: edges-rel-semeval_acc: training: 0.626250 validation: 0.590078
09/16 08:49:23 AM: edges-rel-semeval_precision: training: 0.880665 validation: 0.885932
09/16 08:49:23 AM: edges-rel-semeval_recall: training: 0.661875 validation: 0.608355
09/16 08:49:23 AM: edges-rel-semeval_f1: training: 0.755754 validation: 0.721362
09/16 08:49:23 AM: Global learning rate: 0.0001
09/16 08:49:23 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:49:25 AM: Update 1532: task edges-rel-semeval, batch 32 (1532): mcc: 0.7768, acc: 0.6563, precision: 0.8916, recall: 0.6945, f1: 0.7808, edges-rel-semeval_loss: 0.0613
09/16 08:49:29 AM: ***** Step 1600 / Validation 16 *****
09/16 08:49:29 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:49:29 AM: Validating...
09/16 08:49:31 AM: Best result seen so far for edges-rel-semeval.
09/16 08:49:31 AM: Best result seen so far for macro.
09/16 08:49:31 AM: Updating LR scheduler:
09/16 08:49:31 AM: 	Best result seen so far for macro_avg: 0.730
09/16 08:49:31 AM: 	# validation passes without improvement: 0
09/16 08:49:31 AM: edges-rel-semeval_loss: training: 0.062959 validation: 0.070040
09/16 08:49:31 AM: macro_avg: validation: 0.730256
09/16 08:49:31 AM: micro_avg: validation: 0.000000
09/16 08:49:31 AM: edges-rel-semeval_mcc: training: 0.767234 validation: 0.730893
09/16 08:49:31 AM: edges-rel-semeval_acc: training: 0.644592 validation: 0.610096
09/16 08:49:31 AM: edges-rel-semeval_precision: training: 0.880712 validation: 0.888889
09/16 08:49:31 AM: edges-rel-semeval_recall: training: 0.686850 validation: 0.619669
09/16 08:49:31 AM: edges-rel-semeval_f1: training: 0.771793 validation: 0.730256
09/16 08:49:31 AM: Global learning rate: 0.0001
09/16 08:49:31 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:49:35 AM: ***** Step 1700 / Validation 17 *****
09/16 08:49:35 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:49:35 AM: Validating...
09/16 08:49:35 AM: Evaluate: task edges-rel-semeval, batch 6 (36): mcc: 0.7844, acc: 0.6771, precision: 0.9167, recall: 0.6875, f1: 0.7857, edges-rel-semeval_loss: 0.0585
09/16 08:49:37 AM: Best result seen so far for edges-rel-semeval.
09/16 08:49:37 AM: Best result seen so far for macro.
09/16 08:49:37 AM: Updating LR scheduler:
09/16 08:49:37 AM: 	Best result seen so far for macro_avg: 0.731
09/16 08:49:37 AM: 	# validation passes without improvement: 0
09/16 08:49:37 AM: edges-rel-semeval_loss: training: 0.064236 validation: 0.068221
09/16 08:49:37 AM: macro_avg: validation: 0.730557
09/16 08:49:37 AM: micro_avg: validation: 0.000000
09/16 08:49:37 AM: edges-rel-semeval_mcc: training: 0.752331 validation: 0.727377
09/16 08:49:37 AM: edges-rel-semeval_acc: training: 0.624687 validation: 0.606614
09/16 08:49:37 AM: edges-rel-semeval_precision: training: 0.872297 validation: 0.862559
09/16 08:49:37 AM: edges-rel-semeval_recall: training: 0.668125 validation: 0.633594
09/16 08:49:37 AM: edges-rel-semeval_f1: training: 0.756680 validation: 0.730557
09/16 08:49:37 AM: Global learning rate: 0.0001
09/16 08:49:37 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:49:42 AM: ***** Step 1800 / Validation 18 *****
09/16 08:49:42 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:49:42 AM: Validating...
09/16 08:49:45 AM: Updating LR scheduler:
09/16 08:49:45 AM: 	Best result seen so far for macro_avg: 0.731
09/16 08:49:45 AM: 	# validation passes without improvement: 1
09/16 08:49:45 AM: edges-rel-semeval_loss: training: 0.060875 validation: 0.068121
09/16 08:49:45 AM: macro_avg: validation: 0.724975
09/16 08:49:45 AM: micro_avg: validation: 0.000000
09/16 08:49:45 AM: edges-rel-semeval_mcc: training: 0.767399 validation: 0.722707
09/16 08:49:45 AM: edges-rel-semeval_acc: training: 0.650268 validation: 0.603133
09/16 08:49:45 AM: edges-rel-semeval_precision: training: 0.871440 validation: 0.864897
09/16 08:49:45 AM: edges-rel-semeval_recall: training: 0.694734 validation: 0.624021
09/16 08:49:45 AM: edges-rel-semeval_f1: training: 0.773118 validation: 0.724975
09/16 08:49:45 AM: Global learning rate: 0.0001
09/16 08:49:45 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:49:45 AM: Update 1820: task edges-rel-semeval, batch 20 (1820): mcc: 0.7579, acc: 0.6469, precision: 0.8566, recall: 0.6906, f1: 0.7647, edges-rel-semeval_loss: 0.0627
09/16 08:49:49 AM: ***** Step 1900 / Validation 19 *****
09/16 08:49:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:49:49 AM: Validating...
09/16 08:49:51 AM: Best result seen so far for edges-rel-semeval.
09/16 08:49:51 AM: Best result seen so far for macro.
09/16 08:49:51 AM: Updating LR scheduler:
09/16 08:49:51 AM: 	Best result seen so far for macro_avg: 0.739
09/16 08:49:51 AM: 	# validation passes without improvement: 0
09/16 08:49:51 AM: edges-rel-semeval_loss: training: 0.061368 validation: 0.066554
09/16 08:49:51 AM: macro_avg: validation: 0.738911
09/16 08:49:51 AM: micro_avg: validation: 0.000000
09/16 08:49:51 AM: edges-rel-semeval_mcc: training: 0.760017 validation: 0.736984
09/16 08:49:51 AM: edges-rel-semeval_acc: training: 0.643750 validation: 0.618799
09/16 08:49:51 AM: edges-rel-semeval_precision: training: 0.863583 validation: 0.877844
09/16 08:49:51 AM: edges-rel-semeval_recall: training: 0.688438 validation: 0.637946
09/16 08:49:51 AM: edges-rel-semeval_f1: training: 0.766128 validation: 0.738911
09/16 08:49:51 AM: Global learning rate: 0.0001
09/16 08:49:51 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:49:55 AM: Update 1975: task edges-rel-semeval, batch 75 (1975): mcc: 0.7770, acc: 0.6580, precision: 0.8795, recall: 0.7048, f1: 0.7825, edges-rel-semeval_loss: 0.0586
09/16 08:49:57 AM: ***** Step 2000 / Validation 20 *****
09/16 08:49:57 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:49:57 AM: Validating...
09/16 08:49:59 AM: Best result seen so far for edges-rel-semeval.
09/16 08:49:59 AM: Best result seen so far for macro.
09/16 08:49:59 AM: Updating LR scheduler:
09/16 08:49:59 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:49:59 AM: 	# validation passes without improvement: 0
09/16 08:49:59 AM: edges-rel-semeval_loss: training: 0.057588 validation: 0.067366
09/16 08:49:59 AM: macro_avg: validation: 0.739699
09/16 08:49:59 AM: micro_avg: validation: 0.000000
09/16 08:49:59 AM: edges-rel-semeval_mcc: training: 0.780949 validation: 0.737317
09/16 08:49:59 AM: edges-rel-semeval_acc: training: 0.661621 validation: 0.619669
09/16 08:49:59 AM: edges-rel-semeval_precision: training: 0.882307 validation: 0.875149
09/16 08:49:59 AM: edges-rel-semeval_recall: training: 0.709240 validation: 0.640557
09/16 08:49:59 AM: edges-rel-semeval_f1: training: 0.786364 validation: 0.739699
09/16 08:49:59 AM: Global learning rate: 0.0001
09/16 08:49:59 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:50:03 AM: ***** Step 2100 / Validation 21 *****
09/16 08:50:03 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:50:03 AM: Validating...
09/16 08:50:06 AM: Evaluate: task edges-rel-semeval, batch 32 (36): mcc: 0.7523, acc: 0.6406, precision: 0.8774, recall: 0.6641, f1: 0.7560, edges-rel-semeval_loss: 0.0626
09/16 08:50:06 AM: Updating LR scheduler:
09/16 08:50:06 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:50:06 AM: 	# validation passes without improvement: 1
09/16 08:50:06 AM: edges-rel-semeval_loss: training: 0.057591 validation: 0.066914
09/16 08:50:06 AM: macro_avg: validation: 0.731440
09/16 08:50:06 AM: micro_avg: validation: 0.000000
09/16 08:50:06 AM: edges-rel-semeval_mcc: training: 0.782943 validation: 0.727215
09/16 08:50:06 AM: edges-rel-semeval_acc: training: 0.674063 validation: 0.613577
09/16 08:50:06 AM: edges-rel-semeval_precision: training: 0.879954 validation: 0.855478
09/16 08:50:06 AM: edges-rel-semeval_recall: training: 0.714688 validation: 0.638816
09/16 08:50:06 AM: edges-rel-semeval_f1: training: 0.788757 validation: 0.731440
09/16 08:50:06 AM: Global learning rate: 0.0001
09/16 08:50:06 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:50:11 AM: ***** Step 2200 / Validation 22 *****
09/16 08:50:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:50:11 AM: Validating...
09/16 08:50:14 AM: Updating LR scheduler:
09/16 08:50:14 AM: 	Best result seen so far for macro_avg: 0.740
09/16 08:50:14 AM: 	# validation passes without improvement: 2
09/16 08:50:14 AM: edges-rel-semeval_loss: training: 0.055848 validation: 0.065537
09/16 08:50:14 AM: macro_avg: validation: 0.732794
09/16 08:50:14 AM: micro_avg: validation: 0.000000
09/16 08:50:14 AM: edges-rel-semeval_mcc: training: 0.785212 validation: 0.731181
09/16 08:50:14 AM: edges-rel-semeval_acc: training: 0.671397 validation: 0.609225
09/16 08:50:14 AM: edges-rel-semeval_precision: training: 0.878415 validation: 0.875453
09/16 08:50:14 AM: edges-rel-semeval_recall: training: 0.719962 validation: 0.630113
09/16 08:50:14 AM: edges-rel-semeval_f1: training: 0.791335 validation: 0.732794
09/16 08:50:14 AM: Global learning rate: 0.0001
09/16 08:50:14 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:50:16 AM: Update 2243: task edges-rel-semeval, batch 43 (2243): mcc: 0.7996, acc: 0.6948, precision: 0.8907, recall: 0.7347, f1: 0.8053, edges-rel-semeval_loss: 0.0561
09/16 08:50:18 AM: ***** Step 2300 / Validation 23 *****
09/16 08:50:18 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:50:18 AM: Validating...
09/16 08:50:20 AM: Best result seen so far for edges-rel-semeval.
09/16 08:50:20 AM: Best result seen so far for macro.
09/16 08:50:20 AM: Updating LR scheduler:
09/16 08:50:20 AM: 	Best result seen so far for macro_avg: 0.741
09/16 08:50:20 AM: 	# validation passes without improvement: 0
09/16 08:50:20 AM: edges-rel-semeval_loss: training: 0.057068 validation: 0.065400
09/16 08:50:20 AM: macro_avg: validation: 0.740851
09/16 08:50:20 AM: micro_avg: validation: 0.000000
09/16 08:50:20 AM: edges-rel-semeval_mcc: training: 0.786068 validation: 0.736077
09/16 08:50:20 AM: edges-rel-semeval_acc: training: 0.674063 validation: 0.624021
09/16 08:50:20 AM: edges-rel-semeval_precision: training: 0.879771 validation: 0.857961
09/16 08:50:20 AM: edges-rel-semeval_recall: training: 0.720312 validation: 0.651871
09/16 08:50:20 AM: edges-rel-semeval_f1: training: 0.792096 validation: 0.740851
09/16 08:50:20 AM: Global learning rate: 0.0001
09/16 08:50:20 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:50:26 AM: Update 2399: task edges-rel-semeval, batch 99 (2399): mcc: 0.7968, acc: 0.6881, precision: 0.8837, recall: 0.7359, f1: 0.8031, edges-rel-semeval_loss: 0.0532
09/16 08:50:26 AM: ***** Step 2400 / Validation 24 *****
09/16 08:50:26 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:50:26 AM: Validating...
09/16 08:50:28 AM: Updating LR scheduler:
09/16 08:50:28 AM: 	Best result seen so far for macro_avg: 0.741
09/16 08:50:28 AM: 	# validation passes without improvement: 1
09/16 08:50:28 AM: edges-rel-semeval_loss: training: 0.053054 validation: 0.066086
09/16 08:50:28 AM: macro_avg: validation: 0.729400
09/16 08:50:28 AM: micro_avg: validation: 0.000000
09/16 08:50:28 AM: edges-rel-semeval_mcc: training: 0.797667 validation: 0.728470
09/16 08:50:28 AM: edges-rel-semeval_acc: training: 0.689057 validation: 0.609225
09/16 08:50:28 AM: edges-rel-semeval_precision: training: 0.884513 validation: 0.877601
09/16 08:50:28 AM: edges-rel-semeval_recall: training: 0.736676 validation: 0.624021
09/16 08:50:28 AM: edges-rel-semeval_f1: training: 0.803854 validation: 0.729400
09/16 08:50:28 AM: Global learning rate: 0.0001
09/16 08:50:28 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:50:32 AM: ***** Step 2500 / Validation 25 *****
09/16 08:50:32 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:50:32 AM: Validating...
09/16 08:50:35 AM: Best result seen so far for edges-rel-semeval.
09/16 08:50:35 AM: Best result seen so far for macro.
09/16 08:50:35 AM: Updating LR scheduler:
09/16 08:50:35 AM: 	Best result seen so far for macro_avg: 0.752
09/16 08:50:35 AM: 	# validation passes without improvement: 0
09/16 08:50:35 AM: edges-rel-semeval_loss: training: 0.053449 validation: 0.064426
09/16 08:50:35 AM: macro_avg: validation: 0.751731
09/16 08:50:35 AM: micro_avg: validation: 0.000000
09/16 08:50:35 AM: edges-rel-semeval_mcc: training: 0.797182 validation: 0.747594
09/16 08:50:35 AM: edges-rel-semeval_acc: training: 0.687813 validation: 0.639687
09/16 08:50:35 AM: edges-rel-semeval_precision: training: 0.890965 validation: 0.870561
09/16 08:50:35 AM: edges-rel-semeval_recall: training: 0.730313 validation: 0.661445
09/16 08:50:35 AM: edges-rel-semeval_f1: training: 0.802679 validation: 0.751731
09/16 08:50:35 AM: Global learning rate: 0.0001
09/16 08:50:35 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:50:36 AM: Update 2524: task edges-rel-semeval, batch 24 (2524): mcc: 0.7689, acc: 0.6576, precision: 0.8569, recall: 0.7096, f1: 0.7764, edges-rel-semeval_loss: 0.0580
09/16 08:50:40 AM: ***** Step 2600 / Validation 26 *****
09/16 08:50:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:50:40 AM: Validating...
09/16 08:50:42 AM: Best result seen so far for edges-rel-semeval.
09/16 08:50:42 AM: Best result seen so far for macro.
09/16 08:50:42 AM: Updating LR scheduler:
09/16 08:50:42 AM: 	Best result seen so far for macro_avg: 0.754
09/16 08:50:42 AM: 	# validation passes without improvement: 0
09/16 08:50:42 AM: edges-rel-semeval_loss: training: 0.053663 validation: 0.065347
09/16 08:50:42 AM: macro_avg: validation: 0.754229
09/16 08:50:42 AM: micro_avg: validation: 0.000000
09/16 08:50:42 AM: edges-rel-semeval_mcc: training: 0.793989 validation: 0.751128
09/16 08:50:42 AM: edges-rel-semeval_acc: training: 0.688426 validation: 0.644038
09/16 08:50:42 AM: edges-rel-semeval_precision: training: 0.879532 validation: 0.880372
09/16 08:50:42 AM: edges-rel-semeval_recall: training: 0.734469 validation: 0.659704
09/16 08:50:42 AM: edges-rel-semeval_f1: training: 0.800481 validation: 0.754229
09/16 08:50:42 AM: Global learning rate: 0.0001
09/16 08:50:42 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:50:46 AM: Update 2685: task edges-rel-semeval, batch 85 (2685): mcc: 0.8152, acc: 0.7107, precision: 0.8964, recall: 0.7574, f1: 0.8210, edges-rel-semeval_loss: 0.0503
09/16 08:50:46 AM: ***** Step 2700 / Validation 27 *****
09/16 08:50:46 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:50:46 AM: Validating...
09/16 08:50:48 AM: Best result seen so far for edges-rel-semeval.
09/16 08:50:48 AM: Best result seen so far for macro.
09/16 08:50:48 AM: Updating LR scheduler:
09/16 08:50:48 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:50:48 AM: 	# validation passes without improvement: 0
09/16 08:50:48 AM: edges-rel-semeval_loss: training: 0.050516 validation: 0.064652
09/16 08:50:48 AM: macro_avg: validation: 0.755032
09/16 08:50:48 AM: micro_avg: validation: 0.000000
09/16 08:50:48 AM: edges-rel-semeval_mcc: training: 0.812204 validation: 0.750044
09/16 08:50:48 AM: edges-rel-semeval_acc: training: 0.707187 validation: 0.642298
09/16 08:50:48 AM: edges-rel-semeval_precision: training: 0.895245 validation: 0.865991
09/16 08:50:48 AM: edges-rel-semeval_recall: training: 0.753125 validation: 0.669278
09/16 08:50:48 AM: edges-rel-semeval_f1: training: 0.818058 validation: 0.755032
09/16 08:50:48 AM: Global learning rate: 0.0001
09/16 08:50:48 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:50:54 AM: ***** Step 2800 / Validation 28 *****
09/16 08:50:54 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:50:54 AM: Validating...
09/16 08:50:56 AM: Evaluate: task edges-rel-semeval, batch 33 (36): mcc: 0.7552, acc: 0.6468, precision: 0.8695, recall: 0.6752, f1: 0.7601, edges-rel-semeval_loss: 0.0619
09/16 08:50:56 AM: Updating LR scheduler:
09/16 08:50:56 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:50:56 AM: 	# validation passes without improvement: 1
09/16 08:50:56 AM: edges-rel-semeval_loss: training: 0.053147 validation: 0.065339
09/16 08:50:56 AM: macro_avg: validation: 0.740668
09/16 08:50:56 AM: micro_avg: validation: 0.000000
09/16 08:50:56 AM: edges-rel-semeval_mcc: training: 0.795700 validation: 0.734918
09/16 08:50:56 AM: edges-rel-semeval_acc: training: 0.689688 validation: 0.624891
09/16 08:50:56 AM: edges-rel-semeval_precision: training: 0.877574 validation: 0.850056
09/16 08:50:56 AM: edges-rel-semeval_recall: training: 0.739199 validation: 0.656223
09/16 08:50:56 AM: edges-rel-semeval_f1: training: 0.802465 validation: 0.740668
09/16 08:50:56 AM: Global learning rate: 0.0001
09/16 08:50:56 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:51:00 AM: ***** Step 2900 / Validation 29 *****
09/16 08:51:00 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:51:00 AM: Validating...
09/16 08:51:02 AM: Updating LR scheduler:
09/16 08:51:02 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:51:02 AM: 	# validation passes without improvement: 2
09/16 08:51:02 AM: edges-rel-semeval_loss: training: 0.048860 validation: 0.065065
09/16 08:51:02 AM: macro_avg: validation: 0.754754
09/16 08:51:02 AM: micro_avg: validation: 0.000000
09/16 08:51:02 AM: edges-rel-semeval_mcc: training: 0.816361 validation: 0.748844
09/16 08:51:02 AM: edges-rel-semeval_acc: training: 0.715000 validation: 0.647520
09/16 08:51:02 AM: edges-rel-semeval_precision: training: 0.885570 validation: 0.858093
09/16 08:51:02 AM: edges-rel-semeval_recall: training: 0.769063 validation: 0.673629
09/16 08:51:02 AM: edges-rel-semeval_f1: training: 0.823215 validation: 0.754754
09/16 08:51:02 AM: Global learning rate: 0.0001
09/16 08:51:02 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:51:06 AM: Update 2973: task edges-rel-semeval, batch 73 (2973): mcc: 0.8004, acc: 0.6978, precision: 0.8802, recall: 0.7453, f1: 0.8071, edges-rel-semeval_loss: 0.0522
09/16 08:51:07 AM: ***** Step 3000 / Validation 30 *****
09/16 08:51:07 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:51:07 AM: Validating...
09/16 08:51:09 AM: Updating LR scheduler:
09/16 08:51:09 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:51:09 AM: 	# validation passes without improvement: 3
09/16 08:51:09 AM: edges-rel-semeval_loss: training: 0.052277 validation: 0.064345
09/16 08:51:09 AM: macro_avg: validation: 0.751354
09/16 08:51:09 AM: micro_avg: validation: 0.000000
09/16 08:51:09 AM: edges-rel-semeval_mcc: training: 0.800499 validation: 0.746561
09/16 08:51:09 AM: edges-rel-semeval_acc: training: 0.697187 validation: 0.635335
09/16 08:51:09 AM: edges-rel-semeval_precision: training: 0.882135 validation: 0.865079
09/16 08:51:09 AM: edges-rel-semeval_recall: training: 0.743750 validation: 0.664056
09/16 08:51:09 AM: edges-rel-semeval_f1: training: 0.807053 validation: 0.751354
09/16 08:51:09 AM: Global learning rate: 0.0001
09/16 08:51:09 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:51:14 AM: ***** Step 3100 / Validation 31 *****
09/16 08:51:14 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:51:14 AM: Validating...
09/16 08:51:16 AM: Evaluate: task edges-rel-semeval, batch 24 (36): mcc: 0.7700, acc: 0.6719, precision: 0.8730, recall: 0.6979, f1: 0.7757, edges-rel-semeval_loss: 0.0607
09/16 08:51:16 AM: Updating LR scheduler:
09/16 08:51:16 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:51:16 AM: 	# validation passes without improvement: 0
09/16 08:51:16 AM: edges-rel-semeval_loss: training: 0.048984 validation: 0.065763
09/16 08:51:16 AM: macro_avg: validation: 0.748532
09/16 08:51:16 AM: micro_avg: validation: 0.000000
09/16 08:51:16 AM: edges-rel-semeval_mcc: training: 0.811623 validation: 0.742711
09/16 08:51:16 AM: edges-rel-semeval_acc: training: 0.707348 validation: 0.637946
09/16 08:51:16 AM: edges-rel-semeval_precision: training: 0.893752 validation: 0.854749
09/16 08:51:16 AM: edges-rel-semeval_recall: training: 0.753390 validation: 0.665796
09/16 08:51:16 AM: edges-rel-semeval_f1: training: 0.817591 validation: 0.748532
09/16 08:51:16 AM: Global learning rate: 5e-05
09/16 08:51:16 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:51:21 AM: ***** Step 3200 / Validation 32 *****
09/16 08:51:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:51:21 AM: Validating...
09/16 08:51:23 AM: Best result seen so far for edges-rel-semeval.
09/16 08:51:23 AM: Best result seen so far for macro.
09/16 08:51:23 AM: Updating LR scheduler:
09/16 08:51:23 AM: 	Best result seen so far for macro_avg: 0.755
09/16 08:51:23 AM: 	# validation passes without improvement: 1
09/16 08:51:23 AM: edges-rel-semeval_loss: training: 0.049421 validation: 0.064246
09/16 08:51:23 AM: macro_avg: validation: 0.755122
09/16 08:51:23 AM: micro_avg: validation: 0.000000
09/16 08:51:23 AM: edges-rel-semeval_mcc: training: 0.819374 validation: 0.749296
09/16 08:51:23 AM: edges-rel-semeval_acc: training: 0.719375 validation: 0.650131
09/16 08:51:23 AM: edges-rel-semeval_precision: training: 0.895179 validation: 0.859046
09/16 08:51:23 AM: edges-rel-semeval_recall: training: 0.765938 validation: 0.673629
09/16 08:51:23 AM: edges-rel-semeval_f1: training: 0.825530 validation: 0.755122
09/16 08:51:23 AM: Global learning rate: 5e-05
09/16 08:51:23 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:51:26 AM: Update 3240: task edges-rel-semeval, batch 40 (3240): mcc: 0.8165, acc: 0.7194, precision: 0.8895, recall: 0.7658, f1: 0.8230, edges-rel-semeval_loss: 0.0466
09/16 08:51:28 AM: ***** Step 3300 / Validation 33 *****
09/16 08:51:28 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:51:28 AM: Validating...
09/16 08:51:31 AM: Best result seen so far for edges-rel-semeval.
09/16 08:51:31 AM: Best result seen so far for macro.
09/16 08:51:31 AM: Updating LR scheduler:
09/16 08:51:31 AM: 	Best result seen so far for macro_avg: 0.756
09/16 08:51:31 AM: 	# validation passes without improvement: 0
09/16 08:51:31 AM: edges-rel-semeval_loss: training: 0.046557 validation: 0.063859
09/16 08:51:31 AM: macro_avg: validation: 0.756467
09/16 08:51:31 AM: micro_avg: validation: 0.000000
09/16 08:51:31 AM: edges-rel-semeval_mcc: training: 0.822168 validation: 0.750780
09/16 08:51:31 AM: edges-rel-semeval_acc: training: 0.725008 validation: 0.644909
09/16 08:51:31 AM: edges-rel-semeval_precision: training: 0.891147 validation: 0.861111
09/16 08:51:31 AM: edges-rel-semeval_recall: training: 0.774519 validation: 0.674500
09/16 08:51:31 AM: edges-rel-semeval_f1: training: 0.828750 validation: 0.756467
09/16 08:51:31 AM: Global learning rate: 5e-05
09/16 08:51:31 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:51:35 AM: ***** Step 3400 / Validation 34 *****
09/16 08:51:35 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:51:35 AM: Validating...
09/16 08:51:36 AM: Evaluate: task edges-rel-semeval, batch 13 (36): mcc: 0.7779, acc: 0.6779, precision: 0.8732, recall: 0.7115, f1: 0.7841, edges-rel-semeval_loss: 0.0588
09/16 08:51:37 AM: Updating LR scheduler:
09/16 08:51:37 AM: 	Best result seen so far for macro_avg: 0.756
09/16 08:51:37 AM: 	# validation passes without improvement: 1
09/16 08:51:37 AM: edges-rel-semeval_loss: training: 0.046492 validation: 0.064709
09/16 08:51:37 AM: macro_avg: validation: 0.753425
09/16 08:51:37 AM: micro_avg: validation: 0.000000
09/16 08:51:37 AM: edges-rel-semeval_mcc: training: 0.825561 validation: 0.747884
09/16 08:51:37 AM: edges-rel-semeval_acc: training: 0.727812 validation: 0.642298
09/16 08:51:37 AM: edges-rel-semeval_precision: training: 0.896390 validation: 0.860335
09/16 08:51:37 AM: edges-rel-semeval_recall: training: 0.775937 validation: 0.670148
09/16 08:51:37 AM: edges-rel-semeval_f1: training: 0.831826 validation: 0.753425
09/16 08:51:37 AM: Global learning rate: 5e-05
09/16 08:51:37 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:51:42 AM: ***** Step 3500 / Validation 35 *****
09/16 08:51:42 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:51:42 AM: Validating...
09/16 08:51:45 AM: Updating LR scheduler:
09/16 08:51:45 AM: 	Best result seen so far for macro_avg: 0.756
09/16 08:51:45 AM: 	# validation passes without improvement: 2
09/16 08:51:45 AM: edges-rel-semeval_loss: training: 0.045006 validation: 0.064617
09/16 08:51:45 AM: macro_avg: validation: 0.748400
09/16 08:51:45 AM: micro_avg: validation: 0.000000
09/16 08:51:45 AM: edges-rel-semeval_mcc: training: 0.836951 validation: 0.743436
09/16 08:51:45 AM: edges-rel-semeval_acc: training: 0.739830 validation: 0.635335
09/16 08:51:45 AM: edges-rel-semeval_precision: training: 0.902193 validation: 0.861678
09/16 08:51:45 AM: edges-rel-semeval_recall: training: 0.791233 validation: 0.661445
09/16 08:51:45 AM: edges-rel-semeval_f1: training: 0.843078 validation: 0.748400
09/16 08:51:45 AM: Global learning rate: 5e-05
09/16 08:51:45 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:51:46 AM: Update 3524: task edges-rel-semeval, batch 24 (3524): mcc: 0.8337, acc: 0.7383, precision: 0.9039, recall: 0.7839, f1: 0.8396, edges-rel-semeval_loss: 0.0451
09/16 08:51:49 AM: ***** Step 3600 / Validation 36 *****
09/16 08:51:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:51:49 AM: Validating...
09/16 08:51:51 AM: Updating LR scheduler:
09/16 08:51:51 AM: 	Best result seen so far for macro_avg: 0.756
09/16 08:51:51 AM: 	# validation passes without improvement: 3
09/16 08:51:51 AM: edges-rel-semeval_loss: training: 0.045772 validation: 0.064363
09/16 08:51:51 AM: macro_avg: validation: 0.754699
09/16 08:51:51 AM: micro_avg: validation: 0.000000
09/16 08:51:51 AM: edges-rel-semeval_mcc: training: 0.831551 validation: 0.747375
09/16 08:51:51 AM: edges-rel-semeval_acc: training: 0.734375 validation: 0.646649
09/16 08:51:51 AM: edges-rel-semeval_precision: training: 0.898997 validation: 0.845572
09/16 08:51:51 AM: edges-rel-semeval_recall: training: 0.784375 validation: 0.681462
09/16 08:51:51 AM: edges-rel-semeval_f1: training: 0.837784 validation: 0.754699
09/16 08:51:51 AM: Global learning rate: 5e-05
09/16 08:51:51 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:51:56 AM: Update 3681: task edges-rel-semeval, batch 81 (3681): mcc: 0.8292, acc: 0.7370, precision: 0.9014, recall: 0.7780, f1: 0.8352, edges-rel-semeval_loss: 0.0452
09/16 08:51:56 AM: ***** Step 3700 / Validation 37 *****
09/16 08:51:56 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:51:56 AM: Validating...
09/16 08:51:59 AM: Updating LR scheduler:
09/16 08:51:59 AM: 	Best result seen so far for macro_avg: 0.756
09/16 08:51:59 AM: 	# validation passes without improvement: 0
09/16 08:51:59 AM: edges-rel-semeval_loss: training: 0.044873 validation: 0.065356
09/16 08:51:59 AM: macro_avg: validation: 0.750863
09/16 08:51:59 AM: micro_avg: validation: 0.000000
09/16 08:51:59 AM: edges-rel-semeval_mcc: training: 0.828183 validation: 0.746320
09/16 08:51:59 AM: edges-rel-semeval_acc: training: 0.734153 validation: 0.640557
09/16 08:51:59 AM: edges-rel-semeval_precision: training: 0.897604 validation: 0.866743
09/16 08:51:59 AM: edges-rel-semeval_recall: training: 0.779565 validation: 0.662315
09/16 08:51:59 AM: edges-rel-semeval_f1: training: 0.834430 validation: 0.750863
09/16 08:51:59 AM: Global learning rate: 2.5e-05
09/16 08:51:59 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:52:03 AM: ***** Step 3800 / Validation 38 *****
09/16 08:52:03 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:52:03 AM: Validating...
09/16 08:52:06 AM: Updating LR scheduler:
09/16 08:52:06 AM: 	Best result seen so far for macro_avg: 0.756
09/16 08:52:06 AM: 	# validation passes without improvement: 1
09/16 08:52:06 AM: edges-rel-semeval_loss: training: 0.043439 validation: 0.064407
09/16 08:52:06 AM: macro_avg: validation: 0.753068
09/16 08:52:06 AM: micro_avg: validation: 0.000000
09/16 08:52:06 AM: edges-rel-semeval_mcc: training: 0.842174 validation: 0.747967
09/16 08:52:06 AM: edges-rel-semeval_acc: training: 0.750938 validation: 0.642298
09/16 08:52:06 AM: edges-rel-semeval_precision: training: 0.903283 validation: 0.863739
09/16 08:52:06 AM: edges-rel-semeval_recall: training: 0.799688 validation: 0.667537
09/16 08:52:06 AM: edges-rel-semeval_f1: training: 0.848334 validation: 0.753068
09/16 08:52:06 AM: Global learning rate: 2.5e-05
09/16 08:52:06 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:52:06 AM: Update 3803: task edges-rel-semeval, batch 3 (3803): mcc: 0.8033, acc: 0.7083, precision: 0.8690, recall: 0.7604, f1: 0.8111, edges-rel-semeval_loss: 0.0437
09/16 08:52:11 AM: ***** Step 3900 / Validation 39 *****
09/16 08:52:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:52:11 AM: Validating...
09/16 08:52:13 AM: Updating LR scheduler:
09/16 08:52:13 AM: 	Best result seen so far for macro_avg: 0.756
09/16 08:52:13 AM: 	# validation passes without improvement: 2
09/16 08:52:13 AM: edges-rel-semeval_loss: training: 0.043148 validation: 0.064478
09/16 08:52:13 AM: macro_avg: validation: 0.750247
09/16 08:52:13 AM: micro_avg: validation: 0.000000
09/16 08:52:13 AM: edges-rel-semeval_mcc: training: 0.840685 validation: 0.745738
09/16 08:52:13 AM: edges-rel-semeval_acc: training: 0.748344 validation: 0.636205
09/16 08:52:13 AM: edges-rel-semeval_precision: training: 0.905823 validation: 0.866591
09/16 08:52:13 AM: edges-rel-semeval_recall: training: 0.794702 validation: 0.661445
09/16 08:52:13 AM: edges-rel-semeval_f1: training: 0.846632 validation: 0.750247
09/16 08:52:13 AM: Global learning rate: 2.5e-05
09/16 08:52:13 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:52:16 AM: Update 3962: task edges-rel-semeval, batch 62 (3962): mcc: 0.8302, acc: 0.7339, precision: 0.8959, recall: 0.7848, f1: 0.8366, edges-rel-semeval_loss: 0.0453
09/16 08:52:18 AM: ***** Step 4000 / Validation 40 *****
09/16 08:52:18 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:52:18 AM: Validating...
09/16 08:52:20 AM: Updating LR scheduler:
09/16 08:52:20 AM: 	Best result seen so far for macro_avg: 0.756
09/16 08:52:20 AM: 	# validation passes without improvement: 3
09/16 08:52:20 AM: edges-rel-semeval_loss: training: 0.044986 validation: 0.064703
09/16 08:52:20 AM: macro_avg: validation: 0.745255
09/16 08:52:20 AM: micro_avg: validation: 0.000000
09/16 08:52:20 AM: edges-rel-semeval_mcc: training: 0.833946 validation: 0.742239
09/16 08:52:20 AM: edges-rel-semeval_acc: training: 0.737187 validation: 0.630113
09/16 08:52:20 AM: edges-rel-semeval_precision: training: 0.900322 validation: 0.874560
09/16 08:52:20 AM: edges-rel-semeval_recall: training: 0.787500 validation: 0.649260
09/16 08:52:20 AM: edges-rel-semeval_f1: training: 0.840140 validation: 0.745255
09/16 08:52:20 AM: Global learning rate: 2.5e-05
09/16 08:52:20 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:52:25 AM: ***** Step 4100 / Validation 41 *****
09/16 08:52:25 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:52:25 AM: Validating...
09/16 08:52:26 AM: Evaluate: task edges-rel-semeval, batch 16 (36): mcc: 0.7577, acc: 0.6543, precision: 0.8719, recall: 0.6777, f1: 0.7626, edges-rel-semeval_loss: 0.0591
09/16 08:52:27 AM: Updating LR scheduler:
09/16 08:52:27 AM: 	Best result seen so far for macro_avg: 0.756
09/16 08:52:27 AM: 	# validation passes without improvement: 0
09/16 08:52:27 AM: edges-rel-semeval_loss: training: 0.044142 validation: 0.064327
09/16 08:52:27 AM: macro_avg: validation: 0.749753
09/16 08:52:27 AM: micro_avg: validation: 0.000000
09/16 08:52:27 AM: edges-rel-semeval_mcc: training: 0.830992 validation: 0.745500
09/16 08:52:27 AM: edges-rel-semeval_acc: training: 0.735730 validation: 0.639687
09/16 08:52:27 AM: edges-rel-semeval_precision: training: 0.897260 validation: 0.868270
09/16 08:52:27 AM: edges-rel-semeval_recall: training: 0.784926 validation: 0.659704
09/16 08:52:27 AM: edges-rel-semeval_f1: training: 0.837342 validation: 0.749753
09/16 08:52:27 AM: Global learning rate: 1.25e-05
09/16 08:52:27 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:52:32 AM: ***** Step 4200 / Validation 42 *****
09/16 08:52:32 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:52:32 AM: Validating...
09/16 08:52:34 AM: Updating LR scheduler:
09/16 08:52:34 AM: 	Best result seen so far for macro_avg: 0.756
09/16 08:52:34 AM: 	# validation passes without improvement: 1
09/16 08:52:34 AM: edges-rel-semeval_loss: training: 0.042989 validation: 0.064080
09/16 08:52:34 AM: macro_avg: validation: 0.753323
09/16 08:52:34 AM: micro_avg: validation: 0.000000
09/16 08:52:34 AM: edges-rel-semeval_mcc: training: 0.842923 validation: 0.748645
09/16 08:52:34 AM: edges-rel-semeval_acc: training: 0.748750 validation: 0.644038
09/16 08:52:34 AM: edges-rel-semeval_precision: training: 0.909286 validation: 0.867347
09/16 08:52:34 AM: edges-rel-semeval_recall: training: 0.795625 validation: 0.665796
09/16 08:52:34 AM: edges-rel-semeval_f1: training: 0.848667 validation: 0.753323
09/16 08:52:34 AM: Global learning rate: 1.25e-05
09/16 08:52:34 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:52:36 AM: Update 4244: task edges-rel-semeval, batch 44 (4244): mcc: 0.8379, acc: 0.7479, precision: 0.9089, recall: 0.7869, f1: 0.8435, edges-rel-semeval_loss: 0.0438
09/16 08:52:38 AM: ***** Step 4300 / Validation 43 *****
09/16 08:52:38 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:52:38 AM: Validating...
09/16 08:52:40 AM: Updating LR scheduler:
09/16 08:52:40 AM: 	Best result seen so far for macro_avg: 0.756
09/16 08:52:40 AM: 	# validation passes without improvement: 2
09/16 08:52:40 AM: Ran out of early stopping patience. Stopping training.
09/16 08:52:40 AM: edges-rel-semeval_loss: training: 0.044489 validation: 0.064152
09/16 08:52:40 AM: macro_avg: validation: 0.748400
09/16 08:52:40 AM: micro_avg: validation: 0.000000
09/16 08:52:40 AM: edges-rel-semeval_mcc: training: 0.836186 validation: 0.743436
09/16 08:52:40 AM: edges-rel-semeval_acc: training: 0.742812 validation: 0.635335
09/16 08:52:40 AM: edges-rel-semeval_precision: training: 0.903076 validation: 0.861678
09/16 08:52:40 AM: edges-rel-semeval_recall: training: 0.789062 validation: 0.661445
09/16 08:52:40 AM: edges-rel-semeval_f1: training: 0.842228 validation: 0.748400
09/16 08:52:40 AM: Global learning rate: 1.25e-05
09/16 08:52:40 AM: Saving checkpoints to: ./experiments/rel-semeval-multiqa-mix/run
09/16 08:52:40 AM: Stopped training after 43 validation checks
09/16 08:52:40 AM: Trained edges-rel-semeval for 4300 batches or 20.000 epochs
09/16 08:52:40 AM: ***** VALIDATION RESULTS *****
09/16 08:52:40 AM: edges-rel-semeval_f1 (for best val pass 33): edges-rel-semeval_loss: 0.06386, macro_avg: 0.75647, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.75078, edges-rel-semeval_acc: 0.64491, edges-rel-semeval_precision: 0.86111, edges-rel-semeval_recall: 0.67450, edges-rel-semeval_f1: 0.75647
09/16 08:52:40 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.17599, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 08:52:40 AM: macro_avg (for best val pass 33): edges-rel-semeval_loss: 0.06386, macro_avg: 0.75647, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.75078, edges-rel-semeval_acc: 0.64491, edges-rel-semeval_precision: 0.86111, edges-rel-semeval_recall: 0.67450, edges-rel-semeval_f1: 0.75647
09/16 08:52:40 AM: Evaluating...
09/16 08:52:40 AM: Loaded model state from ./experiments/rel-semeval-multiqa-mix/run/edges-rel-semeval/model_state_target_train_val_33.best.th
09/16 08:52:40 AM: Evaluating on: edges-rel-semeval, split: val
09/16 08:52:43 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:52:43 AM: Finished evaluating on: edges-rel-semeval
09/16 08:52:43 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 08:52:43 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-multiqa-mix/run
09/16 08:52:43 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-multiqa-mix/run
09/16 08:52:43 AM: Evaluating on: edges-rel-semeval, split: test
09/16 08:52:48 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:52:48 AM: Finished evaluating on: edges-rel-semeval
09/16 08:52:48 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 08:52:48 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-multiqa-mix/run
09/16 08:52:48 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-multiqa-mix/run
09/16 08:52:48 AM: Writing results for split 'val' to ./experiments/rel-semeval-multiqa-mix/results.tsv
09/16 08:52:48 AM: micro_avg: 0.000, macro_avg: 0.756, edges-rel-semeval_mcc: 0.751, edges-rel-semeval_acc: 0.645, edges-rel-semeval_precision: 0.861, edges-rel-semeval_recall: 0.674, edges-rel-semeval_f1: 0.756
09/16 08:52:48 AM: Done!
09/16 08:52:48 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
