09/16 08:09:31 AM: Git branch: master
09/16 08:09:31 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:09:31 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-None-cat/",
  "exp_name": "experiments/spr2-None-cat",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-None-cat/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/None",
  "pytorch_transformers_output_mode": "cat",
  "remote_log_name": "experiments/spr2-None-cat__run",
  "run_dir": "./experiments/spr2-None-cat/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:09:31 AM: Saved config to ./experiments/spr2-None-cat/run/params.conf
09/16 08:09:31 AM: Using random seed 1234
09/16 08:09:32 AM: Using GPU 0
09/16 08:09:32 AM: Loading tasks...
09/16 08:09:32 AM: Writing pre-preprocessed tasks to ./experiments/spr2-None-cat/
09/16 08:09:32 AM: 	Creating task edges-spr2 from scratch.
09/16 08:09:32 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:09:32 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:09:33 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:09:33 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:09:33 AM: 	Finished loading tasks: edges-spr2.
09/16 08:09:33 AM: 	Building vocab from scratch.
09/16 08:09:33 AM: 	Counting units for task edges-spr2.
09/16 08:09:33 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:09:34 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:09:34 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:09:34 AM: 	Saved vocab to ./experiments/spr2-None-cat/vocab
09/16 08:09:34 AM: Loading token dictionary from ./experiments/spr2-None-cat/vocab.
09/16 08:09:34 AM: 	Loaded vocab from ./experiments/spr2-None-cat/vocab
09/16 08:09:34 AM: 	Vocab namespace tokens: size 7943
09/16 08:09:34 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:09:34 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:09:34 AM: 	Vocab namespace chars: size 65
09/16 08:09:34 AM: 	Finished building vocab.
09/16 08:09:34 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:09:35 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-None-cat/preproc/edges-spr2__train_data
09/16 08:09:35 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:09:35 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-None-cat/preproc/edges-spr2__val_data
09/16 08:09:35 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:09:35 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-None-cat/preproc/edges-spr2__test_data
09/16 08:09:35 AM: 	Finished indexing tasks
09/16 08:09:35 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:09:35 AM: 	  Training on 
09/16 08:09:35 AM: 	  Evaluating on edges-spr2
09/16 08:09:35 AM: 	Finished loading tasks in 2.412s
09/16 08:09:35 AM: 	 Tasks: ['edges-spr2']
09/16 08:09:35 AM: Building model...
09/16 08:09:35 AM: Using BERT model (bert-base-uncased).
09/16 08:09:35 AM: LOADING A PRETRAINED MODEL
09/16 08:09:36 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json not found in cache or force_download set to True, downloading to /tmp/tmpq1if46aq
09/16 08:09:37 AM: copying /tmp/tmpq1if46aq to cache at ./experiments/spr2-None-cat/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 08:09:37 AM: creating metadata file for ./experiments/spr2-None-cat/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 08:09:37 AM: removing temp file /tmp/tmpq1if46aq
09/16 08:09:37 AM: loading configuration file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json from cache at ./experiments/spr2-None-cat/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 08:09:37 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:09:38 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin not found in cache or force_download set to True, downloading to /tmp/tmp8g23082m
09/16 08:20:18 AM: copying /tmp/tmp8g23082m to cache at ./experiments/spr2-None-cat/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 08:20:18 AM: creating metadata file for ./experiments/spr2-None-cat/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 08:20:18 AM: removing temp file /tmp/tmp8g23082m
09/16 08:20:18 AM: loading weights file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin from cache at ./experiments/spr2-None-cat/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 08:20:23 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpu3p8bg4c
09/16 08:20:25 AM: copying /tmp/tmpu3p8bg4c to cache at ./experiments/spr2-None-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:20:25 AM: creating metadata file for ./experiments/spr2-None-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:20:25 AM: removing temp file /tmp/tmpu3p8bg4c
09/16 08:20:25 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-None-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:20:25 AM: Initializing parameters
09/16 08:20:25 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:20:25 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:20:25 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:20:25 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:20:25 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:20:25 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:20:25 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:20:30 AM: Model specification:
09/16 08:20:30 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:20:30 AM: Model parameters:
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:20:30 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:20:30 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 08:20:30 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:20:30 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 08:20:30 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:20:30 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:20:30 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:20:30 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:20:30 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:20:30 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:20:30 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:20:30 AM: Total number of parameters: 110537236 (1.10537e+08)
09/16 08:20:30 AM: Number of trainable parameters: 1054996 (1.055e+06)
09/16 08:20:30 AM: Finished building model in 655.411s
09/16 08:20:30 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:20:31 AM: patience = 9
09/16 08:20:31 AM: val_interval = 100
09/16 08:20:31 AM: max_vals = 100
09/16 08:20:31 AM: cuda_device = 0
09/16 08:20:31 AM: grad_norm = 5.0
09/16 08:20:31 AM: grad_clipping = None
09/16 08:20:31 AM: lr_decay = 0.99
09/16 08:20:31 AM: min_lr = 1e-06
09/16 08:20:31 AM: keep_all_checkpoints = 0
09/16 08:20:31 AM: val_data_limit = 5000
09/16 08:20:31 AM: max_epochs = -1
09/16 08:20:31 AM: dec_val_scale = 250
09/16 08:20:31 AM: training_data_fraction = 1
09/16 08:20:31 AM: type = adam
09/16 08:20:31 AM: parameter_groups = None
09/16 08:20:31 AM: Number of trainable parameters: 1054996
09/16 08:20:31 AM: infer_type_and_cast = True
09/16 08:20:31 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:20:31 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:20:31 AM: lr = 0.0001
09/16 08:20:31 AM: amsgrad = True
09/16 08:20:31 AM: type = reduce_on_plateau
09/16 08:20:31 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:20:31 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:20:31 AM: mode = max
09/16 08:20:31 AM: factor = 0.5
09/16 08:20:31 AM: patience = 3
09/16 08:20:31 AM: threshold = 0.0001
09/16 08:20:31 AM: threshold_mode = abs
09/16 08:20:31 AM: verbose = True
09/16 08:20:31 AM: type = adam
09/16 08:20:31 AM: parameter_groups = None
09/16 08:20:31 AM: Number of trainable parameters: 1054996
09/16 08:20:31 AM: infer_type_and_cast = True
09/16 08:20:31 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:20:31 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:20:31 AM: lr = 0.0001
09/16 08:20:31 AM: amsgrad = True
09/16 08:20:31 AM: type = reduce_on_plateau
09/16 08:20:31 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:20:31 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:20:31 AM: mode = max
09/16 08:20:31 AM: factor = 0.5
09/16 08:20:31 AM: patience = 3
09/16 08:20:31 AM: threshold = 0.0001
09/16 08:20:31 AM: threshold_mode = abs
09/16 08:20:31 AM: verbose = True
09/16 08:20:31 AM: Starting training without restoring from a checkpoint.
09/16 08:20:31 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:20:31 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:20:39 AM: ***** Step 100 / Validation 1 *****
09/16 08:20:39 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:39 AM: Validating...
09/16 08:20:40 AM: Best result seen so far for edges-spr2.
09/16 08:20:40 AM: Best result seen so far for micro.
09/16 08:20:40 AM: Best result seen so far for macro.
09/16 08:20:40 AM: Updating LR scheduler:
09/16 08:20:40 AM: 	Best result seen so far for macro_avg: 0.796
09/16 08:20:40 AM: 	# validation passes without improvement: 0
09/16 08:20:40 AM: edges-spr2_loss: training: 0.371297 validation: 0.341737
09/16 08:20:40 AM: macro_avg: validation: 0.795877
09/16 08:20:40 AM: micro_avg: validation: 0.000000
09/16 08:20:40 AM: edges-spr2_mcc: training: 0.623674 validation: 0.690032
09/16 08:20:40 AM: edges-spr2_acc: training: 0.048076 validation: 0.076190
09/16 08:20:40 AM: edges-spr2_precision: training: 0.778399 validation: 0.851636
09/16 08:20:40 AM: edges-spr2_recall: training: 0.737401 validation: 0.746970
09/16 08:20:40 AM: edges-spr2_f1: training: 0.757345 validation: 0.795877
09/16 08:20:40 AM: Global learning rate: 0.0001
09/16 08:20:40 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:20:41 AM: Update 109: task edges-spr2, batch 9 (109): mcc: 0.6885, acc: 0.0753, precision: 0.8361, recall: 0.7602, f1: 0.7964, edges-spr2_loss: 0.3195
09/16 08:20:48 AM: ***** Step 200 / Validation 2 *****
09/16 08:20:48 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:48 AM: Validating...
09/16 08:20:49 AM: Best result seen so far for edges-spr2.
09/16 08:20:49 AM: Best result seen so far for macro.
09/16 08:20:49 AM: Updating LR scheduler:
09/16 08:20:49 AM: 	Best result seen so far for macro_avg: 0.818
09/16 08:20:49 AM: 	# validation passes without improvement: 0
09/16 08:20:49 AM: edges-spr2_loss: training: 0.305967 validation: 0.324820
09/16 08:20:49 AM: macro_avg: validation: 0.818262
09/16 08:20:49 AM: micro_avg: validation: 0.000000
09/16 08:20:49 AM: edges-spr2_mcc: training: 0.701330 validation: 0.716970
09/16 08:20:49 AM: edges-spr2_acc: training: 0.069478 validation: 0.073016
09/16 08:20:49 AM: edges-spr2_precision: training: 0.834307 validation: 0.847732
09/16 08:20:49 AM: edges-spr2_recall: training: 0.779713 validation: 0.790772
09/16 08:20:49 AM: edges-spr2_f1: training: 0.806087 validation: 0.818262
09/16 08:20:49 AM: Global learning rate: 0.0001
09/16 08:20:49 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:20:51 AM: Update 223: task edges-spr2, batch 23 (223): mcc: 0.7097, acc: 0.0697, precision: 0.8365, recall: 0.7859, f1: 0.8104, edges-spr2_loss: 0.2898
09/16 08:20:57 AM: ***** Step 300 / Validation 3 *****
09/16 08:20:57 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:20:57 AM: Validating...
09/16 08:20:58 AM: Best result seen so far for edges-spr2.
09/16 08:20:58 AM: Best result seen so far for macro.
09/16 08:20:58 AM: Updating LR scheduler:
09/16 08:20:58 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:20:58 AM: 	# validation passes without improvement: 0
09/16 08:20:58 AM: edges-spr2_loss: training: 0.283358 validation: 0.320178
09/16 08:20:58 AM: macro_avg: validation: 0.821066
09/16 08:20:58 AM: micro_avg: validation: 0.000000
09/16 08:20:58 AM: edges-spr2_mcc: training: 0.723407 validation: 0.717254
09/16 08:20:58 AM: edges-spr2_acc: training: 0.080985 validation: 0.073016
09/16 08:20:58 AM: edges-spr2_precision: training: 0.843545 validation: 0.833662
09/16 08:20:58 AM: edges-spr2_recall: training: 0.800527 validation: 0.808845
09/16 08:20:58 AM: edges-spr2_f1: training: 0.821473 validation: 0.821066
09/16 08:20:58 AM: Global learning rate: 0.0001
09/16 08:20:58 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:21:01 AM: Update 347: task edges-spr2, batch 47 (347): mcc: 0.7383, acc: 0.0888, precision: 0.8483, recall: 0.8159, f1: 0.8318, edges-spr2_loss: 0.2728
09/16 08:21:05 AM: ***** Step 400 / Validation 4 *****
09/16 08:21:05 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:05 AM: Validating...
09/16 08:21:06 AM: Updating LR scheduler:
09/16 08:21:06 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:21:06 AM: 	# validation passes without improvement: 1
09/16 08:21:06 AM: edges-spr2_loss: training: 0.269787 validation: 0.318442
09/16 08:21:06 AM: macro_avg: validation: 0.820558
09/16 08:21:06 AM: micro_avg: validation: 0.000000
09/16 08:21:06 AM: edges-spr2_mcc: training: 0.739827 validation: 0.721158
09/16 08:21:06 AM: edges-spr2_acc: training: 0.088701 validation: 0.061905
09/16 08:21:06 AM: edges-spr2_precision: training: 0.849271 validation: 0.852429
09/16 08:21:06 AM: edges-spr2_recall: training: 0.816859 validation: 0.790984
09/16 08:21:06 AM: edges-spr2_f1: training: 0.832750 validation: 0.820558
09/16 08:21:06 AM: Global learning rate: 0.0001
09/16 08:21:06 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:21:11 AM: Update 458: task edges-spr2, batch 58 (458): mcc: 0.7474, acc: 0.1008, precision: 0.8552, recall: 0.8205, f1: 0.8375, edges-spr2_loss: 0.2608
09/16 08:21:14 AM: ***** Step 500 / Validation 5 *****
09/16 08:21:14 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:14 AM: Validating...
09/16 08:21:15 AM: Best result seen so far for edges-spr2.
09/16 08:21:15 AM: Best result seen so far for macro.
09/16 08:21:15 AM: Updating LR scheduler:
09/16 08:21:15 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:21:15 AM: 	# validation passes without improvement: 0
09/16 08:21:15 AM: edges-spr2_loss: training: 0.257442 validation: 0.314487
09/16 08:21:15 AM: macro_avg: validation: 0.821218
09/16 08:21:15 AM: micro_avg: validation: 0.000000
09/16 08:21:15 AM: edges-spr2_mcc: training: 0.750258 validation: 0.719829
09/16 08:21:15 AM: edges-spr2_acc: training: 0.100525 validation: 0.071429
09/16 08:21:15 AM: edges-spr2_precision: training: 0.857218 validation: 0.843687
09/16 08:21:15 AM: edges-spr2_recall: training: 0.822589 validation: 0.799915
09/16 08:21:15 AM: edges-spr2_f1: training: 0.839547 validation: 0.821218
09/16 08:21:15 AM: Global learning rate: 0.0001
09/16 08:21:15 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:21:21 AM: Update 573: task edges-spr2, batch 73 (573): mcc: 0.7569, acc: 0.1083, precision: 0.8590, recall: 0.8301, f1: 0.8443, edges-spr2_loss: 0.2504
09/16 08:21:23 AM: ***** Step 600 / Validation 6 *****
09/16 08:21:23 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:23 AM: Validating...
09/16 08:21:24 AM: Best result seen so far for edges-spr2.
09/16 08:21:24 AM: Best result seen so far for macro.
09/16 08:21:24 AM: Updating LR scheduler:
09/16 08:21:24 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:21:24 AM: 	# validation passes without improvement: 0
09/16 08:21:24 AM: edges-spr2_loss: training: 0.248123 validation: 0.315810
09/16 08:21:24 AM: macro_avg: validation: 0.821670
09/16 08:21:24 AM: micro_avg: validation: 0.000000
09/16 08:21:24 AM: edges-spr2_mcc: training: 0.759846 validation: 0.720258
09/16 08:21:24 AM: edges-spr2_acc: training: 0.112990 validation: 0.069841
09/16 08:21:24 AM: edges-spr2_precision: training: 0.859182 validation: 0.842988
09/16 08:21:24 AM: edges-spr2_recall: training: 0.833401 validation: 0.801403
09/16 08:21:24 AM: edges-spr2_f1: training: 0.846095 validation: 0.821670
09/16 08:21:24 AM: Global learning rate: 0.0001
09/16 08:21:24 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:21:31 AM: Update 694: task edges-spr2, batch 94 (694): mcc: 0.7706, acc: 0.1271, precision: 0.8676, recall: 0.8387, f1: 0.8529, edges-spr2_loss: 0.2389
09/16 08:21:32 AM: ***** Step 700 / Validation 7 *****
09/16 08:21:32 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:32 AM: Validating...
09/16 08:21:33 AM: Updating LR scheduler:
09/16 08:21:33 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:21:33 AM: 	# validation passes without improvement: 1
09/16 08:21:33 AM: edges-spr2_loss: training: 0.239088 validation: 0.319171
09/16 08:21:33 AM: macro_avg: validation: 0.817310
09/16 08:21:33 AM: micro_avg: validation: 0.000000
09/16 08:21:33 AM: edges-spr2_mcc: training: 0.770562 validation: 0.713399
09/16 08:21:33 AM: edges-spr2_acc: training: 0.128090 validation: 0.068254
09/16 08:21:33 AM: edges-spr2_precision: training: 0.868613 validation: 0.838515
09/16 08:21:33 AM: edges-spr2_recall: training: 0.837535 validation: 0.797151
09/16 08:21:33 AM: edges-spr2_f1: training: 0.852791 validation: 0.817310
09/16 08:21:33 AM: Global learning rate: 0.0001
09/16 08:21:33 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:21:41 AM: ***** Step 800 / Validation 8 *****
09/16 08:21:41 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:41 AM: Validating...
09/16 08:21:41 AM: Evaluate: task edges-spr2, batch 6 (10): mcc: 0.7224, acc: 0.0674, precision: 0.8410, recall: 0.8157, f1: 0.8282, edges-spr2_loss: 0.2936
09/16 08:21:42 AM: Updating LR scheduler:
09/16 08:21:42 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:21:42 AM: 	# validation passes without improvement: 2
09/16 08:21:42 AM: edges-spr2_loss: training: 0.231865 validation: 0.322512
09/16 08:21:42 AM: macro_avg: validation: 0.818753
09/16 08:21:42 AM: micro_avg: validation: 0.000000
09/16 08:21:42 AM: edges-spr2_mcc: training: 0.776237 validation: 0.714249
09/16 08:21:42 AM: edges-spr2_acc: training: 0.133039 validation: 0.066667
09/16 08:21:42 AM: edges-spr2_precision: training: 0.869503 validation: 0.834105
09/16 08:21:42 AM: edges-spr2_recall: training: 0.844250 validation: 0.803955
09/16 08:21:42 AM: edges-spr2_f1: training: 0.856690 validation: 0.818753
09/16 08:21:42 AM: Global learning rate: 0.0001
09/16 08:21:42 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:21:49 AM: ***** Step 900 / Validation 9 *****
09/16 08:21:49 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:49 AM: Validating...
09/16 08:21:50 AM: Updating LR scheduler:
09/16 08:21:50 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:21:50 AM: 	# validation passes without improvement: 3
09/16 08:21:50 AM: edges-spr2_loss: training: 0.227916 validation: 0.330601
09/16 08:21:50 AM: macro_avg: validation: 0.815120
09/16 08:21:50 AM: micro_avg: validation: 0.000000
09/16 08:21:50 AM: edges-spr2_mcc: training: 0.781734 validation: 0.708581
09/16 08:21:50 AM: edges-spr2_acc: training: 0.134228 validation: 0.065079
09/16 08:21:50 AM: edges-spr2_precision: training: 0.873075 validation: 0.830684
09/16 08:21:50 AM: edges-spr2_recall: training: 0.847255 validation: 0.800128
09/16 08:21:50 AM: edges-spr2_f1: training: 0.859971 validation: 0.815120
09/16 08:21:50 AM: Global learning rate: 0.0001
09/16 08:21:50 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:21:51 AM: Update 911: task edges-spr2, batch 11 (911): mcc: 0.7734, acc: 0.1300, precision: 0.8640, recall: 0.8514, f1: 0.8577, edges-spr2_loss: 0.2373
09/16 08:21:58 AM: ***** Step 1000 / Validation 10 *****
09/16 08:21:58 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:21:58 AM: Validating...
09/16 08:21:59 AM: Updating LR scheduler:
09/16 08:21:59 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:21:59 AM: 	# validation passes without improvement: 0
09/16 08:21:59 AM: edges-spr2_loss: training: 0.222059 validation: 0.326696
09/16 08:21:59 AM: macro_avg: validation: 0.814791
09/16 08:21:59 AM: micro_avg: validation: 0.000000
09/16 08:21:59 AM: edges-spr2_mcc: training: 0.788153 validation: 0.708311
09/16 08:21:59 AM: edges-spr2_acc: training: 0.146406 validation: 0.065079
09/16 08:21:59 AM: edges-spr2_precision: training: 0.877019 validation: 0.831379
09/16 08:21:59 AM: edges-spr2_recall: training: 0.852908 validation: 0.798852
09/16 08:21:59 AM: edges-spr2_f1: training: 0.864796 validation: 0.814791
09/16 08:21:59 AM: Global learning rate: 5e-05
09/16 08:21:59 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:22:01 AM: Update 1030: task edges-spr2, batch 30 (1030): mcc: 0.7926, acc: 0.1599, precision: 0.8764, recall: 0.8584, f1: 0.8673, edges-spr2_loss: 0.2184
09/16 08:22:07 AM: ***** Step 1100 / Validation 11 *****
09/16 08:22:07 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:22:07 AM: Validating...
09/16 08:22:08 AM: Updating LR scheduler:
09/16 08:22:08 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:22:08 AM: 	# validation passes without improvement: 1
09/16 08:22:08 AM: edges-spr2_loss: training: 0.212235 validation: 0.329969
09/16 08:22:08 AM: macro_avg: validation: 0.811997
09/16 08:22:08 AM: micro_avg: validation: 0.000000
09/16 08:22:08 AM: edges-spr2_mcc: training: 0.796610 validation: 0.707719
09/16 08:22:08 AM: edges-spr2_acc: training: 0.163761 validation: 0.058730
09/16 08:22:08 AM: edges-spr2_precision: training: 0.879979 validation: 0.843335
09/16 08:22:08 AM: edges-spr2_recall: training: 0.859960 validation: 0.782905
09/16 08:22:08 AM: edges-spr2_f1: training: 0.869854 validation: 0.811997
09/16 08:22:08 AM: Global learning rate: 5e-05
09/16 08:22:08 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:22:12 AM: Update 1142: task edges-spr2, batch 42 (1142): mcc: 0.7906, acc: 0.1544, precision: 0.8797, recall: 0.8518, f1: 0.8655, edges-spr2_loss: 0.2177
09/16 08:22:16 AM: ***** Step 1200 / Validation 12 *****
09/16 08:22:16 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:22:16 AM: Validating...
09/16 08:22:17 AM: Updating LR scheduler:
09/16 08:22:17 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:22:17 AM: 	# validation passes without improvement: 2
09/16 08:22:17 AM: edges-spr2_loss: training: 0.212636 validation: 0.329665
09/16 08:22:17 AM: macro_avg: validation: 0.814662
09/16 08:22:17 AM: micro_avg: validation: 0.000000
09/16 08:22:17 AM: edges-spr2_mcc: training: 0.796017 validation: 0.708758
09/16 08:22:17 AM: edges-spr2_acc: training: 0.157057 validation: 0.057143
09/16 08:22:17 AM: edges-spr2_precision: training: 0.881262 validation: 0.833890
09/16 08:22:17 AM: edges-spr2_recall: training: 0.858086 validation: 0.796300
09/16 08:22:17 AM: edges-spr2_f1: training: 0.869520 validation: 0.814662
09/16 08:22:17 AM: Global learning rate: 5e-05
09/16 08:22:17 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:22:22 AM: Update 1262: task edges-spr2, batch 62 (1262): mcc: 0.8017, acc: 0.1657, precision: 0.8850, recall: 0.8615, f1: 0.8731, edges-spr2_loss: 0.2100
09/16 08:22:24 AM: ***** Step 1300 / Validation 13 *****
09/16 08:22:24 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:22:24 AM: Validating...
09/16 08:22:25 AM: Updating LR scheduler:
09/16 08:22:25 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:22:25 AM: 	# validation passes without improvement: 3
09/16 08:22:25 AM: edges-spr2_loss: training: 0.208582 validation: 0.332612
09/16 08:22:25 AM: macro_avg: validation: 0.810002
09/16 08:22:25 AM: micro_avg: validation: 0.000000
09/16 08:22:25 AM: edges-spr2_mcc: training: 0.802791 validation: 0.702297
09/16 08:22:25 AM: edges-spr2_acc: training: 0.169164 validation: 0.060317
09/16 08:22:25 AM: edges-spr2_precision: training: 0.885310 validation: 0.832548
09/16 08:22:25 AM: edges-spr2_recall: training: 0.862313 validation: 0.788646
09/16 08:22:25 AM: edges-spr2_f1: training: 0.873660 validation: 0.810002
09/16 08:22:25 AM: Global learning rate: 5e-05
09/16 08:22:25 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:22:32 AM: Update 1384: task edges-spr2, batch 84 (1384): mcc: 0.8043, acc: 0.1744, precision: 0.8857, recall: 0.8649, f1: 0.8752, edges-spr2_loss: 0.2057
09/16 08:22:33 AM: ***** Step 1400 / Validation 14 *****
09/16 08:22:33 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:22:33 AM: Validating...
09/16 08:22:34 AM: Updating LR scheduler:
09/16 08:22:34 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:22:34 AM: 	# validation passes without improvement: 0
09/16 08:22:34 AM: edges-spr2_loss: training: 0.205534 validation: 0.335042
09/16 08:22:34 AM: macro_avg: validation: 0.813637
09/16 08:22:34 AM: micro_avg: validation: 0.000000
09/16 08:22:34 AM: edges-spr2_mcc: training: 0.805376 validation: 0.707453
09/16 08:22:34 AM: edges-spr2_acc: training: 0.175919 validation: 0.068254
09/16 08:22:34 AM: edges-spr2_precision: training: 0.886435 validation: 0.834078
09/16 08:22:34 AM: edges-spr2_recall: training: 0.865234 validation: 0.794174
09/16 08:22:34 AM: edges-spr2_f1: training: 0.875706 validation: 0.813637
09/16 08:22:34 AM: Global learning rate: 2.5e-05
09/16 08:22:34 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:22:42 AM: Update 1500: task edges-spr2, batch 100 (1500): mcc: 0.8078, acc: 0.1780, precision: 0.8881, recall: 0.8668, f1: 0.8773, edges-spr2_loss: 0.2023
09/16 08:22:42 AM: ***** Step 1500 / Validation 15 *****
09/16 08:22:42 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:22:42 AM: Validating...
09/16 08:22:43 AM: Updating LR scheduler:
09/16 08:22:43 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:22:43 AM: 	# validation passes without improvement: 1
09/16 08:22:43 AM: edges-spr2_loss: training: 0.202264 validation: 0.335286
09/16 08:22:43 AM: macro_avg: validation: 0.814431
09/16 08:22:43 AM: micro_avg: validation: 0.000000
09/16 08:22:43 AM: edges-spr2_mcc: training: 0.807840 validation: 0.706934
09/16 08:22:43 AM: edges-spr2_acc: training: 0.178008 validation: 0.057143
09/16 08:22:43 AM: edges-spr2_precision: training: 0.888064 validation: 0.827662
09/16 08:22:43 AM: edges-spr2_recall: training: 0.866817 validation: 0.801616
09/16 08:22:43 AM: edges-spr2_f1: training: 0.877312 validation: 0.814431
09/16 08:22:43 AM: Global learning rate: 2.5e-05
09/16 08:22:43 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:22:50 AM: ***** Step 1600 / Validation 16 *****
09/16 08:22:50 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:22:50 AM: Validating...
09/16 08:22:51 AM: Updating LR scheduler:
09/16 08:22:51 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:22:51 AM: 	# validation passes without improvement: 2
09/16 08:22:51 AM: Ran out of early stopping patience. Stopping training.
09/16 08:22:51 AM: edges-spr2_loss: training: 0.201310 validation: 0.337573
09/16 08:22:51 AM: macro_avg: validation: 0.814360
09/16 08:22:51 AM: micro_avg: validation: 0.000000
09/16 08:22:51 AM: edges-spr2_mcc: training: 0.810187 validation: 0.706428
09/16 08:22:51 AM: edges-spr2_acc: training: 0.183650 validation: 0.061905
09/16 08:22:51 AM: edges-spr2_precision: training: 0.888893 validation: 0.825935
09/16 08:22:51 AM: edges-spr2_recall: training: 0.868431 validation: 0.803104
09/16 08:22:51 AM: edges-spr2_f1: training: 0.878543 validation: 0.814360
09/16 08:22:51 AM: Global learning rate: 2.5e-05
09/16 08:22:51 AM: Saving checkpoints to: ./experiments/spr2-None-cat/run
09/16 08:22:51 AM: Stopped training after 16 validation checks
09/16 08:22:51 AM: Trained edges-spr2 for 1600 batches or 22.857 epochs
09/16 08:22:51 AM: ***** VALIDATION RESULTS *****
09/16 08:22:51 AM: edges-spr2_f1 (for best val pass 6): edges-spr2_loss: 0.31581, macro_avg: 0.82167, micro_avg: 0.00000, edges-spr2_mcc: 0.72026, edges-spr2_acc: 0.06984, edges-spr2_precision: 0.84299, edges-spr2_recall: 0.80140, edges-spr2_f1: 0.82167
09/16 08:22:51 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.34174, macro_avg: 0.79588, micro_avg: 0.00000, edges-spr2_mcc: 0.69003, edges-spr2_acc: 0.07619, edges-spr2_precision: 0.85164, edges-spr2_recall: 0.74697, edges-spr2_f1: 0.79588
09/16 08:22:51 AM: macro_avg (for best val pass 6): edges-spr2_loss: 0.31581, macro_avg: 0.82167, micro_avg: 0.00000, edges-spr2_mcc: 0.72026, edges-spr2_acc: 0.06984, edges-spr2_precision: 0.84299, edges-spr2_recall: 0.80140, edges-spr2_f1: 0.82167
09/16 08:22:51 AM: Evaluating...
09/16 08:22:51 AM: Loaded model state from ./experiments/spr2-None-cat/run/edges-spr2/model_state_target_train_val_6.best.th
09/16 08:22:51 AM: Evaluating on: edges-spr2, split: val
09/16 08:22:52 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:22:52 AM: Finished evaluating on: edges-spr2
09/16 08:22:52 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:22:52 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-None-cat/run
09/16 08:22:52 AM: Wrote all preds for split 'val' to ./experiments/spr2-None-cat/run
09/16 08:22:52 AM: Evaluating on: edges-spr2, split: test
09/16 08:22:53 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:22:53 AM: Finished evaluating on: edges-spr2
09/16 08:22:53 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:22:53 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-None-cat/run
09/16 08:22:53 AM: Wrote all preds for split 'test' to ./experiments/spr2-None-cat/run
09/16 08:22:53 AM: Writing results for split 'val' to ./experiments/spr2-None-cat/results.tsv
09/16 08:22:53 AM: micro_avg: 0.000, macro_avg: 0.822, edges-spr2_mcc: 0.720, edges-spr2_acc: 0.070, edges-spr2_precision: 0.843, edges-spr2_recall: 0.801, edges-spr2_f1: 0.822
09/16 08:22:53 AM: Done!
09/16 08:22:53 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
