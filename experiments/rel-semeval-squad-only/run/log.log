09/16 08:10:41 AM: Git branch: master
09/16 08:10:41 AM: Git SHA: a6b97574b819abe0c17f2f3300d1097e5c87dbde
09/16 08:10:41 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-squad-only/",
  "exp_name": "experiments/rel-semeval-squad-only",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-squad-only/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/squad",
  "pytorch_transformers_output_mode": "only",
  "remote_log_name": "experiments/rel-semeval-squad-only__run",
  "run_dir": "./experiments/rel-semeval-squad-only/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:10:41 AM: Saved config to ./experiments/rel-semeval-squad-only/run/params.conf
09/16 08:10:41 AM: Using random seed 1234
09/16 08:10:41 AM: Using GPU 0
09/16 08:10:41 AM: Loading tasks...
09/16 08:10:41 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-squad-only/
09/16 08:10:41 AM: 	Creating task edges-rel-semeval from scratch.
09/16 08:10:41 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 08:10:41 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 08:10:41 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 08:10:41 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 08:10:41 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 08:10:41 AM: 	Building vocab from scratch.
09/16 08:10:41 AM: 	Counting units for task edges-rel-semeval.
09/16 08:10:41 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 08:10:42 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:10:42 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:10:43 AM: 	Saved vocab to ./experiments/rel-semeval-squad-only/vocab
09/16 08:10:43 AM: Loading token dictionary from ./experiments/rel-semeval-squad-only/vocab.
09/16 08:10:43 AM: 	Loaded vocab from ./experiments/rel-semeval-squad-only/vocab
09/16 08:10:43 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:10:43 AM: 	Vocab namespace tokens: size 16020
09/16 08:10:43 AM: 	Vocab namespace chars: size 59
09/16 08:10:43 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 08:10:43 AM: 	Finished building vocab.
09/16 08:10:43 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 08:10:43 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-squad-only/preproc/edges-rel-semeval__train_data
09/16 08:10:43 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 08:10:44 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-squad-only/preproc/edges-rel-semeval__val_data
09/16 08:10:44 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 08:10:44 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-squad-only/preproc/edges-rel-semeval__test_data
09/16 08:10:44 AM: 	Finished indexing tasks
09/16 08:10:44 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 08:10:44 AM: 	  Training on 
09/16 08:10:44 AM: 	  Evaluating on edges-rel-semeval
09/16 08:10:44 AM: 	Finished loading tasks in 2.681s
09/16 08:10:44 AM: 	 Tasks: ['edges-rel-semeval']
09/16 08:10:44 AM: Building model...
09/16 08:10:44 AM: Using BERT model (bert-base-uncased).
09/16 08:10:44 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:10:44 AM: models/squad
09/16 08:10:44 AM: loading configuration file models/squad/config.json
09/16 08:10:44 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:10:44 AM: loading weights file models/squad/pytorch_model.bin
09/16 08:10:47 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpp12aksc_
09/16 08:10:51 AM: copying /tmp/tmpp12aksc_ to cache at ./experiments/rel-semeval-squad-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:10:51 AM: creating metadata file for ./experiments/rel-semeval-squad-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:10:51 AM: removing temp file /tmp/tmpp12aksc_
09/16 08:10:51 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-squad-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:10:51 AM: Initializing parameters
09/16 08:10:51 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:10:51 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:10:51 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:10:51 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:10:51 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:10:51 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:10:51 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 08:10:55 AM: Model specification:
09/16 08:10:55 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 08:10:55 AM: Model parameters:
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:55 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:55 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:10:55 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:10:55 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:10:55 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:10:55 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:10:55 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:10:55 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:10:55 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:10:55 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 08:10:55 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 08:10:55 AM: Total number of parameters: 110143763 (1.10144e+08)
09/16 08:10:55 AM: Number of trainable parameters: 661523 (661523)
09/16 08:10:55 AM: Finished building model in 11.590s
09/16 08:10:55 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 08:10:56 AM: patience = 9
09/16 08:10:56 AM: val_interval = 100
09/16 08:10:56 AM: max_vals = 100
09/16 08:10:56 AM: cuda_device = 0
09/16 08:10:56 AM: grad_norm = 5.0
09/16 08:10:56 AM: grad_clipping = None
09/16 08:10:56 AM: lr_decay = 0.99
09/16 08:10:56 AM: min_lr = 1e-06
09/16 08:10:56 AM: keep_all_checkpoints = 0
09/16 08:10:56 AM: val_data_limit = 5000
09/16 08:10:56 AM: max_epochs = -1
09/16 08:10:56 AM: dec_val_scale = 250
09/16 08:10:56 AM: training_data_fraction = 1
09/16 08:10:56 AM: type = adam
09/16 08:10:56 AM: parameter_groups = None
09/16 08:10:56 AM: Number of trainable parameters: 661523
09/16 08:10:56 AM: infer_type_and_cast = True
09/16 08:10:56 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:10:56 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:10:56 AM: lr = 0.0001
09/16 08:10:56 AM: amsgrad = True
09/16 08:10:56 AM: type = reduce_on_plateau
09/16 08:10:56 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:10:56 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:10:56 AM: mode = max
09/16 08:10:56 AM: factor = 0.5
09/16 08:10:56 AM: patience = 3
09/16 08:10:56 AM: threshold = 0.0001
09/16 08:10:56 AM: threshold_mode = abs
09/16 08:10:56 AM: verbose = True
09/16 08:10:56 AM: type = adam
09/16 08:10:56 AM: parameter_groups = None
09/16 08:10:56 AM: Number of trainable parameters: 661523
09/16 08:10:56 AM: infer_type_and_cast = True
09/16 08:10:56 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:10:56 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:10:56 AM: lr = 0.0001
09/16 08:10:56 AM: amsgrad = True
09/16 08:10:56 AM: type = reduce_on_plateau
09/16 08:10:56 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:10:56 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:10:56 AM: mode = max
09/16 08:10:56 AM: factor = 0.5
09/16 08:10:56 AM: patience = 3
09/16 08:10:56 AM: threshold = 0.0001
09/16 08:10:56 AM: threshold_mode = abs
09/16 08:10:56 AM: verbose = True
09/16 08:10:56 AM: Starting training without restoring from a checkpoint.
09/16 08:10:56 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 08:10:56 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 08:10:59 AM: ***** Step 100 / Validation 1 *****
09/16 08:10:59 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:10:59 AM: Validating...
09/16 08:10:59 AM: Best result seen so far for edges-rel-semeval.
09/16 08:10:59 AM: Best result seen so far for micro.
09/16 08:10:59 AM: Best result seen so far for macro.
09/16 08:10:59 AM: Updating LR scheduler:
09/16 08:10:59 AM: 	Best result seen so far for macro_avg: 0.000
09/16 08:10:59 AM: 	# validation passes without improvement: 0
09/16 08:10:59 AM: edges-rel-semeval_loss: training: 0.283307 validation: 0.187421
09/16 08:10:59 AM: macro_avg: validation: 0.000000
09/16 08:10:59 AM: micro_avg: validation: 0.000000
09/16 08:10:59 AM: edges-rel-semeval_mcc: training: 0.010097 validation: 0.000000
09/16 08:10:59 AM: edges-rel-semeval_acc: training: 0.005676 validation: 0.000000
09/16 08:10:59 AM: edges-rel-semeval_precision: training: 0.063417 validation: 0.000000
09/16 08:10:59 AM: edges-rel-semeval_recall: training: 0.050457 validation: 0.000000
09/16 08:10:59 AM: edges-rel-semeval_f1: training: 0.056200 validation: 0.000000
09/16 08:10:59 AM: Global learning rate: 0.0001
09/16 08:10:59 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:01 AM: ***** Step 200 / Validation 2 *****
09/16 08:11:01 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:01 AM: Validating...
09/16 08:11:01 AM: Updating LR scheduler:
09/16 08:11:01 AM: 	Best result seen so far for macro_avg: 0.000
09/16 08:11:01 AM: 	# validation passes without improvement: 1
09/16 08:11:01 AM: edges-rel-semeval_loss: training: 0.186112 validation: 0.174156
09/16 08:11:01 AM: macro_avg: validation: 0.000000
09/16 08:11:01 AM: micro_avg: validation: 0.000000
09/16 08:11:01 AM: edges-rel-semeval_mcc: training: 0.011201 validation: 0.000000
09/16 08:11:01 AM: edges-rel-semeval_acc: training: 0.000625 validation: 0.000000
09/16 08:11:01 AM: edges-rel-semeval_precision: training: 0.285714 validation: 0.000000
09/16 08:11:01 AM: edges-rel-semeval_recall: training: 0.000625 validation: 0.000000
09/16 08:11:01 AM: edges-rel-semeval_f1: training: 0.001247 validation: 0.000000
09/16 08:11:01 AM: Global learning rate: 0.0001
09/16 08:11:01 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:04 AM: ***** Step 300 / Validation 3 *****
09/16 08:11:04 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:04 AM: Validating...
09/16 08:11:05 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:05 AM: Best result seen so far for macro.
09/16 08:11:05 AM: Updating LR scheduler:
09/16 08:11:05 AM: 	Best result seen so far for macro_avg: 0.047
09/16 08:11:05 AM: 	# validation passes without improvement: 0
09/16 08:11:05 AM: edges-rel-semeval_loss: training: 0.170705 validation: 0.158756
09/16 08:11:05 AM: macro_avg: validation: 0.047458
09/16 08:11:05 AM: micro_avg: validation: 0.000000
09/16 08:11:05 AM: edges-rel-semeval_mcc: training: 0.087940 validation: 0.143646
09/16 08:11:05 AM: edges-rel-semeval_acc: training: 0.011984 validation: 0.024369
09/16 08:11:05 AM: edges-rel-semeval_precision: training: 0.696429 validation: 0.903226
09/16 08:11:05 AM: edges-rel-semeval_recall: training: 0.012299 validation: 0.024369
09/16 08:11:05 AM: edges-rel-semeval_f1: training: 0.024171 validation: 0.047458
09/16 08:11:05 AM: Global learning rate: 0.0001
09/16 08:11:05 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:06 AM: Update 367: task edges-rel-semeval, batch 67 (367): mcc: 0.2233, acc: 0.0672, precision: 0.7831, recall: 0.0690, f1: 0.1269, edges-rel-semeval_loss: 0.1556
09/16 08:11:07 AM: ***** Step 400 / Validation 4 *****
09/16 08:11:07 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:07 AM: Validating...
09/16 08:11:07 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:07 AM: Best result seen so far for macro.
09/16 08:11:07 AM: Updating LR scheduler:
09/16 08:11:07 AM: 	Best result seen so far for macro_avg: 0.130
09/16 08:11:07 AM: 	# validation passes without improvement: 0
09/16 08:11:07 AM: edges-rel-semeval_loss: training: 0.154181 validation: 0.145681
09/16 08:11:07 AM: macro_avg: validation: 0.129808
09/16 08:11:07 AM: micro_avg: validation: 0.000000
09/16 08:11:07 AM: edges-rel-semeval_mcc: training: 0.238819 validation: 0.231398
09/16 08:11:07 AM: edges-rel-semeval_acc: training: 0.077813 validation: 0.070496
09/16 08:11:07 AM: edges-rel-semeval_precision: training: 0.773414 validation: 0.818182
09/16 08:11:07 AM: edges-rel-semeval_recall: training: 0.080000 validation: 0.070496
09/16 08:11:07 AM: edges-rel-semeval_f1: training: 0.145001 validation: 0.129808
09/16 08:11:07 AM: Global learning rate: 0.0001
09/16 08:11:07 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:10 AM: ***** Step 500 / Validation 5 *****
09/16 08:11:10 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:10 AM: Validating...
09/16 08:11:10 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:10 AM: Best result seen so far for macro.
09/16 08:11:10 AM: Updating LR scheduler:
09/16 08:11:10 AM: 	Best result seen so far for macro_avg: 0.200
09/16 08:11:10 AM: 	# validation passes without improvement: 0
09/16 08:11:10 AM: edges-rel-semeval_loss: training: 0.143670 validation: 0.137008
09/16 08:11:10 AM: macro_avg: validation: 0.199847
09/16 08:11:10 AM: micro_avg: validation: 0.000000
09/16 08:11:10 AM: edges-rel-semeval_mcc: training: 0.302990 validation: 0.292741
09/16 08:11:10 AM: edges-rel-semeval_acc: training: 0.125828 validation: 0.113142
09/16 08:11:10 AM: edges-rel-semeval_precision: training: 0.763401 validation: 0.808642
09/16 08:11:10 AM: edges-rel-semeval_recall: training: 0.130243 validation: 0.114012
09/16 08:11:10 AM: edges-rel-semeval_f1: training: 0.222522 validation: 0.199847
09/16 08:11:10 AM: Global learning rate: 0.0001
09/16 08:11:10 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:12 AM: ***** Step 600 / Validation 6 *****
09/16 08:11:12 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:12 AM: Validating...
09/16 08:11:13 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:13 AM: Best result seen so far for macro.
09/16 08:11:13 AM: Updating LR scheduler:
09/16 08:11:13 AM: 	Best result seen so far for macro_avg: 0.273
09/16 08:11:13 AM: 	# validation passes without improvement: 0
09/16 08:11:13 AM: edges-rel-semeval_loss: training: 0.134508 validation: 0.130626
09/16 08:11:13 AM: macro_avg: validation: 0.273455
09/16 08:11:13 AM: micro_avg: validation: 0.000000
09/16 08:11:13 AM: edges-rel-semeval_mcc: training: 0.364003 validation: 0.356910
09/16 08:11:13 AM: edges-rel-semeval_acc: training: 0.184688 validation: 0.160139
09/16 08:11:13 AM: edges-rel-semeval_precision: training: 0.749082 validation: 0.831858
09/16 08:11:13 AM: edges-rel-semeval_recall: training: 0.191250 validation: 0.163621
09/16 08:11:13 AM: edges-rel-semeval_f1: training: 0.304705 validation: 0.273455
09/16 08:11:13 AM: Global learning rate: 0.0001
09/16 08:11:13 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:15 AM: ***** Step 700 / Validation 7 *****
09/16 08:11:15 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:15 AM: Validating...
09/16 08:11:16 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:16 AM: Best result seen so far for macro.
09/16 08:11:16 AM: Updating LR scheduler:
09/16 08:11:16 AM: 	Best result seen so far for macro_avg: 0.327
09/16 08:11:16 AM: 	# validation passes without improvement: 0
09/16 08:11:16 AM: edges-rel-semeval_loss: training: 0.125271 validation: 0.126383
09/16 08:11:16 AM: macro_avg: validation: 0.326616
09/16 08:11:16 AM: micro_avg: validation: 0.000000
09/16 08:11:16 AM: edges-rel-semeval_mcc: training: 0.411215 validation: 0.393721
09/16 08:11:16 AM: edges-rel-semeval_acc: training: 0.227373 validation: 0.201915
09/16 08:11:16 AM: edges-rel-semeval_precision: training: 0.765244 validation: 0.810345
09/16 08:11:16 AM: edges-rel-semeval_recall: training: 0.237465 validation: 0.204526
09/16 08:11:16 AM: edges-rel-semeval_f1: training: 0.362455 validation: 0.326616
09/16 08:11:16 AM: Global learning rate: 0.0001
09/16 08:11:16 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:16 AM: Update 738: task edges-rel-semeval, batch 38 (738): mcc: 0.4753, acc: 0.2804, precision: 0.8108, recall: 0.2961, f1: 0.4337, edges-rel-semeval_loss: 0.1197
09/16 08:11:17 AM: ***** Step 800 / Validation 8 *****
09/16 08:11:17 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:17 AM: Validating...
09/16 08:11:18 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:18 AM: Best result seen so far for macro.
09/16 08:11:18 AM: Updating LR scheduler:
09/16 08:11:18 AM: 	Best result seen so far for macro_avg: 0.375
09/16 08:11:18 AM: 	# validation passes without improvement: 0
09/16 08:11:18 AM: edges-rel-semeval_loss: training: 0.121212 validation: 0.122025
09/16 08:11:18 AM: macro_avg: validation: 0.375000
09/16 08:11:18 AM: micro_avg: validation: 0.000000
09/16 08:11:18 AM: edges-rel-semeval_mcc: training: 0.455887 validation: 0.433294
09/16 08:11:18 AM: edges-rel-semeval_acc: training: 0.268437 validation: 0.241079
09/16 08:11:18 AM: edges-rel-semeval_precision: training: 0.781599 validation: 0.823009
09/16 08:11:18 AM: edges-rel-semeval_recall: training: 0.284063 validation: 0.242820
09/16 08:11:18 AM: edges-rel-semeval_f1: training: 0.416686 validation: 0.375000
09/16 08:11:18 AM: Global learning rate: 0.0001
09/16 08:11:18 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:20 AM: ***** Step 900 / Validation 9 *****
09/16 08:11:20 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:20 AM: Validating...
09/16 08:11:21 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:21 AM: Best result seen so far for macro.
09/16 08:11:21 AM: Updating LR scheduler:
09/16 08:11:21 AM: 	Best result seen so far for macro_avg: 0.386
09/16 08:11:21 AM: 	# validation passes without improvement: 0
09/16 08:11:21 AM: edges-rel-semeval_loss: training: 0.115253 validation: 0.120371
09/16 08:11:21 AM: macro_avg: validation: 0.385780
09/16 08:11:21 AM: micro_avg: validation: 0.000000
09/16 08:11:21 AM: edges-rel-semeval_mcc: training: 0.464854 validation: 0.434701
09/16 08:11:21 AM: edges-rel-semeval_acc: training: 0.284453 validation: 0.251523
09/16 08:11:21 AM: edges-rel-semeval_precision: training: 0.765176 validation: 0.791892
09/16 08:11:21 AM: edges-rel-semeval_recall: training: 0.302113 validation: 0.255004
09/16 08:11:21 AM: edges-rel-semeval_f1: training: 0.433190 validation: 0.385780
09/16 08:11:21 AM: Global learning rate: 0.0001
09/16 08:11:21 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:23 AM: ***** Step 1000 / Validation 10 *****
09/16 08:11:23 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:23 AM: Validating...
09/16 08:11:23 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:23 AM: Best result seen so far for macro.
09/16 08:11:23 AM: Updating LR scheduler:
09/16 08:11:23 AM: 	Best result seen so far for macro_avg: 0.409
09/16 08:11:23 AM: 	# validation passes without improvement: 0
09/16 08:11:23 AM: edges-rel-semeval_loss: training: 0.109111 validation: 0.118692
09/16 08:11:23 AM: macro_avg: validation: 0.408533
09/16 08:11:23 AM: micro_avg: validation: 0.000000
09/16 08:11:23 AM: edges-rel-semeval_mcc: training: 0.521997 validation: 0.452412
09/16 08:11:23 AM: edges-rel-semeval_acc: training: 0.337500 validation: 0.268930
09/16 08:11:23 AM: edges-rel-semeval_precision: training: 0.804485 validation: 0.793970
09/16 08:11:23 AM: edges-rel-semeval_recall: training: 0.358750 validation: 0.275022
09/16 08:11:23 AM: edges-rel-semeval_f1: training: 0.496218 validation: 0.408533
09/16 08:11:23 AM: Global learning rate: 0.0001
09/16 08:11:23 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:26 AM: ***** Step 1100 / Validation 11 *****
09/16 08:11:26 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:26 AM: Validating...
09/16 08:11:26 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:26 AM: Best result seen so far for macro.
09/16 08:11:26 AM: Updating LR scheduler:
09/16 08:11:26 AM: 	Best result seen so far for macro_avg: 0.462
09/16 08:11:26 AM: 	# validation passes without improvement: 0
09/16 08:11:26 AM: edges-rel-semeval_loss: training: 0.107208 validation: 0.116570
09/16 08:11:26 AM: macro_avg: validation: 0.461820
09/16 08:11:26 AM: micro_avg: validation: 0.000000
09/16 08:11:26 AM: edges-rel-semeval_mcc: training: 0.522931 validation: 0.488891
09/16 08:11:26 AM: edges-rel-semeval_acc: training: 0.353201 validation: 0.315927
09/16 08:11:26 AM: edges-rel-semeval_precision: training: 0.780423 validation: 0.774590
09/16 08:11:26 AM: edges-rel-semeval_recall: training: 0.372122 validation: 0.328982
09/16 08:11:26 AM: edges-rel-semeval_f1: training: 0.503950 validation: 0.461820
09/16 08:11:26 AM: Global learning rate: 0.0001
09/16 08:11:26 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:26 AM: Update 1119: task edges-rel-semeval, batch 19 (1119): mcc: 0.5829, acc: 0.4062, precision: 0.8404, recall: 0.4243, f1: 0.5639, edges-rel-semeval_loss: 0.0993
09/16 08:11:28 AM: ***** Step 1200 / Validation 12 *****
09/16 08:11:28 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:28 AM: Validating...
09/16 08:11:28 AM: Updating LR scheduler:
09/16 08:11:28 AM: 	Best result seen so far for macro_avg: 0.462
09/16 08:11:28 AM: 	# validation passes without improvement: 1
09/16 08:11:28 AM: edges-rel-semeval_loss: training: 0.102453 validation: 0.116121
09/16 08:11:28 AM: macro_avg: validation: 0.443884
09/16 08:11:28 AM: micro_avg: validation: 0.000000
09/16 08:11:28 AM: edges-rel-semeval_mcc: training: 0.556844 validation: 0.481866
09/16 08:11:28 AM: edges-rel-semeval_acc: training: 0.379688 validation: 0.297650
09/16 08:11:28 AM: edges-rel-semeval_precision: training: 0.800612 validation: 0.805492
09/16 08:11:28 AM: edges-rel-semeval_recall: training: 0.409063 validation: 0.306353
09/16 08:11:28 AM: edges-rel-semeval_f1: training: 0.541468 validation: 0.443884
09/16 08:11:28 AM: Global learning rate: 0.0001
09/16 08:11:28 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:30 AM: ***** Step 1300 / Validation 13 *****
09/16 08:11:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:30 AM: Validating...
09/16 08:11:31 AM: Updating LR scheduler:
09/16 08:11:31 AM: 	Best result seen so far for macro_avg: 0.462
09/16 08:11:31 AM: 	# validation passes without improvement: 2
09/16 08:11:31 AM: edges-rel-semeval_loss: training: 0.099759 validation: 0.114958
09/16 08:11:31 AM: macro_avg: validation: 0.444025
09/16 08:11:31 AM: micro_avg: validation: 0.000000
09/16 08:11:31 AM: edges-rel-semeval_mcc: training: 0.551803 validation: 0.480872
09/16 08:11:31 AM: edges-rel-semeval_acc: training: 0.382214 validation: 0.298520
09/16 08:11:31 AM: edges-rel-semeval_precision: training: 0.782166 validation: 0.800454
09/16 08:11:31 AM: edges-rel-semeval_recall: training: 0.412173 validation: 0.307224
09/16 08:11:31 AM: edges-rel-semeval_f1: training: 0.539860 validation: 0.444025
09/16 08:11:31 AM: Global learning rate: 0.0001
09/16 08:11:31 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:32 AM: ***** Step 1400 / Validation 14 *****
09/16 08:11:32 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:32 AM: Validating...
09/16 08:11:33 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:33 AM: Best result seen so far for macro.
09/16 08:11:33 AM: Updating LR scheduler:
09/16 08:11:33 AM: 	Best result seen so far for macro_avg: 0.471
09/16 08:11:33 AM: 	# validation passes without improvement: 0
09/16 08:11:33 AM: edges-rel-semeval_loss: training: 0.095350 validation: 0.114206
09/16 08:11:33 AM: macro_avg: validation: 0.471299
09/16 08:11:33 AM: micro_avg: validation: 0.000000
09/16 08:11:33 AM: edges-rel-semeval_mcc: training: 0.587662 validation: 0.495387
09/16 08:11:33 AM: edges-rel-semeval_acc: training: 0.416250 validation: 0.328111
09/16 08:11:33 AM: edges-rel-semeval_precision: training: 0.809122 validation: 0.770751
09/16 08:11:33 AM: edges-rel-semeval_recall: training: 0.449062 validation: 0.339426
09/16 08:11:33 AM: edges-rel-semeval_f1: training: 0.577572 validation: 0.471299
09/16 08:11:33 AM: Global learning rate: 0.0001
09/16 08:11:33 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:35 AM: ***** Step 1500 / Validation 15 *****
09/16 08:11:35 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:35 AM: Validating...
09/16 08:11:35 AM: Updating LR scheduler:
09/16 08:11:35 AM: 	Best result seen so far for macro_avg: 0.471
09/16 08:11:35 AM: 	# validation passes without improvement: 1
09/16 08:11:35 AM: edges-rel-semeval_loss: training: 0.097366 validation: 0.113306
09/16 08:11:35 AM: macro_avg: validation: 0.468424
09/16 08:11:35 AM: micro_avg: validation: 0.000000
09/16 08:11:35 AM: edges-rel-semeval_mcc: training: 0.575913 validation: 0.497880
09/16 08:11:35 AM: edges-rel-semeval_acc: training: 0.412813 validation: 0.323760
09/16 08:11:35 AM: edges-rel-semeval_precision: training: 0.788889 validation: 0.792531
09/16 08:11:35 AM: edges-rel-semeval_recall: training: 0.443750 validation: 0.332463
09/16 08:11:35 AM: edges-rel-semeval_f1: training: 0.568000 validation: 0.468424
09/16 08:11:35 AM: Global learning rate: 0.0001
09/16 08:11:35 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:36 AM: Update 1533: task edges-rel-semeval, batch 33 (1533): mcc: 0.6286, acc: 0.4586, precision: 0.8320, recall: 0.4966, f1: 0.6220, edges-rel-semeval_loss: 0.0867
09/16 08:11:38 AM: ***** Step 1600 / Validation 16 *****
09/16 08:11:38 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:38 AM: Validating...
09/16 08:11:38 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:38 AM: Best result seen so far for macro.
09/16 08:11:38 AM: Updating LR scheduler:
09/16 08:11:38 AM: 	Best result seen so far for macro_avg: 0.489
09/16 08:11:38 AM: 	# validation passes without improvement: 0
09/16 08:11:38 AM: edges-rel-semeval_loss: training: 0.089214 validation: 0.113187
09/16 08:11:38 AM: macro_avg: validation: 0.488523
09/16 08:11:38 AM: micro_avg: validation: 0.000000
09/16 08:11:38 AM: edges-rel-semeval_mcc: training: 0.612762 validation: 0.505343
09/16 08:11:38 AM: edges-rel-semeval_acc: training: 0.442763 validation: 0.349869
09/16 08:11:38 AM: edges-rel-semeval_precision: training: 0.821178 validation: 0.754545
09/16 08:11:38 AM: edges-rel-semeval_recall: training: 0.479344 validation: 0.361184
09/16 08:11:38 AM: edges-rel-semeval_f1: training: 0.605336 validation: 0.488523
09/16 08:11:38 AM: Global learning rate: 0.0001
09/16 08:11:38 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:40 AM: ***** Step 1700 / Validation 17 *****
09/16 08:11:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:40 AM: Validating...
09/16 08:11:40 AM: Updating LR scheduler:
09/16 08:11:40 AM: 	Best result seen so far for macro_avg: 0.489
09/16 08:11:40 AM: 	# validation passes without improvement: 1
09/16 08:11:40 AM: edges-rel-semeval_loss: training: 0.091889 validation: 0.114130
09/16 08:11:40 AM: macro_avg: validation: 0.470158
09/16 08:11:40 AM: micro_avg: validation: 0.000000
09/16 08:11:40 AM: edges-rel-semeval_mcc: training: 0.610923 validation: 0.497145
09/16 08:11:40 AM: edges-rel-semeval_acc: training: 0.458437 validation: 0.328111
09/16 08:11:40 AM: edges-rel-semeval_precision: training: 0.802051 validation: 0.782961
09/16 08:11:40 AM: edges-rel-semeval_recall: training: 0.488750 validation: 0.335944
09/16 08:11:40 AM: edges-rel-semeval_f1: training: 0.607379 validation: 0.470158
09/16 08:11:40 AM: Global learning rate: 0.0001
09/16 08:11:40 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:42 AM: ***** Step 1800 / Validation 18 *****
09/16 08:11:42 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:42 AM: Validating...
09/16 08:11:42 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:42 AM: Best result seen so far for macro.
09/16 08:11:42 AM: Updating LR scheduler:
09/16 08:11:42 AM: 	Best result seen so far for macro_avg: 0.492
09/16 08:11:42 AM: 	# validation passes without improvement: 0
09/16 08:11:42 AM: edges-rel-semeval_loss: training: 0.086248 validation: 0.113510
09/16 08:11:42 AM: macro_avg: validation: 0.491917
09/16 08:11:42 AM: micro_avg: validation: 0.000000
09/16 08:11:42 AM: edges-rel-semeval_mcc: training: 0.641606 validation: 0.503000
09/16 08:11:42 AM: edges-rel-semeval_acc: training: 0.488174 validation: 0.356832
09/16 08:11:42 AM: edges-rel-semeval_precision: training: 0.822829 validation: 0.730703
09/16 08:11:42 AM: edges-rel-semeval_recall: training: 0.522863 validation: 0.370757
09/16 08:11:42 AM: edges-rel-semeval_f1: training: 0.639414 validation: 0.491917
09/16 08:11:42 AM: Global learning rate: 0.0001
09/16 08:11:42 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:44 AM: ***** Step 1900 / Validation 19 *****
09/16 08:11:44 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:44 AM: Validating...
09/16 08:11:45 AM: Updating LR scheduler:
09/16 08:11:45 AM: 	Best result seen so far for macro_avg: 0.492
09/16 08:11:45 AM: 	# validation passes without improvement: 1
09/16 08:11:45 AM: edges-rel-semeval_loss: training: 0.087815 validation: 0.113487
09/16 08:11:45 AM: macro_avg: validation: 0.484236
09/16 08:11:45 AM: micro_avg: validation: 0.000000
09/16 08:11:45 AM: edges-rel-semeval_mcc: training: 0.621012 validation: 0.504221
09/16 08:11:45 AM: edges-rel-semeval_acc: training: 0.464375 validation: 0.344648
09/16 08:11:45 AM: edges-rel-semeval_precision: training: 0.793489 validation: 0.765038
09/16 08:11:45 AM: edges-rel-semeval_recall: training: 0.510312 validation: 0.354221
09/16 08:11:45 AM: edges-rel-semeval_f1: training: 0.621149 validation: 0.484236
09/16 08:11:45 AM: Global learning rate: 0.0001
09/16 08:11:45 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:46 AM: Update 1956: task edges-rel-semeval, batch 56 (1956): mcc: 0.6413, acc: 0.4867, precision: 0.8286, recall: 0.5184, f1: 0.6378, edges-rel-semeval_loss: 0.0856
09/16 08:11:47 AM: ***** Step 2000 / Validation 20 *****
09/16 08:11:47 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:47 AM: Validating...
09/16 08:11:47 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:47 AM: Best result seen so far for macro.
09/16 08:11:47 AM: Updating LR scheduler:
09/16 08:11:47 AM: 	Best result seen so far for macro_avg: 0.497
09/16 08:11:47 AM: 	# validation passes without improvement: 0
09/16 08:11:47 AM: edges-rel-semeval_loss: training: 0.082217 validation: 0.114014
09/16 08:11:47 AM: macro_avg: validation: 0.496520
09/16 08:11:47 AM: micro_avg: validation: 0.000000
09/16 08:11:47 AM: edges-rel-semeval_mcc: training: 0.660495 validation: 0.509493
09/16 08:11:47 AM: edges-rel-semeval_acc: training: 0.508357 validation: 0.357702
09/16 08:11:47 AM: edges-rel-semeval_precision: training: 0.838867 validation: 0.744348
09/16 08:11:47 AM: edges-rel-semeval_recall: training: 0.541785 validation: 0.372498
09/16 08:11:47 AM: edges-rel-semeval_f1: training: 0.658364 validation: 0.496520
09/16 08:11:47 AM: Global learning rate: 0.0001
09/16 08:11:47 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:49 AM: ***** Step 2100 / Validation 21 *****
09/16 08:11:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:49 AM: Validating...
09/16 08:11:49 AM: Updating LR scheduler:
09/16 08:11:49 AM: 	Best result seen so far for macro_avg: 0.497
09/16 08:11:49 AM: 	# validation passes without improvement: 1
09/16 08:11:49 AM: edges-rel-semeval_loss: training: 0.082965 validation: 0.114256
09/16 08:11:49 AM: macro_avg: validation: 0.490499
09/16 08:11:49 AM: micro_avg: validation: 0.000000
09/16 08:11:49 AM: edges-rel-semeval_mcc: training: 0.648101 validation: 0.510592
09/16 08:11:49 AM: edges-rel-semeval_acc: training: 0.499375 validation: 0.348999
09/16 08:11:49 AM: edges-rel-semeval_precision: training: 0.806855 validation: 0.771963
09/16 08:11:49 AM: edges-rel-semeval_recall: training: 0.544375 validation: 0.359443
09/16 08:11:49 AM: edges-rel-semeval_f1: training: 0.650121 validation: 0.490499
09/16 08:11:49 AM: Global learning rate: 0.0001
09/16 08:11:49 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:52 AM: ***** Step 2200 / Validation 22 *****
09/16 08:11:52 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:52 AM: Validating...
09/16 08:11:52 AM: Updating LR scheduler:
09/16 08:11:52 AM: 	Best result seen so far for macro_avg: 0.497
09/16 08:11:52 AM: 	# validation passes without improvement: 2
09/16 08:11:52 AM: edges-rel-semeval_loss: training: 0.080439 validation: 0.114291
09/16 08:11:52 AM: macro_avg: validation: 0.495925
09/16 08:11:52 AM: micro_avg: validation: 0.000000
09/16 08:11:52 AM: edges-rel-semeval_mcc: training: 0.652974 validation: 0.509932
09/16 08:11:52 AM: edges-rel-semeval_acc: training: 0.503942 validation: 0.355962
09/16 08:11:52 AM: edges-rel-semeval_precision: training: 0.812237 validation: 0.748682
09/16 08:11:52 AM: edges-rel-semeval_recall: training: 0.548407 validation: 0.370757
09/16 08:11:52 AM: edges-rel-semeval_f1: training: 0.654744 validation: 0.495925
09/16 08:11:52 AM: Global learning rate: 0.0001
09/16 08:11:52 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:54 AM: ***** Step 2300 / Validation 23 *****
09/16 08:11:54 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:54 AM: Validating...
09/16 08:11:54 AM: Updating LR scheduler:
09/16 08:11:54 AM: 	Best result seen so far for macro_avg: 0.497
09/16 08:11:54 AM: 	# validation passes without improvement: 3
09/16 08:11:54 AM: edges-rel-semeval_loss: training: 0.079899 validation: 0.115476
09/16 08:11:54 AM: macro_avg: validation: 0.491025
09/16 08:11:54 AM: micro_avg: validation: 0.000000
09/16 08:11:54 AM: edges-rel-semeval_mcc: training: 0.659414 validation: 0.502893
09/16 08:11:54 AM: edges-rel-semeval_acc: training: 0.509062 validation: 0.353351
09/16 08:11:54 AM: edges-rel-semeval_precision: training: 0.820204 validation: 0.733564
09/16 08:11:54 AM: edges-rel-semeval_recall: training: 0.553125 validation: 0.369017
09/16 08:11:54 AM: edges-rel-semeval_f1: training: 0.660694 validation: 0.491025
09/16 08:11:54 AM: Global learning rate: 0.0001
09/16 08:11:54 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:56 AM: Update 2370: task edges-rel-semeval, batch 70 (2370): mcc: 0.6735, acc: 0.5301, precision: 0.8208, recall: 0.5758, f1: 0.6768, edges-rel-semeval_loss: 0.0771
09/16 08:11:57 AM: ***** Step 2400 / Validation 24 *****
09/16 08:11:57 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:57 AM: Validating...
09/16 08:11:57 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:57 AM: Best result seen so far for macro.
09/16 08:11:57 AM: Updating LR scheduler:
09/16 08:11:57 AM: 	Best result seen so far for macro_avg: 0.501
09/16 08:11:57 AM: 	# validation passes without improvement: 0
09/16 08:11:57 AM: edges-rel-semeval_loss: training: 0.076322 validation: 0.114707
09/16 08:11:57 AM: macro_avg: validation: 0.500583
09/16 08:11:57 AM: micro_avg: validation: 0.000000
09/16 08:11:57 AM: edges-rel-semeval_mcc: training: 0.676133 validation: 0.515833
09/16 08:11:57 AM: edges-rel-semeval_acc: training: 0.530747 validation: 0.360313
09/16 08:11:57 AM: edges-rel-semeval_precision: training: 0.823450 validation: 0.759292
09/16 08:11:57 AM: edges-rel-semeval_recall: training: 0.578051 validation: 0.373368
09/16 08:11:57 AM: edges-rel-semeval_f1: training: 0.679266 validation: 0.500583
09/16 08:11:57 AM: Global learning rate: 0.0001
09/16 08:11:57 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:11:59 AM: ***** Step 2500 / Validation 25 *****
09/16 08:11:59 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:59 AM: Validating...
09/16 08:11:59 AM: Updating LR scheduler:
09/16 08:11:59 AM: 	Best result seen so far for macro_avg: 0.501
09/16 08:11:59 AM: 	# validation passes without improvement: 1
09/16 08:11:59 AM: edges-rel-semeval_loss: training: 0.076546 validation: 0.114213
09/16 08:11:59 AM: macro_avg: validation: 0.496512
09/16 08:11:59 AM: micro_avg: validation: 0.000000
09/16 08:11:59 AM: edges-rel-semeval_mcc: training: 0.678547 validation: 0.510212
09/16 08:11:59 AM: edges-rel-semeval_acc: training: 0.536250 validation: 0.360313
09/16 08:11:59 AM: edges-rel-semeval_precision: training: 0.823243 validation: 0.747811
09/16 08:11:59 AM: edges-rel-semeval_recall: training: 0.582187 validation: 0.371628
09/16 08:11:59 AM: edges-rel-semeval_f1: training: 0.682043 validation: 0.496512
09/16 08:11:59 AM: Global learning rate: 0.0001
09/16 08:11:59 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:02 AM: ***** Step 2600 / Validation 26 *****
09/16 08:12:02 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:02 AM: Validating...
09/16 08:12:02 AM: Updating LR scheduler:
09/16 08:12:02 AM: 	Best result seen so far for macro_avg: 0.501
09/16 08:12:02 AM: 	# validation passes without improvement: 2
09/16 08:12:02 AM: edges-rel-semeval_loss: training: 0.077812 validation: 0.116345
09/16 08:12:02 AM: macro_avg: validation: 0.494200
09/16 08:12:02 AM: micro_avg: validation: 0.000000
09/16 08:12:02 AM: edges-rel-semeval_mcc: training: 0.670310 validation: 0.506931
09/16 08:12:02 AM: edges-rel-semeval_acc: training: 0.524440 validation: 0.352480
09/16 08:12:02 AM: edges-rel-semeval_precision: training: 0.815213 validation: 0.740870
09/16 08:12:02 AM: edges-rel-semeval_recall: training: 0.574582 validation: 0.370757
09/16 08:12:02 AM: edges-rel-semeval_f1: training: 0.674066 validation: 0.494200
09/16 08:12:02 AM: Global learning rate: 0.0001
09/16 08:12:02 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:04 AM: ***** Step 2700 / Validation 27 *****
09/16 08:12:04 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:04 AM: Validating...
09/16 08:12:04 AM: Updating LR scheduler:
09/16 08:12:04 AM: 	Best result seen so far for macro_avg: 0.501
09/16 08:12:04 AM: 	# validation passes without improvement: 3
09/16 08:12:04 AM: edges-rel-semeval_loss: training: 0.073540 validation: 0.116035
09/16 08:12:04 AM: macro_avg: validation: 0.496214
09/16 08:12:04 AM: micro_avg: validation: 0.000000
09/16 08:12:04 AM: edges-rel-semeval_mcc: training: 0.694259 validation: 0.510436
09/16 08:12:04 AM: edges-rel-semeval_acc: training: 0.549687 validation: 0.357702
09/16 08:12:04 AM: edges-rel-semeval_precision: training: 0.835002 validation: 0.750000
09/16 08:12:04 AM: edges-rel-semeval_recall: training: 0.599375 validation: 0.370757
09/16 08:12:04 AM: edges-rel-semeval_f1: training: 0.697835 validation: 0.496214
09/16 08:12:04 AM: Global learning rate: 0.0001
09/16 08:12:04 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:07 AM: Update 2796: task edges-rel-semeval, batch 96 (2796): mcc: 0.6696, acc: 0.5255, precision: 0.8135, recall: 0.5748, f1: 0.6736, edges-rel-semeval_loss: 0.0772
09/16 08:12:07 AM: ***** Step 2800 / Validation 28 *****
09/16 08:12:07 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:07 AM: Validating...
09/16 08:12:07 AM: Updating LR scheduler:
09/16 08:12:07 AM: 	Best result seen so far for macro_avg: 0.501
09/16 08:12:07 AM: 	# validation passes without improvement: 0
09/16 08:12:07 AM: edges-rel-semeval_loss: training: 0.076678 validation: 0.117769
09/16 08:12:07 AM: macro_avg: validation: 0.481203
09/16 08:12:07 AM: micro_avg: validation: 0.000000
09/16 08:12:07 AM: edges-rel-semeval_mcc: training: 0.672819 validation: 0.491709
09/16 08:12:07 AM: edges-rel-semeval_acc: training: 0.528540 validation: 0.348999
09/16 08:12:07 AM: edges-rel-semeval_precision: training: 0.816118 validation: 0.717241
09/16 08:12:07 AM: edges-rel-semeval_recall: training: 0.578051 validation: 0.362054
09/16 08:12:07 AM: edges-rel-semeval_f1: training: 0.676758 validation: 0.481203
09/16 08:12:07 AM: Global learning rate: 5e-05
09/16 08:12:07 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:09 AM: ***** Step 2900 / Validation 29 *****
09/16 08:12:09 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:09 AM: Validating...
09/16 08:12:10 AM: Best result seen so far for edges-rel-semeval.
09/16 08:12:10 AM: Best result seen so far for macro.
09/16 08:12:10 AM: Updating LR scheduler:
09/16 08:12:10 AM: 	Best result seen so far for macro_avg: 0.505
09/16 08:12:10 AM: 	# validation passes without improvement: 0
09/16 08:12:10 AM: edges-rel-semeval_loss: training: 0.069228 validation: 0.116533
09/16 08:12:10 AM: macro_avg: validation: 0.504832
09/16 08:12:10 AM: micro_avg: validation: 0.000000
09/16 08:12:10 AM: edges-rel-semeval_mcc: training: 0.714415 validation: 0.512691
09/16 08:12:10 AM: edges-rel-semeval_acc: training: 0.581250 validation: 0.369887
09/16 08:12:10 AM: edges-rel-semeval_precision: training: 0.844726 validation: 0.727869
09/16 08:12:10 AM: edges-rel-semeval_recall: training: 0.625625 validation: 0.386423
09/16 08:12:10 AM: edges-rel-semeval_f1: training: 0.718851 validation: 0.504832
09/16 08:12:10 AM: Global learning rate: 5e-05
09/16 08:12:10 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:11 AM: ***** Step 3000 / Validation 30 *****
09/16 08:12:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:11 AM: Validating...
09/16 08:12:12 AM: Best result seen so far for edges-rel-semeval.
09/16 08:12:12 AM: Best result seen so far for macro.
09/16 08:12:12 AM: Updating LR scheduler:
09/16 08:12:12 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:12:12 AM: 	# validation passes without improvement: 0
09/16 08:12:12 AM: edges-rel-semeval_loss: training: 0.069872 validation: 0.115287
09/16 08:12:12 AM: macro_avg: validation: 0.521787
09/16 08:12:12 AM: micro_avg: validation: 0.000000
09/16 08:12:12 AM: edges-rel-semeval_mcc: training: 0.719049 validation: 0.523275
09/16 08:12:12 AM: edges-rel-semeval_acc: training: 0.577187 validation: 0.389034
09/16 08:12:12 AM: edges-rel-semeval_precision: training: 0.850740 validation: 0.712349
09/16 08:12:12 AM: edges-rel-semeval_recall: training: 0.628750 validation: 0.411662
09/16 08:12:12 AM: edges-rel-semeval_f1: training: 0.723091 validation: 0.521787
09/16 08:12:12 AM: Global learning rate: 5e-05
09/16 08:12:12 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:14 AM: ***** Step 3100 / Validation 31 *****
09/16 08:12:14 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:14 AM: Validating...
09/16 08:12:15 AM: Updating LR scheduler:
09/16 08:12:15 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:12:15 AM: 	# validation passes without improvement: 1
09/16 08:12:15 AM: edges-rel-semeval_loss: training: 0.067260 validation: 0.116768
09/16 08:12:15 AM: macro_avg: validation: 0.504221
09/16 08:12:15 AM: micro_avg: validation: 0.000000
09/16 08:12:15 AM: edges-rel-semeval_mcc: training: 0.729069 validation: 0.509251
09/16 08:12:15 AM: edges-rel-semeval_acc: training: 0.591611 validation: 0.368146
09/16 08:12:15 AM: edges-rel-semeval_precision: training: 0.851728 validation: 0.713376
09/16 08:12:15 AM: edges-rel-semeval_recall: training: 0.644907 validation: 0.389904
09/16 08:12:15 AM: edges-rel-semeval_f1: training: 0.734027 validation: 0.504221
09/16 08:12:15 AM: Global learning rate: 5e-05
09/16 08:12:15 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:16 AM: ***** Step 3200 / Validation 32 *****
09/16 08:12:16 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:16 AM: Validating...
09/16 08:12:17 AM: Evaluate: task edges-rel-semeval, batch 34 (36): mcc: 0.5222, acc: 0.3796, precision: 0.7259, recall: 0.4017, f1: 0.5172, edges-rel-semeval_loss: 0.1140
09/16 08:12:17 AM: Updating LR scheduler:
09/16 08:12:17 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:12:17 AM: 	# validation passes without improvement: 2
09/16 08:12:17 AM: edges-rel-semeval_loss: training: 0.067853 validation: 0.116458
09/16 08:12:17 AM: macro_avg: validation: 0.507865
09/16 08:12:17 AM: micro_avg: validation: 0.000000
09/16 08:12:17 AM: edges-rel-semeval_mcc: training: 0.718702 validation: 0.512779
09/16 08:12:17 AM: edges-rel-semeval_acc: training: 0.582187 validation: 0.370757
09/16 08:12:17 AM: edges-rel-semeval_precision: training: 0.843594 validation: 0.716323
09/16 08:12:17 AM: edges-rel-semeval_recall: training: 0.633750 validation: 0.393386
09/16 08:12:17 AM: edges-rel-semeval_f1: training: 0.723769 validation: 0.507865
09/16 08:12:17 AM: Global learning rate: 5e-05
09/16 08:12:17 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:19 AM: ***** Step 3300 / Validation 33 *****
09/16 08:12:19 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:19 AM: Validating...
09/16 08:12:20 AM: Updating LR scheduler:
09/16 08:12:20 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:12:20 AM: 	# validation passes without improvement: 3
09/16 08:12:20 AM: edges-rel-semeval_loss: training: 0.066305 validation: 0.117476
09/16 08:12:20 AM: macro_avg: validation: 0.512936
09/16 08:12:20 AM: micro_avg: validation: 0.000000
09/16 08:12:20 AM: edges-rel-semeval_mcc: training: 0.733677 validation: 0.518604
09/16 08:12:20 AM: edges-rel-semeval_acc: training: 0.604541 validation: 0.375109
09/16 08:12:20 AM: edges-rel-semeval_precision: training: 0.844660 validation: 0.724960
09/16 08:12:20 AM: edges-rel-semeval_recall: training: 0.658467 validation: 0.396867
09/16 08:12:20 AM: edges-rel-semeval_f1: training: 0.740032 validation: 0.512936
09/16 08:12:20 AM: Global learning rate: 5e-05
09/16 08:12:20 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:21 AM: ***** Step 3400 / Validation 34 *****
09/16 08:12:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:21 AM: Validating...
09/16 08:12:22 AM: Updating LR scheduler:
09/16 08:12:22 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:12:22 AM: 	# validation passes without improvement: 0
09/16 08:12:22 AM: edges-rel-semeval_loss: training: 0.066027 validation: 0.117785
09/16 08:12:22 AM: macro_avg: validation: 0.502558
09/16 08:12:22 AM: micro_avg: validation: 0.000000
09/16 08:12:22 AM: edges-rel-semeval_mcc: training: 0.732187 validation: 0.510202
09/16 08:12:22 AM: edges-rel-semeval_acc: training: 0.601875 validation: 0.368146
09/16 08:12:22 AM: edges-rel-semeval_precision: training: 0.855138 validation: 0.724590
09/16 08:12:22 AM: edges-rel-semeval_recall: training: 0.647500 validation: 0.384682
09/16 08:12:22 AM: edges-rel-semeval_f1: training: 0.736973 validation: 0.502558
09/16 08:12:22 AM: Global learning rate: 2.5e-05
09/16 08:12:22 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:24 AM: ***** Step 3500 / Validation 35 *****
09/16 08:12:24 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:24 AM: Validating...
09/16 08:12:24 AM: Updating LR scheduler:
09/16 08:12:24 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:12:24 AM: 	# validation passes without improvement: 1
09/16 08:12:24 AM: edges-rel-semeval_loss: training: 0.065945 validation: 0.117010
09/16 08:12:24 AM: macro_avg: validation: 0.514029
09/16 08:12:24 AM: micro_avg: validation: 0.000000
09/16 08:12:24 AM: edges-rel-semeval_mcc: training: 0.737227 validation: 0.519199
09/16 08:12:24 AM: edges-rel-semeval_acc: training: 0.604857 validation: 0.380331
09/16 08:12:24 AM: edges-rel-semeval_precision: training: 0.856495 validation: 0.723539
09/16 08:12:24 AM: edges-rel-semeval_recall: training: 0.654998 validation: 0.398607
09/16 08:12:24 AM: edges-rel-semeval_f1: training: 0.742316 validation: 0.514029
09/16 08:12:24 AM: Global learning rate: 2.5e-05
09/16 08:12:24 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:26 AM: ***** Step 3600 / Validation 36 *****
09/16 08:12:26 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:26 AM: Validating...
09/16 08:12:26 AM: Updating LR scheduler:
09/16 08:12:26 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:12:26 AM: 	# validation passes without improvement: 2
09/16 08:12:26 AM: edges-rel-semeval_loss: training: 0.064674 validation: 0.117616
09/16 08:12:26 AM: macro_avg: validation: 0.500562
09/16 08:12:26 AM: micro_avg: validation: 0.000000
09/16 08:12:26 AM: edges-rel-semeval_mcc: training: 0.736631 validation: 0.505115
09/16 08:12:26 AM: edges-rel-semeval_acc: training: 0.601562 validation: 0.366406
09/16 08:12:26 AM: edges-rel-semeval_precision: training: 0.859143 validation: 0.707472
09/16 08:12:26 AM: edges-rel-semeval_recall: training: 0.651875 validation: 0.387293
09/16 08:12:26 AM: edges-rel-semeval_f1: training: 0.741294 validation: 0.500562
09/16 08:12:26 AM: Global learning rate: 2.5e-05
09/16 08:12:26 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:27 AM: Update 3624: task edges-rel-semeval, batch 24 (3624): mcc: 0.7546, acc: 0.6315, precision: 0.8628, recall: 0.6797, f1: 0.7604, edges-rel-semeval_loss: 0.0635
09/16 08:12:29 AM: ***** Step 3700 / Validation 37 *****
09/16 08:12:29 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:29 AM: Validating...
09/16 08:12:29 AM: Updating LR scheduler:
09/16 08:12:29 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:12:29 AM: 	# validation passes without improvement: 3
09/16 08:12:29 AM: edges-rel-semeval_loss: training: 0.064143 validation: 0.117549
09/16 08:12:29 AM: macro_avg: validation: 0.511236
09/16 08:12:29 AM: micro_avg: validation: 0.000000
09/16 08:12:29 AM: edges-rel-semeval_mcc: training: 0.745857 validation: 0.516453
09/16 08:12:29 AM: edges-rel-semeval_acc: training: 0.616209 validation: 0.375979
09/16 08:12:29 AM: edges-rel-semeval_precision: training: 0.863469 validation: 0.721078
09/16 08:12:29 AM: edges-rel-semeval_recall: training: 0.664144 validation: 0.395997
09/16 08:12:29 AM: edges-rel-semeval_f1: training: 0.750802 validation: 0.511236
09/16 08:12:29 AM: Global learning rate: 2.5e-05
09/16 08:12:29 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:31 AM: ***** Step 3800 / Validation 38 *****
09/16 08:12:31 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:31 AM: Validating...
09/16 08:12:31 AM: Updating LR scheduler:
09/16 08:12:31 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:12:31 AM: 	# validation passes without improvement: 0
09/16 08:12:31 AM: edges-rel-semeval_loss: training: 0.063925 validation: 0.117708
09/16 08:12:31 AM: macro_avg: validation: 0.512126
09/16 08:12:31 AM: micro_avg: validation: 0.000000
09/16 08:12:31 AM: edges-rel-semeval_mcc: training: 0.741681 validation: 0.518478
09/16 08:12:31 AM: edges-rel-semeval_acc: training: 0.610625 validation: 0.377720
09/16 08:12:31 AM: edges-rel-semeval_precision: training: 0.852400 validation: 0.727564
09/16 08:12:31 AM: edges-rel-semeval_recall: training: 0.665937 validation: 0.395126
09/16 08:12:31 AM: edges-rel-semeval_f1: training: 0.747719 validation: 0.512126
09/16 08:12:31 AM: Global learning rate: 1.25e-05
09/16 08:12:31 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:34 AM: ***** Step 3900 / Validation 39 *****
09/16 08:12:34 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:34 AM: Validating...
09/16 08:12:34 AM: Updating LR scheduler:
09/16 08:12:34 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:12:34 AM: 	# validation passes without improvement: 1
09/16 08:12:34 AM: edges-rel-semeval_loss: training: 0.062823 validation: 0.117106
09/16 08:12:34 AM: macro_avg: validation: 0.512792
09/16 08:12:34 AM: micro_avg: validation: 0.000000
09/16 08:12:34 AM: edges-rel-semeval_mcc: training: 0.746968 validation: 0.515559
09/16 08:12:34 AM: edges-rel-semeval_acc: training: 0.616840 validation: 0.380331
09/16 08:12:34 AM: edges-rel-semeval_precision: training: 0.861914 validation: 0.710324
09/16 08:12:34 AM: edges-rel-semeval_recall: training: 0.667297 validation: 0.401218
09/16 08:12:34 AM: edges-rel-semeval_f1: training: 0.752222 validation: 0.512792
09/16 08:12:34 AM: Global learning rate: 1.25e-05
09/16 08:12:34 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:36 AM: ***** Step 4000 / Validation 40 *****
09/16 08:12:36 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:36 AM: Validating...
09/16 08:12:36 AM: Updating LR scheduler:
09/16 08:12:36 AM: 	Best result seen so far for macro_avg: 0.522
09/16 08:12:36 AM: 	# validation passes without improvement: 2
09/16 08:12:36 AM: Ran out of early stopping patience. Stopping training.
09/16 08:12:36 AM: edges-rel-semeval_loss: training: 0.062171 validation: 0.117876
09/16 08:12:36 AM: macro_avg: validation: 0.511287
09/16 08:12:36 AM: micro_avg: validation: 0.000000
09/16 08:12:36 AM: edges-rel-semeval_mcc: training: 0.754914 validation: 0.517715
09/16 08:12:36 AM: edges-rel-semeval_acc: training: 0.628125 validation: 0.375979
09/16 08:12:36 AM: edges-rel-semeval_precision: training: 0.866161 validation: 0.727127
09/16 08:12:36 AM: edges-rel-semeval_recall: training: 0.677500 validation: 0.394256
09/16 08:12:36 AM: edges-rel-semeval_f1: training: 0.760302 validation: 0.511287
09/16 08:12:36 AM: Global learning rate: 1.25e-05
09/16 08:12:36 AM: Saving checkpoints to: ./experiments/rel-semeval-squad-only/run
09/16 08:12:36 AM: Stopped training after 40 validation checks
09/16 08:12:36 AM: Trained edges-rel-semeval for 4000 batches or 18.605 epochs
09/16 08:12:36 AM: ***** VALIDATION RESULTS *****
09/16 08:12:36 AM: edges-rel-semeval_f1 (for best val pass 30): edges-rel-semeval_loss: 0.11529, macro_avg: 0.52179, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.52327, edges-rel-semeval_acc: 0.38903, edges-rel-semeval_precision: 0.71235, edges-rel-semeval_recall: 0.41166, edges-rel-semeval_f1: 0.52179
09/16 08:12:36 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.18742, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 08:12:36 AM: macro_avg (for best val pass 30): edges-rel-semeval_loss: 0.11529, macro_avg: 0.52179, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.52327, edges-rel-semeval_acc: 0.38903, edges-rel-semeval_precision: 0.71235, edges-rel-semeval_recall: 0.41166, edges-rel-semeval_f1: 0.52179
09/16 08:12:36 AM: Evaluating...
09/16 08:12:36 AM: Loaded model state from ./experiments/rel-semeval-squad-only/run/edges-rel-semeval/model_state_target_train_val_30.best.th
09/16 08:12:36 AM: Evaluating on: edges-rel-semeval, split: val
09/16 08:12:37 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:12:37 AM: Finished evaluating on: edges-rel-semeval
09/16 08:12:37 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 08:12:37 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-squad-only/run
09/16 08:12:37 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-squad-only/run
09/16 08:12:37 AM: Evaluating on: edges-rel-semeval, split: test
09/16 08:12:38 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:12:38 AM: Finished evaluating on: edges-rel-semeval
09/16 08:12:38 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 08:12:38 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-squad-only/run
09/16 08:12:38 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-squad-only/run
09/16 08:12:38 AM: Writing results for split 'val' to ./experiments/rel-semeval-squad-only/results.tsv
09/16 08:12:38 AM: micro_avg: 0.000, macro_avg: 0.522, edges-rel-semeval_mcc: 0.523, edges-rel-semeval_acc: 0.389, edges-rel-semeval_precision: 0.712, edges-rel-semeval_recall: 0.412, edges-rel-semeval_f1: 0.522
09/16 08:12:38 AM: Done!
09/16 08:12:38 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
