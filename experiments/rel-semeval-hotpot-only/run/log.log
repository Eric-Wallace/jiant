09/16 08:10:40 AM: Git branch: master
09/16 08:10:40 AM: Git SHA: a6b97574b819abe0c17f2f3300d1097e5c87dbde
09/16 08:10:40 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-hotpot-only/",
  "exp_name": "experiments/rel-semeval-hotpot-only",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-hotpot-only/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/hotpot",
  "pytorch_transformers_output_mode": "only",
  "remote_log_name": "experiments/rel-semeval-hotpot-only__run",
  "run_dir": "./experiments/rel-semeval-hotpot-only/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:10:40 AM: Saved config to ./experiments/rel-semeval-hotpot-only/run/params.conf
09/16 08:10:40 AM: Using random seed 1234
09/16 08:10:41 AM: Using GPU 0
09/16 08:10:41 AM: Loading tasks...
09/16 08:10:41 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-hotpot-only/
09/16 08:10:41 AM: 	Creating task edges-rel-semeval from scratch.
09/16 08:10:41 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 08:10:41 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 08:10:41 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 08:10:41 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 08:10:41 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 08:10:41 AM: 	Building vocab from scratch.
09/16 08:10:41 AM: 	Counting units for task edges-rel-semeval.
09/16 08:10:42 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 08:10:43 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:10:43 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:10:43 AM: 	Saved vocab to ./experiments/rel-semeval-hotpot-only/vocab
09/16 08:10:43 AM: Loading token dictionary from ./experiments/rel-semeval-hotpot-only/vocab.
09/16 08:10:43 AM: 	Loaded vocab from ./experiments/rel-semeval-hotpot-only/vocab
09/16 08:10:43 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:10:43 AM: 	Vocab namespace tokens: size 16020
09/16 08:10:43 AM: 	Vocab namespace chars: size 59
09/16 08:10:43 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 08:10:43 AM: 	Finished building vocab.
09/16 08:10:43 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 08:10:44 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-hotpot-only/preproc/edges-rel-semeval__train_data
09/16 08:10:44 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 08:10:44 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-hotpot-only/preproc/edges-rel-semeval__val_data
09/16 08:10:44 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 08:10:44 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-hotpot-only/preproc/edges-rel-semeval__test_data
09/16 08:10:44 AM: 	Finished indexing tasks
09/16 08:10:44 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 08:10:44 AM: 	  Training on 
09/16 08:10:44 AM: 	  Evaluating on edges-rel-semeval
09/16 08:10:44 AM: 	Finished loading tasks in 2.900s
09/16 08:10:44 AM: 	 Tasks: ['edges-rel-semeval']
09/16 08:10:44 AM: Building model...
09/16 08:10:44 AM: Using BERT model (bert-base-uncased).
09/16 08:10:44 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:10:44 AM: models/hotpot
09/16 08:10:44 AM: loading configuration file models/hotpot/config.json
09/16 08:10:44 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:10:44 AM: loading weights file models/hotpot/pytorch_model.bin
09/16 08:10:47 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmpcnkxcu86
09/16 08:10:49 AM: copying /tmp/tmpcnkxcu86 to cache at ./experiments/rel-semeval-hotpot-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:10:49 AM: creating metadata file for ./experiments/rel-semeval-hotpot-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:10:49 AM: removing temp file /tmp/tmpcnkxcu86
09/16 08:10:49 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-hotpot-only/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:10:49 AM: Initializing parameters
09/16 08:10:49 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:10:49 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:10:49 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:10:49 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:10:49 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:10:49 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:10:49 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 08:10:54 AM: Model specification:
09/16 08:10:54 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 08:10:54 AM: Model parameters:
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:10:54 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 08:10:54 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 08:10:54 AM: Total number of parameters: 110143763 (1.10144e+08)
09/16 08:10:54 AM: Number of trainable parameters: 661523 (661523)
09/16 08:10:54 AM: Finished building model in 9.588s
09/16 08:10:54 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 08:10:54 AM: patience = 9
09/16 08:10:54 AM: val_interval = 100
09/16 08:10:54 AM: max_vals = 100
09/16 08:10:54 AM: cuda_device = 0
09/16 08:10:54 AM: grad_norm = 5.0
09/16 08:10:54 AM: grad_clipping = None
09/16 08:10:54 AM: lr_decay = 0.99
09/16 08:10:54 AM: min_lr = 1e-06
09/16 08:10:54 AM: keep_all_checkpoints = 0
09/16 08:10:54 AM: val_data_limit = 5000
09/16 08:10:54 AM: max_epochs = -1
09/16 08:10:54 AM: dec_val_scale = 250
09/16 08:10:54 AM: training_data_fraction = 1
09/16 08:10:54 AM: type = adam
09/16 08:10:54 AM: parameter_groups = None
09/16 08:10:54 AM: Number of trainable parameters: 661523
09/16 08:10:54 AM: infer_type_and_cast = True
09/16 08:10:54 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:10:54 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:10:54 AM: lr = 0.0001
09/16 08:10:54 AM: amsgrad = True
09/16 08:10:54 AM: type = reduce_on_plateau
09/16 08:10:54 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:10:54 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:10:54 AM: mode = max
09/16 08:10:54 AM: factor = 0.5
09/16 08:10:54 AM: patience = 3
09/16 08:10:54 AM: threshold = 0.0001
09/16 08:10:54 AM: threshold_mode = abs
09/16 08:10:54 AM: verbose = True
09/16 08:10:54 AM: type = adam
09/16 08:10:54 AM: parameter_groups = None
09/16 08:10:54 AM: Number of trainable parameters: 661523
09/16 08:10:54 AM: infer_type_and_cast = True
09/16 08:10:54 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:10:54 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:10:54 AM: lr = 0.0001
09/16 08:10:54 AM: amsgrad = True
09/16 08:10:54 AM: type = reduce_on_plateau
09/16 08:10:54 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:10:54 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:10:54 AM: mode = max
09/16 08:10:54 AM: factor = 0.5
09/16 08:10:54 AM: patience = 3
09/16 08:10:54 AM: threshold = 0.0001
09/16 08:10:54 AM: threshold_mode = abs
09/16 08:10:54 AM: verbose = True
09/16 08:10:54 AM: Starting training without restoring from a checkpoint.
09/16 08:10:54 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 08:10:54 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 08:10:57 AM: ***** Step 100 / Validation 1 *****
09/16 08:10:57 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:10:57 AM: Validating...
09/16 08:10:57 AM: Best result seen so far for edges-rel-semeval.
09/16 08:10:57 AM: Best result seen so far for micro.
09/16 08:10:57 AM: Best result seen so far for macro.
09/16 08:10:57 AM: Updating LR scheduler:
09/16 08:10:57 AM: 	Best result seen so far for macro_avg: 0.000
09/16 08:10:57 AM: 	# validation passes without improvement: 0
09/16 08:10:57 AM: edges-rel-semeval_loss: training: 0.283261 validation: 0.187448
09/16 08:10:57 AM: macro_avg: validation: 0.000000
09/16 08:10:57 AM: micro_avg: validation: 0.000000
09/16 08:10:57 AM: edges-rel-semeval_mcc: training: 0.011540 validation: 0.000000
09/16 08:10:57 AM: edges-rel-semeval_acc: training: 0.006307 validation: 0.000000
09/16 08:10:57 AM: edges-rel-semeval_precision: training: 0.064910 validation: 0.000000
09/16 08:10:57 AM: edges-rel-semeval_recall: training: 0.052034 validation: 0.000000
09/16 08:10:57 AM: edges-rel-semeval_f1: training: 0.057763 validation: 0.000000
09/16 08:10:57 AM: Global learning rate: 0.0001
09/16 08:10:57 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:10:59 AM: ***** Step 200 / Validation 2 *****
09/16 08:10:59 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:10:59 AM: Validating...
09/16 08:11:00 AM: Updating LR scheduler:
09/16 08:11:00 AM: 	Best result seen so far for macro_avg: 0.000
09/16 08:11:00 AM: 	# validation passes without improvement: 1
09/16 08:11:00 AM: edges-rel-semeval_loss: training: 0.186149 validation: 0.174178
09/16 08:11:00 AM: macro_avg: validation: 0.000000
09/16 08:11:00 AM: micro_avg: validation: 0.000000
09/16 08:11:00 AM: edges-rel-semeval_mcc: training: 0.012488 validation: 0.000000
09/16 08:11:00 AM: edges-rel-semeval_acc: training: 0.000625 validation: 0.000000
09/16 08:11:00 AM: edges-rel-semeval_precision: training: 0.333333 validation: 0.000000
09/16 08:11:00 AM: edges-rel-semeval_recall: training: 0.000625 validation: 0.000000
09/16 08:11:00 AM: edges-rel-semeval_f1: training: 0.001248 validation: 0.000000
09/16 08:11:00 AM: Global learning rate: 0.0001
09/16 08:11:00 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:02 AM: ***** Step 300 / Validation 3 *****
09/16 08:11:02 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:02 AM: Validating...
09/16 08:11:03 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:03 AM: Best result seen so far for macro.
09/16 08:11:03 AM: Updating LR scheduler:
09/16 08:11:03 AM: 	Best result seen so far for macro_avg: 0.047
09/16 08:11:03 AM: 	# validation passes without improvement: 0
09/16 08:11:03 AM: edges-rel-semeval_loss: training: 0.170675 validation: 0.158715
09/16 08:11:03 AM: macro_avg: validation: 0.047458
09/16 08:11:03 AM: micro_avg: validation: 0.000000
09/16 08:11:03 AM: edges-rel-semeval_mcc: training: 0.082362 validation: 0.143646
09/16 08:11:03 AM: edges-rel-semeval_acc: training: 0.011038 validation: 0.024369
09/16 08:11:03 AM: edges-rel-semeval_precision: training: 0.666667 validation: 0.903226
09/16 08:11:03 AM: edges-rel-semeval_recall: training: 0.011353 validation: 0.024369
09/16 08:11:03 AM: edges-rel-semeval_f1: training: 0.022326 validation: 0.047458
09/16 08:11:03 AM: Global learning rate: 0.0001
09/16 08:11:03 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:04 AM: Update 375: task edges-rel-semeval, batch 75 (375): mcc: 0.2221, acc: 0.0663, precision: 0.7783, recall: 0.0688, f1: 0.1263, edges-rel-semeval_loss: 0.1552
09/16 08:11:05 AM: ***** Step 400 / Validation 4 *****
09/16 08:11:05 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:05 AM: Validating...
09/16 08:11:05 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:05 AM: Best result seen so far for macro.
09/16 08:11:05 AM: Updating LR scheduler:
09/16 08:11:05 AM: 	Best result seen so far for macro_avg: 0.130
09/16 08:11:05 AM: 	# validation passes without improvement: 0
09/16 08:11:05 AM: edges-rel-semeval_loss: training: 0.154181 validation: 0.145560
09/16 08:11:05 AM: macro_avg: validation: 0.130120
09/16 08:11:05 AM: micro_avg: validation: 0.000000
09/16 08:11:05 AM: edges-rel-semeval_mcc: training: 0.233239 validation: 0.235459
09/16 08:11:05 AM: edges-rel-semeval_acc: training: 0.075313 validation: 0.070496
09/16 08:11:05 AM: edges-rel-semeval_precision: training: 0.763077 validation: 0.843750
09/16 08:11:05 AM: edges-rel-semeval_recall: training: 0.077500 validation: 0.070496
09/16 08:11:05 AM: edges-rel-semeval_f1: training: 0.140709 validation: 0.130120
09/16 08:11:05 AM: Global learning rate: 0.0001
09/16 08:11:05 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:08 AM: ***** Step 500 / Validation 5 *****
09/16 08:11:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:08 AM: Validating...
09/16 08:11:08 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:08 AM: Best result seen so far for macro.
09/16 08:11:08 AM: Updating LR scheduler:
09/16 08:11:08 AM: 	Best result seen so far for macro_avg: 0.198
09/16 08:11:08 AM: 	# validation passes without improvement: 0
09/16 08:11:08 AM: edges-rel-semeval_loss: training: 0.143634 validation: 0.136916
09/16 08:11:08 AM: macro_avg: validation: 0.197701
09/16 08:11:08 AM: micro_avg: validation: 0.000000
09/16 08:11:08 AM: edges-rel-semeval_mcc: training: 0.301580 validation: 0.294174
09/16 08:11:08 AM: edges-rel-semeval_acc: training: 0.125197 validation: 0.111401
09/16 08:11:08 AM: edges-rel-semeval_precision: training: 0.762082 validation: 0.826923
09/16 08:11:08 AM: edges-rel-semeval_recall: training: 0.129297 validation: 0.112272
09/16 08:11:08 AM: edges-rel-semeval_f1: training: 0.221084 validation: 0.197701
09/16 08:11:08 AM: Global learning rate: 0.0001
09/16 08:11:08 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:10 AM: ***** Step 600 / Validation 6 *****
09/16 08:11:10 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:10 AM: Validating...
09/16 08:11:11 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:11 AM: Best result seen so far for macro.
09/16 08:11:11 AM: Updating LR scheduler:
09/16 08:11:11 AM: 	Best result seen so far for macro_avg: 0.268
09/16 08:11:11 AM: 	# validation passes without improvement: 0
09/16 08:11:11 AM: edges-rel-semeval_loss: training: 0.134469 validation: 0.130477
09/16 08:11:11 AM: macro_avg: validation: 0.268222
09/16 08:11:11 AM: micro_avg: validation: 0.000000
09/16 08:11:11 AM: edges-rel-semeval_mcc: training: 0.359135 validation: 0.351439
09/16 08:11:11 AM: edges-rel-semeval_acc: training: 0.183125 validation: 0.155788
09/16 08:11:11 AM: edges-rel-semeval_precision: training: 0.740196 validation: 0.825112
09/16 08:11:11 AM: edges-rel-semeval_recall: training: 0.188750 validation: 0.160139
09/16 08:11:11 AM: edges-rel-semeval_f1: training: 0.300797 validation: 0.268222
09/16 08:11:11 AM: Global learning rate: 0.0001
09/16 08:11:11 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:13 AM: ***** Step 700 / Validation 7 *****
09/16 08:11:13 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:13 AM: Validating...
09/16 08:11:14 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:14 AM: Best result seen so far for macro.
09/16 08:11:14 AM: Updating LR scheduler:
09/16 08:11:14 AM: 	Best result seen so far for macro_avg: 0.327
09/16 08:11:14 AM: 	# validation passes without improvement: 0
09/16 08:11:14 AM: edges-rel-semeval_loss: training: 0.125101 validation: 0.126224
09/16 08:11:14 AM: macro_avg: validation: 0.326588
09/16 08:11:14 AM: micro_avg: validation: 0.000000
09/16 08:11:14 AM: edges-rel-semeval_mcc: training: 0.413706 validation: 0.396564
09/16 08:11:14 AM: edges-rel-semeval_acc: training: 0.228004 validation: 0.201044
09/16 08:11:14 AM: edges-rel-semeval_precision: training: 0.772541 validation: 0.823944
09/16 08:11:14 AM: edges-rel-semeval_recall: training: 0.237780 validation: 0.203655
09/16 08:11:14 AM: edges-rel-semeval_f1: training: 0.363636 validation: 0.326588
09/16 08:11:14 AM: Global learning rate: 0.0001
09/16 08:11:14 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:14 AM: Update 734: task edges-rel-semeval, batch 34 (734): mcc: 0.4782, acc: 0.2868, precision: 0.8109, recall: 0.2996, f1: 0.4376, edges-rel-semeval_loss: 0.1184
09/16 08:11:16 AM: ***** Step 800 / Validation 8 *****
09/16 08:11:16 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:16 AM: Validating...
09/16 08:11:16 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:16 AM: Best result seen so far for macro.
09/16 08:11:16 AM: Updating LR scheduler:
09/16 08:11:16 AM: 	Best result seen so far for macro_avg: 0.368
09/16 08:11:16 AM: 	# validation passes without improvement: 0
09/16 08:11:16 AM: edges-rel-semeval_loss: training: 0.121177 validation: 0.121977
09/16 08:11:16 AM: macro_avg: validation: 0.367677
09/16 08:11:16 AM: micro_avg: validation: 0.000000
09/16 08:11:16 AM: edges-rel-semeval_mcc: training: 0.458671 validation: 0.425458
09/16 08:11:16 AM: edges-rel-semeval_acc: training: 0.272500 validation: 0.234987
09/16 08:11:16 AM: edges-rel-semeval_precision: training: 0.785408 validation: 0.812500
09/16 08:11:16 AM: edges-rel-semeval_recall: training: 0.285937 validation: 0.237598
09/16 08:11:16 AM: edges-rel-semeval_f1: training: 0.419244 validation: 0.367677
09/16 08:11:16 AM: Global learning rate: 0.0001
09/16 08:11:16 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:19 AM: ***** Step 900 / Validation 9 *****
09/16 08:11:19 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:19 AM: Validating...
09/16 08:11:19 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:19 AM: Best result seen so far for macro.
09/16 08:11:19 AM: Updating LR scheduler:
09/16 08:11:19 AM: 	Best result seen so far for macro_avg: 0.383
09/16 08:11:19 AM: 	# validation passes without improvement: 0
09/16 08:11:19 AM: edges-rel-semeval_loss: training: 0.115156 validation: 0.120203
09/16 08:11:19 AM: macro_avg: validation: 0.383091
09/16 08:11:19 AM: micro_avg: validation: 0.000000
09/16 08:11:19 AM: edges-rel-semeval_mcc: training: 0.465477 validation: 0.433239
09/16 08:11:19 AM: edges-rel-semeval_acc: training: 0.286030 validation: 0.248912
09/16 08:11:19 AM: edges-rel-semeval_precision: training: 0.765550 validation: 0.794521
09/16 08:11:19 AM: edges-rel-semeval_recall: training: 0.302744 validation: 0.252393
09/16 08:11:19 AM: edges-rel-semeval_f1: training: 0.433898 validation: 0.383091
09/16 08:11:19 AM: Global learning rate: 0.0001
09/16 08:11:19 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:21 AM: ***** Step 1000 / Validation 10 *****
09/16 08:11:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:21 AM: Validating...
09/16 08:11:21 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:21 AM: Best result seen so far for macro.
09/16 08:11:21 AM: Updating LR scheduler:
09/16 08:11:21 AM: 	Best result seen so far for macro_avg: 0.412
09/16 08:11:21 AM: 	# validation passes without improvement: 0
09/16 08:11:21 AM: edges-rel-semeval_loss: training: 0.109007 validation: 0.118580
09/16 08:11:21 AM: macro_avg: validation: 0.411613
09/16 08:11:21 AM: micro_avg: validation: 0.000000
09/16 08:11:21 AM: edges-rel-semeval_mcc: training: 0.520505 validation: 0.455090
09/16 08:11:21 AM: edges-rel-semeval_acc: training: 0.336562 validation: 0.271540
09/16 08:11:21 AM: edges-rel-semeval_precision: training: 0.804225 validation: 0.795511
09/16 08:11:21 AM: edges-rel-semeval_recall: training: 0.356875 validation: 0.277633
09/16 08:11:21 AM: edges-rel-semeval_f1: training: 0.494372 validation: 0.411613
09/16 08:11:21 AM: Global learning rate: 0.0001
09/16 08:11:21 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:24 AM: ***** Step 1100 / Validation 11 *****
09/16 08:11:24 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:24 AM: Validating...
09/16 08:11:24 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:24 AM: Best result seen so far for macro.
09/16 08:11:24 AM: Updating LR scheduler:
09/16 08:11:24 AM: 	Best result seen so far for macro_avg: 0.455
09/16 08:11:24 AM: 	# validation passes without improvement: 0
09/16 08:11:24 AM: edges-rel-semeval_loss: training: 0.107228 validation: 0.116507
09/16 08:11:24 AM: macro_avg: validation: 0.454713
09/16 08:11:24 AM: micro_avg: validation: 0.000000
09/16 08:11:24 AM: edges-rel-semeval_mcc: training: 0.524883 validation: 0.484265
09/16 08:11:24 AM: edges-rel-semeval_acc: training: 0.355408 validation: 0.308964
09/16 08:11:24 AM: edges-rel-semeval_precision: training: 0.780184 validation: 0.778481
09/16 08:11:24 AM: edges-rel-semeval_recall: training: 0.374961 validation: 0.321149
09/16 08:11:24 AM: edges-rel-semeval_f1: training: 0.506496 validation: 0.454713
09/16 08:11:24 AM: Global learning rate: 0.0001
09/16 08:11:24 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:24 AM: Update 1115: task edges-rel-semeval, batch 15 (1115): mcc: 0.6016, acc: 0.4354, precision: 0.8352, recall: 0.4542, f1: 0.5884, edges-rel-semeval_loss: 0.0977
09/16 08:11:26 AM: ***** Step 1200 / Validation 12 *****
09/16 08:11:26 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:26 AM: Validating...
09/16 08:11:26 AM: Updating LR scheduler:
09/16 08:11:26 AM: 	Best result seen so far for macro_avg: 0.455
09/16 08:11:26 AM: 	# validation passes without improvement: 1
09/16 08:11:26 AM: edges-rel-semeval_loss: training: 0.102389 validation: 0.115973
09/16 08:11:26 AM: macro_avg: validation: 0.437421
09/16 08:11:26 AM: micro_avg: validation: 0.000000
09/16 08:11:26 AM: edges-rel-semeval_mcc: training: 0.555755 validation: 0.475524
09/16 08:11:26 AM: edges-rel-semeval_acc: training: 0.380625 validation: 0.293299
09/16 08:11:26 AM: edges-rel-semeval_precision: training: 0.796117 validation: 0.799076
09/16 08:11:26 AM: edges-rel-semeval_recall: training: 0.410000 validation: 0.301131
09/16 08:11:26 AM: edges-rel-semeval_f1: training: 0.541254 validation: 0.437421
09/16 08:11:26 AM: Global learning rate: 0.0001
09/16 08:11:26 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:29 AM: ***** Step 1300 / Validation 13 *****
09/16 08:11:29 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:29 AM: Validating...
09/16 08:11:29 AM: Updating LR scheduler:
09/16 08:11:29 AM: 	Best result seen so far for macro_avg: 0.455
09/16 08:11:29 AM: 	# validation passes without improvement: 2
09/16 08:11:29 AM: edges-rel-semeval_loss: training: 0.099751 validation: 0.114828
09/16 08:11:29 AM: macro_avg: validation: 0.442767
09/16 08:11:29 AM: micro_avg: validation: 0.000000
09/16 08:11:29 AM: edges-rel-semeval_mcc: training: 0.553513 validation: 0.479414
09/16 08:11:29 AM: edges-rel-semeval_acc: training: 0.383475 validation: 0.296780
09/16 08:11:29 AM: edges-rel-semeval_precision: training: 0.783751 validation: 0.798186
09/16 08:11:29 AM: edges-rel-semeval_recall: training: 0.413750 validation: 0.306353
09/16 08:11:29 AM: edges-rel-semeval_f1: training: 0.541589 validation: 0.442767
09/16 08:11:29 AM: Global learning rate: 0.0001
09/16 08:11:29 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:31 AM: ***** Step 1400 / Validation 14 *****
09/16 08:11:31 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:31 AM: Validating...
09/16 08:11:32 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:32 AM: Best result seen so far for macro.
09/16 08:11:32 AM: Updating LR scheduler:
09/16 08:11:32 AM: 	Best result seen so far for macro_avg: 0.472
09/16 08:11:32 AM: 	# validation passes without improvement: 0
09/16 08:11:32 AM: edges-rel-semeval_loss: training: 0.095398 validation: 0.114028
09/16 08:11:32 AM: macro_avg: validation: 0.471653
09/16 08:11:32 AM: micro_avg: validation: 0.000000
09/16 08:11:32 AM: edges-rel-semeval_mcc: training: 0.587611 validation: 0.495105
09/16 08:11:32 AM: edges-rel-semeval_acc: training: 0.415938 validation: 0.329852
09/16 08:11:32 AM: edges-rel-semeval_precision: training: 0.812145 validation: 0.768173
09/16 08:11:32 AM: edges-rel-semeval_recall: training: 0.447188 validation: 0.340296
09/16 08:11:32 AM: edges-rel-semeval_f1: training: 0.576784 validation: 0.471653
09/16 08:11:32 AM: Global learning rate: 0.0001
09/16 08:11:32 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:34 AM: ***** Step 1500 / Validation 15 *****
09/16 08:11:34 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:34 AM: Validating...
09/16 08:11:34 AM: Updating LR scheduler:
09/16 08:11:34 AM: 	Best result seen so far for macro_avg: 0.472
09/16 08:11:34 AM: 	# validation passes without improvement: 1
09/16 08:11:34 AM: edges-rel-semeval_loss: training: 0.097454 validation: 0.113213
09/16 08:11:34 AM: macro_avg: validation: 0.462107
09/16 08:11:34 AM: micro_avg: validation: 0.000000
09/16 08:11:34 AM: edges-rel-semeval_mcc: training: 0.579569 validation: 0.492710
09/16 08:11:34 AM: edges-rel-semeval_acc: training: 0.415938 validation: 0.316797
09/16 08:11:34 AM: edges-rel-semeval_precision: training: 0.793774 validation: 0.791139
09/16 08:11:34 AM: edges-rel-semeval_recall: training: 0.446250 validation: 0.326371
09/16 08:11:34 AM: edges-rel-semeval_f1: training: 0.571314 validation: 0.462107
09/16 08:11:34 AM: Global learning rate: 0.0001
09/16 08:11:34 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:35 AM: Update 1506: task edges-rel-semeval, batch 6 (1506): mcc: 0.6183, acc: 0.4479, precision: 0.8462, recall: 0.4724, f1: 0.6063, edges-rel-semeval_loss: 0.0850
09/16 08:11:37 AM: ***** Step 1600 / Validation 16 *****
09/16 08:11:37 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:37 AM: Validating...
09/16 08:11:37 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:37 AM: Best result seen so far for macro.
09/16 08:11:37 AM: Updating LR scheduler:
09/16 08:11:37 AM: 	Best result seen so far for macro_avg: 0.487
09/16 08:11:37 AM: 	# validation passes without improvement: 0
09/16 08:11:37 AM: edges-rel-semeval_loss: training: 0.089297 validation: 0.113086
09/16 08:11:37 AM: macro_avg: validation: 0.486804
09/16 08:11:37 AM: micro_avg: validation: 0.000000
09/16 08:11:37 AM: edges-rel-semeval_mcc: training: 0.613387 validation: 0.502269
09/16 08:11:37 AM: edges-rel-semeval_acc: training: 0.445285 validation: 0.348129
09/16 08:11:37 AM: edges-rel-semeval_precision: training: 0.820679 validation: 0.746403
09/16 08:11:37 AM: edges-rel-semeval_recall: training: 0.480605 validation: 0.361184
09/16 08:11:37 AM: edges-rel-semeval_f1: training: 0.606205 validation: 0.486804
09/16 08:11:37 AM: Global learning rate: 0.0001
09/16 08:11:37 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:39 AM: ***** Step 1700 / Validation 17 *****
09/16 08:11:39 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:39 AM: Validating...
09/16 08:11:40 AM: Updating LR scheduler:
09/16 08:11:40 AM: 	Best result seen so far for macro_avg: 0.487
09/16 08:11:40 AM: 	# validation passes without improvement: 1
09/16 08:11:40 AM: edges-rel-semeval_loss: training: 0.091758 validation: 0.114007
09/16 08:11:40 AM: macro_avg: validation: 0.460134
09/16 08:11:40 AM: micro_avg: validation: 0.000000
09/16 08:11:40 AM: edges-rel-semeval_mcc: training: 0.608853 validation: 0.485545
09/16 08:11:40 AM: edges-rel-semeval_acc: training: 0.454062 validation: 0.321149
09/16 08:11:40 AM: edges-rel-semeval_precision: training: 0.802897 validation: 0.765182
09/16 08:11:40 AM: edges-rel-semeval_recall: training: 0.485000 validation: 0.328982
09/16 08:11:40 AM: edges-rel-semeval_f1: training: 0.604715 validation: 0.460134
09/16 08:11:40 AM: Global learning rate: 0.0001
09/16 08:11:40 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:42 AM: ***** Step 1800 / Validation 18 *****
09/16 08:11:42 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:42 AM: Validating...
09/16 08:11:43 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:43 AM: Best result seen so far for macro.
09/16 08:11:43 AM: Updating LR scheduler:
09/16 08:11:43 AM: 	Best result seen so far for macro_avg: 0.496
09/16 08:11:43 AM: 	# validation passes without improvement: 0
09/16 08:11:43 AM: edges-rel-semeval_loss: training: 0.086265 validation: 0.113376
09/16 08:11:43 AM: macro_avg: validation: 0.495637
09/16 08:11:43 AM: micro_avg: validation: 0.000000
09/16 08:11:43 AM: edges-rel-semeval_mcc: training: 0.641514 validation: 0.509429
09/16 08:11:43 AM: edges-rel-semeval_acc: training: 0.487228 validation: 0.357702
09/16 08:11:43 AM: edges-rel-semeval_precision: training: 0.828715 validation: 0.747368
09/16 08:11:43 AM: edges-rel-semeval_recall: training: 0.518764 validation: 0.370757
09/16 08:11:43 AM: edges-rel-semeval_f1: training: 0.638092 validation: 0.495637
09/16 08:11:43 AM: Global learning rate: 0.0001
09/16 08:11:43 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:45 AM: ***** Step 1900 / Validation 19 *****
09/16 08:11:45 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:45 AM: Validating...
09/16 08:11:45 AM: Evaluate: task edges-rel-semeval, batch 7 (36): mcc: 0.5735, acc: 0.4152, precision: 0.8246, recall: 0.4196, f1: 0.5562, edges-rel-semeval_loss: 0.0997
09/16 08:11:45 AM: Updating LR scheduler:
09/16 08:11:45 AM: 	Best result seen so far for macro_avg: 0.496
09/16 08:11:45 AM: 	# validation passes without improvement: 1
09/16 08:11:45 AM: edges-rel-semeval_loss: training: 0.087828 validation: 0.113353
09/16 08:11:45 AM: macro_avg: validation: 0.479952
09/16 08:11:45 AM: micro_avg: validation: 0.000000
09/16 08:11:45 AM: edges-rel-semeval_mcc: training: 0.620237 validation: 0.501559
09/16 08:11:45 AM: edges-rel-semeval_acc: training: 0.460313 validation: 0.339426
09/16 08:11:45 AM: edges-rel-semeval_precision: training: 0.797637 validation: 0.768199
09/16 08:11:45 AM: edges-rel-semeval_recall: training: 0.506250 validation: 0.348999
09/16 08:11:45 AM: edges-rel-semeval_f1: training: 0.619384 validation: 0.479952
09/16 08:11:45 AM: Global learning rate: 0.0001
09/16 08:11:45 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:48 AM: ***** Step 2000 / Validation 20 *****
09/16 08:11:48 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:48 AM: Validating...
09/16 08:11:49 AM: Best result seen so far for edges-rel-semeval.
09/16 08:11:49 AM: Best result seen so far for macro.
09/16 08:11:49 AM: Updating LR scheduler:
09/16 08:11:49 AM: 	Best result seen so far for macro_avg: 0.499
09/16 08:11:49 AM: 	# validation passes without improvement: 0
09/16 08:11:49 AM: edges-rel-semeval_loss: training: 0.082129 validation: 0.113866
09/16 08:11:49 AM: macro_avg: validation: 0.499127
09/16 08:11:49 AM: micro_avg: validation: 0.000000
09/16 08:11:49 AM: edges-rel-semeval_mcc: training: 0.663531 validation: 0.513288
09/16 08:11:49 AM: edges-rel-semeval_acc: training: 0.510249 validation: 0.359443
09/16 08:11:49 AM: edges-rel-semeval_precision: training: 0.841285 validation: 0.752632
09/16 08:11:49 AM: edges-rel-semeval_recall: training: 0.544939 validation: 0.373368
09/16 08:11:49 AM: edges-rel-semeval_f1: training: 0.661435 validation: 0.499127
09/16 08:11:49 AM: Global learning rate: 0.0001
09/16 08:11:49 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:50 AM: ***** Step 2100 / Validation 21 *****
09/16 08:11:50 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:50 AM: Validating...
09/16 08:11:51 AM: Updating LR scheduler:
09/16 08:11:51 AM: 	Best result seen so far for macro_avg: 0.499
09/16 08:11:51 AM: 	# validation passes without improvement: 1
09/16 08:11:51 AM: edges-rel-semeval_loss: training: 0.082833 validation: 0.114107
09/16 08:11:51 AM: macro_avg: validation: 0.488067
09/16 08:11:51 AM: micro_avg: validation: 0.000000
09/16 08:11:51 AM: edges-rel-semeval_mcc: training: 0.648864 validation: 0.509573
09/16 08:11:51 AM: edges-rel-semeval_acc: training: 0.500313 validation: 0.344648
09/16 08:11:51 AM: edges-rel-semeval_precision: training: 0.809015 validation: 0.776091
09/16 08:11:51 AM: edges-rel-semeval_recall: training: 0.544062 validation: 0.355962
09/16 08:11:51 AM: edges-rel-semeval_f1: training: 0.650598 validation: 0.488067
09/16 08:11:51 AM: Global learning rate: 0.0001
09/16 08:11:51 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:53 AM: ***** Step 2200 / Validation 22 *****
09/16 08:11:53 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:53 AM: Validating...
09/16 08:11:54 AM: Updating LR scheduler:
09/16 08:11:54 AM: 	Best result seen so far for macro_avg: 0.499
09/16 08:11:54 AM: 	# validation passes without improvement: 2
09/16 08:11:54 AM: edges-rel-semeval_loss: training: 0.080491 validation: 0.114245
09/16 08:11:54 AM: macro_avg: validation: 0.494725
09/16 08:11:54 AM: micro_avg: validation: 0.000000
09/16 08:11:54 AM: edges-rel-semeval_mcc: training: 0.658679 validation: 0.510868
09/16 08:11:54 AM: edges-rel-semeval_acc: training: 0.510880 validation: 0.353351
09/16 08:11:54 AM: edges-rel-semeval_precision: training: 0.817209 validation: 0.757630
09/16 08:11:54 AM: edges-rel-semeval_recall: training: 0.554084 validation: 0.367276
09/16 08:11:54 AM: edges-rel-semeval_f1: training: 0.660402 validation: 0.494725
09/16 08:11:54 AM: Global learning rate: 0.0001
09/16 08:11:54 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:55 AM: Update 2281: task edges-rel-semeval, batch 81 (2281): mcc: 0.6638, acc: 0.5150, precision: 0.8263, recall: 0.5559, f1: 0.6647, edges-rel-semeval_loss: 0.0791
09/16 08:11:55 AM: ***** Step 2300 / Validation 23 *****
09/16 08:11:55 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:55 AM: Validating...
09/16 08:11:56 AM: Updating LR scheduler:
09/16 08:11:56 AM: 	Best result seen so far for macro_avg: 0.499
09/16 08:11:56 AM: 	# validation passes without improvement: 3
09/16 08:11:56 AM: edges-rel-semeval_loss: training: 0.079981 validation: 0.115515
09/16 08:11:56 AM: macro_avg: validation: 0.494749
09/16 08:11:56 AM: micro_avg: validation: 0.000000
09/16 08:11:56 AM: edges-rel-semeval_mcc: training: 0.657174 validation: 0.509374
09/16 08:11:56 AM: edges-rel-semeval_acc: training: 0.506875 validation: 0.354221
09/16 08:11:56 AM: edges-rel-semeval_precision: training: 0.815583 validation: 0.750443
09/16 08:11:56 AM: edges-rel-semeval_recall: training: 0.552813 validation: 0.369017
09/16 08:11:56 AM: edges-rel-semeval_f1: training: 0.658968 validation: 0.494749
09/16 08:11:56 AM: Global learning rate: 0.0001
09/16 08:11:56 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:11:58 AM: ***** Step 2400 / Validation 24 *****
09/16 08:11:58 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:11:58 AM: Validating...
09/16 08:11:59 AM: Updating LR scheduler:
09/16 08:11:59 AM: 	Best result seen so far for macro_avg: 0.499
09/16 08:11:59 AM: 	# validation passes without improvement: 0
09/16 08:11:59 AM: edges-rel-semeval_loss: training: 0.076367 validation: 0.114803
09/16 08:11:59 AM: macro_avg: validation: 0.492035
09/16 08:11:59 AM: micro_avg: validation: 0.000000
09/16 08:11:59 AM: edges-rel-semeval_mcc: training: 0.678357 validation: 0.510047
09/16 08:11:59 AM: edges-rel-semeval_acc: training: 0.532324 validation: 0.352480
09/16 08:11:59 AM: edges-rel-semeval_precision: training: 0.823293 validation: 0.763736
09/16 08:11:59 AM: edges-rel-semeval_recall: training: 0.581835 validation: 0.362924
09/16 08:11:59 AM: edges-rel-semeval_f1: training: 0.681818 validation: 0.492035
09/16 08:11:59 AM: Global learning rate: 5e-05
09/16 08:11:59 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:01 AM: ***** Step 2500 / Validation 25 *****
09/16 08:12:01 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:01 AM: Validating...
09/16 08:12:01 AM: Best result seen so far for edges-rel-semeval.
09/16 08:12:01 AM: Best result seen so far for macro.
09/16 08:12:01 AM: Updating LR scheduler:
09/16 08:12:01 AM: 	Best result seen so far for macro_avg: 0.502
09/16 08:12:01 AM: 	# validation passes without improvement: 0
09/16 08:12:01 AM: edges-rel-semeval_loss: training: 0.075092 validation: 0.113751
09/16 08:12:01 AM: macro_avg: validation: 0.502315
09/16 08:12:01 AM: micro_avg: validation: 0.000000
09/16 08:12:01 AM: edges-rel-semeval_mcc: training: 0.689831 validation: 0.515169
09/16 08:12:01 AM: edges-rel-semeval_acc: training: 0.548438 validation: 0.366406
09/16 08:12:01 AM: edges-rel-semeval_precision: training: 0.836058 validation: 0.749568
09/16 08:12:01 AM: edges-rel-semeval_recall: training: 0.591250 validation: 0.377720
09/16 08:12:01 AM: edges-rel-semeval_f1: training: 0.692660 validation: 0.502315
09/16 08:12:01 AM: Global learning rate: 5e-05
09/16 08:12:01 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:03 AM: ***** Step 2600 / Validation 26 *****
09/16 08:12:03 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:03 AM: Validating...
09/16 08:12:04 AM: Updating LR scheduler:
09/16 08:12:04 AM: 	Best result seen so far for macro_avg: 0.502
09/16 08:12:04 AM: 	# validation passes without improvement: 1
09/16 08:12:04 AM: edges-rel-semeval_loss: training: 0.075487 validation: 0.115204
09/16 08:12:04 AM: macro_avg: validation: 0.497964
09/16 08:12:04 AM: micro_avg: validation: 0.000000
09/16 08:12:04 AM: edges-rel-semeval_mcc: training: 0.687519 validation: 0.512001
09/16 08:12:04 AM: edges-rel-semeval_acc: training: 0.542416 validation: 0.360313
09/16 08:12:04 AM: edges-rel-semeval_precision: training: 0.829214 validation: 0.750877
09/16 08:12:04 AM: edges-rel-semeval_recall: training: 0.592558 validation: 0.372498
09/16 08:12:04 AM: edges-rel-semeval_f1: training: 0.691190 validation: 0.497964
09/16 08:12:04 AM: Global learning rate: 5e-05
09/16 08:12:04 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:05 AM: Update 2674: task edges-rel-semeval, batch 74 (2674): mcc: 0.7083, acc: 0.5667, precision: 0.8494, recall: 0.6119, f1: 0.7113, edges-rel-semeval_loss: 0.0717
09/16 08:12:06 AM: ***** Step 2700 / Validation 27 *****
09/16 08:12:06 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:06 AM: Validating...
09/16 08:12:06 AM: Best result seen so far for edges-rel-semeval.
09/16 08:12:06 AM: Best result seen so far for macro.
09/16 08:12:06 AM: Updating LR scheduler:
09/16 08:12:06 AM: 	Best result seen so far for macro_avg: 0.503
09/16 08:12:06 AM: 	# validation passes without improvement: 0
09/16 08:12:06 AM: edges-rel-semeval_loss: training: 0.072310 validation: 0.114689
09/16 08:12:06 AM: macro_avg: validation: 0.502883
09/16 08:12:06 AM: micro_avg: validation: 0.000000
09/16 08:12:06 AM: edges-rel-semeval_mcc: training: 0.705092 validation: 0.514732
09/16 08:12:06 AM: edges-rel-semeval_acc: training: 0.563125 validation: 0.367276
09/16 08:12:06 AM: edges-rel-semeval_precision: training: 0.848472 validation: 0.745299
09/16 08:12:06 AM: edges-rel-semeval_recall: training: 0.607188 validation: 0.379460
09/16 08:12:06 AM: edges-rel-semeval_f1: training: 0.707832 validation: 0.502883
09/16 08:12:06 AM: Global learning rate: 5e-05
09/16 08:12:06 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:09 AM: ***** Step 2800 / Validation 28 *****
09/16 08:12:09 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:09 AM: Validating...
09/16 08:12:09 AM: Updating LR scheduler:
09/16 08:12:09 AM: 	Best result seen so far for macro_avg: 0.503
09/16 08:12:09 AM: 	# validation passes without improvement: 1
09/16 08:12:09 AM: edges-rel-semeval_loss: training: 0.073701 validation: 0.115225
09/16 08:12:09 AM: macro_avg: validation: 0.499713
09/16 08:12:09 AM: micro_avg: validation: 0.000000
09/16 08:12:09 AM: edges-rel-semeval_mcc: training: 0.685930 validation: 0.510036
09/16 08:12:09 AM: edges-rel-semeval_acc: training: 0.541785 validation: 0.364665
09/16 08:12:09 AM: edges-rel-semeval_precision: training: 0.832440 validation: 0.734797
09/16 08:12:09 AM: edges-rel-semeval_recall: training: 0.587512 validation: 0.378590
09/16 08:12:09 AM: edges-rel-semeval_f1: training: 0.688852 validation: 0.499713
09/16 08:12:09 AM: Global learning rate: 5e-05
09/16 08:12:09 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:11 AM: ***** Step 2900 / Validation 29 *****
09/16 08:12:11 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:11 AM: Validating...
09/16 08:12:12 AM: Best result seen so far for edges-rel-semeval.
09/16 08:12:12 AM: Best result seen so far for macro.
09/16 08:12:12 AM: Updating LR scheduler:
09/16 08:12:12 AM: 	Best result seen so far for macro_avg: 0.503
09/16 08:12:12 AM: 	# validation passes without improvement: 0
09/16 08:12:12 AM: edges-rel-semeval_loss: training: 0.070348 validation: 0.115541
09/16 08:12:12 AM: macro_avg: validation: 0.503181
09/16 08:12:12 AM: micro_avg: validation: 0.000000
09/16 08:12:12 AM: edges-rel-semeval_mcc: training: 0.715306 validation: 0.515946
09/16 08:12:12 AM: edges-rel-semeval_acc: training: 0.580000 validation: 0.367276
09/16 08:12:12 AM: edges-rel-semeval_precision: training: 0.851519 validation: 0.750000
09/16 08:12:12 AM: edges-rel-semeval_recall: training: 0.621875 validation: 0.378590
09/16 08:12:12 AM: edges-rel-semeval_f1: training: 0.718801 validation: 0.503181
09/16 08:12:12 AM: Global learning rate: 5e-05
09/16 08:12:12 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:14 AM: ***** Step 3000 / Validation 30 *****
09/16 08:12:14 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:14 AM: Validating...
09/16 08:12:14 AM: Best result seen so far for edges-rel-semeval.
09/16 08:12:14 AM: Best result seen so far for macro.
09/16 08:12:14 AM: Updating LR scheduler:
09/16 08:12:14 AM: 	Best result seen so far for macro_avg: 0.520
09/16 08:12:14 AM: 	# validation passes without improvement: 0
09/16 08:12:14 AM: edges-rel-semeval_loss: training: 0.071763 validation: 0.114408
09/16 08:12:14 AM: macro_avg: validation: 0.519799
09/16 08:12:14 AM: micro_avg: validation: 0.000000
09/16 08:12:14 AM: edges-rel-semeval_mcc: training: 0.706066 validation: 0.523877
09/16 08:12:14 AM: edges-rel-semeval_acc: training: 0.561875 validation: 0.383812
09/16 08:12:14 AM: edges-rel-semeval_precision: training: 0.842784 validation: 0.723602
09/16 08:12:14 AM: edges-rel-semeval_recall: training: 0.613125 validation: 0.405570
09/16 08:12:14 AM: edges-rel-semeval_f1: training: 0.709841 validation: 0.519799
09/16 08:12:14 AM: Global learning rate: 5e-05
09/16 08:12:14 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:15 AM: Update 3011: task edges-rel-semeval, batch 11 (3011): mcc: 0.6952, acc: 0.5573, precision: 0.8156, recall: 0.6161, f1: 0.7019, edges-rel-semeval_loss: 0.0732
09/16 08:12:17 AM: ***** Step 3100 / Validation 31 *****
09/16 08:12:17 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:17 AM: Validating...
09/16 08:12:17 AM: Updating LR scheduler:
09/16 08:12:17 AM: 	Best result seen so far for macro_avg: 0.520
09/16 08:12:17 AM: 	# validation passes without improvement: 1
09/16 08:12:17 AM: edges-rel-semeval_loss: training: 0.069044 validation: 0.115816
09/16 08:12:17 AM: macro_avg: validation: 0.507345
09/16 08:12:17 AM: micro_avg: validation: 0.000000
09/16 08:12:17 AM: edges-rel-semeval_mcc: training: 0.724043 validation: 0.513717
09/16 08:12:17 AM: edges-rel-semeval_acc: training: 0.584358 validation: 0.370757
09/16 08:12:17 AM: edges-rel-semeval_precision: training: 0.852134 validation: 0.723027
09/16 08:12:17 AM: edges-rel-semeval_recall: training: 0.636077 validation: 0.390775
09/16 08:12:17 AM: edges-rel-semeval_f1: training: 0.728422 validation: 0.507345
09/16 08:12:17 AM: Global learning rate: 5e-05
09/16 08:12:17 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:19 AM: ***** Step 3200 / Validation 32 *****
09/16 08:12:19 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:19 AM: Validating...
09/16 08:12:20 AM: Updating LR scheduler:
09/16 08:12:20 AM: 	Best result seen so far for macro_avg: 0.520
09/16 08:12:20 AM: 	# validation passes without improvement: 2
09/16 08:12:20 AM: edges-rel-semeval_loss: training: 0.069493 validation: 0.115674
09/16 08:12:20 AM: macro_avg: validation: 0.509938
09/16 08:12:20 AM: micro_avg: validation: 0.000000
09/16 08:12:20 AM: edges-rel-semeval_mcc: training: 0.713359 validation: 0.517960
09/16 08:12:20 AM: edges-rel-semeval_acc: training: 0.577812 validation: 0.370757
09/16 08:12:20 AM: edges-rel-semeval_precision: training: 0.839248 validation: 0.733660
09/16 08:12:20 AM: edges-rel-semeval_recall: training: 0.628125 validation: 0.390775
09/16 08:12:20 AM: edges-rel-semeval_f1: training: 0.718499 validation: 0.509938
09/16 08:12:20 AM: Global learning rate: 5e-05
09/16 08:12:20 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:22 AM: ***** Step 3300 / Validation 33 *****
09/16 08:12:22 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:22 AM: Validating...
09/16 08:12:23 AM: Updating LR scheduler:
09/16 08:12:23 AM: 	Best result seen so far for macro_avg: 0.520
09/16 08:12:23 AM: 	# validation passes without improvement: 3
09/16 08:12:23 AM: edges-rel-semeval_loss: training: 0.068099 validation: 0.116554
09/16 08:12:23 AM: macro_avg: validation: 0.509670
09/16 08:12:23 AM: micro_avg: validation: 0.000000
09/16 08:12:23 AM: edges-rel-semeval_mcc: training: 0.725143 validation: 0.518148
09/16 08:12:23 AM: edges-rel-semeval_acc: training: 0.591296 validation: 0.371628
09/16 08:12:23 AM: edges-rel-semeval_precision: training: 0.845707 validation: 0.735632
09/16 08:12:23 AM: edges-rel-semeval_recall: training: 0.643015 validation: 0.389904
09/16 08:12:23 AM: edges-rel-semeval_f1: training: 0.730563 validation: 0.509670
09/16 08:12:23 AM: Global learning rate: 5e-05
09/16 08:12:23 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:25 AM: ***** Step 3400 / Validation 34 *****
09/16 08:12:25 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:25 AM: Validating...
09/16 08:12:25 AM: Updating LR scheduler:
09/16 08:12:25 AM: 	Best result seen so far for macro_avg: 0.520
09/16 08:12:25 AM: 	# validation passes without improvement: 0
09/16 08:12:25 AM: edges-rel-semeval_loss: training: 0.067754 validation: 0.116972
09/16 08:12:25 AM: macro_avg: validation: 0.503448
09/16 08:12:25 AM: micro_avg: validation: 0.000000
09/16 08:12:25 AM: edges-rel-semeval_mcc: training: 0.725402 validation: 0.514314
09/16 08:12:25 AM: edges-rel-semeval_acc: training: 0.593437 validation: 0.366406
09/16 08:12:25 AM: edges-rel-semeval_precision: training: 0.854446 validation: 0.741117
09/16 08:12:25 AM: edges-rel-semeval_recall: training: 0.636563 validation: 0.381201
09/16 08:12:25 AM: edges-rel-semeval_f1: training: 0.729585 validation: 0.503448
09/16 08:12:25 AM: Global learning rate: 2.5e-05
09/16 08:12:25 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:25 AM: Update 3413: task edges-rel-semeval, batch 13 (3413): mcc: 0.6710, acc: 0.5192, precision: 0.8136, recall: 0.5769, f1: 0.6751, edges-rel-semeval_loss: 0.0738
09/16 08:12:28 AM: ***** Step 3500 / Validation 35 *****
09/16 08:12:28 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:28 AM: Validating...
09/16 08:12:28 AM: Updating LR scheduler:
09/16 08:12:28 AM: 	Best result seen so far for macro_avg: 0.520
09/16 08:12:28 AM: 	# validation passes without improvement: 1
09/16 08:12:28 AM: edges-rel-semeval_loss: training: 0.067418 validation: 0.116158
09/16 08:12:28 AM: macro_avg: validation: 0.506243
09/16 08:12:28 AM: micro_avg: validation: 0.000000
09/16 08:12:28 AM: edges-rel-semeval_mcc: training: 0.728708 validation: 0.513759
09/16 08:12:28 AM: edges-rel-semeval_acc: training: 0.594450 validation: 0.371628
09/16 08:12:28 AM: edges-rel-semeval_precision: training: 0.852548 validation: 0.727569
09/16 08:12:28 AM: edges-rel-semeval_recall: training: 0.643646 validation: 0.388164
09/16 08:12:28 AM: edges-rel-semeval_f1: training: 0.733513 validation: 0.506243
09/16 08:12:28 AM: Global learning rate: 2.5e-05
09/16 08:12:28 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:30 AM: ***** Step 3600 / Validation 36 *****
09/16 08:12:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:30 AM: Validating...
09/16 08:12:31 AM: Updating LR scheduler:
09/16 08:12:31 AM: 	Best result seen so far for macro_avg: 0.520
09/16 08:12:31 AM: 	# validation passes without improvement: 2
09/16 08:12:31 AM: edges-rel-semeval_loss: training: 0.066433 validation: 0.116731
09/16 08:12:31 AM: macro_avg: validation: 0.503417
09/16 08:12:31 AM: micro_avg: validation: 0.000000
09/16 08:12:31 AM: edges-rel-semeval_mcc: training: 0.731294 validation: 0.511622
09/16 08:12:31 AM: edges-rel-semeval_acc: training: 0.595938 validation: 0.369017
09/16 08:12:31 AM: edges-rel-semeval_precision: training: 0.857976 validation: 0.728171
09/16 08:12:31 AM: edges-rel-semeval_recall: training: 0.643750 validation: 0.384682
09/16 08:12:31 AM: edges-rel-semeval_f1: training: 0.735583 validation: 0.503417
09/16 08:12:31 AM: Global learning rate: 2.5e-05
09/16 08:12:31 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:34 AM: ***** Step 3700 / Validation 37 *****
09/16 08:12:34 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:34 AM: Validating...
09/16 08:12:34 AM: Updating LR scheduler:
09/16 08:12:34 AM: 	Best result seen so far for macro_avg: 0.520
09/16 08:12:34 AM: 	# validation passes without improvement: 3
09/16 08:12:34 AM: edges-rel-semeval_loss: training: 0.065874 validation: 0.116583
09/16 08:12:34 AM: macro_avg: validation: 0.502564
09/16 08:12:34 AM: micro_avg: validation: 0.000000
09/16 08:12:34 AM: edges-rel-semeval_mcc: training: 0.735289 validation: 0.510849
09/16 08:12:34 AM: edges-rel-semeval_acc: training: 0.601703 validation: 0.367276
09/16 08:12:34 AM: edges-rel-semeval_precision: training: 0.857499 validation: 0.727723
09/16 08:12:34 AM: edges-rel-semeval_recall: training: 0.650899 validation: 0.383812
09/16 08:12:34 AM: edges-rel-semeval_f1: training: 0.740050 validation: 0.502564
09/16 08:12:34 AM: Global learning rate: 2.5e-05
09/16 08:12:34 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:35 AM: Update 3728: task edges-rel-semeval, batch 28 (3728): mcc: 0.7333, acc: 0.5982, precision: 0.8536, recall: 0.6507, f1: 0.7384, edges-rel-semeval_loss: 0.0648
09/16 08:12:37 AM: ***** Step 3800 / Validation 38 *****
09/16 08:12:37 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:37 AM: Validating...
09/16 08:12:37 AM: Updating LR scheduler:
09/16 08:12:37 AM: 	Best result seen so far for macro_avg: 0.520
09/16 08:12:37 AM: 	# validation passes without improvement: 0
09/16 08:12:37 AM: edges-rel-semeval_loss: training: 0.065352 validation: 0.116747
09/16 08:12:37 AM: macro_avg: validation: 0.506286
09/16 08:12:37 AM: micro_avg: validation: 0.000000
09/16 08:12:37 AM: edges-rel-semeval_mcc: training: 0.732031 validation: 0.515746
09/16 08:12:37 AM: edges-rel-semeval_acc: training: 0.600938 validation: 0.371628
09/16 08:12:37 AM: edges-rel-semeval_precision: training: 0.848153 validation: 0.737105
09/16 08:12:37 AM: edges-rel-semeval_recall: training: 0.652812 validation: 0.385553
09/16 08:12:37 AM: edges-rel-semeval_f1: training: 0.737772 validation: 0.506286
09/16 08:12:37 AM: Global learning rate: 1.25e-05
09/16 08:12:37 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:40 AM: ***** Step 3900 / Validation 39 *****
09/16 08:12:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:40 AM: Validating...
09/16 08:12:41 AM: Updating LR scheduler:
09/16 08:12:41 AM: 	Best result seen so far for macro_avg: 0.520
09/16 08:12:41 AM: 	# validation passes without improvement: 1
09/16 08:12:41 AM: edges-rel-semeval_loss: training: 0.064471 validation: 0.116165
09/16 08:12:41 AM: macro_avg: validation: 0.513195
09/16 08:12:41 AM: micro_avg: validation: 0.000000
09/16 08:12:41 AM: edges-rel-semeval_mcc: training: 0.739995 validation: 0.518439
09/16 08:12:41 AM: edges-rel-semeval_acc: training: 0.608641 validation: 0.378590
09/16 08:12:41 AM: edges-rel-semeval_precision: training: 0.860033 validation: 0.723101
09/16 08:12:41 AM: edges-rel-semeval_recall: training: 0.656891 validation: 0.397737
09/16 08:12:41 AM: edges-rel-semeval_f1: training: 0.744860 validation: 0.513195
09/16 08:12:41 AM: Global learning rate: 1.25e-05
09/16 08:12:41 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:43 AM: ***** Step 4000 / Validation 40 *****
09/16 08:12:43 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 08:12:43 AM: Validating...
09/16 08:12:43 AM: Updating LR scheduler:
09/16 08:12:43 AM: 	Best result seen so far for macro_avg: 0.520
09/16 08:12:43 AM: 	# validation passes without improvement: 2
09/16 08:12:43 AM: Ran out of early stopping patience. Stopping training.
09/16 08:12:43 AM: edges-rel-semeval_loss: training: 0.063805 validation: 0.116887
09/16 08:12:43 AM: macro_avg: validation: 0.508571
09/16 08:12:43 AM: micro_avg: validation: 0.000000
09/16 08:12:43 AM: edges-rel-semeval_mcc: training: 0.747492 validation: 0.518254
09/16 08:12:43 AM: edges-rel-semeval_acc: training: 0.616250 validation: 0.372498
09/16 08:12:43 AM: edges-rel-semeval_precision: training: 0.862389 validation: 0.740433
09/16 08:12:43 AM: edges-rel-semeval_recall: training: 0.667813 validation: 0.387293
09/16 08:12:43 AM: edges-rel-semeval_f1: training: 0.752730 validation: 0.508571
09/16 08:12:43 AM: Global learning rate: 1.25e-05
09/16 08:12:43 AM: Saving checkpoints to: ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:43 AM: Stopped training after 40 validation checks
09/16 08:12:43 AM: Trained edges-rel-semeval for 4000 batches or 18.605 epochs
09/16 08:12:43 AM: ***** VALIDATION RESULTS *****
09/16 08:12:43 AM: edges-rel-semeval_f1 (for best val pass 30): edges-rel-semeval_loss: 0.11441, macro_avg: 0.51980, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.52388, edges-rel-semeval_acc: 0.38381, edges-rel-semeval_precision: 0.72360, edges-rel-semeval_recall: 0.40557, edges-rel-semeval_f1: 0.51980
09/16 08:12:43 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.18745, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 08:12:43 AM: macro_avg (for best val pass 30): edges-rel-semeval_loss: 0.11441, macro_avg: 0.51980, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.52388, edges-rel-semeval_acc: 0.38381, edges-rel-semeval_precision: 0.72360, edges-rel-semeval_recall: 0.40557, edges-rel-semeval_f1: 0.51980
09/16 08:12:43 AM: Evaluating...
09/16 08:12:43 AM: Loaded model state from ./experiments/rel-semeval-hotpot-only/run/edges-rel-semeval/model_state_target_train_val_30.best.th
09/16 08:12:43 AM: Evaluating on: edges-rel-semeval, split: val
09/16 08:12:44 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:12:44 AM: Finished evaluating on: edges-rel-semeval
09/16 08:12:44 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 08:12:44 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:44 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:44 AM: Evaluating on: edges-rel-semeval, split: test
09/16 08:12:45 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 08:12:45 AM: Finished evaluating on: edges-rel-semeval
09/16 08:12:45 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 08:12:45 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:45 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-hotpot-only/run
09/16 08:12:45 AM: Writing results for split 'val' to ./experiments/rel-semeval-hotpot-only/results.tsv
09/16 08:12:45 AM: micro_avg: 0.000, macro_avg: 0.520, edges-rel-semeval_mcc: 0.524, edges-rel-semeval_acc: 0.384, edges-rel-semeval_precision: 0.724, edges-rel-semeval_recall: 0.406, edges-rel-semeval_f1: 0.520
09/16 08:12:45 AM: Done!
09/16 08:12:45 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
