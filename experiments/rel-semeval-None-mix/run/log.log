09/16 07:17:16 AM: Git branch: master
09/16 07:17:16 AM: Git SHA: 36ca31498698840426ebb6bc0a6246f741bc664e
09/16 07:17:16 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/rel-semeval-None-mix/",
  "exp_name": "experiments/rel-semeval-None-mix",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/rel-semeval-None-mix/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/None",
  "pytorch_transformers_output_mode": "mix",
  "remote_log_name": "experiments/rel-semeval-None-mix__run",
  "run_dir": "./experiments/rel-semeval-None-mix/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-rel-semeval",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 07:17:16 AM: Saved config to ./experiments/rel-semeval-None-mix/run/params.conf
09/16 07:17:16 AM: Using random seed 1234
09/16 07:17:17 AM: Using GPU 0
09/16 07:17:17 AM: Loading tasks...
09/16 07:17:17 AM: Writing pre-preprocessed tasks to ./experiments/rel-semeval-None-mix/
09/16 07:17:17 AM: 	Creating task edges-rel-semeval from scratch.
09/16 07:17:17 AM: Read=6851, Skip=0, Total=6851 from ./probing_data/edges/semeval/train.0.85.json.retokenized.bert-base-uncased
09/16 07:17:17 AM: Read=1149, Skip=0, Total=1149 from ./probing_data/edges/semeval/dev.json.retokenized.bert-base-uncased
09/16 07:17:17 AM: Read=2717, Skip=0, Total=2717 from ./probing_data/edges/semeval/test.json.retokenized.bert-base-uncased
09/16 07:17:17 AM: 	Task 'edges-rel-semeval': |train|=6851 |val|=1149 |test|=2717
09/16 07:17:17 AM: 	Finished loading tasks: edges-rel-semeval.
09/16 07:17:17 AM: 	Building vocab from scratch.
09/16 07:17:17 AM: 	Counting units for task edges-rel-semeval.
09/16 07:17:17 AM: 	Task 'edges-rel-semeval': adding vocab namespace 'edges-rel-semeval_labels'
09/16 07:17:18 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:17:18 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 07:17:19 AM: 	Saved vocab to ./experiments/rel-semeval-None-mix/vocab
09/16 07:17:19 AM: Loading token dictionary from ./experiments/rel-semeval-None-mix/vocab.
09/16 07:17:19 AM: 	Loaded vocab from ./experiments/rel-semeval-None-mix/vocab
09/16 07:17:19 AM: 	Vocab namespace bert_uncased: size 30524
09/16 07:17:19 AM: 	Vocab namespace tokens: size 16020
09/16 07:17:19 AM: 	Vocab namespace chars: size 59
09/16 07:17:19 AM: 	Vocab namespace edges-rel-semeval_labels: size 19
09/16 07:17:19 AM: 	Finished building vocab.
09/16 07:17:19 AM: 	Task edges-rel-semeval (train): Indexing from scratch.
09/16 07:17:19 AM: 	Task edges-rel-semeval (train): Saved 6851 instances to ./experiments/rel-semeval-None-mix/preproc/edges-rel-semeval__train_data
09/16 07:17:19 AM: 	Task edges-rel-semeval (val): Indexing from scratch.
09/16 07:17:19 AM: 	Task edges-rel-semeval (val): Saved 1149 instances to ./experiments/rel-semeval-None-mix/preproc/edges-rel-semeval__val_data
09/16 07:17:19 AM: 	Task edges-rel-semeval (test): Indexing from scratch.
09/16 07:17:20 AM: 	Task edges-rel-semeval (test): Saved 2717 instances to ./experiments/rel-semeval-None-mix/preproc/edges-rel-semeval__test_data
09/16 07:17:20 AM: 	Finished indexing tasks
09/16 07:17:20 AM: 	Creating trimmed target-only version of edges-rel-semeval train.
09/16 07:17:20 AM: 	  Training on 
09/16 07:17:20 AM: 	  Evaluating on edges-rel-semeval
09/16 07:17:20 AM: 	Finished loading tasks in 2.867s
09/16 07:17:20 AM: 	 Tasks: ['edges-rel-semeval']
09/16 07:17:20 AM: Building model...
09/16 07:17:20 AM: Using BERT model (bert-base-uncased).
09/16 07:17:20 AM: LOADING A PRETRAINED MODEL
09/16 07:17:21 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json not found in cache or force_download set to True, downloading to /tmp/tmphii46p6k
09/16 07:17:22 AM: copying /tmp/tmphii46p6k to cache at ./experiments/rel-semeval-None-mix/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 07:17:22 AM: creating metadata file for ./experiments/rel-semeval-None-mix/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 07:17:22 AM: removing temp file /tmp/tmphii46p6k
09/16 07:17:22 AM: loading configuration file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-config.json from cache at ./experiments/rel-semeval-None-mix/pytorch_transformers_cache/4dad0251492946e18ac39290fcfe91b89d370fee250efe9521476438fe8ca185.bf3b9ea126d8c0001ee8a1e8b92229871d06d36d8808208cc2449280da87785c
09/16 07:17:22 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 07:17:23 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin not found in cache or force_download set to True, downloading to /tmp/tmpqvygqaay
09/16 07:19:22 AM: copying /tmp/tmpqvygqaay to cache at ./experiments/rel-semeval-None-mix/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 07:19:22 AM: creating metadata file for ./experiments/rel-semeval-None-mix/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 07:19:22 AM: removing temp file /tmp/tmpqvygqaay
09/16 07:19:22 AM: loading weights file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-pytorch_model.bin from cache at ./experiments/rel-semeval-None-mix/pytorch_transformers_cache/aa1ef1aede4482d0dbcd4d52baad8ae300e60902e88fcb0bebdec09afd232066.36ca03ab34a1a5d5fa7bc3d03d55c4fa650fed07220e2eeebc06ce58d0e9a157
09/16 07:19:26 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmp6md119zx
09/16 07:19:27 AM: copying /tmp/tmp6md119zx to cache at ./experiments/rel-semeval-None-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:19:27 AM: creating metadata file for ./experiments/rel-semeval-None-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:19:27 AM: removing temp file /tmp/tmp6md119zx
09/16 07:19:27 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/rel-semeval-None-mix/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 07:19:27 AM: NOTE: pytorch_transformers_output_mode='mix', so scalar mixing weights will be fine-tuned even if BERT model is frozen.
09/16 07:19:27 AM: Initializing parameters
09/16 07:19:27 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 07:19:27 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 07:19:27 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 07:19:27 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 07:19:27 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 07:19:27 AM:    _text_field_embedder.scalar_mix.gamma
09/16 07:19:27 AM:    _text_field_embedder.scalar_mix.scalar_parameters.0
09/16 07:19:27 AM:    _text_field_embedder.scalar_mix.scalar_parameters.1
09/16 07:19:27 AM:    _text_field_embedder.scalar_mix.scalar_parameters.10
09/16 07:19:27 AM:    _text_field_embedder.scalar_mix.scalar_parameters.11
09/16 07:19:27 AM:    _text_field_embedder.scalar_mix.scalar_parameters.12
09/16 07:19:27 AM:    _text_field_embedder.scalar_mix.scalar_parameters.2
09/16 07:19:27 AM:    _text_field_embedder.scalar_mix.scalar_parameters.3
09/16 07:19:27 AM:    _text_field_embedder.scalar_mix.scalar_parameters.4
09/16 07:19:27 AM:    _text_field_embedder.scalar_mix.scalar_parameters.5
09/16 07:19:27 AM:    _text_field_embedder.scalar_mix.scalar_parameters.6
09/16 07:19:27 AM:    _text_field_embedder.scalar_mix.scalar_parameters.7
09/16 07:19:27 AM:    _text_field_embedder.scalar_mix.scalar_parameters.8
09/16 07:19:27 AM:    _text_field_embedder.scalar_mix.scalar_parameters.9
09/16 07:19:27 AM: 	Task 'edges-rel-semeval' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-rel-semeval"
}
09/16 07:19:32 AM: Model specification:
09/16 07:19:32 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
      (scalar_mix): ScalarMix(
        (scalar_parameters): ParameterList(
            (0): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (1): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (2): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (3): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (4): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (5): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (6): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (7): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (8): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (9): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (10): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (11): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
            (12): Parameter containing: [torch.cuda.FloatTensor of size 1 (GPU 0)]
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-rel-semeval_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=19, bias=True)
      )
    )
  )
)
09/16 07:19:32 AM: Model parameters:
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.scalar_mix.gamma: Trainable parameter, count 1 with torch.Size([1])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.0: Trainable parameter, count 1 with torch.Size([1])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.1: Trainable parameter, count 1 with torch.Size([1])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.2: Trainable parameter, count 1 with torch.Size([1])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.3: Trainable parameter, count 1 with torch.Size([1])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.4: Trainable parameter, count 1 with torch.Size([1])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.5: Trainable parameter, count 1 with torch.Size([1])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.6: Trainable parameter, count 1 with torch.Size([1])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.7: Trainable parameter, count 1 with torch.Size([1])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.8: Trainable parameter, count 1 with torch.Size([1])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.9: Trainable parameter, count 1 with torch.Size([1])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.10: Trainable parameter, count 1 with torch.Size([1])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.11: Trainable parameter, count 1 with torch.Size([1])
09/16 07:19:32 AM: 	sent_encoder._text_field_embedder.scalar_mix.scalar_parameters.12: Trainable parameter, count 1 with torch.Size([1])
09/16 07:19:32 AM: 	edges-rel-semeval_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 07:19:32 AM: 	edges-rel-semeval_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:19:32 AM: 	edges-rel-semeval_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 07:19:32 AM: 	edges-rel-semeval_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:19:32 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 07:19:32 AM: 	edges-rel-semeval_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:19:32 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 07:19:32 AM: 	edges-rel-semeval_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 07:19:32 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.weight: Trainable parameter, count 4864 with torch.Size([19, 256])
09/16 07:19:32 AM: 	edges-rel-semeval_mdl.classifier.classifier.4.bias: Trainable parameter, count 19 with torch.Size([19])
09/16 07:19:32 AM: Total number of parameters: 110143777 (1.10144e+08)
09/16 07:19:32 AM: Number of trainable parameters: 661537 (661537)
09/16 07:19:32 AM: Finished building model in 132.269s
09/16 07:19:32 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-rel-semeval 

09/16 07:19:33 AM: patience = 9
09/16 07:19:33 AM: val_interval = 100
09/16 07:19:33 AM: max_vals = 100
09/16 07:19:33 AM: cuda_device = 0
09/16 07:19:33 AM: grad_norm = 5.0
09/16 07:19:33 AM: grad_clipping = None
09/16 07:19:33 AM: lr_decay = 0.99
09/16 07:19:33 AM: min_lr = 1e-06
09/16 07:19:33 AM: keep_all_checkpoints = 0
09/16 07:19:33 AM: val_data_limit = 5000
09/16 07:19:33 AM: max_epochs = -1
09/16 07:19:33 AM: dec_val_scale = 250
09/16 07:19:33 AM: training_data_fraction = 1
09/16 07:19:33 AM: type = adam
09/16 07:19:33 AM: parameter_groups = None
09/16 07:19:33 AM: Number of trainable parameters: 661537
09/16 07:19:33 AM: infer_type_and_cast = True
09/16 07:19:33 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:19:33 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:19:33 AM: lr = 0.0001
09/16 07:19:33 AM: amsgrad = True
09/16 07:19:33 AM: type = reduce_on_plateau
09/16 07:19:33 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:19:33 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:19:33 AM: mode = max
09/16 07:19:33 AM: factor = 0.5
09/16 07:19:33 AM: patience = 3
09/16 07:19:33 AM: threshold = 0.0001
09/16 07:19:33 AM: threshold_mode = abs
09/16 07:19:33 AM: verbose = True
09/16 07:19:33 AM: type = adam
09/16 07:19:33 AM: parameter_groups = None
09/16 07:19:33 AM: Number of trainable parameters: 661537
09/16 07:19:33 AM: infer_type_and_cast = True
09/16 07:19:33 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:19:33 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:19:33 AM: lr = 0.0001
09/16 07:19:33 AM: amsgrad = True
09/16 07:19:33 AM: type = reduce_on_plateau
09/16 07:19:33 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 07:19:33 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 07:19:33 AM: mode = max
09/16 07:19:33 AM: factor = 0.5
09/16 07:19:33 AM: patience = 3
09/16 07:19:33 AM: threshold = 0.0001
09/16 07:19:33 AM: threshold_mode = abs
09/16 07:19:33 AM: verbose = True
09/16 07:19:33 AM: Starting training without restoring from a checkpoint.
09/16 07:19:33 AM: Training examples per task, before any subsampling: {'edges-rel-semeval': 6851}
09/16 07:19:33 AM: Beginning training with stopping criteria based on metric: edges-rel-semeval_f1
09/16 07:19:39 AM: ***** Step 100 / Validation 1 *****
09/16 07:19:39 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:19:39 AM: Validating...
09/16 07:19:41 AM: Best result seen so far for edges-rel-semeval.
09/16 07:19:41 AM: Best result seen so far for micro.
09/16 07:19:41 AM: Best result seen so far for macro.
09/16 07:19:41 AM: Updating LR scheduler:
09/16 07:19:41 AM: 	Best result seen so far for macro_avg: 0.000
09/16 07:19:41 AM: 	# validation passes without improvement: 0
09/16 07:19:41 AM: edges-rel-semeval_loss: training: 0.251203 validation: 0.176481
09/16 07:19:41 AM: macro_avg: validation: 0.000000
09/16 07:19:41 AM: micro_avg: validation: 0.000000
09/16 07:19:41 AM: edges-rel-semeval_mcc: training: 0.009988 validation: 0.000000
09/16 07:19:41 AM: edges-rel-semeval_acc: training: 0.003469 validation: 0.000000
09/16 07:19:41 AM: edges-rel-semeval_precision: training: 0.067358 validation: 0.000000
09/16 07:19:41 AM: edges-rel-semeval_recall: training: 0.028698 validation: 0.000000
09/16 07:19:41 AM: edges-rel-semeval_f1: training: 0.040248 validation: 0.000000
09/16 07:19:41 AM: Global learning rate: 0.0001
09/16 07:19:41 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:19:43 AM: Update 124: task edges-rel-semeval, batch 24 (124): mcc: 0.0180, acc: 0.0013, precision: 0.3333, recall: 0.0013, f1: 0.0026, edges-rel-semeval_loss: 0.1805
09/16 07:19:47 AM: ***** Step 200 / Validation 2 *****
09/16 07:19:47 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:19:47 AM: Validating...
09/16 07:19:50 AM: Best result seen so far for edges-rel-semeval.
09/16 07:19:50 AM: Best result seen so far for macro.
09/16 07:19:50 AM: Updating LR scheduler:
09/16 07:19:50 AM: 	Best result seen so far for macro_avg: 0.140
09/16 07:19:50 AM: 	# validation passes without improvement: 0
09/16 07:19:50 AM: edges-rel-semeval_loss: training: 0.168652 validation: 0.145150
09/16 07:19:50 AM: macro_avg: validation: 0.139759
09/16 07:19:50 AM: micro_avg: validation: 0.000000
09/16 07:19:50 AM: edges-rel-semeval_mcc: training: 0.148264 validation: 0.254060
09/16 07:19:50 AM: edges-rel-semeval_acc: training: 0.028125 validation: 0.075718
09/16 07:19:50 AM: edges-rel-semeval_precision: training: 0.841121 validation: 0.906250
09/16 07:19:50 AM: edges-rel-semeval_recall: training: 0.028125 validation: 0.075718
09/16 07:19:50 AM: edges-rel-semeval_f1: training: 0.054430 validation: 0.139759
09/16 07:19:50 AM: Global learning rate: 0.0001
09/16 07:19:50 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:19:53 AM: Update 236: task edges-rel-semeval, batch 36 (236): mcc: 0.2939, acc: 0.1086, precision: 0.8378, recall: 0.1104, f1: 0.1951, edges-rel-semeval_loss: 0.1471
09/16 07:19:56 AM: ***** Step 300 / Validation 3 *****
09/16 07:19:56 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:19:56 AM: Validating...
09/16 07:19:59 AM: Best result seen so far for edges-rel-semeval.
09/16 07:19:59 AM: Best result seen so far for macro.
09/16 07:19:59 AM: Updating LR scheduler:
09/16 07:19:59 AM: 	Best result seen so far for macro_avg: 0.301
09/16 07:19:59 AM: 	# validation passes without improvement: 0
09/16 07:19:59 AM: edges-rel-semeval_loss: training: 0.142594 validation: 0.124251
09/16 07:19:59 AM: macro_avg: validation: 0.301449
09/16 07:19:59 AM: micro_avg: validation: 0.000000
09/16 07:19:59 AM: edges-rel-semeval_mcc: training: 0.330913 validation: 0.392636
09/16 07:19:59 AM: edges-rel-semeval_acc: training: 0.137811 validation: 0.180157
09/16 07:19:59 AM: edges-rel-semeval_precision: training: 0.829630 validation: 0.900433
09/16 07:19:59 AM: edges-rel-semeval_recall: training: 0.141280 validation: 0.181027
09/16 07:19:59 AM: edges-rel-semeval_f1: training: 0.241444 validation: 0.301449
09/16 07:19:59 AM: Global learning rate: 0.0001
09/16 07:19:59 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:20:03 AM: Update 372: task edges-rel-semeval, batch 72 (372): mcc: 0.4449, acc: 0.2400, precision: 0.8482, recall: 0.2474, f1: 0.3831, edges-rel-semeval_loss: 0.1249
09/16 07:20:04 AM: ***** Step 400 / Validation 4 *****
09/16 07:20:04 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:20:04 AM: Validating...
09/16 07:20:07 AM: Best result seen so far for edges-rel-semeval.
09/16 07:20:07 AM: Best result seen so far for macro.
09/16 07:20:07 AM: Updating LR scheduler:
09/16 07:20:07 AM: 	Best result seen so far for macro_avg: 0.430
09/16 07:20:07 AM: 	# validation passes without improvement: 0
09/16 07:20:07 AM: edges-rel-semeval_loss: training: 0.123615 validation: 0.110677
09/16 07:20:07 AM: macro_avg: validation: 0.429796
09/16 07:20:07 AM: micro_avg: validation: 0.000000
09/16 07:20:07 AM: edges-rel-semeval_mcc: training: 0.451305 validation: 0.488613
09/16 07:20:07 AM: edges-rel-semeval_acc: training: 0.250000 validation: 0.278503
09/16 07:20:07 AM: edges-rel-semeval_precision: training: 0.835520 validation: 0.885870
09/16 07:20:07 AM: edges-rel-semeval_recall: training: 0.258750 validation: 0.283725
09/16 07:20:07 AM: edges-rel-semeval_f1: training: 0.395132 validation: 0.429796
09/16 07:20:07 AM: Global learning rate: 0.0001
09/16 07:20:07 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:20:13 AM: Update 494: task edges-rel-semeval, batch 94 (494): mcc: 0.5155, acc: 0.3189, precision: 0.8471, recall: 0.3310, f1: 0.4760, edges-rel-semeval_loss: 0.1134
09/16 07:20:13 AM: ***** Step 500 / Validation 5 *****
09/16 07:20:13 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:20:13 AM: Validating...
09/16 07:20:16 AM: Best result seen so far for edges-rel-semeval.
09/16 07:20:16 AM: Best result seen so far for macro.
09/16 07:20:16 AM: Updating LR scheduler:
09/16 07:20:16 AM: 	Best result seen so far for macro_avg: 0.525
09/16 07:20:16 AM: 	# validation passes without improvement: 0
09/16 07:20:16 AM: edges-rel-semeval_loss: training: 0.113398 validation: 0.101738
09/16 07:20:16 AM: macro_avg: validation: 0.524892
09/16 07:20:16 AM: micro_avg: validation: 0.000000
09/16 07:20:16 AM: edges-rel-semeval_mcc: training: 0.515794 validation: 0.563287
09/16 07:20:16 AM: edges-rel-semeval_acc: training: 0.320404 validation: 0.366406
09/16 07:20:16 AM: edges-rel-semeval_precision: training: 0.844551 validation: 0.893305
09/16 07:20:16 AM: edges-rel-semeval_recall: training: 0.332387 validation: 0.371628
09/16 07:20:16 AM: edges-rel-semeval_f1: training: 0.477031 validation: 0.524892
09/16 07:20:16 AM: Global learning rate: 0.0001
09/16 07:20:16 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:20:21 AM: ***** Step 600 / Validation 6 *****
09/16 07:20:21 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:20:21 AM: Validating...
09/16 07:20:23 AM: Evaluate: task edges-rel-semeval, batch 22 (36): mcc: 0.6285, acc: 0.4489, precision: 0.9062, recall: 0.4531, f1: 0.6042, edges-rel-semeval_loss: 0.0921
09/16 07:20:24 AM: Best result seen so far for edges-rel-semeval.
09/16 07:20:24 AM: Best result seen so far for macro.
09/16 07:20:24 AM: Updating LR scheduler:
09/16 07:20:24 AM: 	Best result seen so far for macro_avg: 0.573
09/16 07:20:24 AM: 	# validation passes without improvement: 0
09/16 07:20:24 AM: edges-rel-semeval_loss: training: 0.102322 validation: 0.095255
09/16 07:20:24 AM: macro_avg: validation: 0.573435
09/16 07:20:24 AM: micro_avg: validation: 0.000000
09/16 07:20:24 AM: edges-rel-semeval_mcc: training: 0.577387 validation: 0.597563
09/16 07:20:24 AM: edges-rel-semeval_acc: training: 0.402813 validation: 0.422106
09/16 07:20:24 AM: edges-rel-semeval_precision: training: 0.836875 validation: 0.875000
09/16 07:20:24 AM: edges-rel-semeval_recall: training: 0.418438 validation: 0.426458
09/16 07:20:24 AM: edges-rel-semeval_f1: training: 0.557917 validation: 0.573435
09/16 07:20:24 AM: Global learning rate: 0.0001
09/16 07:20:24 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:20:30 AM: ***** Step 700 / Validation 7 *****
09/16 07:20:30 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:20:30 AM: Validating...
09/16 07:20:33 AM: Best result seen so far for edges-rel-semeval.
09/16 07:20:33 AM: Best result seen so far for macro.
09/16 07:20:33 AM: Updating LR scheduler:
09/16 07:20:33 AM: 	Best result seen so far for macro_avg: 0.598
09/16 07:20:33 AM: 	# validation passes without improvement: 0
09/16 07:20:33 AM: edges-rel-semeval_loss: training: 0.094839 validation: 0.090442
09/16 07:20:33 AM: macro_avg: validation: 0.597714
09/16 07:20:33 AM: micro_avg: validation: 0.000000
09/16 07:20:33 AM: edges-rel-semeval_mcc: training: 0.615416 validation: 0.616045
09/16 07:20:33 AM: edges-rel-semeval_acc: training: 0.445601 validation: 0.447346
09/16 07:20:33 AM: edges-rel-semeval_precision: training: 0.854980 validation: 0.870216
09/16 07:20:33 AM: edges-rel-semeval_recall: training: 0.462945 validation: 0.455178
09/16 07:20:33 AM: edges-rel-semeval_f1: training: 0.600655 validation: 0.597714
09/16 07:20:33 AM: Global learning rate: 0.0001
09/16 07:20:33 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:20:33 AM: Update 702: task edges-rel-semeval, batch 2 (702): mcc: 0.5632, acc: 0.3750, precision: 0.7941, recall: 0.4219, f1: 0.5510, edges-rel-semeval_loss: 0.1006
09/16 07:20:39 AM: ***** Step 800 / Validation 8 *****
09/16 07:20:39 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:20:39 AM: Validating...
09/16 07:20:42 AM: Best result seen so far for edges-rel-semeval.
09/16 07:20:42 AM: Best result seen so far for macro.
09/16 07:20:42 AM: Updating LR scheduler:
09/16 07:20:42 AM: 	Best result seen so far for macro_avg: 0.652
09/16 07:20:42 AM: 	# validation passes without improvement: 0
09/16 07:20:42 AM: edges-rel-semeval_loss: training: 0.089838 validation: 0.085757
09/16 07:20:42 AM: macro_avg: validation: 0.652389
09/16 07:20:42 AM: micro_avg: validation: 0.000000
09/16 07:20:42 AM: edges-rel-semeval_mcc: training: 0.640585 validation: 0.663454
09/16 07:20:42 AM: edges-rel-semeval_acc: training: 0.475938 validation: 0.504787
09/16 07:20:42 AM: edges-rel-semeval_precision: training: 0.855615 validation: 0.883929
09/16 07:20:42 AM: edges-rel-semeval_recall: training: 0.500000 validation: 0.516971
09/16 07:20:42 AM: edges-rel-semeval_f1: training: 0.631164 validation: 0.652389
09/16 07:20:42 AM: Global learning rate: 0.0001
09/16 07:20:42 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:20:43 AM: Update 822: task edges-rel-semeval, batch 22 (822): mcc: 0.6419, acc: 0.4844, precision: 0.8496, recall: 0.5057, f1: 0.6340, edges-rel-semeval_loss: 0.0888
09/16 07:20:49 AM: ***** Step 900 / Validation 9 *****
09/16 07:20:49 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:20:49 AM: Validating...
09/16 07:20:52 AM: Best result seen so far for edges-rel-semeval.
09/16 07:20:52 AM: Best result seen so far for macro.
09/16 07:20:52 AM: Updating LR scheduler:
09/16 07:20:52 AM: 	Best result seen so far for macro_avg: 0.653
09/16 07:20:52 AM: 	# validation passes without improvement: 0
09/16 07:20:52 AM: edges-rel-semeval_loss: training: 0.086245 validation: 0.082930
09/16 07:20:52 AM: macro_avg: validation: 0.652838
09/16 07:20:52 AM: micro_avg: validation: 0.000000
09/16 07:20:52 AM: edges-rel-semeval_mcc: training: 0.654411 validation: 0.662292
09/16 07:20:52 AM: edges-rel-semeval_acc: training: 0.498266 validation: 0.507398
09/16 07:20:52 AM: edges-rel-semeval_precision: training: 0.856328 validation: 0.875549
09/16 07:20:52 AM: edges-rel-semeval_recall: training: 0.520656 validation: 0.520453
09/16 07:20:52 AM: edges-rel-semeval_f1: training: 0.647578 validation: 0.652838
09/16 07:20:52 AM: Global learning rate: 0.0001
09/16 07:20:52 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:20:53 AM: Update 914: task edges-rel-semeval, batch 14 (914): mcc: 0.7017, acc: 0.5446, precision: 0.8975, recall: 0.5670, f1: 0.6949, edges-rel-semeval_loss: 0.0783
09/16 07:20:59 AM: ***** Step 1000 / Validation 10 *****
09/16 07:20:59 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:20:59 AM: Validating...
09/16 07:21:02 AM: Best result seen so far for edges-rel-semeval.
09/16 07:21:02 AM: Best result seen so far for macro.
09/16 07:21:02 AM: Updating LR scheduler:
09/16 07:21:02 AM: 	Best result seen so far for macro_avg: 0.673
09/16 07:21:02 AM: 	# validation passes without improvement: 0
09/16 07:21:02 AM: edges-rel-semeval_loss: training: 0.079164 validation: 0.080785
09/16 07:21:02 AM: macro_avg: validation: 0.672718
09/16 07:21:02 AM: micro_avg: validation: 0.000000
09/16 07:21:02 AM: edges-rel-semeval_mcc: training: 0.692977 validation: 0.678077
09/16 07:21:02 AM: edges-rel-semeval_acc: training: 0.545937 validation: 0.529156
09/16 07:21:02 AM: edges-rel-semeval_precision: training: 0.870538 validation: 0.870166
09/16 07:21:02 AM: edges-rel-semeval_recall: training: 0.571563 validation: 0.548303
09/16 07:21:02 AM: edges-rel-semeval_f1: training: 0.690059 validation: 0.672718
09/16 07:21:02 AM: Global learning rate: 0.0001
09/16 07:21:02 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:21:03 AM: Update 1018: task edges-rel-semeval, batch 18 (1018): mcc: 0.6844, acc: 0.5486, precision: 0.8186, recall: 0.5955, f1: 0.6894, edges-rel-semeval_loss: 0.0789
09/16 07:21:09 AM: ***** Step 1100 / Validation 11 *****
09/16 07:21:09 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:21:09 AM: Validating...
09/16 07:21:12 AM: Best result seen so far for edges-rel-semeval.
09/16 07:21:12 AM: Best result seen so far for macro.
09/16 07:21:12 AM: Updating LR scheduler:
09/16 07:21:12 AM: 	Best result seen so far for macro_avg: 0.685
09/16 07:21:12 AM: 	# validation passes without improvement: 0
09/16 07:21:12 AM: edges-rel-semeval_loss: training: 0.077574 validation: 0.078866
09/16 07:21:12 AM: macro_avg: validation: 0.685165
09/16 07:21:12 AM: micro_avg: validation: 0.000000
09/16 07:21:12 AM: edges-rel-semeval_mcc: training: 0.688908 validation: 0.691304
09/16 07:21:12 AM: edges-rel-semeval_acc: training: 0.544623 validation: 0.547433
09/16 07:21:12 AM: edges-rel-semeval_precision: training: 0.845064 validation: 0.885517
09/16 07:21:12 AM: edges-rel-semeval_recall: training: 0.583097 validation: 0.558747
09/16 07:21:12 AM: edges-rel-semeval_f1: training: 0.690054 validation: 0.685165
09/16 07:21:12 AM: Global learning rate: 0.0001
09/16 07:21:12 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:21:13 AM: Update 1120: task edges-rel-semeval, batch 20 (1120): mcc: 0.7133, acc: 0.5719, precision: 0.8680, recall: 0.6062, f1: 0.7139, edges-rel-semeval_loss: 0.0733
09/16 07:21:17 AM: ***** Step 1200 / Validation 12 *****
09/16 07:21:17 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:21:17 AM: Validating...
09/16 07:21:20 AM: Updating LR scheduler:
09/16 07:21:20 AM: 	Best result seen so far for macro_avg: 0.685
09/16 07:21:20 AM: 	# validation passes without improvement: 1
09/16 07:21:20 AM: edges-rel-semeval_loss: training: 0.074006 validation: 0.076993
09/16 07:21:20 AM: macro_avg: validation: 0.683932
09/16 07:21:20 AM: micro_avg: validation: 0.000000
09/16 07:21:20 AM: edges-rel-semeval_mcc: training: 0.713214 validation: 0.687755
09/16 07:21:20 AM: edges-rel-semeval_acc: training: 0.573438 validation: 0.545692
09/16 07:21:20 AM: edges-rel-semeval_precision: training: 0.863918 validation: 0.870794
09/16 07:21:20 AM: edges-rel-semeval_recall: training: 0.609062 validation: 0.563098
09/16 07:21:20 AM: edges-rel-semeval_f1: training: 0.714443 validation: 0.683932
09/16 07:21:20 AM: Global learning rate: 0.0001
09/16 07:21:20 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:21:23 AM: Update 1262: task edges-rel-semeval, batch 62 (1262): mcc: 0.6987, acc: 0.5570, precision: 0.8456, recall: 0.5988, f1: 0.7011, edges-rel-semeval_loss: 0.0746
09/16 07:21:26 AM: ***** Step 1300 / Validation 13 *****
09/16 07:21:26 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:21:26 AM: Validating...
09/16 07:21:29 AM: Best result seen so far for edges-rel-semeval.
09/16 07:21:29 AM: Best result seen so far for macro.
09/16 07:21:29 AM: Updating LR scheduler:
09/16 07:21:29 AM: 	Best result seen so far for macro_avg: 0.701
09/16 07:21:29 AM: 	# validation passes without improvement: 0
09/16 07:21:29 AM: edges-rel-semeval_loss: training: 0.073747 validation: 0.074675
09/16 07:21:29 AM: macro_avg: validation: 0.700513
09/16 07:21:29 AM: micro_avg: validation: 0.000000
09/16 07:21:29 AM: edges-rel-semeval_mcc: training: 0.702438 validation: 0.699250
09/16 07:21:29 AM: edges-rel-semeval_acc: training: 0.561652 validation: 0.563969
09/16 07:21:29 AM: edges-rel-semeval_precision: training: 0.851206 validation: 0.852684
09/16 07:21:29 AM: edges-rel-semeval_recall: training: 0.600757 validation: 0.594430
09/16 07:21:29 AM: edges-rel-semeval_f1: training: 0.704382 validation: 0.700513
09/16 07:21:29 AM: Global learning rate: 0.0001
09/16 07:21:29 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:21:33 AM: Update 1385: task edges-rel-semeval, batch 85 (1385): mcc: 0.7270, acc: 0.5971, precision: 0.8601, recall: 0.6349, f1: 0.7305, edges-rel-semeval_loss: 0.0699
09/16 07:21:34 AM: ***** Step 1400 / Validation 14 *****
09/16 07:21:34 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:21:34 AM: Validating...
09/16 07:21:37 AM: Updating LR scheduler:
09/16 07:21:37 AM: 	Best result seen so far for macro_avg: 0.701
09/16 07:21:37 AM: 	# validation passes without improvement: 1
09/16 07:21:37 AM: edges-rel-semeval_loss: training: 0.068900 validation: 0.074565
09/16 07:21:37 AM: macro_avg: validation: 0.698231
09/16 07:21:37 AM: micro_avg: validation: 0.000000
09/16 07:21:37 AM: edges-rel-semeval_mcc: training: 0.734758 validation: 0.699644
09/16 07:21:37 AM: edges-rel-semeval_acc: training: 0.607500 validation: 0.566580
09/16 07:21:37 AM: edges-rel-semeval_precision: training: 0.865854 validation: 0.868047
09/16 07:21:37 AM: edges-rel-semeval_recall: training: 0.643438 validation: 0.583986
09/16 07:21:37 AM: edges-rel-semeval_f1: training: 0.738257 validation: 0.698231
09/16 07:21:37 AM: Global learning rate: 0.0001
09/16 07:21:37 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:21:42 AM: ***** Step 1500 / Validation 15 *****
09/16 07:21:42 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:21:42 AM: Validating...
09/16 07:21:43 AM: Evaluate: task edges-rel-semeval, batch 16 (36): mcc: 0.7439, acc: 0.6074, precision: 0.9000, recall: 0.6328, f1: 0.7431, edges-rel-semeval_loss: 0.0677
09/16 07:21:45 AM: Best result seen so far for edges-rel-semeval.
09/16 07:21:45 AM: Best result seen so far for macro.
09/16 07:21:45 AM: Updating LR scheduler:
09/16 07:21:45 AM: 	Best result seen so far for macro_avg: 0.703
09/16 07:21:45 AM: 	# validation passes without improvement: 0
09/16 07:21:45 AM: edges-rel-semeval_loss: training: 0.068144 validation: 0.072816
09/16 07:21:45 AM: macro_avg: validation: 0.703297
09/16 07:21:45 AM: micro_avg: validation: 0.000000
09/16 07:21:45 AM: edges-rel-semeval_mcc: training: 0.738557 validation: 0.706257
09/16 07:21:45 AM: edges-rel-semeval_acc: training: 0.607500 validation: 0.565709
09/16 07:21:45 AM: edges-rel-semeval_precision: training: 0.870059 validation: 0.881890
09/16 07:21:45 AM: edges-rel-semeval_recall: training: 0.646563 validation: 0.584856
09/16 07:21:45 AM: edges-rel-semeval_f1: training: 0.741843 validation: 0.703297
09/16 07:21:45 AM: Global learning rate: 0.0001
09/16 07:21:45 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:21:51 AM: ***** Step 1600 / Validation 16 *****
09/16 07:21:51 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:21:51 AM: Validating...
09/16 07:21:53 AM: Evaluate: task edges-rel-semeval, batch 30 (36): mcc: 0.7400, acc: 0.6083, precision: 0.9035, recall: 0.6240, f1: 0.7381, edges-rel-semeval_loss: 0.0684
09/16 07:21:54 AM: Best result seen so far for edges-rel-semeval.
09/16 07:21:54 AM: Best result seen so far for macro.
09/16 07:21:54 AM: Updating LR scheduler:
09/16 07:21:54 AM: 	Best result seen so far for macro_avg: 0.712
09/16 07:21:54 AM: 	# validation passes without improvement: 0
09/16 07:21:54 AM: edges-rel-semeval_loss: training: 0.063634 validation: 0.072624
09/16 07:21:54 AM: macro_avg: validation: 0.711528
09/16 07:21:54 AM: micro_avg: validation: 0.000000
09/16 07:21:54 AM: edges-rel-semeval_mcc: training: 0.760581 validation: 0.714376
09/16 07:21:54 AM: edges-rel-semeval_acc: training: 0.637338 validation: 0.576153
09/16 07:21:54 AM: edges-rel-semeval_precision: training: 0.881070 validation: 0.888021
09/16 07:21:54 AM: edges-rel-semeval_recall: training: 0.675181 validation: 0.593560
09/16 07:21:54 AM: edges-rel-semeval_f1: training: 0.764506 validation: 0.711528
09/16 07:21:54 AM: Global learning rate: 0.0001
09/16 07:21:54 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:21:59 AM: ***** Step 1700 / Validation 17 *****
09/16 07:21:59 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:21:59 AM: Validating...
09/16 07:22:02 AM: Best result seen so far for edges-rel-semeval.
09/16 07:22:02 AM: Best result seen so far for macro.
09/16 07:22:02 AM: Updating LR scheduler:
09/16 07:22:02 AM: 	Best result seen so far for macro_avg: 0.720
09/16 07:22:02 AM: 	# validation passes without improvement: 0
09/16 07:22:02 AM: edges-rel-semeval_loss: training: 0.065422 validation: 0.071216
09/16 07:22:02 AM: macro_avg: validation: 0.719518
09/16 07:22:02 AM: micro_avg: validation: 0.000000
09/16 07:22:02 AM: edges-rel-semeval_mcc: training: 0.754284 validation: 0.715672
09/16 07:22:02 AM: edges-rel-semeval_acc: training: 0.626563 validation: 0.597041
09/16 07:22:02 AM: edges-rel-semeval_precision: training: 0.873727 validation: 0.849526
09/16 07:22:02 AM: edges-rel-semeval_recall: training: 0.670313 validation: 0.624021
09/16 07:22:02 AM: edges-rel-semeval_f1: training: 0.758621 validation: 0.719518
09/16 07:22:02 AM: Global learning rate: 0.0001
09/16 07:22:02 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:22:04 AM: Update 1721: task edges-rel-semeval, batch 21 (1721): mcc: 0.7584, acc: 0.6345, precision: 0.8558, recall: 0.6921, f1: 0.7653, edges-rel-semeval_loss: 0.0609
09/16 07:22:08 AM: ***** Step 1800 / Validation 18 *****
09/16 07:22:08 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:22:08 AM: Validating...
09/16 07:22:11 AM: Updating LR scheduler:
09/16 07:22:11 AM: 	Best result seen so far for macro_avg: 0.720
09/16 07:22:11 AM: 	# validation passes without improvement: 1
09/16 07:22:11 AM: edges-rel-semeval_loss: training: 0.062023 validation: 0.071512
09/16 07:22:11 AM: macro_avg: validation: 0.711637
09/16 07:22:11 AM: micro_avg: validation: 0.000000
09/16 07:22:11 AM: edges-rel-semeval_mcc: training: 0.759837 validation: 0.711868
09/16 07:22:11 AM: edges-rel-semeval_acc: training: 0.636392 validation: 0.580505
09/16 07:22:11 AM: edges-rel-semeval_precision: training: 0.861702 validation: 0.871375
09/16 07:22:11 AM: edges-rel-semeval_recall: training: 0.689688 validation: 0.601393
09/16 07:22:11 AM: edges-rel-semeval_f1: training: 0.766159 validation: 0.711637
09/16 07:22:11 AM: Global learning rate: 0.0001
09/16 07:22:11 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:22:14 AM: Update 1858: task edges-rel-semeval, batch 58 (1858): mcc: 0.7665, acc: 0.6460, precision: 0.8745, recall: 0.6907, f1: 0.7718, edges-rel-semeval_loss: 0.0613
09/16 07:22:16 AM: ***** Step 1900 / Validation 19 *****
09/16 07:22:16 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:22:16 AM: Validating...
09/16 07:22:19 AM: Best result seen so far for edges-rel-semeval.
09/16 07:22:19 AM: Best result seen so far for macro.
09/16 07:22:19 AM: Updating LR scheduler:
09/16 07:22:19 AM: 	Best result seen so far for macro_avg: 0.720
09/16 07:22:19 AM: 	# validation passes without improvement: 0
09/16 07:22:19 AM: edges-rel-semeval_loss: training: 0.061289 validation: 0.069791
09/16 07:22:19 AM: macro_avg: validation: 0.719919
09/16 07:22:19 AM: micro_avg: validation: 0.000000
09/16 07:22:19 AM: edges-rel-semeval_mcc: training: 0.764709 validation: 0.717341
09/16 07:22:19 AM: edges-rel-semeval_acc: training: 0.645938 validation: 0.594430
09/16 07:22:19 AM: edges-rel-semeval_precision: training: 0.869258 validation: 0.858866
09/16 07:22:19 AM: edges-rel-semeval_recall: training: 0.691875 validation: 0.619669
09/16 07:22:19 AM: edges-rel-semeval_f1: training: 0.770489 validation: 0.719919
09/16 07:22:19 AM: Global learning rate: 0.0001
09/16 07:22:19 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:22:24 AM: Update 1975: task edges-rel-semeval, batch 75 (1975): mcc: 0.7800, acc: 0.6613, precision: 0.8851, recall: 0.7052, f1: 0.7850, edges-rel-semeval_loss: 0.0592
09/16 07:22:25 AM: ***** Step 2000 / Validation 20 *****
09/16 07:22:25 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:22:25 AM: Validating...
09/16 07:22:27 AM: Updating LR scheduler:
09/16 07:22:27 AM: 	Best result seen so far for macro_avg: 0.720
09/16 07:22:27 AM: 	# validation passes without improvement: 1
09/16 07:22:27 AM: edges-rel-semeval_loss: training: 0.058188 validation: 0.070687
09/16 07:22:27 AM: macro_avg: validation: 0.719343
09/16 07:22:27 AM: micro_avg: validation: 0.000000
09/16 07:22:27 AM: edges-rel-semeval_mcc: training: 0.783305 validation: 0.719380
09/16 07:22:27 AM: edges-rel-semeval_acc: training: 0.665090 validation: 0.591819
09/16 07:22:27 AM: edges-rel-semeval_precision: training: 0.888757 validation: 0.876250
09/16 07:22:27 AM: edges-rel-semeval_recall: training: 0.707979 validation: 0.610096
09/16 07:22:27 AM: edges-rel-semeval_f1: training: 0.788134 validation: 0.719343
09/16 07:22:27 AM: Global learning rate: 0.0001
09/16 07:22:27 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:22:32 AM: ***** Step 2100 / Validation 21 *****
09/16 07:22:32 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:22:32 AM: Validating...
09/16 07:22:34 AM: Evaluate: task edges-rel-semeval, batch 33 (36): mcc: 0.7455, acc: 0.6307, precision: 0.8787, recall: 0.6515, f1: 0.7482, edges-rel-semeval_loss: 0.0651
09/16 07:22:34 AM: Best result seen so far for edges-rel-semeval.
09/16 07:22:34 AM: Best result seen so far for macro.
09/16 07:22:34 AM: Updating LR scheduler:
09/16 07:22:34 AM: 	Best result seen so far for macro_avg: 0.732
09/16 07:22:34 AM: 	# validation passes without improvement: 0
09/16 07:22:34 AM: edges-rel-semeval_loss: training: 0.058034 validation: 0.068717
09/16 07:22:34 AM: macro_avg: validation: 0.731732
09/16 07:22:34 AM: micro_avg: validation: 0.000000
09/16 07:22:34 AM: edges-rel-semeval_mcc: training: 0.780224 validation: 0.728222
09/16 07:22:34 AM: edges-rel-semeval_acc: training: 0.667813 validation: 0.613577
09/16 07:22:34 AM: edges-rel-semeval_precision: training: 0.881758 validation: 0.861013
09/16 07:22:34 AM: edges-rel-semeval_recall: training: 0.708438 validation: 0.636205
09/16 07:22:34 AM: edges-rel-semeval_f1: training: 0.785652 validation: 0.731732
09/16 07:22:34 AM: Global learning rate: 0.0001
09/16 07:22:34 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:22:40 AM: ***** Step 2200 / Validation 22 *****
09/16 07:22:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:22:40 AM: Validating...
09/16 07:22:42 AM: Updating LR scheduler:
09/16 07:22:42 AM: 	Best result seen so far for macro_avg: 0.732
09/16 07:22:42 AM: 	# validation passes without improvement: 1
09/16 07:22:42 AM: edges-rel-semeval_loss: training: 0.056611 validation: 0.068236
09/16 07:22:42 AM: macro_avg: validation: 0.723535
09/16 07:22:42 AM: micro_avg: validation: 0.000000
09/16 07:22:42 AM: edges-rel-semeval_mcc: training: 0.782445 validation: 0.724135
09/16 07:22:42 AM: edges-rel-semeval_acc: training: 0.666982 validation: 0.594430
09/16 07:22:42 AM: edges-rel-semeval_precision: training: 0.874185 validation: 0.883312
09/16 07:22:42 AM: edges-rel-semeval_recall: training: 0.718701 validation: 0.612707
09/16 07:22:42 AM: edges-rel-semeval_f1: training: 0.788854 validation: 0.723535
09/16 07:22:42 AM: Global learning rate: 0.0001
09/16 07:22:42 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:22:44 AM: Update 2224: task edges-rel-semeval, batch 24 (2224): mcc: 0.7951, acc: 0.6875, precision: 0.8850, recall: 0.7318, f1: 0.8011, edges-rel-semeval_loss: 0.0558
09/16 07:22:48 AM: ***** Step 2300 / Validation 23 *****
09/16 07:22:48 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:22:48 AM: Validating...
09/16 07:22:51 AM: Best result seen so far for edges-rel-semeval.
09/16 07:22:51 AM: Best result seen so far for macro.
09/16 07:22:51 AM: Updating LR scheduler:
09/16 07:22:51 AM: 	Best result seen so far for macro_avg: 0.733
09/16 07:22:51 AM: 	# validation passes without improvement: 0
09/16 07:22:51 AM: edges-rel-semeval_loss: training: 0.057149 validation: 0.067791
09/16 07:22:51 AM: macro_avg: validation: 0.732809
09/16 07:22:51 AM: micro_avg: validation: 0.000000
09/16 07:22:51 AM: edges-rel-semeval_mcc: training: 0.783296 validation: 0.726606
09/16 07:22:51 AM: edges-rel-semeval_acc: training: 0.668438 validation: 0.617929
09/16 07:22:51 AM: edges-rel-semeval_precision: training: 0.878834 validation: 0.841037
09/16 07:22:51 AM: edges-rel-semeval_recall: training: 0.716250 validation: 0.649260
09/16 07:22:51 AM: edges-rel-semeval_f1: training: 0.789256 validation: 0.732809
09/16 07:22:51 AM: Global learning rate: 0.0001
09/16 07:22:51 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:22:54 AM: Update 2352: task edges-rel-semeval, batch 52 (2352): mcc: 0.7972, acc: 0.6893, precision: 0.8799, recall: 0.7398, f1: 0.8038, edges-rel-semeval_loss: 0.0545
09/16 07:22:57 AM: ***** Step 2400 / Validation 24 *****
09/16 07:22:57 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:22:57 AM: Validating...
09/16 07:23:00 AM: Updating LR scheduler:
09/16 07:23:00 AM: 	Best result seen so far for macro_avg: 0.733
09/16 07:23:00 AM: 	# validation passes without improvement: 1
09/16 07:23:00 AM: edges-rel-semeval_loss: training: 0.052773 validation: 0.068991
09/16 07:23:00 AM: macro_avg: validation: 0.710010
09/16 07:23:00 AM: micro_avg: validation: 0.000000
09/16 07:23:00 AM: edges-rel-semeval_mcc: training: 0.805274 validation: 0.710536
09/16 07:23:00 AM: edges-rel-semeval_acc: training: 0.695995 validation: 0.581375
09/16 07:23:00 AM: edges-rel-semeval_precision: training: 0.889139 validation: 0.871990
09/16 07:23:00 AM: edges-rel-semeval_recall: training: 0.746137 validation: 0.598782
09/16 07:23:00 AM: edges-rel-semeval_f1: training: 0.811385 validation: 0.710010
09/16 07:23:00 AM: Global learning rate: 0.0001
09/16 07:23:00 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:23:04 AM: Update 2472: task edges-rel-semeval, batch 72 (2472): mcc: 0.8029, acc: 0.6962, precision: 0.8934, recall: 0.7383, f1: 0.8085, edges-rel-semeval_loss: 0.0530
09/16 07:23:05 AM: ***** Step 2500 / Validation 25 *****
09/16 07:23:05 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:23:05 AM: Validating...
09/16 07:23:08 AM: Best result seen so far for edges-rel-semeval.
09/16 07:23:08 AM: Best result seen so far for macro.
09/16 07:23:08 AM: Updating LR scheduler:
09/16 07:23:08 AM: 	Best result seen so far for macro_avg: 0.744
09/16 07:23:08 AM: 	# validation passes without improvement: 0
09/16 07:23:08 AM: edges-rel-semeval_loss: training: 0.053439 validation: 0.066765
09/16 07:23:08 AM: macro_avg: validation: 0.744209
09/16 07:23:08 AM: micro_avg: validation: 0.000000
09/16 07:23:08 AM: edges-rel-semeval_mcc: training: 0.800462 validation: 0.742436
09/16 07:23:08 AM: edges-rel-semeval_acc: training: 0.692187 validation: 0.626632
09/16 07:23:08 AM: edges-rel-semeval_precision: training: 0.888931 validation: 0.882915
09/16 07:23:08 AM: edges-rel-semeval_recall: training: 0.737813 validation: 0.643168
09/16 07:23:08 AM: edges-rel-semeval_f1: training: 0.806352 validation: 0.744209
09/16 07:23:08 AM: Global learning rate: 0.0001
09/16 07:23:08 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:23:14 AM: Update 2589: task edges-rel-semeval, batch 89 (2589): mcc: 0.7885, acc: 0.6797, precision: 0.8725, recall: 0.7308, f1: 0.7954, edges-rel-semeval_loss: 0.0538
09/16 07:23:15 AM: ***** Step 2600 / Validation 26 *****
09/16 07:23:15 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:23:15 AM: Validating...
09/16 07:23:17 AM: Updating LR scheduler:
09/16 07:23:17 AM: 	Best result seen so far for macro_avg: 0.744
09/16 07:23:17 AM: 	# validation passes without improvement: 1
09/16 07:23:17 AM: edges-rel-semeval_loss: training: 0.053417 validation: 0.067956
09/16 07:23:17 AM: macro_avg: validation: 0.737903
09/16 07:23:17 AM: micro_avg: validation: 0.000000
09/16 07:23:17 AM: edges-rel-semeval_mcc: training: 0.790683 validation: 0.735915
09/16 07:23:17 AM: edges-rel-semeval_acc: training: 0.682119 validation: 0.615318
09/16 07:23:17 AM: edges-rel-semeval_precision: training: 0.874953 validation: 0.876647
09/16 07:23:17 AM: edges-rel-semeval_recall: training: 0.732576 validation: 0.637076
09/16 07:23:17 AM: edges-rel-semeval_f1: training: 0.797460 validation: 0.737903
09/16 07:23:17 AM: Global learning rate: 0.0001
09/16 07:23:17 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:23:23 AM: ***** Step 2700 / Validation 27 *****
09/16 07:23:23 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:23:23 AM: Validating...
09/16 07:23:24 AM: Evaluate: task edges-rel-semeval, batch 19 (36): mcc: 0.7515, acc: 0.6431, precision: 0.8813, recall: 0.6595, f1: 0.7545, edges-rel-semeval_loss: 0.0622
09/16 07:23:25 AM: Updating LR scheduler:
09/16 07:23:25 AM: 	Best result seen so far for macro_avg: 0.744
09/16 07:23:25 AM: 	# validation passes without improvement: 2
09/16 07:23:25 AM: edges-rel-semeval_loss: training: 0.050529 validation: 0.067212
09/16 07:23:25 AM: macro_avg: validation: 0.729853
09/16 07:23:25 AM: micro_avg: validation: 0.000000
09/16 07:23:25 AM: edges-rel-semeval_mcc: training: 0.816138 validation: 0.728323
09/16 07:23:25 AM: edges-rel-semeval_acc: training: 0.713125 validation: 0.610096
09/16 07:23:25 AM: edges-rel-semeval_precision: training: 0.893945 validation: 0.873786
09/16 07:23:25 AM: edges-rel-semeval_recall: training: 0.761250 validation: 0.626632
09/16 07:23:25 AM: edges-rel-semeval_f1: training: 0.822278 validation: 0.729853
09/16 07:23:25 AM: Global learning rate: 0.0001
09/16 07:23:25 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:23:31 AM: ***** Step 2800 / Validation 28 *****
09/16 07:23:31 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:23:31 AM: Validating...
09/16 07:23:34 AM: Evaluate: task edges-rel-semeval, batch 35 (36): mcc: 0.7370, acc: 0.6259, precision: 0.8590, recall: 0.6527, f1: 0.7418, edges-rel-semeval_loss: 0.0656
09/16 07:23:34 AM: Updating LR scheduler:
09/16 07:23:34 AM: 	Best result seen so far for macro_avg: 0.744
09/16 07:23:34 AM: 	# validation passes without improvement: 3
09/16 07:23:34 AM: edges-rel-semeval_loss: training: 0.052604 validation: 0.067242
09/16 07:23:34 AM: macro_avg: validation: 0.737103
09/16 07:23:34 AM: micro_avg: validation: 0.000000
09/16 07:23:34 AM: edges-rel-semeval_mcc: training: 0.800613 validation: 0.732543
09/16 07:23:34 AM: edges-rel-semeval_acc: training: 0.692211 validation: 0.620540
09/16 07:23:34 AM: edges-rel-semeval_precision: training: 0.879272 validation: 0.856978
09/16 07:23:34 AM: edges-rel-semeval_recall: training: 0.746452 validation: 0.646649
09/16 07:23:34 AM: edges-rel-semeval_f1: training: 0.807436 validation: 0.737103
09/16 07:23:34 AM: Global learning rate: 0.0001
09/16 07:23:34 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:23:40 AM: ***** Step 2900 / Validation 29 *****
09/16 07:23:40 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:23:40 AM: Validating...
09/16 07:23:42 AM: Updating LR scheduler:
09/16 07:23:42 AM: 	Best result seen so far for macro_avg: 0.744
09/16 07:23:42 AM: 	# validation passes without improvement: 0
09/16 07:23:42 AM: edges-rel-semeval_loss: training: 0.047977 validation: 0.067717
09/16 07:23:42 AM: macro_avg: validation: 0.733533
09/16 07:23:42 AM: micro_avg: validation: 0.000000
09/16 07:23:42 AM: edges-rel-semeval_mcc: training: 0.821122 validation: 0.729663
09/16 07:23:42 AM: edges-rel-semeval_acc: training: 0.715938 validation: 0.616188
09/16 07:23:42 AM: edges-rel-semeval_precision: training: 0.899083 validation: 0.859649
09/16 07:23:42 AM: edges-rel-semeval_recall: training: 0.765625 validation: 0.639687
09/16 07:23:42 AM: edges-rel-semeval_f1: training: 0.827004 validation: 0.733533
09/16 07:23:42 AM: Global learning rate: 5e-05
09/16 07:23:42 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:23:44 AM: Update 2930: task edges-rel-semeval, batch 30 (2930): mcc: 0.8002, acc: 0.6958, precision: 0.8674, recall: 0.7563, f1: 0.8080, edges-rel-semeval_loss: 0.0521
09/16 07:23:48 AM: ***** Step 3000 / Validation 30 *****
09/16 07:23:48 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:23:48 AM: Validating...
09/16 07:23:50 AM: Updating LR scheduler:
09/16 07:23:50 AM: 	Best result seen so far for macro_avg: 0.744
09/16 07:23:50 AM: 	# validation passes without improvement: 1
09/16 07:23:50 AM: edges-rel-semeval_loss: training: 0.051014 validation: 0.066547
09/16 07:23:50 AM: macro_avg: validation: 0.734429
09/16 07:23:50 AM: micro_avg: validation: 0.000000
09/16 07:23:50 AM: edges-rel-semeval_mcc: training: 0.808817 validation: 0.730383
09/16 07:23:50 AM: edges-rel-semeval_acc: training: 0.706875 validation: 0.614447
09/16 07:23:50 AM: edges-rel-semeval_precision: training: 0.881947 validation: 0.858974
09/16 07:23:50 AM: edges-rel-semeval_recall: training: 0.758750 validation: 0.641427
09/16 07:23:50 AM: edges-rel-semeval_f1: training: 0.815723 validation: 0.734429
09/16 07:23:50 AM: Global learning rate: 5e-05
09/16 07:23:50 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:23:54 AM: Update 3057: task edges-rel-semeval, batch 57 (3057): mcc: 0.8253, acc: 0.7281, precision: 0.8958, recall: 0.7760, f1: 0.8316, edges-rel-semeval_loss: 0.0469
09/16 07:23:56 AM: ***** Step 3100 / Validation 31 *****
09/16 07:23:56 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:23:56 AM: Validating...
09/16 07:23:59 AM: Updating LR scheduler:
09/16 07:23:59 AM: 	Best result seen so far for macro_avg: 0.744
09/16 07:23:59 AM: 	# validation passes without improvement: 2
09/16 07:23:59 AM: edges-rel-semeval_loss: training: 0.046893 validation: 0.067233
09/16 07:23:59 AM: macro_avg: validation: 0.736998
09/16 07:23:59 AM: micro_avg: validation: 0.000000
09/16 07:23:59 AM: edges-rel-semeval_mcc: training: 0.822253 validation: 0.732214
09/16 07:23:59 AM: edges-rel-semeval_acc: training: 0.722170 validation: 0.620540
09/16 07:23:59 AM: edges-rel-semeval_precision: training: 0.899150 validation: 0.855172
09/16 07:23:59 AM: edges-rel-semeval_recall: training: 0.767581 validation: 0.647520
09/16 07:23:59 AM: edges-rel-semeval_f1: training: 0.828173 validation: 0.736998
09/16 07:23:59 AM: Global learning rate: 5e-05
09/16 07:23:59 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:24:04 AM: Update 3187: task edges-rel-semeval, batch 87 (3187): mcc: 0.8250, acc: 0.7295, precision: 0.8962, recall: 0.7751, f1: 0.8313, edges-rel-semeval_loss: 0.0489
09/16 07:24:05 AM: ***** Step 3200 / Validation 32 *****
09/16 07:24:05 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:24:05 AM: Validating...
09/16 07:24:08 AM: Updating LR scheduler:
09/16 07:24:08 AM: 	Best result seen so far for macro_avg: 0.744
09/16 07:24:08 AM: 	# validation passes without improvement: 3
09/16 07:24:08 AM: edges-rel-semeval_loss: training: 0.048701 validation: 0.067227
09/16 07:24:08 AM: macro_avg: validation: 0.733234
09/16 07:24:08 AM: micro_avg: validation: 0.000000
09/16 07:24:08 AM: edges-rel-semeval_mcc: training: 0.824436 validation: 0.728666
09/16 07:24:08 AM: edges-rel-semeval_acc: training: 0.728750 validation: 0.616188
09/16 07:24:08 AM: edges-rel-semeval_precision: training: 0.895879 validation: 0.854167
09/16 07:24:08 AM: edges-rel-semeval_recall: training: 0.774375 validation: 0.642298
09/16 07:24:08 AM: edges-rel-semeval_f1: training: 0.830707 validation: 0.733234
09/16 07:24:08 AM: Global learning rate: 5e-05
09/16 07:24:08 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:24:14 AM: ***** Step 3300 / Validation 33 *****
09/16 07:24:14 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:24:14 AM: Validating...
09/16 07:24:14 AM: Evaluate: task edges-rel-semeval, batch 1 (36): mcc: 0.7511, acc: 0.6250, precision: 0.8462, recall: 0.6875, f1: 0.7586, edges-rel-semeval_loss: 0.0613
09/16 07:24:17 AM: Updating LR scheduler:
09/16 07:24:17 AM: 	Best result seen so far for macro_avg: 0.744
09/16 07:24:17 AM: 	# validation passes without improvement: 0
09/16 07:24:17 AM: edges-rel-semeval_loss: training: 0.045661 validation: 0.066540
09/16 07:24:17 AM: macro_avg: validation: 0.740079
09/16 07:24:17 AM: micro_avg: validation: 0.000000
09/16 07:24:17 AM: edges-rel-semeval_mcc: training: 0.825823 validation: 0.735694
09/16 07:24:17 AM: edges-rel-semeval_acc: training: 0.732892 validation: 0.626632
09/16 07:24:17 AM: edges-rel-semeval_precision: training: 0.889008 validation: 0.860438
09/16 07:24:17 AM: edges-rel-semeval_recall: training: 0.783034 validation: 0.649260
09/16 07:24:17 AM: edges-rel-semeval_f1: training: 0.832663 validation: 0.740079
09/16 07:24:17 AM: Global learning rate: 2.5e-05
09/16 07:24:17 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:24:23 AM: ***** Step 3400 / Validation 34 *****
09/16 07:24:23 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:24:23 AM: Validating...
09/16 07:24:24 AM: Evaluate: task edges-rel-semeval, batch 24 (36): mcc: 0.7555, acc: 0.6471, precision: 0.8826, recall: 0.6654, f1: 0.7587, edges-rel-semeval_loss: 0.0626
09/16 07:24:25 AM: Updating LR scheduler:
09/16 07:24:25 AM: 	Best result seen so far for macro_avg: 0.744
09/16 07:24:25 AM: 	# validation passes without improvement: 1
09/16 07:24:25 AM: edges-rel-semeval_loss: training: 0.045953 validation: 0.067291
09/16 07:24:25 AM: macro_avg: validation: 0.732125
09/16 07:24:25 AM: micro_avg: validation: 0.000000
09/16 07:24:25 AM: edges-rel-semeval_mcc: training: 0.832897 validation: 0.729616
09/16 07:24:25 AM: edges-rel-semeval_acc: training: 0.735625 validation: 0.613577
09/16 07:24:25 AM: edges-rel-semeval_precision: training: 0.901004 validation: 0.868578
09/16 07:24:25 AM: edges-rel-semeval_recall: training: 0.785000 validation: 0.632724
09/16 07:24:25 AM: edges-rel-semeval_f1: training: 0.839011 validation: 0.732125
09/16 07:24:25 AM: Global learning rate: 2.5e-05
09/16 07:24:25 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:24:32 AM: ***** Step 3500 / Validation 35 *****
09/16 07:24:32 AM: edges-rel-semeval: trained on 100 batches, 0.465 epochs
09/16 07:24:32 AM: Validating...
09/16 07:24:34 AM: Evaluate: task edges-rel-semeval, batch 33 (36): mcc: 0.7415, acc: 0.6354, precision: 0.8641, recall: 0.6562, f1: 0.7460, edges-rel-semeval_loss: 0.0631
09/16 07:24:35 AM: Updating LR scheduler:
09/16 07:24:35 AM: 	Best result seen so far for macro_avg: 0.744
09/16 07:24:35 AM: 	# validation passes without improvement: 2
09/16 07:24:35 AM: Ran out of early stopping patience. Stopping training.
09/16 07:24:35 AM: edges-rel-semeval_loss: training: 0.044701 validation: 0.066959
09/16 07:24:35 AM: macro_avg: validation: 0.730253
09/16 07:24:35 AM: micro_avg: validation: 0.000000
09/16 07:24:35 AM: edges-rel-semeval_mcc: training: 0.829315 validation: 0.725510
09/16 07:24:35 AM: edges-rel-semeval_acc: training: 0.729423 validation: 0.617058
09/16 07:24:35 AM: edges-rel-semeval_precision: training: 0.898115 validation: 0.850694
09/16 07:24:35 AM: edges-rel-semeval_recall: training: 0.781142 validation: 0.639687
09/16 07:24:35 AM: edges-rel-semeval_f1: training: 0.835554 validation: 0.730253
09/16 07:24:35 AM: Global learning rate: 2.5e-05
09/16 07:24:35 AM: Saving checkpoints to: ./experiments/rel-semeval-None-mix/run
09/16 07:24:35 AM: Stopped training after 35 validation checks
09/16 07:24:35 AM: Trained edges-rel-semeval for 3500 batches or 16.279 epochs
09/16 07:24:35 AM: ***** VALIDATION RESULTS *****
09/16 07:24:35 AM: edges-rel-semeval_f1 (for best val pass 25): edges-rel-semeval_loss: 0.06676, macro_avg: 0.74421, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.74244, edges-rel-semeval_acc: 0.62663, edges-rel-semeval_precision: 0.88292, edges-rel-semeval_recall: 0.64317, edges-rel-semeval_f1: 0.74421
09/16 07:24:35 AM: micro_avg (for best val pass 1): edges-rel-semeval_loss: 0.17648, macro_avg: 0.00000, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.00000, edges-rel-semeval_acc: 0.00000, edges-rel-semeval_precision: 0.00000, edges-rel-semeval_recall: 0.00000, edges-rel-semeval_f1: 0.00000
09/16 07:24:35 AM: macro_avg (for best val pass 25): edges-rel-semeval_loss: 0.06676, macro_avg: 0.74421, micro_avg: 0.00000, edges-rel-semeval_mcc: 0.74244, edges-rel-semeval_acc: 0.62663, edges-rel-semeval_precision: 0.88292, edges-rel-semeval_recall: 0.64317, edges-rel-semeval_f1: 0.74421
09/16 07:24:35 AM: Evaluating...
09/16 07:24:35 AM: Loaded model state from ./experiments/rel-semeval-None-mix/run/edges-rel-semeval/model_state_target_train_val_25.best.th
09/16 07:24:35 AM: Evaluating on: edges-rel-semeval, split: val
09/16 07:24:37 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 07:24:37 AM: Finished evaluating on: edges-rel-semeval
09/16 07:24:37 AM: Task 'edges-rel-semeval': joining predictions with input split 'val'
09/16 07:24:37 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-None-mix/run
09/16 07:24:37 AM: Wrote all preds for split 'val' to ./experiments/rel-semeval-None-mix/run
09/16 07:24:37 AM: Evaluating on: edges-rel-semeval, split: test
09/16 07:24:44 AM: Task 'edges-rel-semeval': sorting predictions by 'idx'
09/16 07:24:44 AM: Finished evaluating on: edges-rel-semeval
09/16 07:24:44 AM: Task 'edges-rel-semeval': joining predictions with input split 'test'
09/16 07:24:44 AM: Task 'edges-rel-semeval': Wrote predictions to ./experiments/rel-semeval-None-mix/run
09/16 07:24:44 AM: Wrote all preds for split 'test' to ./experiments/rel-semeval-None-mix/run
09/16 07:24:44 AM: Writing results for split 'val' to ./experiments/rel-semeval-None-mix/results.tsv
09/16 07:24:44 AM: micro_avg: 0.000, macro_avg: 0.744, edges-rel-semeval_mcc: 0.742, edges-rel-semeval_acc: 0.627, edges-rel-semeval_precision: 0.883, edges-rel-semeval_recall: 0.643, edges-rel-semeval_f1: 0.744
09/16 07:24:44 AM: Done!
