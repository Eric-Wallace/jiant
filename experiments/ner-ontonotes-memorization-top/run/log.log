09/16 09:13:23 AM: Git branch: master
09/16 09:13:23 AM: Git SHA: 3ca0f74688379229ab3eec908a215358ad18b3f4
09/16 09:13:23 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/ner-ontonotes-memorization-top/",
  "exp_name": "experiments/ner-ontonotes-memorization-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/ner-ontonotes-memorization-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/memorization",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/ner-ontonotes-memorization-top__run",
  "run_dir": "./experiments/ner-ontonotes-memorization-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-ner-ontonotes",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 09:13:23 AM: Saved config to ./experiments/ner-ontonotes-memorization-top/run/params.conf
09/16 09:13:23 AM: Using random seed 1234
09/16 09:13:58 AM: Using GPU 0
09/16 09:13:58 AM: Loading tasks...
09/16 09:13:58 AM: Writing pre-preprocessed tasks to ./experiments/ner-ontonotes-memorization-top/
09/16 09:13:58 AM: 	Creating task edges-ner-ontonotes from scratch.
09/16 09:13:59 AM: Read=49706, Skip=66106, Total=115812 from ./probing_data/edges/ontonotes/ner/train.json.retokenized.bert-base-uncased
09/16 09:13:59 AM: Read=7610, Skip=8070, Total=15680 from ./probing_data/edges/ontonotes/ner/development.json.retokenized.bert-base-uncased
09/16 09:13:59 AM: Read=5099, Skip=7118, Total=12217 from ./probing_data/edges/ontonotes/ner/test.json.retokenized.bert-base-uncased
09/16 09:14:00 AM: 	Task 'edges-ner-ontonotes': |train|=49706 |val|=7610 |test|=5099
09/16 09:14:00 AM: 	Finished loading tasks: edges-ner-ontonotes.
09/16 09:14:00 AM: 	Building vocab from scratch.
09/16 09:14:00 AM: 	Counting units for task edges-ner-ontonotes.
09/16 09:14:01 AM: 	Task 'edges-ner-ontonotes': adding vocab namespace 'edges-ner-ontonotes_labels'
09/16 09:14:02 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:14:03 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 09:14:04 AM: 	Saved vocab to ./experiments/ner-ontonotes-memorization-top/vocab
09/16 09:14:04 AM: Loading token dictionary from ./experiments/ner-ontonotes-memorization-top/vocab.
09/16 09:14:04 AM: 	Loaded vocab from ./experiments/ner-ontonotes-memorization-top/vocab
09/16 09:14:04 AM: 	Vocab namespace edges-ner-ontonotes_labels: size 18
09/16 09:14:04 AM: 	Vocab namespace tokens: size 22840
09/16 09:14:04 AM: 	Vocab namespace bert_uncased: size 30524
09/16 09:14:04 AM: 	Vocab namespace chars: size 77
09/16 09:14:04 AM: 	Finished building vocab.
09/16 09:14:04 AM: 	Task edges-ner-ontonotes (train): Indexing from scratch.
09/16 09:14:13 AM: 	Task edges-ner-ontonotes (train): Saved 49706 instances to ./experiments/ner-ontonotes-memorization-top/preproc/edges-ner-ontonotes__train_data
09/16 09:14:13 AM: 	Task edges-ner-ontonotes (val): Indexing from scratch.
09/16 09:14:16 AM: 	Task edges-ner-ontonotes (val): Saved 7610 instances to ./experiments/ner-ontonotes-memorization-top/preproc/edges-ner-ontonotes__val_data
09/16 09:14:16 AM: 	Task edges-ner-ontonotes (test): Indexing from scratch.
09/16 09:14:17 AM: 	Task edges-ner-ontonotes (test): Saved 5099 instances to ./experiments/ner-ontonotes-memorization-top/preproc/edges-ner-ontonotes__test_data
09/16 09:14:17 AM: 	Finished indexing tasks
09/16 09:14:17 AM: 	Creating trimmed target-only version of edges-ner-ontonotes train.
09/16 09:14:17 AM: 	  Training on 
09/16 09:14:17 AM: 	  Evaluating on edges-ner-ontonotes
09/16 09:14:17 AM: 	Finished loading tasks in 18.938s
09/16 09:14:17 AM: 	 Tasks: ['edges-ner-ontonotes']
09/16 09:14:17 AM: Building model...
09/16 09:14:17 AM: Using BERT model (bert-base-uncased).
09/16 09:14:17 AM: LOADING A FUNETUNED MODEL from: 
09/16 09:14:17 AM: models/memorization
09/16 09:14:17 AM: loading configuration file models/memorization/config.json
09/16 09:14:17 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "random-memorization",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 09:14:17 AM: loading weights file models/memorization/pytorch_model.bin
09/16 09:14:23 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmphcv8rbwj
09/16 09:14:25 AM: copying /tmp/tmphcv8rbwj to cache at ./experiments/ner-ontonotes-memorization-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:14:25 AM: creating metadata file for ./experiments/ner-ontonotes-memorization-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:14:25 AM: removing temp file /tmp/tmphcv8rbwj
09/16 09:14:25 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/ner-ontonotes-memorization-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:14:25 AM: Initializing parameters
09/16 09:14:25 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 09:14:25 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 09:14:25 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 09:14:25 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 09:14:25 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 09:14:25 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 09:14:25 AM: 	Task 'edges-ner-ontonotes' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-ner-ontonotes"
}
09/16 09:14:53 AM: Model specification:
09/16 09:14:53 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-ner-ontonotes_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Linear(in_features=512, out_features=18, bias=True)
    )
  )
)
09/16 09:14:53 AM: Model parameters:
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:14:53 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:14:53 AM: 	edges-ner-ontonotes_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 09:14:53 AM: 	edges-ner-ontonotes_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:14:53 AM: 	edges-ner-ontonotes_mdl.classifier.classifier.weight: Trainable parameter, count 9216 with torch.Size([18, 512])
09/16 09:14:53 AM: 	edges-ner-ontonotes_mdl.classifier.classifier.bias: Trainable parameter, count 18 with torch.Size([18])
09/16 09:14:53 AM: Total number of parameters: 109688338 (1.09688e+08)
09/16 09:14:53 AM: Number of trainable parameters: 206098 (206098)
09/16 09:14:53 AM: Finished building model in 36.525s
09/16 09:14:53 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-ner-ontonotes 

09/16 09:14:56 AM: patience = 9
09/16 09:14:56 AM: val_interval = 1000
09/16 09:14:56 AM: max_vals = 250
09/16 09:14:56 AM: cuda_device = 0
09/16 09:14:56 AM: grad_norm = 5.0
09/16 09:14:56 AM: grad_clipping = None
09/16 09:14:56 AM: lr_decay = 0.99
09/16 09:14:56 AM: min_lr = 1e-06
09/16 09:14:56 AM: keep_all_checkpoints = 0
09/16 09:14:56 AM: val_data_limit = 5000
09/16 09:14:56 AM: max_epochs = -1
09/16 09:14:56 AM: dec_val_scale = 250
09/16 09:14:56 AM: training_data_fraction = 1
09/16 09:14:56 AM: type = adam
09/16 09:14:56 AM: parameter_groups = None
09/16 09:14:56 AM: Number of trainable parameters: 206098
09/16 09:14:56 AM: infer_type_and_cast = True
09/16 09:14:56 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:14:56 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:14:56 AM: lr = 0.0001
09/16 09:14:56 AM: amsgrad = True
09/16 09:14:56 AM: type = reduce_on_plateau
09/16 09:14:56 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:14:56 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:14:56 AM: mode = max
09/16 09:14:56 AM: factor = 0.5
09/16 09:14:56 AM: patience = 3
09/16 09:14:56 AM: threshold = 0.0001
09/16 09:14:56 AM: threshold_mode = abs
09/16 09:14:56 AM: verbose = True
09/16 09:14:56 AM: type = adam
09/16 09:14:56 AM: parameter_groups = None
09/16 09:14:56 AM: Number of trainable parameters: 206098
09/16 09:14:56 AM: infer_type_and_cast = True
09/16 09:14:56 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:14:56 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:14:56 AM: lr = 0.0001
09/16 09:14:56 AM: amsgrad = True
09/16 09:14:56 AM: type = reduce_on_plateau
09/16 09:14:56 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:14:56 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:14:56 AM: mode = max
09/16 09:14:56 AM: factor = 0.5
09/16 09:14:56 AM: patience = 3
09/16 09:14:56 AM: threshold = 0.0001
09/16 09:14:56 AM: threshold_mode = abs
09/16 09:14:56 AM: verbose = True
09/16 09:14:56 AM: Starting training without restoring from a checkpoint.
09/16 09:14:56 AM: Training examples per task, before any subsampling: {'edges-ner-ontonotes': 49706}
09/16 09:14:56 AM: Beginning training with stopping criteria based on metric: edges-ner-ontonotes_f1
09/16 09:15:06 AM: Update 42: task edges-ner-ontonotes, batch 42 (42): mcc: 0.0093, acc: 0.0106, precision: 0.0632, recall: 0.0818, f1: 0.0713, edges-ner-ontonotes_loss: 0.4127
09/16 09:15:16 AM: Update 207: task edges-ner-ontonotes, batch 207 (207): mcc: 0.0897, acc: 0.0530, precision: 0.2052, recall: 0.0684, f1: 0.1026, edges-ner-ontonotes_loss: 0.2060
09/16 09:15:26 AM: Update 323: task edges-ner-ontonotes, batch 323 (323): mcc: 0.2759, acc: 0.1671, precision: 0.5020, recall: 0.1774, f1: 0.2622, edges-ner-ontonotes_loss: 0.1718
09/16 09:15:36 AM: Update 466: task edges-ner-ontonotes, batch 466 (466): mcc: 0.4444, acc: 0.2970, precision: 0.7014, recall: 0.3060, f1: 0.4261, edges-ner-ontonotes_loss: 0.1460
09/16 09:15:47 AM: Update 605: task edges-ner-ontonotes, batch 605 (605): mcc: 0.5441, acc: 0.3919, precision: 0.7834, recall: 0.4017, f1: 0.5311, edges-ner-ontonotes_loss: 0.1287
09/16 09:15:57 AM: Update 719: task edges-ner-ontonotes, batch 719 (719): mcc: 0.6030, acc: 0.4541, precision: 0.8232, recall: 0.4647, f1: 0.5941, edges-ner-ontonotes_loss: 0.1179
09/16 09:16:07 AM: Update 863: task edges-ner-ontonotes, batch 863 (863): mcc: 0.6518, acc: 0.5101, precision: 0.8497, recall: 0.5222, f1: 0.6468, edges-ner-ontonotes_loss: 0.1069
09/16 09:16:17 AM: Update 974: task edges-ner-ontonotes, batch 974 (974): mcc: 0.6815, acc: 0.5462, precision: 0.8636, recall: 0.5592, f1: 0.6789, edges-ner-ontonotes_loss: 0.1002
09/16 09:16:19 AM: ***** Step 1000 / Validation 1 *****
09/16 09:16:19 AM: edges-ner-ontonotes: trained on 1000 batches, 0.644 epochs
09/16 09:16:19 AM: Validating...
09/16 09:16:33 AM: Evaluate: task edges-ner-ontonotes, batch 61 (157): mcc: 0.8230, acc: 0.7549, precision: 0.9033, recall: 0.7661, f1: 0.8291, edges-ner-ontonotes_loss: 0.0609
09/16 09:16:45 AM: Evaluate: task edges-ner-ontonotes, batch 113 (157): mcc: 0.8504, acc: 0.7857, precision: 0.9222, recall: 0.7983, f1: 0.8558, edges-ner-ontonotes_loss: 0.0533
09/16 09:16:50 AM: Best result seen so far for edges-ner-ontonotes.
09/16 09:16:51 AM: Best result seen so far for micro.
09/16 09:16:51 AM: Best result seen so far for macro.
09/16 09:16:51 AM: Updating LR scheduler:
09/16 09:16:51 AM: 	Best result seen so far for macro_avg: 0.864
09/16 09:16:51 AM: 	# validation passes without improvement: 0
09/16 09:16:51 AM: edges-ner-ontonotes_loss: training: 0.098809 validation: 0.049903
09/16 09:16:51 AM: macro_avg: validation: 0.864407
09/16 09:16:51 AM: micro_avg: validation: 0.000000
09/16 09:16:51 AM: edges-ner-ontonotes_mcc: training: 0.687411 validation: 0.859208
09/16 09:16:51 AM: edges-ner-ontonotes_acc: training: 0.553614 validation: 0.797164
09/16 09:16:51 AM: edges-ner-ontonotes_precision: training: 0.866420 validation: 0.927374
09/16 09:16:51 AM: edges-ner-ontonotes_recall: training: 0.566717 validation: 0.809448
09/16 09:16:51 AM: edges-ner-ontonotes_f1: training: 0.685231 validation: 0.864407
09/16 09:16:51 AM: Global learning rate: 0.0001
09/16 09:16:51 AM: Saving checkpoints to: ./experiments/ner-ontonotes-memorization-top/run
09/16 09:16:55 AM: Update 1048: task edges-ner-ontonotes, batch 48 (1048): mcc: 0.8679, acc: 0.8003, precision: 0.9363, recall: 0.8171, f1: 0.8726, edges-ner-ontonotes_loss: 0.0454
09/16 09:17:05 AM: Update 1177: task edges-ner-ontonotes, batch 177 (1177): mcc: 0.8710, acc: 0.8070, precision: 0.9339, recall: 0.8246, f1: 0.8759, edges-ner-ontonotes_loss: 0.0442
09/16 09:17:15 AM: Update 1281: task edges-ner-ontonotes, batch 281 (1281): mcc: 0.8656, acc: 0.8004, precision: 0.9299, recall: 0.8187, f1: 0.8707, edges-ner-ontonotes_loss: 0.0452
09/16 09:17:25 AM: Update 1423: task edges-ner-ontonotes, batch 423 (1423): mcc: 0.8556, acc: 0.7858, precision: 0.9261, recall: 0.8041, f1: 0.8608, edges-ner-ontonotes_loss: 0.0494
09/16 09:17:35 AM: Update 1557: task edges-ner-ontonotes, batch 557 (1557): mcc: 0.8515, acc: 0.7807, precision: 0.9239, recall: 0.7988, f1: 0.8568, edges-ner-ontonotes_loss: 0.0505
09/16 09:17:45 AM: Update 1726: task edges-ner-ontonotes, batch 726 (1726): mcc: 0.8494, acc: 0.7782, precision: 0.9227, recall: 0.7961, f1: 0.8547, edges-ner-ontonotes_loss: 0.0504
09/16 09:17:56 AM: Update 1870: task edges-ner-ontonotes, batch 870 (1870): mcc: 0.8496, acc: 0.7785, precision: 0.9223, recall: 0.7967, f1: 0.8549, edges-ner-ontonotes_loss: 0.0500
09/16 09:18:06 AM: ***** Step 2000 / Validation 2 *****
09/16 09:18:06 AM: edges-ner-ontonotes: trained on 1000 batches, 0.644 epochs
09/16 09:18:06 AM: Validating...
09/16 09:18:06 AM: Evaluate: task edges-ner-ontonotes, batch 2 (157): mcc: 0.7211, acc: 0.6154, precision: 0.8542, recall: 0.6308, f1: 0.7257, edges-ner-ontonotes_loss: 0.0728
09/16 09:18:16 AM: Evaluate: task edges-ner-ontonotes, batch 97 (157): mcc: 0.8850, acc: 0.8344, precision: 0.9376, recall: 0.8468, f1: 0.8899, edges-ner-ontonotes_loss: 0.0379
09/16 09:18:24 AM: Best result seen so far for edges-ner-ontonotes.
09/16 09:18:24 AM: Best result seen so far for macro.
09/16 09:18:24 AM: Updating LR scheduler:
09/16 09:18:24 AM: 	Best result seen so far for macro_avg: 0.899
09/16 09:18:24 AM: 	# validation passes without improvement: 0
09/16 09:18:24 AM: edges-ner-ontonotes_loss: training: 0.048733 validation: 0.034930
09/16 09:18:24 AM: macro_avg: validation: 0.899107
09/16 09:18:24 AM: micro_avg: validation: 0.000000
09/16 09:18:24 AM: edges-ner-ontonotes_mcc: training: 0.852922 validation: 0.894584
09/16 09:18:24 AM: edges-ner-ontonotes_acc: training: 0.783336 validation: 0.845693
09/16 09:18:24 AM: edges-ner-ontonotes_precision: training: 0.923220 validation: 0.943736
09/16 09:18:24 AM: edges-ner-ontonotes_recall: training: 0.801895 validation: 0.858508
09/16 09:18:24 AM: edges-ner-ontonotes_f1: training: 0.858291 validation: 0.899107
09/16 09:18:24 AM: Global learning rate: 0.0001
09/16 09:18:24 AM: Saving checkpoints to: ./experiments/ner-ontonotes-memorization-top/run
09/16 09:18:26 AM: Update 2034: task edges-ner-ontonotes, batch 34 (2034): mcc: 0.8839, acc: 0.8285, precision: 0.9362, recall: 0.8460, f1: 0.8888, edges-ner-ontonotes_loss: 0.0365
09/16 09:18:36 AM: Update 2170: task edges-ner-ontonotes, batch 170 (2170): mcc: 0.8836, acc: 0.8294, precision: 0.9367, recall: 0.8450, f1: 0.8885, edges-ner-ontonotes_loss: 0.0370
09/16 09:18:46 AM: Update 2280: task edges-ner-ontonotes, batch 280 (2280): mcc: 0.8882, acc: 0.8348, precision: 0.9380, recall: 0.8522, f1: 0.8930, edges-ner-ontonotes_loss: 0.0356
09/16 09:18:56 AM: Update 2414: task edges-ner-ontonotes, batch 414 (2414): mcc: 0.8929, acc: 0.8409, precision: 0.9398, recall: 0.8592, f1: 0.8977, edges-ner-ontonotes_loss: 0.0342
09/16 09:19:06 AM: Update 2518: task edges-ner-ontonotes, batch 518 (2518): mcc: 0.8960, acc: 0.8446, precision: 0.9414, recall: 0.8632, f1: 0.9006, edges-ner-ontonotes_loss: 0.0333
09/16 09:19:17 AM: Update 2657: task edges-ner-ontonotes, batch 657 (2657): mcc: 0.8967, acc: 0.8451, precision: 0.9410, recall: 0.8650, f1: 0.9014, edges-ner-ontonotes_loss: 0.0329
09/16 09:19:27 AM: Update 2791: task edges-ner-ontonotes, batch 791 (2791): mcc: 0.8984, acc: 0.8474, precision: 0.9413, recall: 0.8677, f1: 0.9030, edges-ner-ontonotes_loss: 0.0323
09/16 09:19:37 AM: Update 2897: task edges-ner-ontonotes, batch 897 (2897): mcc: 0.8954, acc: 0.8432, precision: 0.9393, recall: 0.8640, f1: 0.9001, edges-ner-ontonotes_loss: 0.0337
09/16 09:19:44 AM: ***** Step 3000 / Validation 3 *****
09/16 09:19:44 AM: edges-ner-ontonotes: trained on 1000 batches, 0.644 epochs
09/16 09:19:44 AM: Validating...
09/16 09:19:47 AM: Evaluate: task edges-ner-ontonotes, batch 30 (157): mcc: 0.8467, acc: 0.7889, precision: 0.9053, recall: 0.8069, f1: 0.8532, edges-ner-ontonotes_loss: 0.0461
09/16 09:19:57 AM: Evaluate: task edges-ner-ontonotes, batch 113 (157): mcc: 0.8972, acc: 0.8503, precision: 0.9414, recall: 0.8656, f1: 0.9019, edges-ner-ontonotes_loss: 0.0336
09/16 09:20:02 AM: Best result seen so far for edges-ner-ontonotes.
09/16 09:20:03 AM: Best result seen so far for macro.
09/16 09:20:03 AM: Updating LR scheduler:
09/16 09:20:03 AM: 	Best result seen so far for macro_avg: 0.912
09/16 09:20:03 AM: 	# validation passes without improvement: 0
09/16 09:20:03 AM: edges-ner-ontonotes_loss: training: 0.034921 validation: 0.030682
09/16 09:20:03 AM: macro_avg: validation: 0.911510
09/16 09:20:03 AM: micro_avg: validation: 0.000000
09/16 09:20:03 AM: edges-ner-ontonotes_mcc: training: 0.892698 validation: 0.907257
09/16 09:20:03 AM: edges-ner-ontonotes_acc: training: 0.839582 validation: 0.863664
09/16 09:20:03 AM: edges-ner-ontonotes_precision: training: 0.937750 validation: 0.947773
09/16 09:20:03 AM: edges-ner-ontonotes_recall: training: 0.860629 validation: 0.877919
09/16 09:20:03 AM: edges-ner-ontonotes_f1: training: 0.897536 validation: 0.911510
09/16 09:20:03 AM: Global learning rate: 0.0001
09/16 09:20:03 AM: Saving checkpoints to: ./experiments/ner-ontonotes-memorization-top/run
09/16 09:20:07 AM: Update 3056: task edges-ner-ontonotes, batch 56 (3056): mcc: 0.8600, acc: 0.7979, precision: 0.9143, recall: 0.8227, f1: 0.8661, edges-ner-ontonotes_loss: 0.0463
09/16 09:20:17 AM: Update 3184: task edges-ner-ontonotes, batch 184 (3184): mcc: 0.8610, acc: 0.8000, precision: 0.9142, recall: 0.8247, f1: 0.8671, edges-ner-ontonotes_loss: 0.0449
09/16 09:20:27 AM: Update 3350: task edges-ner-ontonotes, batch 350 (3350): mcc: 0.8657, acc: 0.8058, precision: 0.9182, recall: 0.8295, f1: 0.8716, edges-ner-ontonotes_loss: 0.0428
09/16 09:20:37 AM: Update 3477: task edges-ner-ontonotes, batch 477 (3477): mcc: 0.8704, acc: 0.8123, precision: 0.9215, recall: 0.8350, f1: 0.8761, edges-ner-ontonotes_loss: 0.0414
09/16 09:20:47 AM: Update 3613: task edges-ner-ontonotes, batch 613 (3613): mcc: 0.8768, acc: 0.8209, precision: 0.9250, recall: 0.8434, f1: 0.8823, edges-ner-ontonotes_loss: 0.0396
09/16 09:20:58 AM: Update 3739: task edges-ner-ontonotes, batch 739 (3739): mcc: 0.8817, acc: 0.8274, precision: 0.9282, recall: 0.8494, f1: 0.8870, edges-ner-ontonotes_loss: 0.0382
09/16 09:21:08 AM: Update 3862: task edges-ner-ontonotes, batch 862 (3862): mcc: 0.8866, acc: 0.8339, precision: 0.9304, recall: 0.8564, f1: 0.8919, edges-ner-ontonotes_loss: 0.0368
09/16 09:21:18 AM: ***** Step 4000 / Validation 4 *****
09/16 09:21:18 AM: edges-ner-ontonotes: trained on 1000 batches, 0.644 epochs
09/16 09:21:18 AM: Validating...
09/16 09:21:18 AM: Evaluate: task edges-ner-ontonotes, batch 2 (157): mcc: 0.7697, acc: 0.6692, precision: 0.8532, recall: 0.7154, f1: 0.7782, edges-ner-ontonotes_loss: 0.0622
09/16 09:21:28 AM: Evaluate: task edges-ner-ontonotes, batch 96 (157): mcc: 0.9039, acc: 0.8626, precision: 0.9373, recall: 0.8817, f1: 0.9086, edges-ner-ontonotes_loss: 0.0321
09/16 09:21:36 AM: Best result seen so far for edges-ner-ontonotes.
09/16 09:21:36 AM: Best result seen so far for macro.
09/16 09:21:36 AM: Updating LR scheduler:
09/16 09:21:36 AM: 	Best result seen so far for macro_avg: 0.922
09/16 09:21:36 AM: 	# validation passes without improvement: 0
09/16 09:21:36 AM: edges-ner-ontonotes_loss: training: 0.035255 validation: 0.027613
09/16 09:21:36 AM: macro_avg: validation: 0.921701
09/16 09:21:36 AM: micro_avg: validation: 0.000000
09/16 09:21:36 AM: edges-ner-ontonotes_mcc: training: 0.891284 validation: 0.917551
09/16 09:21:36 AM: edges-ner-ontonotes_acc: training: 0.839878 validation: 0.880573
09/16 09:21:36 AM: edges-ner-ontonotes_precision: training: 0.933062 validation: 0.945748
09/16 09:21:36 AM: edges-ner-ontonotes_recall: training: 0.862430 validation: 0.898847
09/16 09:21:36 AM: edges-ner-ontonotes_f1: training: 0.896357 validation: 0.921701
09/16 09:21:36 AM: Global learning rate: 0.0001
09/16 09:21:36 AM: Saving checkpoints to: ./experiments/ner-ontonotes-memorization-top/run
09/16 09:21:38 AM: Update 4028: task edges-ner-ontonotes, batch 28 (4028): mcc: 0.9252, acc: 0.8881, precision: 0.9518, recall: 0.9073, f1: 0.9290, edges-ner-ontonotes_loss: 0.0249
09/16 09:21:48 AM: Update 4135: task edges-ner-ontonotes, batch 135 (4135): mcc: 0.9206, acc: 0.8788, precision: 0.9492, recall: 0.9012, f1: 0.9246, edges-ner-ontonotes_loss: 0.0259
09/16 09:21:58 AM: Update 4268: task edges-ner-ontonotes, batch 268 (4268): mcc: 0.9189, acc: 0.8765, precision: 0.9472, recall: 0.9001, f1: 0.9230, edges-ner-ontonotes_loss: 0.0261
09/16 09:22:08 AM: Update 4382: task edges-ner-ontonotes, batch 382 (4382): mcc: 0.9146, acc: 0.8710, precision: 0.9441, recall: 0.8950, f1: 0.9189, edges-ner-ontonotes_loss: 0.0272
09/16 09:22:18 AM: Update 4520: task edges-ner-ontonotes, batch 520 (4520): mcc: 0.9062, acc: 0.8600, precision: 0.9391, recall: 0.8842, f1: 0.9108, edges-ner-ontonotes_loss: 0.0310
09/16 09:22:29 AM: Update 4659: task edges-ner-ontonotes, batch 659 (4659): mcc: 0.8998, acc: 0.8517, precision: 0.9352, recall: 0.8761, f1: 0.9047, edges-ner-ontonotes_loss: 0.0339
09/16 09:22:39 AM: Update 4799: task edges-ner-ontonotes, batch 799 (4799): mcc: 0.8966, acc: 0.8475, precision: 0.9332, recall: 0.8721, f1: 0.9016, edges-ner-ontonotes_loss: 0.0349
09/16 09:22:49 AM: Update 4958: task edges-ner-ontonotes, batch 958 (4958): mcc: 0.8950, acc: 0.8454, precision: 0.9323, recall: 0.8699, f1: 0.9000, edges-ner-ontonotes_loss: 0.0352
09/16 09:22:54 AM: ***** Step 5000 / Validation 5 *****
09/16 09:22:54 AM: edges-ner-ontonotes: trained on 1000 batches, 0.644 epochs
09/16 09:22:54 AM: Validating...
09/16 09:22:59 AM: Evaluate: task edges-ner-ontonotes, batch 52 (157): mcc: 0.8955, acc: 0.8526, precision: 0.9322, recall: 0.8711, f1: 0.9006, edges-ner-ontonotes_loss: 0.0331
09/16 09:23:09 AM: Evaluate: task edges-ner-ontonotes, batch 131 (157): mcc: 0.9186, acc: 0.8804, precision: 0.9520, recall: 0.8948, f1: 0.9225, edges-ner-ontonotes_loss: 0.0271
09/16 09:23:12 AM: Best result seen so far for edges-ner-ontonotes.
09/16 09:23:12 AM: Best result seen so far for macro.
09/16 09:23:12 AM: Updating LR scheduler:
09/16 09:23:12 AM: 	Best result seen so far for macro_avg: 0.925
09/16 09:23:12 AM: 	# validation passes without improvement: 0
09/16 09:23:12 AM: edges-ner-ontonotes_loss: training: 0.035272 validation: 0.026123
09/16 09:23:12 AM: macro_avg: validation: 0.925417
09/16 09:23:12 AM: micro_avg: validation: 0.000000
09/16 09:23:12 AM: edges-ner-ontonotes_mcc: training: 0.894535 validation: 0.921593
09/16 09:23:12 AM: edges-ner-ontonotes_acc: training: 0.844765 validation: 0.884668
09/16 09:23:12 AM: edges-ner-ontonotes_precision: training: 0.932083 validation: 0.952924
09/16 09:23:12 AM: edges-ner-ontonotes_recall: training: 0.869335 validation: 0.899454
09/16 09:23:12 AM: edges-ner-ontonotes_f1: training: 0.899616 validation: 0.925417
09/16 09:23:12 AM: Global learning rate: 0.0001
09/16 09:23:12 AM: Saving checkpoints to: ./experiments/ner-ontonotes-memorization-top/run
09/16 09:23:19 AM: Update 5088: task edges-ner-ontonotes, batch 88 (5088): mcc: 0.8965, acc: 0.8505, precision: 0.9295, recall: 0.8755, f1: 0.9017, edges-ner-ontonotes_loss: 0.0323
09/16 09:23:29 AM: Update 5226: task edges-ner-ontonotes, batch 226 (5226): mcc: 0.9015, acc: 0.8554, precision: 0.9354, recall: 0.8790, f1: 0.9063, edges-ner-ontonotes_loss: 0.0313
09/16 09:23:39 AM: Update 5347: task edges-ner-ontonotes, batch 347 (5347): mcc: 0.9068, acc: 0.8620, precision: 0.9386, recall: 0.8858, f1: 0.9115, edges-ner-ontonotes_loss: 0.0295
09/16 09:23:49 AM: Update 5478: task edges-ner-ontonotes, batch 478 (5478): mcc: 0.9107, acc: 0.8672, precision: 0.9411, recall: 0.8907, f1: 0.9152, edges-ner-ontonotes_loss: 0.0283
09/16 09:24:01 AM: Update 5608: task edges-ner-ontonotes, batch 608 (5608): mcc: 0.9138, acc: 0.8713, precision: 0.9422, recall: 0.8953, f1: 0.9181, edges-ner-ontonotes_loss: 0.0274
09/16 09:24:11 AM: Update 5735: task edges-ner-ontonotes, batch 735 (5735): mcc: 0.9148, acc: 0.8723, precision: 0.9425, recall: 0.8968, f1: 0.9191, edges-ner-ontonotes_loss: 0.0270
09/16 09:24:21 AM: Update 5869: task edges-ner-ontonotes, batch 869 (5869): mcc: 0.9157, acc: 0.8735, precision: 0.9429, recall: 0.8981, f1: 0.9199, edges-ner-ontonotes_loss: 0.0268
09/16 09:24:32 AM: Update 5981: task edges-ner-ontonotes, batch 981 (5981): mcc: 0.9138, acc: 0.8708, precision: 0.9418, recall: 0.8957, f1: 0.9181, edges-ner-ontonotes_loss: 0.0277
09/16 09:24:33 AM: ***** Step 6000 / Validation 6 *****
09/16 09:24:34 AM: edges-ner-ontonotes: trained on 1000 batches, 0.644 epochs
09/16 09:24:34 AM: Validating...
09/16 09:24:42 AM: Evaluate: task edges-ner-ontonotes, batch 76 (157): mcc: 0.8972, acc: 0.8520, precision: 0.9351, recall: 0.8714, f1: 0.9021, edges-ner-ontonotes_loss: 0.0333
09/16 09:24:52 AM: Evaluate: task edges-ner-ontonotes, batch 157 (157): mcc: 0.9203, acc: 0.8830, precision: 0.9519, recall: 0.8980, f1: 0.9242, edges-ner-ontonotes_loss: 0.0264
09/16 09:24:52 AM: Updating LR scheduler:
09/16 09:24:52 AM: 	Best result seen so far for macro_avg: 0.925
09/16 09:24:52 AM: 	# validation passes without improvement: 1
09/16 09:24:52 AM: edges-ner-ontonotes_loss: training: 0.027953 validation: 0.026370
09/16 09:24:52 AM: macro_avg: validation: 0.924187
09/16 09:24:52 AM: micro_avg: validation: 0.000000
09/16 09:24:52 AM: edges-ner-ontonotes_mcc: training: 0.913203 validation: 0.920302
09/16 09:24:52 AM: edges-ner-ontonotes_acc: training: 0.870071 validation: 0.883000
09/16 09:24:52 AM: edges-ner-ontonotes_precision: training: 0.941530 validation: 0.951933
09/16 09:24:52 AM: edges-ner-ontonotes_recall: training: 0.894839 validation: 0.898013
09/16 09:24:52 AM: edges-ner-ontonotes_f1: training: 0.917591 validation: 0.924187
09/16 09:24:52 AM: Global learning rate: 0.0001
09/16 09:24:52 AM: Saving checkpoints to: ./experiments/ner-ontonotes-memorization-top/run
09/16 09:25:02 AM: Update 6139: task edges-ner-ontonotes, batch 139 (6139): mcc: 0.8810, acc: 0.8259, precision: 0.9225, recall: 0.8535, f1: 0.8867, edges-ner-ontonotes_loss: 0.0413
09/16 09:25:12 AM: Update 6260: task edges-ner-ontonotes, batch 260 (6260): mcc: 0.8813, acc: 0.8268, precision: 0.9227, recall: 0.8539, f1: 0.8870, edges-ner-ontonotes_loss: 0.0409
09/16 09:25:22 AM: Update 6427: task edges-ner-ontonotes, batch 427 (6427): mcc: 0.8821, acc: 0.8280, precision: 0.9226, recall: 0.8555, f1: 0.8878, edges-ner-ontonotes_loss: 0.0395
09/16 09:25:32 AM: Update 6557: task edges-ner-ontonotes, batch 557 (6557): mcc: 0.8837, acc: 0.8304, precision: 0.9241, recall: 0.8571, f1: 0.8893, edges-ner-ontonotes_loss: 0.0384
09/16 09:25:42 AM: Update 6689: task edges-ner-ontonotes, batch 689 (6689): mcc: 0.8892, acc: 0.8378, precision: 0.9272, recall: 0.8642, f1: 0.8946, edges-ner-ontonotes_loss: 0.0367
09/16 09:25:52 AM: Update 6824: task edges-ner-ontonotes, batch 824 (6824): mcc: 0.8938, acc: 0.8441, precision: 0.9300, recall: 0.8699, f1: 0.8989, edges-ner-ontonotes_loss: 0.0353
09/16 09:26:02 AM: Update 6931: task edges-ner-ontonotes, batch 931 (6931): mcc: 0.8972, acc: 0.8487, precision: 0.9321, recall: 0.8742, f1: 0.9023, edges-ner-ontonotes_loss: 0.0342
09/16 09:26:07 AM: ***** Step 7000 / Validation 7 *****
09/16 09:26:07 AM: edges-ner-ontonotes: trained on 1000 batches, 0.644 epochs
09/16 09:26:11 AM: Validating...
09/16 09:26:12 AM: Evaluate: task edges-ner-ontonotes, batch 12 (157): mcc: 0.8284, acc: 0.7642, precision: 0.8899, recall: 0.7879, f1: 0.8358, edges-ner-ontonotes_loss: 0.0478
09/16 09:26:22 AM: Evaluate: task edges-ner-ontonotes, batch 103 (157): mcc: 0.9124, acc: 0.8774, precision: 0.9410, recall: 0.8938, f1: 0.9168, edges-ner-ontonotes_loss: 0.0291
09/16 09:26:29 AM: Best result seen so far for edges-ner-ontonotes.
09/16 09:26:29 AM: Best result seen so far for macro.
09/16 09:26:29 AM: Updating LR scheduler:
09/16 09:26:29 AM: 	Best result seen so far for macro_avg: 0.930
09/16 09:26:29 AM: 	# validation passes without improvement: 0
09/16 09:26:29 AM: edges-ner-ontonotes_loss: training: 0.033401 validation: 0.024925
09/16 09:26:29 AM: macro_avg: validation: 0.930242
09/16 09:26:29 AM: micro_avg: validation: 0.000000
09/16 09:26:29 AM: edges-ner-ontonotes_mcc: training: 0.899650 validation: 0.926459
09/16 09:26:29 AM: edges-ner-ontonotes_acc: training: 0.851789 validation: 0.895208
09/16 09:26:29 AM: edges-ner-ontonotes_precision: training: 0.933582 validation: 0.950253
09/16 09:26:29 AM: edges-ner-ontonotes_recall: training: 0.877350 validation: 0.911056
09/16 09:26:29 AM: edges-ner-ontonotes_f1: training: 0.904593 validation: 0.930242
09/16 09:26:29 AM: Global learning rate: 0.0001
09/16 09:26:29 AM: Saving checkpoints to: ./experiments/ner-ontonotes-memorization-top/run
09/16 09:26:32 AM: Update 7041: task edges-ner-ontonotes, batch 41 (7041): mcc: 0.9277, acc: 0.8923, precision: 0.9441, recall: 0.9193, f1: 0.9316, edges-ner-ontonotes_loss: 0.0233
09/16 09:26:43 AM: Update 7164: task edges-ner-ontonotes, batch 164 (7164): mcc: 0.9279, acc: 0.8905, precision: 0.9493, recall: 0.9147, f1: 0.9316, edges-ner-ontonotes_loss: 0.0231
09/16 09:26:53 AM: Update 7299: task edges-ner-ontonotes, batch 299 (7299): mcc: 0.9252, acc: 0.8871, precision: 0.9472, recall: 0.9117, f1: 0.9291, edges-ner-ontonotes_loss: 0.0240
09/16 09:27:03 AM: Update 7431: task edges-ner-ontonotes, batch 431 (7431): mcc: 0.9249, acc: 0.8861, precision: 0.9463, recall: 0.9120, f1: 0.9289, edges-ner-ontonotes_loss: 0.0240
09/16 09:27:13 AM: Update 7549: task edges-ner-ontonotes, batch 549 (7549): mcc: 0.9187, acc: 0.8776, precision: 0.9426, recall: 0.9039, f1: 0.9229, edges-ner-ontonotes_loss: 0.0268
09/16 09:27:23 AM: Update 7686: task edges-ner-ontonotes, batch 686 (7686): mcc: 0.9127, acc: 0.8698, precision: 0.9391, recall: 0.8963, f1: 0.9172, edges-ner-ontonotes_loss: 0.0294
09/16 09:27:33 AM: Update 7806: task edges-ner-ontonotes, batch 806 (7806): mcc: 0.9090, acc: 0.8651, precision: 0.9368, recall: 0.8916, f1: 0.9137, edges-ner-ontonotes_loss: 0.0310
09/16 09:27:43 AM: Update 7969: task edges-ner-ontonotes, batch 969 (7969): mcc: 0.9062, acc: 0.8615, precision: 0.9351, recall: 0.8880, f1: 0.9109, edges-ner-ontonotes_loss: 0.0318
09/16 09:27:45 AM: ***** Step 8000 / Validation 8 *****
09/16 09:27:45 AM: edges-ner-ontonotes: trained on 1000 batches, 0.644 epochs
09/16 09:27:45 AM: Validating...
09/16 09:27:53 AM: Evaluate: task edges-ner-ontonotes, batch 75 (157): mcc: 0.9096, acc: 0.8685, precision: 0.9471, recall: 0.8828, f1: 0.9138, edges-ner-ontonotes_loss: 0.0299
09/16 09:28:03 AM: Evaluate: task edges-ner-ontonotes, batch 156 (157): mcc: 0.9275, acc: 0.8930, precision: 0.9585, recall: 0.9051, f1: 0.9310, edges-ner-ontonotes_loss: 0.0244
09/16 09:28:03 AM: Best result seen so far for edges-ner-ontonotes.
09/16 09:28:03 AM: Best result seen so far for macro.
09/16 09:28:03 AM: Updating LR scheduler:
09/16 09:28:03 AM: 	Best result seen so far for macro_avg: 0.931
09/16 09:28:03 AM: 	# validation passes without improvement: 0
09/16 09:28:03 AM: edges-ner-ontonotes_loss: training: 0.031900 validation: 0.024367
09/16 09:28:03 AM: macro_avg: validation: 0.931009
09/16 09:28:03 AM: micro_avg: validation: 0.000000
09/16 09:28:03 AM: edges-ner-ontonotes_mcc: training: 0.905760 validation: 0.927499
09/16 09:28:03 AM: edges-ner-ontonotes_acc: training: 0.861008 validation: 0.893009
09/16 09:28:03 AM: edges-ner-ontonotes_precision: training: 0.934737 validation: 0.958484
09/16 09:28:03 AM: edges-ner-ontonotes_recall: training: 0.887562 validation: 0.905065
09/16 09:28:03 AM: edges-ner-ontonotes_f1: training: 0.910539 validation: 0.931009
09/16 09:28:03 AM: Global learning rate: 0.0001
09/16 09:28:03 AM: Saving checkpoints to: ./experiments/ner-ontonotes-memorization-top/run
09/16 09:28:13 AM: Update 8125: task edges-ner-ontonotes, batch 125 (8125): mcc: 0.8963, acc: 0.8462, precision: 0.9309, recall: 0.8738, f1: 0.9014, edges-ner-ontonotes_loss: 0.0323
09/16 09:28:23 AM: Update 8266: task edges-ner-ontonotes, batch 266 (8266): mcc: 0.9048, acc: 0.8587, precision: 0.9351, recall: 0.8854, f1: 0.9096, edges-ner-ontonotes_loss: 0.0302
09/16 09:28:33 AM: Update 8401: task edges-ner-ontonotes, batch 401 (8401): mcc: 0.9073, acc: 0.8627, precision: 0.9359, recall: 0.8893, f1: 0.9120, edges-ner-ontonotes_loss: 0.0296
09/16 09:28:43 AM: Update 8515: task edges-ner-ontonotes, batch 515 (8515): mcc: 0.9113, acc: 0.8680, precision: 0.9383, recall: 0.8943, f1: 0.9158, edges-ner-ontonotes_loss: 0.0285
09/16 09:28:53 AM: Update 8644: task edges-ner-ontonotes, batch 644 (8644): mcc: 0.9153, acc: 0.8736, precision: 0.9402, recall: 0.8999, f1: 0.9196, edges-ner-ontonotes_loss: 0.0273
09/16 09:29:03 AM: Update 8762: task edges-ner-ontonotes, batch 762 (8762): mcc: 0.9175, acc: 0.8764, precision: 0.9417, recall: 0.9027, f1: 0.9218, edges-ner-ontonotes_loss: 0.0266
09/16 09:29:13 AM: Update 8899: task edges-ner-ontonotes, batch 899 (8899): mcc: 0.9190, acc: 0.8781, precision: 0.9427, recall: 0.9045, f1: 0.9232, edges-ner-ontonotes_loss: 0.0261
09/16 09:29:21 AM: ***** Step 9000 / Validation 9 *****
09/16 09:29:21 AM: edges-ner-ontonotes: trained on 1000 batches, 0.644 epochs
09/16 09:29:21 AM: Validating...
09/16 09:29:23 AM: Evaluate: task edges-ner-ontonotes, batch 25 (157): mcc: 0.8571, acc: 0.8072, precision: 0.9034, recall: 0.8275, f1: 0.8638, edges-ner-ontonotes_loss: 0.0464
09/16 09:29:33 AM: Evaluate: task edges-ner-ontonotes, batch 108 (157): mcc: 0.9151, acc: 0.8794, precision: 0.9447, recall: 0.8953, f1: 0.9194, edges-ner-ontonotes_loss: 0.0285
09/16 09:29:40 AM: Best result seen so far for edges-ner-ontonotes.
09/16 09:29:40 AM: Best result seen so far for macro.
09/16 09:29:41 AM: Updating LR scheduler:
09/16 09:29:41 AM: 	Best result seen so far for macro_avg: 0.932
09/16 09:29:41 AM: 	# validation passes without improvement: 0
09/16 09:29:41 AM: edges-ner-ontonotes_loss: training: 0.025871 validation: 0.024341
09/16 09:29:41 AM: macro_avg: validation: 0.932388
09/16 09:29:41 AM: micro_avg: validation: 0.000000
09/16 09:29:41 AM: edges-ner-ontonotes_mcc: training: 0.919755 validation: 0.928739
09/16 09:29:41 AM: edges-ner-ontonotes_acc: training: 0.879009 validation: 0.897710
09/16 09:29:41 AM: edges-ner-ontonotes_precision: training: 0.943234 validation: 0.952754
09/16 09:29:41 AM: edges-ner-ontonotes_recall: training: 0.905377 validation: 0.912875
09/16 09:29:41 AM: edges-ner-ontonotes_f1: training: 0.923918 validation: 0.932388
09/16 09:29:41 AM: Global learning rate: 0.0001
09/16 09:29:41 AM: Saving checkpoints to: ./experiments/ner-ontonotes-memorization-top/run
09/16 09:29:43 AM: Update 9029: task edges-ner-ontonotes, batch 29 (9029): mcc: 0.9223, acc: 0.8810, precision: 0.9472, recall: 0.9063, f1: 0.9263, edges-ner-ontonotes_loss: 0.0243
09/16 09:29:54 AM: Update 9143: task edges-ner-ontonotes, batch 143 (9143): mcc: 0.8930, acc: 0.8445, precision: 0.9276, recall: 0.8707, f1: 0.8983, edges-ner-ontonotes_loss: 0.0370
09/16 09:30:04 AM: Update 9285: task edges-ner-ontonotes, batch 285 (9285): mcc: 0.8887, acc: 0.8392, precision: 0.9249, recall: 0.8654, f1: 0.8942, edges-ner-ontonotes_loss: 0.0390
09/16 09:30:14 AM: Update 9418: task edges-ner-ontonotes, batch 418 (9418): mcc: 0.8881, acc: 0.8391, precision: 0.9238, recall: 0.8653, f1: 0.8936, edges-ner-ontonotes_loss: 0.0385
