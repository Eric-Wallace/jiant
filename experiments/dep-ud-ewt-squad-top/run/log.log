09/16 09:18:52 AM: Git branch: master
09/16 09:18:52 AM: Git SHA: e62dc9f3b01eb77fa9261a5ff029cc2e417b8272
09/16 09:18:53 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/dep-ud-ewt-squad-top/",
  "exp_name": "experiments/dep-ud-ewt-squad-top",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/dep-ud-ewt-squad-top/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/squad",
  "pytorch_transformers_output_mode": "top",
  "remote_log_name": "experiments/dep-ud-ewt-squad-top__run",
  "run_dir": "./experiments/dep-ud-ewt-squad-top/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-dep-ud-ewt",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 09:18:53 AM: Saved config to ./experiments/dep-ud-ewt-squad-top/run/params.conf
09/16 09:18:53 AM: Using random seed 1234
09/16 09:18:55 AM: Using GPU 0
09/16 09:18:55 AM: Loading tasks...
09/16 09:18:55 AM: Writing pre-preprocessed tasks to ./experiments/dep-ud-ewt-squad-top/
09/16 09:18:55 AM: 	Creating task edges-dep-ud-ewt from scratch.
09/16 09:18:57 AM: Read=12522, Skip=0, Total=12522 from ./probing_data/edges/dep_ewt/en_ewt-ud-train.json.retokenized.bert-base-uncased
09/16 09:18:57 AM: Read=2000, Skip=0, Total=2000 from ./probing_data/edges/dep_ewt/en_ewt-ud-dev.json.retokenized.bert-base-uncased
09/16 09:18:57 AM: Read=2075, Skip=0, Total=2075 from ./probing_data/edges/dep_ewt/en_ewt-ud-test.json.retokenized.bert-base-uncased
09/16 09:18:58 AM: 	Task 'edges-dep-ud-ewt': |train|=12522 |val|=2000 |test|=2075
09/16 09:18:58 AM: 	Finished loading tasks: edges-dep-ud-ewt.
09/16 09:18:58 AM: 	Building vocab from scratch.
09/16 09:18:58 AM: 	Counting units for task edges-dep-ud-ewt.
09/16 09:18:58 AM: 	Task 'edges-dep-ud-ewt': adding vocab namespace 'edges-dep-ud-ewt_labels'
09/16 09:18:59 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:18:59 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 09:18:59 AM: 	Saved vocab to ./experiments/dep-ud-ewt-squad-top/vocab
09/16 09:18:59 AM: Loading token dictionary from ./experiments/dep-ud-ewt-squad-top/vocab.
09/16 09:18:59 AM: 	Loaded vocab from ./experiments/dep-ud-ewt-squad-top/vocab
09/16 09:18:59 AM: 	Vocab namespace tokens: size 14333
09/16 09:18:59 AM: 	Vocab namespace bert_uncased: size 30524
09/16 09:18:59 AM: 	Vocab namespace edges-dep-ud-ewt_labels: size 49
09/16 09:18:59 AM: 	Vocab namespace chars: size 81
09/16 09:18:59 AM: 	Finished building vocab.
09/16 09:18:59 AM: 	Task edges-dep-ud-ewt (train): Indexing from scratch.
09/16 09:19:05 AM: 	Task edges-dep-ud-ewt (train): Saved 12522 instances to ./experiments/dep-ud-ewt-squad-top/preproc/edges-dep-ud-ewt__train_data
09/16 09:19:05 AM: 	Task edges-dep-ud-ewt (val): Indexing from scratch.
09/16 09:19:06 AM: 	Task edges-dep-ud-ewt (val): Saved 2000 instances to ./experiments/dep-ud-ewt-squad-top/preproc/edges-dep-ud-ewt__val_data
09/16 09:19:06 AM: 	Task edges-dep-ud-ewt (test): Indexing from scratch.
09/16 09:19:07 AM: 	Task edges-dep-ud-ewt (test): Saved 2075 instances to ./experiments/dep-ud-ewt-squad-top/preproc/edges-dep-ud-ewt__test_data
09/16 09:19:07 AM: 	Finished indexing tasks
09/16 09:19:07 AM: 	Creating trimmed target-only version of edges-dep-ud-ewt train.
09/16 09:19:07 AM: 	  Training on 
09/16 09:19:07 AM: 	  Evaluating on edges-dep-ud-ewt
09/16 09:19:07 AM: 	Finished loading tasks in 11.253s
09/16 09:19:07 AM: 	 Tasks: ['edges-dep-ud-ewt']
09/16 09:19:07 AM: Building model...
09/16 09:19:07 AM: Using BERT model (bert-base-uncased).
09/16 09:19:07 AM: LOADING A FUNETUNED MODEL from: 
09/16 09:19:07 AM: models/squad
09/16 09:19:07 AM: loading configuration file models/squad/config.json
09/16 09:19:07 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": null,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 09:19:07 AM: loading weights file models/squad/pytorch_model.bin
09/16 09:19:11 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmp9317a0ra
09/16 09:19:13 AM: copying /tmp/tmp9317a0ra to cache at ./experiments/dep-ud-ewt-squad-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:19:13 AM: creating metadata file for ./experiments/dep-ud-ewt-squad-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:19:13 AM: removing temp file /tmp/tmp9317a0ra
09/16 09:19:13 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/dep-ud-ewt-squad-top/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 09:19:13 AM: Initializing parameters
09/16 09:19:13 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 09:19:13 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 09:19:13 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 09:19:13 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 09:19:13 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 09:19:13 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 09:19:13 AM: 	Task 'edges-dep-ud-ewt' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-dep-ud-ewt"
}
09/16 09:19:18 AM: Model specification:
09/16 09:19:18 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-dep-ud-ewt_mdl): EdgeClassifierModule(
    (proj1): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=49, bias=True)
      )
    )
  )
)
09/16 09:19:18 AM: Model parameters:
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 09:19:18 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.proj1.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.proj2.weight: Trainable parameter, count 196608 with torch.Size([256, 768, 1])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.4.weight: Trainable parameter, count 12544 with torch.Size([49, 256])
09/16 09:19:18 AM: 	edges-dep-ud-ewt_mdl.classifier.classifier.4.bias: Trainable parameter, count 49 with torch.Size([49])
09/16 09:19:18 AM: Total number of parameters: 110151473 (1.10151e+08)
09/16 09:19:18 AM: Number of trainable parameters: 669233 (669233)
09/16 09:19:18 AM: Finished building model in 11.458s
09/16 09:19:18 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-dep-ud-ewt 

09/16 09:19:23 AM: patience = 9
09/16 09:19:23 AM: val_interval = 1000
09/16 09:19:23 AM: max_vals = 250
09/16 09:19:23 AM: cuda_device = 0
09/16 09:19:23 AM: grad_norm = 5.0
09/16 09:19:23 AM: grad_clipping = None
09/16 09:19:23 AM: lr_decay = 0.99
09/16 09:19:23 AM: min_lr = 1e-06
09/16 09:19:23 AM: keep_all_checkpoints = 0
09/16 09:19:23 AM: val_data_limit = 5000
09/16 09:19:23 AM: max_epochs = -1
09/16 09:19:23 AM: dec_val_scale = 250
09/16 09:19:23 AM: training_data_fraction = 1
09/16 09:19:23 AM: type = adam
09/16 09:19:23 AM: parameter_groups = None
09/16 09:19:23 AM: Number of trainable parameters: 669233
09/16 09:19:23 AM: infer_type_and_cast = True
09/16 09:19:23 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:23 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:23 AM: lr = 0.0001
09/16 09:19:23 AM: amsgrad = True
09/16 09:19:23 AM: type = reduce_on_plateau
09/16 09:19:23 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:23 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:23 AM: mode = max
09/16 09:19:23 AM: factor = 0.5
09/16 09:19:23 AM: patience = 3
09/16 09:19:23 AM: threshold = 0.0001
09/16 09:19:23 AM: threshold_mode = abs
09/16 09:19:23 AM: verbose = True
09/16 09:19:23 AM: type = adam
09/16 09:19:23 AM: parameter_groups = None
09/16 09:19:23 AM: Number of trainable parameters: 669233
09/16 09:19:23 AM: infer_type_and_cast = True
09/16 09:19:23 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:23 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:23 AM: lr = 0.0001
09/16 09:19:23 AM: amsgrad = True
09/16 09:19:23 AM: type = reduce_on_plateau
09/16 09:19:23 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 09:19:23 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 09:19:23 AM: mode = max
09/16 09:19:23 AM: factor = 0.5
09/16 09:19:23 AM: patience = 3
09/16 09:19:23 AM: threshold = 0.0001
09/16 09:19:23 AM: threshold_mode = abs
09/16 09:19:23 AM: verbose = True
09/16 09:19:23 AM: Starting training without restoring from a checkpoint.
09/16 09:19:23 AM: Training examples per task, before any subsampling: {'edges-dep-ud-ewt': 12522}
09/16 09:19:23 AM: Beginning training with stopping criteria based on metric: edges-dep-ud-ewt_f1
09/16 09:19:33 AM: Update 22: task edges-dep-ud-ewt, batch 22 (22): mcc: 0.0102, acc: 0.0064, precision: 0.0240, recall: 0.1597, f1: 0.0418, edges-dep-ud-ewt_loss: 0.3585
09/16 09:19:43 AM: Update 79: task edges-dep-ud-ewt, batch 79 (79): mcc: 0.0063, acc: 0.0031, precision: 0.0243, recall: 0.0602, f1: 0.0346, edges-dep-ud-ewt_loss: 0.2245
09/16 09:19:54 AM: Update 131: task edges-dep-ud-ewt, batch 131 (131): mcc: 0.0049, acc: 0.0019, precision: 0.0243, recall: 0.0363, f1: 0.0291, edges-dep-ud-ewt_loss: 0.1815
09/16 09:20:04 AM: Update 176: task edges-dep-ud-ewt, batch 176 (176): mcc: 0.0042, acc: 0.0014, precision: 0.0244, recall: 0.0261, f1: 0.0252, edges-dep-ud-ewt_loss: 0.1603
09/16 09:20:14 AM: Update 226: task edges-dep-ud-ewt, batch 226 (226): mcc: 0.0040, acc: 0.0013, precision: 0.0246, recall: 0.0207, f1: 0.0225, edges-dep-ud-ewt_loss: 0.1451
09/16 09:20:24 AM: Update 271: task edges-dep-ud-ewt, batch 271 (271): mcc: 0.0045, acc: 0.0019, precision: 0.0258, recall: 0.0177, f1: 0.0210, edges-dep-ud-ewt_loss: 0.1353
09/16 09:20:36 AM: Update 314: task edges-dep-ud-ewt, batch 314 (314): mcc: 0.0064, acc: 0.0033, precision: 0.0286, recall: 0.0167, f1: 0.0211, edges-dep-ud-ewt_loss: 0.1282
09/16 09:20:46 AM: Update 363: task edges-dep-ud-ewt, batch 363 (363): mcc: 0.0093, acc: 0.0053, precision: 0.0333, recall: 0.0169, f1: 0.0224, edges-dep-ud-ewt_loss: 0.1219
09/16 09:20:56 AM: Update 394: task edges-dep-ud-ewt, batch 394 (394): mcc: 0.0125, acc: 0.0073, precision: 0.0384, recall: 0.0179, f1: 0.0244, edges-dep-ud-ewt_loss: 0.1186
09/16 09:21:07 AM: Update 436: task edges-dep-ud-ewt, batch 436 (436): mcc: 0.0176, acc: 0.0104, precision: 0.0473, recall: 0.0198, f1: 0.0279, edges-dep-ud-ewt_loss: 0.1147
09/16 09:21:17 AM: Update 487: task edges-dep-ud-ewt, batch 487 (487): mcc: 0.0246, acc: 0.0143, precision: 0.0593, recall: 0.0229, f1: 0.0331, edges-dep-ud-ewt_loss: 0.1106
09/16 09:21:27 AM: Update 529: task edges-dep-ud-ewt, batch 529 (529): mcc: 0.0310, acc: 0.0177, precision: 0.0715, recall: 0.0256, f1: 0.0377, edges-dep-ud-ewt_loss: 0.1077
09/16 09:21:37 AM: Update 582: task edges-dep-ud-ewt, batch 582 (582): mcc: 0.0387, acc: 0.0217, precision: 0.0863, recall: 0.0290, f1: 0.0434, edges-dep-ud-ewt_loss: 0.1046
09/16 09:21:48 AM: Update 636: task edges-dep-ud-ewt, batch 636 (636): mcc: 0.0485, acc: 0.0266, precision: 0.1051, recall: 0.0335, f1: 0.0508, edges-dep-ud-ewt_loss: 0.1012
09/16 09:21:58 AM: Update 688: task edges-dep-ud-ewt, batch 688 (688): mcc: 0.0572, acc: 0.0309, precision: 0.1227, recall: 0.0374, f1: 0.0573, edges-dep-ud-ewt_loss: 0.0986
09/16 09:22:08 AM: Update 724: task edges-dep-ud-ewt, batch 724 (724): mcc: 0.0631, acc: 0.0336, precision: 0.1353, recall: 0.0397, f1: 0.0614, edges-dep-ud-ewt_loss: 0.0971
09/16 09:22:18 AM: Update 770: task edges-dep-ud-ewt, batch 770 (770): mcc: 0.0716, acc: 0.0375, precision: 0.1533, recall: 0.0433, f1: 0.0675, edges-dep-ud-ewt_loss: 0.0954
09/16 09:22:28 AM: Update 800: task edges-dep-ud-ewt, batch 800 (800): mcc: 0.0766, acc: 0.0398, precision: 0.1642, recall: 0.0454, f1: 0.0712, edges-dep-ud-ewt_loss: 0.0942
09/16 09:22:38 AM: Update 850: task edges-dep-ud-ewt, batch 850 (850): mcc: 0.0860, acc: 0.0442, precision: 0.1836, recall: 0.0496, f1: 0.0782, edges-dep-ud-ewt_loss: 0.0924
09/16 09:22:48 AM: Update 897: task edges-dep-ud-ewt, batch 897 (897): mcc: 0.0948, acc: 0.0482, precision: 0.2023, recall: 0.0536, f1: 0.0847, edges-dep-ud-ewt_loss: 0.0909
09/16 09:22:58 AM: Update 945: task edges-dep-ud-ewt, batch 945 (945): mcc: 0.1038, acc: 0.0523, precision: 0.2212, recall: 0.0576, f1: 0.0914, edges-dep-ud-ewt_loss: 0.0894
09/16 09:23:09 AM: Update 997: task edges-dep-ud-ewt, batch 997 (997): mcc: 0.1133, acc: 0.0568, precision: 0.2410, recall: 0.0620, f1: 0.0986, edges-dep-ud-ewt_loss: 0.0879
09/16 09:23:09 AM: ***** Step 1000 / Validation 1 *****
09/16 09:23:09 AM: edges-dep-ud-ewt: trained on 1000 batches, 2.551 epochs
09/16 09:23:09 AM: Validating...
09/16 09:23:19 AM: Evaluate: task edges-dep-ud-ewt, batch 37 (63): mcc: 0.4085, acc: 0.1851, precision: 0.9124, recall: 0.1867, f1: 0.3099, edges-dep-ud-ewt_loss: 0.0583
09/16 09:23:24 AM: Best result seen so far for edges-dep-ud-ewt.
09/16 09:23:24 AM: Best result seen so far for micro.
09/16 09:23:24 AM: Best result seen so far for macro.
09/16 09:23:24 AM: Updating LR scheduler:
09/16 09:23:24 AM: 	Best result seen so far for macro_avg: 0.315
09/16 09:23:24 AM: 	# validation passes without improvement: 0
09/16 09:23:24 AM: edges-dep-ud-ewt_loss: training: 0.087812 validation: 0.057549
09/16 09:23:24 AM: macro_avg: validation: 0.315467
09/16 09:23:24 AM: micro_avg: validation: 0.000000
09/16 09:23:24 AM: edges-dep-ud-ewt_mcc: training: 0.114185 validation: 0.412994
09/16 09:23:24 AM: edges-dep-ud-ewt_acc: training: 0.057190 validation: 0.189287
09/16 09:23:24 AM: edges-dep-ud-ewt_precision: training: 0.242725 validation: 0.912869
09/16 09:23:24 AM: edges-dep-ud-ewt_recall: training: 0.062395 validation: 0.190681
09/16 09:23:24 AM: edges-dep-ud-ewt_f1: training: 0.099271 validation: 0.315467
09/16 09:23:24 AM: Global learning rate: 0.0001
09/16 09:23:24 AM: Saving checkpoints to: ./experiments/dep-ud-ewt-squad-top/run
09/16 09:23:29 AM: Update 1016: task edges-dep-ud-ewt, batch 16 (1016): mcc: 0.3108, acc: 0.1276, precision: 0.7535, recall: 0.1322, f1: 0.2249, edges-dep-ud-ewt_loss: 0.0626
09/16 09:23:39 AM: Update 1066: task edges-dep-ud-ewt, batch 66 (1066): mcc: 0.3383, acc: 0.1486, precision: 0.7705, recall: 0.1529, f1: 0.2552, edges-dep-ud-ewt_loss: 0.0605
09/16 09:23:49 AM: Update 1104: task edges-dep-ud-ewt, batch 104 (1104): mcc: 0.3403, acc: 0.1504, precision: 0.7685, recall: 0.1551, f1: 0.2581, edges-dep-ud-ewt_loss: 0.0607
09/16 09:23:59 AM: Update 1157: task edges-dep-ud-ewt, batch 157 (1157): mcc: 0.3521, acc: 0.1590, precision: 0.7768, recall: 0.1641, f1: 0.2710, edges-dep-ud-ewt_loss: 0.0599
09/16 09:24:09 AM: Update 1185: task edges-dep-ud-ewt, batch 185 (1185): mcc: 0.3513, acc: 0.1591, precision: 0.7728, recall: 0.1643, f1: 0.2710, edges-dep-ud-ewt_loss: 0.0601
09/16 09:24:19 AM: Update 1234: task edges-dep-ud-ewt, batch 234 (1234): mcc: 0.3554, acc: 0.1632, precision: 0.7702, recall: 0.1687, f1: 0.2768, edges-dep-ud-ewt_loss: 0.0597
09/16 09:24:29 AM: Update 1286: task edges-dep-ud-ewt, batch 286 (1286): mcc: 0.3600, acc: 0.1679, precision: 0.7667, recall: 0.1740, f1: 0.2836, edges-dep-ud-ewt_loss: 0.0589
09/16 09:24:39 AM: Update 1339: task edges-dep-ud-ewt, batch 339 (1339): mcc: 0.3642, acc: 0.1719, precision: 0.7652, recall: 0.1784, f1: 0.2893, edges-dep-ud-ewt_loss: 0.0582
09/16 09:24:50 AM: Update 1384: task edges-dep-ud-ewt, batch 384 (1384): mcc: 0.3646, acc: 0.1732, precision: 0.7599, recall: 0.1801, f1: 0.2911, edges-dep-ud-ewt_loss: 0.0581
09/16 09:25:00 AM: Update 1428: task edges-dep-ud-ewt, batch 428 (1428): mcc: 0.3660, acc: 0.1749, precision: 0.7568, recall: 0.1822, f1: 0.2937, edges-dep-ud-ewt_loss: 0.0579
09/16 09:25:10 AM: Update 1480: task edges-dep-ud-ewt, batch 480 (1480): mcc: 0.3696, acc: 0.1785, precision: 0.7555, recall: 0.1862, f1: 0.2987, edges-dep-ud-ewt_loss: 0.0574
09/16 09:25:20 AM: Update 1511: task edges-dep-ud-ewt, batch 511 (1511): mcc: 0.3716, acc: 0.1802, precision: 0.7558, recall: 0.1881, f1: 0.3012, edges-dep-ud-ewt_loss: 0.0574
09/16 09:25:30 AM: Update 1563: task edges-dep-ud-ewt, batch 563 (1563): mcc: 0.3768, acc: 0.1847, precision: 0.7574, recall: 0.1929, f1: 0.3075, edges-dep-ud-ewt_loss: 0.0571
09/16 09:25:40 AM: Update 1591: task edges-dep-ud-ewt, batch 591 (1591): mcc: 0.3772, acc: 0.1853, precision: 0.7565, recall: 0.1936, f1: 0.3083, edges-dep-ud-ewt_loss: 0.0570
09/16 09:25:50 AM: Update 1631: task edges-dep-ud-ewt, batch 631 (1631): mcc: 0.3782, acc: 0.1866, precision: 0.7542, recall: 0.1952, f1: 0.3101, edges-dep-ud-ewt_loss: 0.0570
09/16 09:26:00 AM: Update 1673: task edges-dep-ud-ewt, batch 673 (1673): mcc: 0.3794, acc: 0.1880, precision: 0.7528, recall: 0.1968, f1: 0.3120, edges-dep-ud-ewt_loss: 0.0568
09/16 09:26:10 AM: Update 1725: task edges-dep-ud-ewt, batch 725 (1725): mcc: 0.3821, acc: 0.1907, precision: 0.7519, recall: 0.1999, f1: 0.3158, edges-dep-ud-ewt_loss: 0.0565
09/16 09:26:20 AM: Update 1774: task edges-dep-ud-ewt, batch 774 (1774): mcc: 0.3846, acc: 0.1932, precision: 0.7509, recall: 0.2028, f1: 0.3193, edges-dep-ud-ewt_loss: 0.0562
09/16 09:26:30 AM: Update 1827: task edges-dep-ud-ewt, batch 827 (1827): mcc: 0.3875, acc: 0.1960, precision: 0.7505, recall: 0.2060, f1: 0.3232, edges-dep-ud-ewt_loss: 0.0559
09/16 09:26:41 AM: Update 1881: task edges-dep-ud-ewt, batch 881 (1881): mcc: 0.3904, acc: 0.1987, precision: 0.7497, recall: 0.2092, f1: 0.3271, edges-dep-ud-ewt_loss: 0.0555
09/16 09:26:51 AM: Update 1921: task edges-dep-ud-ewt, batch 921 (1921): mcc: 0.3929, acc: 0.2010, precision: 0.7502, recall: 0.2118, f1: 0.3303, edges-dep-ud-ewt_loss: 0.0554
09/16 09:27:03 AM: Update 1961: task edges-dep-ud-ewt, batch 961 (1961): mcc: 0.3952, acc: 0.2031, precision: 0.7503, recall: 0.2142, f1: 0.3332, edges-dep-ud-ewt_loss: 0.0552
09/16 09:27:10 AM: ***** Step 2000 / Validation 2 *****
09/16 09:27:10 AM: edges-dep-ud-ewt: trained on 1000 batches, 2.551 epochs
09/16 09:27:10 AM: Validating...
09/16 09:27:13 AM: Evaluate: task edges-dep-ud-ewt, batch 10 (63): mcc: 0.5254, acc: 0.3157, precision: 0.8688, recall: 0.3239, f1: 0.4719, edges-dep-ud-ewt_loss: 0.0481
09/16 09:27:23 AM: Evaluate: task edges-dep-ud-ewt, batch 57 (63): mcc: 0.5474, acc: 0.3470, precision: 0.8515, recall: 0.3587, f1: 0.5048, edges-dep-ud-ewt_loss: 0.0455
09/16 09:27:24 AM: Best result seen so far for edges-dep-ud-ewt.
09/16 09:27:24 AM: Best result seen so far for macro.
09/16 09:27:24 AM: Updating LR scheduler:
09/16 09:27:24 AM: 	Best result seen so far for macro_avg: 0.509
09/16 09:27:24 AM: 	# validation passes without improvement: 0
09/16 09:27:24 AM: edges-dep-ud-ewt_loss: training: 0.054975 validation: 0.045300
09/16 09:27:24 AM: macro_avg: validation: 0.508555
09/16 09:27:24 AM: micro_avg: validation: 0.000000
09/16 09:27:24 AM: edges-dep-ud-ewt_mcc: training: 0.396794 validation: 0.550675
09/16 09:27:24 AM: edges-dep-ud-ewt_acc: training: 0.204778 validation: 0.350418
09/16 09:27:24 AM: edges-dep-ud-ewt_precision: training: 0.749963 validation: 0.853350
09/16 09:27:24 AM: edges-dep-ud-ewt_recall: training: 0.216042 validation: 0.362206
09/16 09:27:24 AM: edges-dep-ud-ewt_f1: training: 0.335450 validation: 0.508555
09/16 09:27:24 AM: Global learning rate: 0.0001
09/16 09:27:24 AM: Saving checkpoints to: ./experiments/dep-ud-ewt-squad-top/run
09/16 09:27:33 AM: Update 2038: task edges-dep-ud-ewt, batch 38 (2038): mcc: 0.4279, acc: 0.2390, precision: 0.7277, recall: 0.2590, f1: 0.3820, edges-dep-ud-ewt_loss: 0.0534
09/16 09:27:44 AM: Update 2088: task edges-dep-ud-ewt, batch 88 (2088): mcc: 0.4334, acc: 0.2459, precision: 0.7269, recall: 0.2660, f1: 0.3895, edges-dep-ud-ewt_loss: 0.0522
09/16 09:27:54 AM: Update 2134: task edges-dep-ud-ewt, batch 134 (2134): mcc: 0.4342, acc: 0.2462, precision: 0.7304, recall: 0.2656, f1: 0.3895, edges-dep-ud-ewt_loss: 0.0518
09/16 09:28:04 AM: Update 2175: task edges-dep-ud-ewt, batch 175 (2175): mcc: 0.4308, acc: 0.2433, precision: 0.7279, recall: 0.2624, f1: 0.3857, edges-dep-ud-ewt_loss: 0.0516
09/16 09:28:14 AM: Update 2226: task edges-dep-ud-ewt, batch 226 (2226): mcc: 0.4340, acc: 0.2465, precision: 0.7288, recall: 0.2659, f1: 0.3897, edges-dep-ud-ewt_loss: 0.0512
09/16 09:28:25 AM: Update 2275: task edges-dep-ud-ewt, batch 275 (2275): mcc: 0.4374, acc: 0.2496, precision: 0.7314, recall: 0.2691, f1: 0.3935, edges-dep-ud-ewt_loss: 0.0510
09/16 09:28:35 AM: Update 2327: task edges-dep-ud-ewt, batch 327 (2327): mcc: 0.4436, acc: 0.2552, precision: 0.7362, recall: 0.2749, f1: 0.4003, edges-dep-ud-ewt_loss: 0.0507
09/16 09:28:45 AM: Update 2353: task edges-dep-ud-ewt, batch 353 (2353): mcc: 0.4448, acc: 0.2560, precision: 0.7380, recall: 0.2756, f1: 0.4014, edges-dep-ud-ewt_loss: 0.0507
09/16 09:28:55 AM: Update 2395: task edges-dep-ud-ewt, batch 395 (2395): mcc: 0.4448, acc: 0.2564, precision: 0.7365, recall: 0.2763, f1: 0.4018, edges-dep-ud-ewt_loss: 0.0507
09/16 09:29:05 AM: Update 2442: task edges-dep-ud-ewt, batch 442 (2442): mcc: 0.4457, acc: 0.2574, precision: 0.7365, recall: 0.2774, f1: 0.4030, edges-dep-ud-ewt_loss: 0.0507
09/16 09:29:15 AM: Update 2486: task edges-dep-ud-ewt, batch 486 (2486): mcc: 0.4461, acc: 0.2580, precision: 0.7353, recall: 0.2783, f1: 0.4038, edges-dep-ud-ewt_loss: 0.0507
09/16 09:29:26 AM: Update 2535: task edges-dep-ud-ewt, batch 535 (2535): mcc: 0.4462, acc: 0.2587, precision: 0.7338, recall: 0.2791, f1: 0.4043, edges-dep-ud-ewt_loss: 0.0505
09/16 09:29:36 AM: Update 2590: task edges-dep-ud-ewt, batch 590 (2590): mcc: 0.4491, acc: 0.2614, precision: 0.7349, recall: 0.2822, f1: 0.4078, edges-dep-ud-ewt_loss: 0.0502
09/16 09:29:46 AM: Update 2640: task edges-dep-ud-ewt, batch 640 (2640): mcc: 0.4498, acc: 0.2621, precision: 0.7345, recall: 0.2832, f1: 0.4088, edges-dep-ud-ewt_loss: 0.0500
09/16 09:29:56 AM: Update 2673: task edges-dep-ud-ewt, batch 673 (2673): mcc: 0.4495, acc: 0.2619, precision: 0.7339, recall: 0.2832, f1: 0.4087, edges-dep-ud-ewt_loss: 0.0500
09/16 09:30:06 AM: Update 2722: task edges-dep-ud-ewt, batch 722 (2722): mcc: 0.4516, acc: 0.2638, precision: 0.7348, recall: 0.2854, f1: 0.4111, edges-dep-ud-ewt_loss: 0.0499
09/16 09:30:16 AM: Update 2752: task edges-dep-ud-ewt, batch 752 (2752): mcc: 0.4524, acc: 0.2645, precision: 0.7351, recall: 0.2862, f1: 0.4120, edges-dep-ud-ewt_loss: 0.0499
09/16 09:30:26 AM: Update 2800: task edges-dep-ud-ewt, batch 800 (2800): mcc: 0.4531, acc: 0.2655, precision: 0.7342, recall: 0.2875, f1: 0.4132, edges-dep-ud-ewt_loss: 0.0497
09/16 09:30:37 AM: Update 2845: task edges-dep-ud-ewt, batch 845 (2845): mcc: 0.4537, acc: 0.2661, precision: 0.7343, recall: 0.2882, f1: 0.4140, edges-dep-ud-ewt_loss: 0.0497
09/16 09:30:47 AM: Update 2895: task edges-dep-ud-ewt, batch 895 (2895): mcc: 0.4544, acc: 0.2670, precision: 0.7337, recall: 0.2894, f1: 0.4150, edges-dep-ud-ewt_loss: 0.0497
09/16 09:30:57 AM: Update 2942: task edges-dep-ud-ewt, batch 942 (2942): mcc: 0.4551, acc: 0.2678, precision: 0.7329, recall: 0.2905, f1: 0.4161, edges-dep-ud-ewt_loss: 0.0495
09/16 09:31:07 AM: Update 2986: task edges-dep-ud-ewt, batch 986 (2986): mcc: 0.4558, acc: 0.2684, precision: 0.7331, recall: 0.2913, f1: 0.4170, edges-dep-ud-ewt_loss: 0.0496
