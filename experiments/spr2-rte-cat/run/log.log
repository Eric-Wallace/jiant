09/16 08:24:41 AM: Git branch: master
09/16 08:24:41 AM: Git SHA: 1f47e9f0cf1d882ab41f98d47f94e0f8258db16b
09/16 08:24:42 AM: Parsed args: 
{
  "allow_missing_task_map": 1,
  "allow_untrained_encoder_parameters": 1,
  "do_pretrain": 0,
  "exp_dir": "./experiments/spr2-rte-cat/",
  "exp_name": "experiments/spr2-rte-cat",
  "input_module": "bert-base-uncased",
  "local_log_path": "./experiments/spr2-rte-cat/run/log.log",
  "lr_patience": 3,
  "max_seq_len": 512,
  "output_mode": "top",
  "patience": 9,
  "pretrain_tasks": "",
  "pretrained_dir": "models/rte",
  "pytorch_transformers_output_mode": "cat",
  "remote_log_name": "experiments/spr2-rte-cat__run",
  "run_dir": "./experiments/spr2-rte-cat/run",
  "run_name": "run",
  "sent_enc": "none",
  "sep_embs_for_skip": 1,
  "target_tasks": "edges-spr2",
  "tokenizer": "bert-base-uncased",
  "write_preds": "val,test"
}
09/16 08:24:42 AM: Saved config to ./experiments/spr2-rte-cat/run/params.conf
09/16 08:24:42 AM: Using random seed 1234
09/16 08:24:44 AM: Using GPU 0
09/16 08:24:44 AM: Loading tasks...
09/16 08:24:44 AM: Writing pre-preprocessed tasks to ./experiments/spr2-rte-cat/
09/16 08:24:44 AM: 	Creating task edges-spr2 from scratch.
09/16 08:24:44 AM: Read=2226, Skip=0, Total=2226 from ./probing_data/edges/spr2/edges.train.json.retokenized.bert-base-uncased
09/16 08:24:44 AM: Read=291, Skip=0, Total=291 from ./probing_data/edges/spr2/edges.dev.json.retokenized.bert-base-uncased
09/16 08:24:44 AM: Read=276, Skip=0, Total=276 from ./probing_data/edges/spr2/edges.test.json.retokenized.bert-base-uncased
09/16 08:24:44 AM: 	Task 'edges-spr2': |train|=2226 |val|=291 |test|=276
09/16 08:24:44 AM: 	Finished loading tasks: edges-spr2.
09/16 08:24:44 AM: 	Building vocab from scratch.
09/16 08:24:44 AM: 	Counting units for task edges-spr2.
09/16 08:24:44 AM: 	Task 'edges-spr2': adding vocab namespace 'edges-spr2_labels'
09/16 08:24:45 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at /home/ericwallace/.cache/torch/pytorch_transformers/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:24:45 AM: Added pytorch_transformers vocab (bert-base-uncased): 30522 tokens
09/16 08:24:46 AM: 	Saved vocab to ./experiments/spr2-rte-cat/vocab
09/16 08:24:46 AM: Loading token dictionary from ./experiments/spr2-rte-cat/vocab.
09/16 08:24:46 AM: 	Loaded vocab from ./experiments/spr2-rte-cat/vocab
09/16 08:24:46 AM: 	Vocab namespace tokens: size 7943
09/16 08:24:46 AM: 	Vocab namespace edges-spr2_labels: size 20
09/16 08:24:46 AM: 	Vocab namespace bert_uncased: size 30524
09/16 08:24:46 AM: 	Vocab namespace chars: size 65
09/16 08:24:46 AM: 	Finished building vocab.
09/16 08:24:46 AM: 	Task edges-spr2 (train): Indexing from scratch.
09/16 08:24:46 AM: 	Task edges-spr2 (train): Saved 2226 instances to ./experiments/spr2-rte-cat/preproc/edges-spr2__train_data
09/16 08:24:46 AM: 	Task edges-spr2 (val): Indexing from scratch.
09/16 08:24:47 AM: 	Task edges-spr2 (val): Saved 291 instances to ./experiments/spr2-rte-cat/preproc/edges-spr2__val_data
09/16 08:24:47 AM: 	Task edges-spr2 (test): Indexing from scratch.
09/16 08:24:47 AM: 	Task edges-spr2 (test): Saved 276 instances to ./experiments/spr2-rte-cat/preproc/edges-spr2__test_data
09/16 08:24:47 AM: 	Finished indexing tasks
09/16 08:24:47 AM: 	Creating trimmed target-only version of edges-spr2 train.
09/16 08:24:47 AM: 	  Training on 
09/16 08:24:47 AM: 	  Evaluating on edges-spr2
09/16 08:24:47 AM: 	Finished loading tasks in 2.654s
09/16 08:24:47 AM: 	 Tasks: ['edges-spr2']
09/16 08:24:47 AM: Building model...
09/16 08:24:47 AM: Using BERT model (bert-base-uncased).
09/16 08:24:47 AM: LOADING A FUNETUNED MODEL from: 
09/16 08:24:47 AM: models/rte
09/16 08:24:47 AM: loading configuration file models/rte/config.json
09/16 08:24:47 AM: Model config {
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "rte",
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "num_labels": 2,
  "output_attentions": false,
  "output_hidden_states": true,
  "pruned_heads": {},
  "torchscript": false,
  "type_vocab_size": 2,
  "vocab_size": 30522
}

09/16 08:24:47 AM: loading weights file models/rte/pytorch_model.bin
09/16 08:24:56 AM: https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt not found in cache or force_download set to True, downloading to /tmp/tmppnlf2ndu
09/16 08:24:57 AM: copying /tmp/tmppnlf2ndu to cache at ./experiments/spr2-rte-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:24:57 AM: creating metadata file for ./experiments/spr2-rte-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:24:57 AM: removing temp file /tmp/tmppnlf2ndu
09/16 08:24:57 AM: loading file https://s3.amazonaws.com/models.huggingface.co/bert/bert-base-uncased-vocab.txt from cache at ./experiments/spr2-rte-cat/pytorch_transformers_cache/26bc1ad6c0ac742e9b52263248f6d0f00068293b33709fae12320c0e35ccfbbb.542ce4285a40d23a559526243235df47c5f75c197f04f37d1a0c124c32c9a084
09/16 08:24:57 AM: Initializing parameters
09/16 08:24:57 AM: Done initializing parameters; the following parameters are using their default initialization from their code
09/16 08:24:57 AM:    _text_field_embedder.model.embeddings.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.embeddings.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.embeddings.position_embeddings.weight
09/16 08:24:57 AM:    _text_field_embedder.model.embeddings.token_type_embeddings.weight
09/16 08:24:57 AM:    _text_field_embedder.model.embeddings.word_embeddings.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.0.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.1.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.10.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.11.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.2.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.3.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.4.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.5.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.6.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.7.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.8.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.key.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.query.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.attention.self.value.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.intermediate.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.encoder.layer.9.output.dense.weight
09/16 08:24:57 AM:    _text_field_embedder.model.pooler.dense.bias
09/16 08:24:57 AM:    _text_field_embedder.model.pooler.dense.weight
09/16 08:24:57 AM: 	Task 'edges-spr2' params: {
  "cls_type": "mlp",
  "d_hid": 256,
  "pool_type": "first",
  "d_proj": 512,
  "shared_pair_attn": 0,
  "attn": 0,
  "d_hid_attn": 512,
  "dropout": 0.3,
  "cls_loss_fn": "sigmoid",
  "cls_span_pooling": "attn",
  "edgeprobe_cnn_context": 0,
  "edgeprobe_symmetric": 0,
  "use_classifier": "edges-spr2"
}
09/16 08:25:03 AM: Model specification:
09/16 08:25:03 AM: MultiTaskModel(
  (sent_encoder): SentenceEncoder(
    (_text_field_embedder): BertEmbedderModule(
      (model): BertModel(
        (embeddings): BertEmbeddings(
          (word_embeddings): Embedding(30522, 768, padding_idx=0)
          (position_embeddings): Embedding(512, 768)
          (token_type_embeddings): Embedding(2, 768)
          (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
          (dropout): Dropout(p=0.1)
        )
        (encoder): BertEncoder(
          (layer): ModuleList(
            (0): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (1): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (2): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (3): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (4): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (5): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (6): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (7): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (8): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (9): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (10): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (11): BertLayer(
              (attention): BertAttention(
                (self): BertSelfAttention(
                  (query): Linear(in_features=768, out_features=768, bias=True)
                  (key): Linear(in_features=768, out_features=768, bias=True)
                  (value): Linear(in_features=768, out_features=768, bias=True)
                  (dropout): Dropout(p=0.1)
                )
                (output): BertSelfOutput(
                  (dense): Linear(in_features=768, out_features=768, bias=True)
                  (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                  (dropout): Dropout(p=0.1)
                )
              )
              (intermediate): BertIntermediate(
                (dense): Linear(in_features=768, out_features=3072, bias=True)
              )
              (output): BertOutput(
                (dense): Linear(in_features=3072, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
          )
        )
        (pooler): BertPooler(
          (dense): Linear(in_features=768, out_features=768, bias=True)
          (activation): Tanh()
        )
      )
    )
    (_highway_layer): TimeDistributed(
      (_module): Highway(
        (_layers): ModuleList()
      )
    )
    (_phrase_layer): NullPhraseLayer()
    (_dropout): Dropout(p=0.2)
  )
  (edges-spr2_mdl): EdgeClassifierModule(
    (proj1): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (proj2): Conv1d(1536, 256, kernel_size=(1,), stride=(1,))
    (span_extractor1): EndpointSpanExtractor()
    (span_extractor2): EndpointSpanExtractor()
    (classifier): Classifier(
      (classifier): Sequential(
        (0): Linear(in_features=1024, out_features=256, bias=True)
        (1): Tanh()
        (2): LayerNorm(torch.Size([256]), eps=1e-05, elementwise_affine=True)
        (3): Dropout(p=0.3)
        (4): Linear(in_features=256, out_features=20, bias=True)
      )
    )
  )
)
09/16 08:25:03 AM: Model parameters:
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.embeddings.word_embeddings.weight: Non-trainable parameter, count 23440896 with torch.Size([30522, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.embeddings.position_embeddings.weight: Non-trainable parameter, count 393216 with torch.Size([512, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.embeddings.token_type_embeddings.weight: Non-trainable parameter, count 1536 with torch.Size([2, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.embeddings.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.0.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.1.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.2.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.3.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.4.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.5.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.6.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.7.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.8.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.9.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.10.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.query.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.key.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.self.value.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.attention.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([3072, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.intermediate.dense.bias: Non-trainable parameter, count 3072 with torch.Size([3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.weight: Non-trainable parameter, count 2359296 with torch.Size([768, 3072])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.weight: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.encoder.layer.11.output.LayerNorm.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.weight: Non-trainable parameter, count 589824 with torch.Size([768, 768])
09/16 08:25:03 AM: 	sent_encoder._text_field_embedder.model.pooler.dense.bias: Non-trainable parameter, count 768 with torch.Size([768])
09/16 08:25:03 AM: 	edges-spr2_mdl.proj1.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 08:25:03 AM: 	edges-spr2_mdl.proj1.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:25:03 AM: 	edges-spr2_mdl.proj2.weight: Trainable parameter, count 393216 with torch.Size([256, 1536, 1])
09/16 08:25:03 AM: 	edges-spr2_mdl.proj2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:25:03 AM: 	edges-spr2_mdl.classifier.classifier.0.weight: Trainable parameter, count 262144 with torch.Size([256, 1024])
09/16 08:25:03 AM: 	edges-spr2_mdl.classifier.classifier.0.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:25:03 AM: 	edges-spr2_mdl.classifier.classifier.2.weight: Trainable parameter, count 256 with torch.Size([256])
09/16 08:25:03 AM: 	edges-spr2_mdl.classifier.classifier.2.bias: Trainable parameter, count 256 with torch.Size([256])
09/16 08:25:03 AM: 	edges-spr2_mdl.classifier.classifier.4.weight: Trainable parameter, count 5120 with torch.Size([20, 256])
09/16 08:25:03 AM: 	edges-spr2_mdl.classifier.classifier.4.bias: Trainable parameter, count 20 with torch.Size([20])
09/16 08:25:03 AM: Total number of parameters: 110537236 (1.10537e+08)
09/16 08:25:03 AM: Number of trainable parameters: 1054996 (1.055e+06)
09/16 08:25:03 AM: Finished building model in 16.288s
09/16 08:25:03 AM: Will run the following steps for this experiment:
Re-training model for individual target tasks 
Evaluating model on tasks: edges-spr2 

09/16 08:25:04 AM: patience = 9
09/16 08:25:04 AM: val_interval = 100
09/16 08:25:04 AM: max_vals = 100
09/16 08:25:04 AM: cuda_device = 0
09/16 08:25:04 AM: grad_norm = 5.0
09/16 08:25:04 AM: grad_clipping = None
09/16 08:25:04 AM: lr_decay = 0.99
09/16 08:25:04 AM: min_lr = 1e-06
09/16 08:25:04 AM: keep_all_checkpoints = 0
09/16 08:25:04 AM: val_data_limit = 5000
09/16 08:25:04 AM: max_epochs = -1
09/16 08:25:04 AM: dec_val_scale = 250
09/16 08:25:04 AM: training_data_fraction = 1
09/16 08:25:04 AM: type = adam
09/16 08:25:04 AM: parameter_groups = None
09/16 08:25:04 AM: Number of trainable parameters: 1054996
09/16 08:25:04 AM: infer_type_and_cast = True
09/16 08:25:04 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:25:04 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:25:04 AM: lr = 0.0001
09/16 08:25:04 AM: amsgrad = True
09/16 08:25:04 AM: type = reduce_on_plateau
09/16 08:25:04 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:25:04 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:25:04 AM: mode = max
09/16 08:25:04 AM: factor = 0.5
09/16 08:25:04 AM: patience = 3
09/16 08:25:04 AM: threshold = 0.0001
09/16 08:25:04 AM: threshold_mode = abs
09/16 08:25:04 AM: verbose = True
09/16 08:25:04 AM: type = adam
09/16 08:25:04 AM: parameter_groups = None
09/16 08:25:04 AM: Number of trainable parameters: 1054996
09/16 08:25:04 AM: infer_type_and_cast = True
09/16 08:25:04 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:25:04 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:25:04 AM: lr = 0.0001
09/16 08:25:04 AM: amsgrad = True
09/16 08:25:04 AM: type = reduce_on_plateau
09/16 08:25:04 AM: Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
09/16 08:25:04 AM: CURRENTLY DEFINED PARAMETERS: 
09/16 08:25:04 AM: mode = max
09/16 08:25:04 AM: factor = 0.5
09/16 08:25:04 AM: patience = 3
09/16 08:25:04 AM: threshold = 0.0001
09/16 08:25:04 AM: threshold_mode = abs
09/16 08:25:04 AM: verbose = True
09/16 08:25:04 AM: Starting training without restoring from a checkpoint.
09/16 08:25:04 AM: Training examples per task, before any subsampling: {'edges-spr2': 2226}
09/16 08:25:04 AM: Beginning training with stopping criteria based on metric: edges-spr2_f1
09/16 08:25:12 AM: ***** Step 100 / Validation 1 *****
09/16 08:25:12 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:25:12 AM: Validating...
09/16 08:25:13 AM: Best result seen so far for edges-spr2.
09/16 08:25:13 AM: Best result seen so far for micro.
09/16 08:25:13 AM: Best result seen so far for macro.
09/16 08:25:13 AM: Updating LR scheduler:
09/16 08:25:13 AM: 	Best result seen so far for macro_avg: 0.795
09/16 08:25:13 AM: 	# validation passes without improvement: 0
09/16 08:25:13 AM: edges-spr2_loss: training: 0.370837 validation: 0.340398
09/16 08:25:13 AM: macro_avg: validation: 0.794791
09/16 08:25:13 AM: micro_avg: validation: 0.000000
09/16 08:25:13 AM: edges-spr2_mcc: training: 0.623470 validation: 0.688287
09/16 08:25:13 AM: edges-spr2_acc: training: 0.047794 validation: 0.071429
09/16 08:25:13 AM: edges-spr2_precision: training: 0.777688 validation: 0.850254
09/16 08:25:13 AM: edges-spr2_recall: training: 0.738075 validation: 0.746119
09/16 08:25:13 AM: edges-spr2_f1: training: 0.757363 validation: 0.794791
09/16 08:25:13 AM: Global learning rate: 0.0001
09/16 08:25:13 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:25:14 AM: Update 108: task edges-spr2, batch 8 (108): mcc: 0.6900, acc: 0.0714, precision: 0.8380, recall: 0.7618, f1: 0.7981, edges-spr2_loss: 0.3178
09/16 08:25:21 AM: ***** Step 200 / Validation 2 *****
09/16 08:25:21 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:25:21 AM: Validating...
09/16 08:25:22 AM: Best result seen so far for edges-spr2.
09/16 08:25:22 AM: Best result seen so far for macro.
09/16 08:25:22 AM: Updating LR scheduler:
09/16 08:25:22 AM: 	Best result seen so far for macro_avg: 0.816
09/16 08:25:22 AM: 	# validation passes without improvement: 0
09/16 08:25:22 AM: edges-spr2_loss: training: 0.305384 validation: 0.323775
09/16 08:25:22 AM: macro_avg: validation: 0.815760
09/16 08:25:22 AM: micro_avg: validation: 0.000000
09/16 08:25:22 AM: edges-spr2_mcc: training: 0.702047 validation: 0.713158
09/16 08:25:22 AM: edges-spr2_acc: training: 0.070908 validation: 0.077778
09/16 08:25:22 AM: edges-spr2_precision: training: 0.834302 validation: 0.845540
09/16 08:25:22 AM: edges-spr2_recall: training: 0.780770 validation: 0.788008
09/16 08:25:22 AM: edges-spr2_f1: training: 0.806649 validation: 0.815760
09/16 08:25:22 AM: Global learning rate: 0.0001
09/16 08:25:22 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:25:24 AM: Update 220: task edges-spr2, batch 20 (220): mcc: 0.7084, acc: 0.0746, precision: 0.8341, recall: 0.7870, f1: 0.8098, edges-spr2_loss: 0.2905
09/16 08:25:30 AM: ***** Step 300 / Validation 3 *****
09/16 08:25:30 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:25:30 AM: Validating...
09/16 08:25:31 AM: Best result seen so far for edges-spr2.
09/16 08:25:31 AM: Best result seen so far for macro.
09/16 08:25:31 AM: Updating LR scheduler:
09/16 08:25:31 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:25:31 AM: 	# validation passes without improvement: 0
09/16 08:25:31 AM: edges-spr2_loss: training: 0.283163 validation: 0.320048
09/16 08:25:31 AM: macro_avg: validation: 0.820812
09/16 08:25:31 AM: micro_avg: validation: 0.000000
09/16 08:25:31 AM: edges-spr2_mcc: training: 0.722890 validation: 0.716894
09/16 08:25:31 AM: edges-spr2_acc: training: 0.084667 validation: 0.071429
09/16 08:25:31 AM: edges-spr2_precision: training: 0.842956 validation: 0.833589
09/16 08:25:31 AM: edges-spr2_recall: training: 0.800507 validation: 0.808420
09/16 08:25:31 AM: edges-spr2_f1: training: 0.821184 validation: 0.820812
09/16 08:25:31 AM: Global learning rate: 0.0001
09/16 08:25:31 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:25:34 AM: Update 336: task edges-spr2, batch 36 (336): mcc: 0.7394, acc: 0.0908, precision: 0.8465, recall: 0.8190, f1: 0.8326, edges-spr2_loss: 0.2716
09/16 08:25:40 AM: ***** Step 400 / Validation 4 *****
09/16 08:25:40 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:25:40 AM: Validating...
09/16 08:25:41 AM: Best result seen so far for edges-spr2.
09/16 08:25:41 AM: Best result seen so far for macro.
09/16 08:25:41 AM: Updating LR scheduler:
09/16 08:25:41 AM: 	Best result seen so far for macro_avg: 0.821
09/16 08:25:41 AM: 	# validation passes without improvement: 0
09/16 08:25:41 AM: edges-spr2_loss: training: 0.269435 validation: 0.318917
09/16 08:25:41 AM: macro_avg: validation: 0.821016
09/16 08:25:41 AM: micro_avg: validation: 0.000000
09/16 08:25:41 AM: edges-spr2_mcc: training: 0.739554 validation: 0.721562
09/16 08:25:41 AM: edges-spr2_acc: training: 0.088277 validation: 0.079365
09/16 08:25:41 AM: edges-spr2_precision: training: 0.848433 validation: 0.851691
09/16 08:25:41 AM: edges-spr2_recall: training: 0.817498 validation: 0.792473
09/16 08:25:41 AM: edges-spr2_f1: training: 0.832678 validation: 0.821016
09/16 08:25:41 AM: Global learning rate: 0.0001
09/16 08:25:41 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:25:44 AM: Update 435: task edges-spr2, batch 35 (435): mcc: 0.7415, acc: 0.0954, precision: 0.8526, recall: 0.8162, f1: 0.8340, edges-spr2_loss: 0.2654
09/16 08:25:49 AM: ***** Step 500 / Validation 5 *****
09/16 08:25:49 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:25:49 AM: Validating...
09/16 08:25:50 AM: Best result seen so far for edges-spr2.
09/16 08:25:50 AM: Best result seen so far for macro.
09/16 08:25:50 AM: Updating LR scheduler:
09/16 08:25:50 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:25:50 AM: 	# validation passes without improvement: 0
09/16 08:25:50 AM: edges-spr2_loss: training: 0.257636 validation: 0.315691
09/16 08:25:50 AM: macro_avg: validation: 0.821807
09/16 08:25:50 AM: micro_avg: validation: 0.000000
09/16 08:25:50 AM: edges-spr2_mcc: training: 0.750800 validation: 0.720969
09/16 08:25:50 AM: edges-spr2_acc: training: 0.102229 validation: 0.079365
09/16 08:25:50 AM: edges-spr2_precision: training: 0.857198 validation: 0.845169
09/16 08:25:50 AM: edges-spr2_recall: training: 0.823385 validation: 0.799702
09/16 08:25:50 AM: edges-spr2_f1: training: 0.839951 validation: 0.821807
09/16 08:25:50 AM: Global learning rate: 0.0001
09/16 08:25:50 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:25:54 AM: Update 545: task edges-spr2, batch 45 (545): mcc: 0.7585, acc: 0.1074, precision: 0.8593, recall: 0.8314, f1: 0.8451, edges-spr2_loss: 0.2508
09/16 08:25:59 AM: ***** Step 600 / Validation 6 *****
09/16 08:25:59 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:25:59 AM: Validating...
09/16 08:26:00 AM: Updating LR scheduler:
09/16 08:26:00 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:26:00 AM: 	# validation passes without improvement: 1
09/16 08:26:00 AM: edges-spr2_loss: training: 0.247999 validation: 0.317411
09/16 08:26:00 AM: macro_avg: validation: 0.820837
09/16 08:26:00 AM: micro_avg: validation: 0.000000
09/16 08:26:00 AM: edges-spr2_mcc: training: 0.760028 validation: 0.718901
09/16 08:26:00 AM: edges-spr2_acc: training: 0.113130 validation: 0.077778
09/16 08:26:00 AM: edges-spr2_precision: training: 0.859810 validation: 0.841941
09/16 08:26:00 AM: edges-spr2_recall: training: 0.832899 validation: 0.800765
09/16 08:26:00 AM: edges-spr2_f1: training: 0.846141 validation: 0.820837
09/16 08:26:00 AM: Global learning rate: 0.0001
09/16 08:26:00 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:26:04 AM: Update 653: task edges-spr2, batch 53 (653): mcc: 0.7675, acc: 0.1183, precision: 0.8645, recall: 0.8380, f1: 0.8511, edges-spr2_loss: 0.2406
09/16 08:26:07 AM: ***** Step 700 / Validation 7 *****
09/16 08:26:07 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:26:07 AM: Validating...
09/16 08:26:08 AM: Updating LR scheduler:
09/16 08:26:08 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:26:08 AM: 	# validation passes without improvement: 2
09/16 08:26:08 AM: edges-spr2_loss: training: 0.238960 validation: 0.319931
09/16 08:26:08 AM: macro_avg: validation: 0.819654
09/16 08:26:08 AM: micro_avg: validation: 0.000000
09/16 08:26:08 AM: edges-spr2_mcc: training: 0.770553 validation: 0.717950
09/16 08:26:08 AM: edges-spr2_acc: training: 0.125327 validation: 0.074603
09/16 08:26:08 AM: edges-spr2_precision: training: 0.867920 validation: 0.844419
09/16 08:26:08 AM: edges-spr2_recall: training: 0.838350 validation: 0.796300
09/16 08:26:08 AM: edges-spr2_f1: training: 0.852878 validation: 0.819654
09/16 08:26:08 AM: Global learning rate: 0.0001
09/16 08:26:08 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:26:14 AM: Update 771: task edges-spr2, batch 71 (771): mcc: 0.7738, acc: 0.1292, precision: 0.8671, recall: 0.8438, f1: 0.8553, edges-spr2_loss: 0.2355
09/16 08:26:16 AM: ***** Step 800 / Validation 8 *****
09/16 08:26:16 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:26:16 AM: Validating...
09/16 08:26:17 AM: Best result seen so far for edges-spr2.
09/16 08:26:17 AM: Best result seen so far for macro.
09/16 08:26:17 AM: Updating LR scheduler:
09/16 08:26:17 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:26:17 AM: 	# validation passes without improvement: 0
09/16 08:26:17 AM: edges-spr2_loss: training: 0.232577 validation: 0.322568
09/16 08:26:17 AM: macro_avg: validation: 0.822278
09/16 08:26:17 AM: micro_avg: validation: 0.000000
09/16 08:26:17 AM: edges-spr2_mcc: training: 0.776591 validation: 0.720368
09/16 08:26:17 AM: edges-spr2_acc: training: 0.132753 validation: 0.079365
09/16 08:26:17 AM: edges-spr2_precision: training: 0.869576 validation: 0.840062
09/16 08:26:17 AM: edges-spr2_recall: training: 0.844659 validation: 0.805231
09/16 08:26:17 AM: edges-spr2_f1: training: 0.856937 validation: 0.822278
09/16 08:26:17 AM: Global learning rate: 0.0001
09/16 08:26:17 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:26:24 AM: Update 885: task edges-spr2, batch 85 (885): mcc: 0.7827, acc: 0.1349, precision: 0.8724, recall: 0.8495, f1: 0.8608, edges-spr2_loss: 0.2268
09/16 08:26:25 AM: ***** Step 900 / Validation 9 *****
09/16 08:26:25 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:26:25 AM: Validating...
09/16 08:26:26 AM: Updating LR scheduler:
09/16 08:26:26 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:26:26 AM: 	# validation passes without improvement: 1
09/16 08:26:26 AM: edges-spr2_loss: training: 0.228124 validation: 0.329552
09/16 08:26:26 AM: macro_avg: validation: 0.817896
09/16 08:26:26 AM: micro_avg: validation: 0.000000
09/16 08:26:26 AM: edges-spr2_mcc: training: 0.781392 validation: 0.713008
09/16 08:26:26 AM: edges-spr2_acc: training: 0.133229 validation: 0.055556
09/16 08:26:26 AM: edges-spr2_precision: training: 0.872472 validation: 0.833701
09/16 08:26:26 AM: edges-spr2_recall: training: 0.847490 validation: 0.802679
09/16 08:26:26 AM: edges-spr2_f1: training: 0.859800 validation: 0.817896
09/16 08:26:26 AM: Global learning rate: 0.0001
09/16 08:26:26 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:26:34 AM: Update 991: task edges-spr2, batch 91 (991): mcc: 0.7870, acc: 0.1449, precision: 0.8755, recall: 0.8529, f1: 0.8641, edges-spr2_loss: 0.2235
09/16 08:26:35 AM: ***** Step 1000 / Validation 10 *****
09/16 08:26:35 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:26:35 AM: Validating...
09/16 08:26:36 AM: Updating LR scheduler:
09/16 08:26:36 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:26:36 AM: 	# validation passes without improvement: 2
09/16 08:26:36 AM: edges-spr2_loss: training: 0.222555 validation: 0.325005
09/16 08:26:36 AM: macro_avg: validation: 0.817617
09/16 08:26:36 AM: micro_avg: validation: 0.000000
09/16 08:26:36 AM: edges-spr2_mcc: training: 0.787835 validation: 0.713906
09/16 08:26:36 AM: edges-spr2_acc: training: 0.147794 validation: 0.073016
09/16 08:26:36 AM: edges-spr2_precision: training: 0.877445 validation: 0.838926
09/16 08:26:36 AM: edges-spr2_recall: training: 0.851964 validation: 0.797363
09/16 08:26:36 AM: edges-spr2_f1: training: 0.864517 validation: 0.817617
09/16 08:26:36 AM: Global learning rate: 0.0001
09/16 08:26:36 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:26:44 AM: ***** Step 1100 / Validation 11 *****
09/16 08:26:44 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:26:44 AM: Validating...
09/16 08:26:44 AM: Evaluate: task edges-spr2, batch 7 (10): mcc: 0.7254, acc: 0.0771, precision: 0.8606, recall: 0.7935, f1: 0.8257, edges-spr2_loss: 0.2997
09/16 08:26:45 AM: Updating LR scheduler:
09/16 08:26:45 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:26:45 AM: 	# validation passes without improvement: 3
09/16 08:26:45 AM: edges-spr2_loss: training: 0.215286 validation: 0.330720
09/16 08:26:45 AM: macro_avg: validation: 0.813062
09/16 08:26:45 AM: micro_avg: validation: 0.000000
09/16 08:26:45 AM: edges-spr2_mcc: training: 0.793055 validation: 0.711201
09/16 08:26:45 AM: edges-spr2_acc: training: 0.157658 validation: 0.071429
09/16 08:26:45 AM: edges-spr2_precision: training: 0.877989 validation: 0.851163
09/16 08:26:45 AM: edges-spr2_recall: training: 0.857351 validation: 0.778227
09/16 08:26:45 AM: edges-spr2_f1: training: 0.867547 validation: 0.813062
09/16 08:26:45 AM: Global learning rate: 0.0001
09/16 08:26:45 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:26:53 AM: ***** Step 1200 / Validation 12 *****
09/16 08:26:53 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:26:53 AM: Validating...
09/16 08:26:54 AM: Updating LR scheduler:
09/16 08:26:54 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:26:54 AM: 	# validation passes without improvement: 0
09/16 08:26:54 AM: edges-spr2_loss: training: 0.215704 validation: 0.331647
09/16 08:26:54 AM: macro_avg: validation: 0.814611
09/16 08:26:54 AM: micro_avg: validation: 0.000000
09/16 08:26:54 AM: edges-spr2_mcc: training: 0.791765 validation: 0.711281
09/16 08:26:54 AM: edges-spr2_acc: training: 0.149100 validation: 0.063492
09/16 08:26:54 AM: edges-spr2_precision: training: 0.877721 validation: 0.844049
09/16 08:26:54 AM: edges-spr2_recall: training: 0.856330 validation: 0.787157
09/16 08:26:54 AM: edges-spr2_f1: training: 0.866894 validation: 0.814611
09/16 08:26:54 AM: Global learning rate: 5e-05
09/16 08:26:54 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:26:54 AM: Update 1208: task edges-spr2, batch 8 (1208): mcc: 0.8221, acc: 0.1766, precision: 0.9078, recall: 0.8653, f1: 0.8860, edges-spr2_loss: 0.1949
09/16 08:27:01 AM: ***** Step 1300 / Validation 13 *****
09/16 08:27:01 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:27:01 AM: Validating...
09/16 08:27:02 AM: Updating LR scheduler:
09/16 08:27:02 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:27:02 AM: 	# validation passes without improvement: 1
09/16 08:27:02 AM: edges-spr2_loss: training: 0.206422 validation: 0.336452
09/16 08:27:02 AM: macro_avg: validation: 0.816914
09/16 08:27:02 AM: micro_avg: validation: 0.000000
09/16 08:27:02 AM: edges-spr2_mcc: training: 0.804779 validation: 0.712728
09/16 08:27:02 AM: edges-spr2_acc: training: 0.167003 validation: 0.068254
09/16 08:27:02 AM: edges-spr2_precision: training: 0.886116 validation: 0.837916
09/16 08:27:02 AM: edges-spr2_recall: training: 0.864130 validation: 0.796938
09/16 08:27:02 AM: edges-spr2_f1: training: 0.874985 validation: 0.816914
09/16 08:27:02 AM: Global learning rate: 5e-05
09/16 08:27:02 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:27:04 AM: Update 1325: task edges-spr2, batch 25 (1325): mcc: 0.8078, acc: 0.1801, precision: 0.8863, recall: 0.8695, f1: 0.8778, edges-spr2_loss: 0.2034
09/16 08:27:11 AM: ***** Step 1400 / Validation 14 *****
09/16 08:27:11 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:27:11 AM: Validating...
09/16 08:27:12 AM: Updating LR scheduler:
09/16 08:27:12 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:27:12 AM: 	# validation passes without improvement: 2
09/16 08:27:12 AM: edges-spr2_loss: training: 0.202882 validation: 0.338514
09/16 08:27:12 AM: macro_avg: validation: 0.814855
09/16 08:27:12 AM: micro_avg: validation: 0.000000
09/16 08:27:12 AM: edges-spr2_mcc: training: 0.808019 validation: 0.709998
09/16 08:27:12 AM: edges-spr2_acc: training: 0.180463 validation: 0.060317
09/16 08:27:12 AM: edges-spr2_precision: training: 0.887071 validation: 0.837826
09/16 08:27:12 AM: edges-spr2_recall: training: 0.868141 validation: 0.793111
09/16 08:27:12 AM: edges-spr2_f1: training: 0.877504 validation: 0.814855
09/16 08:27:12 AM: Global learning rate: 5e-05
09/16 08:27:12 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:27:14 AM: Update 1430: task edges-spr2, batch 30 (1430): mcc: 0.8104, acc: 0.1860, precision: 0.8905, recall: 0.8668, f1: 0.8785, edges-spr2_loss: 0.1989
09/16 08:27:20 AM: ***** Step 1500 / Validation 15 *****
09/16 08:27:20 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:27:20 AM: Validating...
09/16 08:27:21 AM: Updating LR scheduler:
09/16 08:27:21 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:27:21 AM: 	# validation passes without improvement: 3
09/16 08:27:21 AM: edges-spr2_loss: training: 0.201782 validation: 0.340076
09/16 08:27:21 AM: macro_avg: validation: 0.819874
09/16 08:27:21 AM: micro_avg: validation: 0.000000
09/16 08:27:21 AM: edges-spr2_mcc: training: 0.806171 validation: 0.715976
09/16 08:27:21 AM: edges-spr2_acc: training: 0.175912 validation: 0.069841
09/16 08:27:21 AM: edges-spr2_precision: training: 0.886623 validation: 0.835061
09/16 08:27:21 AM: edges-spr2_recall: training: 0.866188 validation: 0.805231
09/16 08:27:21 AM: edges-spr2_f1: training: 0.876286 validation: 0.819874
09/16 08:27:21 AM: Global learning rate: 5e-05
09/16 08:27:21 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:27:25 AM: Update 1542: task edges-spr2, batch 42 (1542): mcc: 0.8043, acc: 0.1781, precision: 0.8843, recall: 0.8649, f1: 0.8745, edges-spr2_loss: 0.2041
09/16 08:27:29 AM: ***** Step 1600 / Validation 16 *****
09/16 08:27:29 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:27:29 AM: Validating...
09/16 08:27:30 AM: Updating LR scheduler:
09/16 08:27:30 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:27:30 AM: 	# validation passes without improvement: 0
09/16 08:27:30 AM: edges-spr2_loss: training: 0.200512 validation: 0.342799
09/16 08:27:30 AM: macro_avg: validation: 0.816801
09/16 08:27:30 AM: micro_avg: validation: 0.000000
09/16 08:27:30 AM: edges-spr2_mcc: training: 0.809860 validation: 0.710101
09/16 08:27:30 AM: edges-spr2_acc: training: 0.183506 validation: 0.058730
09/16 08:27:30 AM: edges-spr2_precision: training: 0.888674 validation: 0.827586
09/16 08:27:30 AM: edges-spr2_recall: training: 0.868234 validation: 0.806294
09/16 08:27:30 AM: edges-spr2_f1: training: 0.878335 validation: 0.816801
09/16 08:27:30 AM: Global learning rate: 2.5e-05
09/16 08:27:30 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:27:35 AM: Update 1661: task edges-spr2, batch 61 (1661): mcc: 0.8141, acc: 0.1903, precision: 0.8915, recall: 0.8709, f1: 0.8811, edges-spr2_loss: 0.1952
09/16 08:27:38 AM: ***** Step 1700 / Validation 17 *****
09/16 08:27:38 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:27:38 AM: Validating...
09/16 08:27:39 AM: Updating LR scheduler:
09/16 08:27:39 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:27:39 AM: 	# validation passes without improvement: 1
09/16 08:27:39 AM: edges-spr2_loss: training: 0.195564 validation: 0.341203
09/16 08:27:39 AM: macro_avg: validation: 0.816752
09/16 08:27:39 AM: micro_avg: validation: 0.000000
09/16 08:27:39 AM: edges-spr2_mcc: training: 0.813706 validation: 0.711519
09/16 08:27:39 AM: edges-spr2_acc: training: 0.194248 validation: 0.068254
09/16 08:27:39 AM: edges-spr2_precision: training: 0.890840 validation: 0.833850
09/16 08:27:39 AM: edges-spr2_recall: training: 0.871134 validation: 0.800340
09/16 08:27:39 AM: edges-spr2_f1: training: 0.880877 validation: 0.816752
09/16 08:27:39 AM: Global learning rate: 2.5e-05
09/16 08:27:39 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:27:45 AM: Update 1773: task edges-spr2, batch 73 (1773): mcc: 0.8128, acc: 0.1799, precision: 0.8907, recall: 0.8706, f1: 0.8805, edges-spr2_loss: 0.1965
09/16 08:27:47 AM: ***** Step 1800 / Validation 18 *****
09/16 08:27:47 AM: edges-spr2: trained on 100 batches, 1.429 epochs
09/16 08:27:47 AM: Validating...
09/16 08:27:48 AM: Updating LR scheduler:
09/16 08:27:48 AM: 	Best result seen so far for macro_avg: 0.822
09/16 08:27:48 AM: 	# validation passes without improvement: 2
09/16 08:27:48 AM: Ran out of early stopping patience. Stopping training.
09/16 08:27:48 AM: edges-spr2_loss: training: 0.194528 validation: 0.344175
09/16 08:27:48 AM: macro_avg: validation: 0.815143
09/16 08:27:48 AM: micro_avg: validation: 0.000000
09/16 08:27:48 AM: edges-spr2_mcc: training: 0.815520 validation: 0.708349
09/16 08:27:48 AM: edges-spr2_acc: training: 0.184188 validation: 0.055556
09/16 08:27:48 AM: edges-spr2_precision: training: 0.891819 validation: 0.829590
09/16 08:27:48 AM: edges-spr2_recall: training: 0.872568 validation: 0.801191
09/16 08:27:48 AM: edges-spr2_f1: training: 0.882089 validation: 0.815143
09/16 08:27:48 AM: Global learning rate: 2.5e-05
09/16 08:27:48 AM: Saving checkpoints to: ./experiments/spr2-rte-cat/run
09/16 08:27:48 AM: Stopped training after 18 validation checks
09/16 08:27:48 AM: Trained edges-spr2 for 1800 batches or 25.714 epochs
09/16 08:27:48 AM: ***** VALIDATION RESULTS *****
09/16 08:27:48 AM: edges-spr2_f1 (for best val pass 8): edges-spr2_loss: 0.32257, macro_avg: 0.82228, micro_avg: 0.00000, edges-spr2_mcc: 0.72037, edges-spr2_acc: 0.07937, edges-spr2_precision: 0.84006, edges-spr2_recall: 0.80523, edges-spr2_f1: 0.82228
09/16 08:27:48 AM: micro_avg (for best val pass 1): edges-spr2_loss: 0.34040, macro_avg: 0.79479, micro_avg: 0.00000, edges-spr2_mcc: 0.68829, edges-spr2_acc: 0.07143, edges-spr2_precision: 0.85025, edges-spr2_recall: 0.74612, edges-spr2_f1: 0.79479
09/16 08:27:48 AM: macro_avg (for best val pass 8): edges-spr2_loss: 0.32257, macro_avg: 0.82228, micro_avg: 0.00000, edges-spr2_mcc: 0.72037, edges-spr2_acc: 0.07937, edges-spr2_precision: 0.84006, edges-spr2_recall: 0.80523, edges-spr2_f1: 0.82228
09/16 08:27:48 AM: Evaluating...
09/16 08:27:48 AM: Loaded model state from ./experiments/spr2-rte-cat/run/edges-spr2/model_state_target_train_val_8.best.th
09/16 08:27:48 AM: Evaluating on: edges-spr2, split: val
09/16 08:27:49 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:27:49 AM: Finished evaluating on: edges-spr2
09/16 08:27:49 AM: Task 'edges-spr2': joining predictions with input split 'val'
09/16 08:27:49 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-rte-cat/run
09/16 08:27:49 AM: Wrote all preds for split 'val' to ./experiments/spr2-rte-cat/run
09/16 08:27:49 AM: Evaluating on: edges-spr2, split: test
09/16 08:27:50 AM: Task 'edges-spr2': sorting predictions by 'idx'
09/16 08:27:50 AM: Finished evaluating on: edges-spr2
09/16 08:27:50 AM: Task 'edges-spr2': joining predictions with input split 'test'
09/16 08:27:50 AM: Task 'edges-spr2': Wrote predictions to ./experiments/spr2-rte-cat/run
09/16 08:27:50 AM: Wrote all preds for split 'test' to ./experiments/spr2-rte-cat/run
09/16 08:27:50 AM: Writing results for split 'val' to ./experiments/spr2-rte-cat/results.tsv
09/16 08:27:50 AM: micro_avg: 0.000, macro_avg: 0.822, edges-spr2_mcc: 0.720, edges-spr2_acc: 0.079, edges-spr2_precision: 0.840, edges-spr2_recall: 0.805, edges-spr2_f1: 0.822
09/16 08:27:50 AM: Done!
09/16 08:27:50 AM: Fatal error in main():
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    main(sys.argv[1:])
  File "/srv/home/ericwallace/jiant/jiant/__main__.py", line 610, in main
    exit("Done exited")
  File "/home/ericwallace/miniconda3/envs/jiant/lib/python3.6/_sitebuiltins.py", line 26, in __call__
    raise SystemExit(code)
SystemExit: Done exited
